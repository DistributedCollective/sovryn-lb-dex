{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BatchTransferFromReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterBatchTransferFromHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterBurnHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterFlashLoanHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterMintHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterSwapHooksXtoY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterSwapHooksYtoX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BurnReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_FlashLoanReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_GetLBHooksParameters",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MintReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:140;1903:54;;2005:17;755:21192:130;2005:17:140;;755:21192:130;2005:17:140;;;-1:-1:-1;;;3126:44:3;2005:17:140;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:140;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:140;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:140;;;755:21192:130;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:169;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:169;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:169:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:169;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:169:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:169;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:169:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:169;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:169:o
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "755:21192:130:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12867:7;;12885:11;;12854:98;;-1:-1:-1;;;;;12867:7:130;;;;;;;12885:11;12941:10;883:6;12941:1;:10;:::i;:::-;12899:7;;12925:11;;12899:39;;-1:-1:-1;;;12899:39:130;;-1:-1:-1;;;;;12925:11:130;;;12899:39;;;571:74:169;-1:-1:-1;;;;;12899:52:130;;;;;:7;;;;;;:17;;544:18:169;;12899:39:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;12854:4;:98::i;:::-;12975:4;;12990:11;;12962:92;;-1:-1:-1;;;;;12975:4:130;;;;12990:11;13043:10;883:6;13043:1;:10;:::i;:::-;13004:4;;13027:11;;13004:36;;-1:-1:-1;;;13004:36:130;;-1:-1:-1;;;;;13027:11:130;;;13004:36;;;571:74:169;-1:-1:-1;;;;;13004:49:130;;;;;:4;;;:14;;544:18:169;;13004:36:130;425:226:169;12962:92:130;933:31:105;13065:24:130;13151:27;;;13201:2;;13191:13;6366:149:140;;;;;;:::i;:::-;-1:-1:-1;;;;;;6467:41:140;-1:-1:-1;;;6467:41:140;;6366:149;;;;1431:14:169;;1424:22;1406:41;;1394:2;1379:18;6366:149:140;;;;;;;;9454:1643:130;;;:::i;:::-;;896:952;;;:::i;17410:1703::-;;;:::i;2907:134:6:-;;;:::i;:::-;;;;;;;:::i;3823:151::-;;;:::i;:::-;;;;;;;:::i;20574:1371:130:-;;;:::i;14930:801::-;;;:::i;3684:133:6:-;;;:::i;2981:1642:130:-;;;:::i;3385:141:6:-;;;:::i;4629:1640:130:-;;;:::i;12786:168:140:-;;;;;;:::i;:::-;;:::i;:::-;;;5095:25:169;;;5083:2;5068:18;12786:168:140;4949:177:169;15737:1667:130;;;:::i;3193:186:6:-;;;:::i;:::-;;;;;;;:::i;19119:1449:130:-;;;:::i;3047:140:6:-;;;:::i;:::-;;;;;;;:::i;12960:205:140:-;;;;;;:::i;:::-;;:::i;:::-;;;8348:8:169;8336:21;;;8318:40;;8306:2;8291:18;12960:205:140;8174:190:169;1854:1121:130;;;:::i;3532:146:6:-;;;:::i;:::-;;;;;;;:::i;6275:1429:130:-;;;:::i;11103:1715::-;;;:::i;10811:1171:140:-;;;;;;:::i;:::-;;:::i;2754:147:6:-;;;:::i;2459:141::-;;;:::i;13171:134:140:-;;;;;;:::i;:::-;;:::i;7710:1738:130:-;;;:::i;1243:204:2:-;;;:::i;2606:142:6:-;;;:::i;1016:26:13:-;;;;;;;;;11988:792:140;;;;;;:::i;:::-;;:::i;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;9454:1643:130:-;9526:11;;:25;;;-1:-1:-1;;;9526:25:130;;;;9508:15;;-1:-1:-1;;;;;9526:11:130;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9598:16;;;9612:1;9598:16;;;;;;;;;9508:43;;-1:-1:-1;9562:33:130;;9598:16;;;;;;;;;;;;-1:-1:-1;9598:16:130;9562:52;;9646:58;9683:4;9689;9695:8;9646:36;:58::i;:::-;9624:16;9641:1;9624:19;;;;;;;;:::i;:::-;;;;;;;;;;:80;9728:7;;9715:37;;9728:7;;;-1:-1:-1;;;;;9728:7:130;9738:5;883:6;9715:4;:37::i;:::-;9775:4;;9762:34;;-1:-1:-1;;;;;9775:4:130;9782:5;883:6;9762:4;:34::i;:::-;9807:20;;-1:-1:-1;;;9807:20:130;;-1:-1:-1;;;;;9821:5:130;589:55:169;9807:20:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;9807:13:130;;;544:18:169;;9807:20:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9837:7:130;;9862:11;;9837:46;;-1:-1:-1;;;9837:46:130;;-1:-1:-1;;;;;9862:11:130;;;9837:46;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;9837:7:130;;;;;;-1:-1:-1;9837:16:130;;-1:-1:-1;13185:18:169;;9837:46:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9893:4:130;;9915:11;;9893:43;;-1:-1:-1;;;9893:43:130;;-1:-1:-1;;;;;9915:11:130;;;9893:43;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;9893:4:130;;;:13;;13185:18:169;;9893:43:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9946:11:130;;:48;;-1:-1:-1;;;9946:48:130;;-1:-1:-1;;;;;9946:11:130;;;;:16;;:48;;9963:5;;9970:16;;9963:5;;9946:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9946:48:130;;;;;;;;;;;;:::i;:::-;;;;10005:32;10040:5;;;;;;;;;-1:-1:-1;;;;;10040:5:130;-1:-1:-1;;;;;10040:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10090;;;10104:1;10090:16;;;;;;;;;10005:51;;-1:-1:-1;10067:20:130;;10090:16;;;;;;;;;;;;-1:-1:-1;10090:16:130;10067:39;;10125:8;10116:17;;:3;10120:1;10116:6;;;;;;;;:::i;:::-;;;;;;;;;;:17;10177:16;;;10191:1;10177:16;;;;;;;;;10144:30;;10177:16;;;;;;;;;;;;-1:-1:-1;10177:16:130;10144:49;;883:6;-1:-1:-1;;;;;10203:25:130;:13;10217:1;10203:16;;;;;;;;:::i;:::-;;;;;;;;;;:25;10239:11;;:50;;-1:-1:-1;;;10239:50:130;;-1:-1:-1;;;;;10239:11:130;;;;:16;;:50;;10256:5;;;;10270:3;;10275:13;;10239:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10239:50:130;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;10299:12:130;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10324:31;10358:5;;;;;;;;;-1:-1:-1;;;;;10358:5:130;-1:-1:-1;;;;;10358:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10324:50;;10385:223;10417:5;;;;;;;;;-1:-1:-1;;;;;10417:5:130;-1:-1:-1;;;;;10417:16:130;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10417:18:130;;;;;;;;;;;;:::i;:::-;10407:29;;;;;;10483:28;;;10513:5;10520;10527;10534:3;10539:13;10460:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10460:93:130;;;;;;;-1:-1:-1;;;;;10460:93:130;;;;;;;;;;;10450:104;;;;;;10385:223;;;;;;;;;;;;;;;;;:8;:223::i;:::-;10651:5;;:17;;;-1:-1:-1;;;10651:17:130;;;;10619:221;;-1:-1:-1;;;;;10651:5:130;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10651:17:130;;;;;;;;;;;;:::i;:::-;10641:28;;;;;;10716:27;;;10745:5;10752;10759;10766:3;10771:13;10693:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10693:92:130;;;;;;;-1:-1:-1;;;;;10693:92:130;;;;;;;;;;;10683:103;;;;;;10619:221;;;;;;;;;;;;;;;;;:8;:221::i;:::-;10883:5;;:22;;;-1:-1:-1;;;10883:22:130;;;;10851:29;;-1:-1:-1;;;;;10883:5:130;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10851:54;;10915:28;10946:5;;;;;;;;;-1:-1:-1;;;;;10946:5:130;-1:-1:-1;;;;;10946:19:130;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10915:52;;10978;10992:16;11010:19;10978:13;:52::i;:::-;11040:50;11054:15;11071:18;11040:13;:50::i;:::-;9498:1599;;;;;;;;9454:1643::o;896:952::-;939:13;:11;:13::i;:::-;990:7;;999:4;;977:27;;-1:-1:-1;;;;;990:7:130;;;;;;;999:4;977:12;:27::i;:::-;963:11;:41;;-1:-1:-1;;;;;;963:41:130;-1:-1:-1;;;;;963:41:130;;;;;;;;;1015:63;;1028:3;;;;1185:7:140;1059:4:130;;1071:2;;1015:12;:63::i;:::-;1097:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1089:5:130;:25;;-1:-1:-1;;;;;;1089:25:130;-1:-1:-1;;;;;1089:25:130;;;;;;;;;1146:11;;1124:35;;-1:-1:-1;;;1124:35:130;;1146:11;;1124:35;;;571:74:169;1089:25:130;1124:13;;544:18:169;;1124:35:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1170:7:130;;1188:31;;;-1:-1:-1;;;1188:31:130;;;;-1:-1:-1;;;;;1170:7:130;;;;-1:-1:-1;1170:17:130;;-1:-1:-1;1170:7:130;;1188:29;;:31;;;;;;;;;;;;;;;1170:7;1188:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1170:65;;-1:-1:-1;;;;;;1170:65:130;;;;;;;;;;23390:25:169;;;;1229:4:130;23431:18:169;;;23424:83;23363:18;;1170:65:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1283:394:130;;;;;;;;1329:5;;-1:-1:-1;;;;;1329:5:130;;;1283:394;;1329:5;1283:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:5;1283:394;;;;;;;;;;;;;;;;;;;1688:7;;1723;;1732:4;;1283:394;;-1:-1:-1;1688:7:130;;;-1:-1:-1;1688:34:130;;1723:7;;;;1732:4;1340:2:140;1756:24:130;1283:394;1756:12;:24::i;:::-;1782:12;;;1792:1;1782:12;;;;;;;;;-1:-1:-1;;;;;;1688:107:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1806:11:130;;:35;;-1:-1:-1;;;1806:35:130;;:11;:35;;;24309:38:169;-1:-1:-1;;;;;1806:11:130;;;;-1:-1:-1;1806:32:130;;-1:-1:-1;24282:18:169;;1806:35:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:919;896:952::o;17410:1703::-;17494:16;;;17508:1;17494:16;;;;;;;;;17458:33;;17494:16;;;;;;;;;;;-1:-1:-1;17494:16:130;17458:52;;17542:61;17579:6;17587;17595:7;17542:36;:61::i;:::-;17520:16;17537:1;17520:19;;;;;;;;:::i;:::-;;;;;;;;;;:83;17614:5;;17651:11;;17665:77;;-1:-1:-1;;;;;17614:5:130;;;;:15;;17651:11;;-1:-1:-1;;;17688:21:130;17665:77;;17711:5;;17718:16;;17711:5;;17665:77;;;:::i;:::-;;;;-1:-1:-1;;17665:77:130;;;;;;;;;;;;;;-1:-1:-1;;;;;17665:77:130;-1:-1:-1;;;;;;17665:77:130;;;;;;17614:138;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17763:81:130;;-1:-1:-1;;;17763:81:130;;-1:-1:-1;;;17763:81:130;;;25364:52:169;-1:-1:-1;;;;;;;;;;;17763:15:130;-1:-1:-1;17763:15:130;;-1:-1:-1;25337:18:169;;17763:81:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17854:15:130;;-1:-1:-1;;;17854:15:130;;-1:-1:-1;;;;;17863:5:130;589:55:169;17854:15:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;17854:8:130;-1:-1:-1;17854:8:130;;-1:-1:-1;544:18:169;;17854:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17879:11:130;;:48;;-1:-1:-1;;;17879:48:130;;-1:-1:-1;;;;;17879:11:130;;;;-1:-1:-1;17879:16:130;;-1:-1:-1;17879:48:130;;17896:5;;17903:16;;17896:5;;17879:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17879:48:130;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;17938:5:130;;17966:12;;;17938:5;17966:12;;;;;;;;;;-1:-1:-1;;;17938:41:130;;;-1:-1:-1;;;;;17938:5:130;;;;-1:-1:-1;17938:15:130;;:41;;:5;:41;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17990:5:130;;18026:11;;18040:77;;-1:-1:-1;;;;;17990:5:130;;;;-1:-1:-1;17990:14:130;;-1:-1:-1;18026:11:130;;;-1:-1:-1;;;18063:21:130;18040:77;;18086:5;;18093:16;;18086:5;;18040:77;;;:::i;:::-;;;;-1:-1:-1;;18040:77:130;;;;;;;;;;;;;;-1:-1:-1;;;;;18040:77:130;-1:-1:-1;;;;;;18040:77:130;;;;;;17990:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18169:7:130;;18195:11;;18169:39;;-1:-1:-1;;;18169:39:130;;-1:-1:-1;;;;;18195:11:130;;;18169:39;;;571:74:169;18138:28:130;;-1:-1:-1;18169:7:130;;;;;;-1:-1:-1;18169:17:130;;544:18:169;;18169:39:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18246:4;;18269:11;;18246:36;;-1:-1:-1;;;18246:36:130;;-1:-1:-1;;;;;18269:11:130;;;18246:36;;;571:74:169;18138:70:130;;-1:-1:-1;18218:25:130;;18246:4;;;:14;;544:18:169;;18246:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18306:7;;18324:11;;18338:39;;-1:-1:-1;;;18338:39:130;;-1:-1:-1;;;;;18324:11:130;;;18338:39;;;571:74:169;;;18218:64:130;;-1:-1:-1;18293:94:130;;18306:7;;;;;;;;18324:11;883:6;;18306:7;;18338:17;;544:18:169;;18338:39:130;425:226:169;18293:94:130;18410:4;;18425:11;;18439:36;;-1:-1:-1;;;18439:36:130;;-1:-1:-1;;;;;18425:11:130;;;18439:36;;;571:74:169;;;18397:88:130;;18410:4;;;;;18425:11;883:6;;18410:4;;18439:14;;544:18:169;;18439:36:130;425:226:169;18397:88:130;18496:15;;-1:-1:-1;;;18496:15:130;;-1:-1:-1;;;;;18505:5:130;589:55:169;18496:15:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;18496:8:130;;;544:18:169;;18496:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18521:11:130;;:63;;-1:-1:-1;;;18521:63:130;;-1:-1:-1;;;;;18521:11:130;;;;-1:-1:-1;18521:16:130;;-1:-1:-1;18521:63:130;;18538:5;;18545:16;;18521:11;;:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18521:63:130;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;18692:7:130;;18718:11;;18692:39;;-1:-1:-1;;;18692:39:130;;-1:-1:-1;;;;;18718:11:130;;;18692:39;;;571:74:169;18670:139:130;;-1:-1:-1;18692:7:130;;;;;;:17;;544:18:169;;18692:39:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18770:3;18756:11;883:6;18756:2;:11;:::i;:::-;:17;;;;:::i;:::-;18733:40;;-1:-1:-1;;;;;18733:40:130;:20;:40;:::i;:::-;18670:139;;;;;;;;;;;;;;;;;:8;:139::i;:::-;18828:4;;18851:11;;18828:36;;-1:-1:-1;;;18828:36:130;;-1:-1:-1;;;;;18851:11:130;;;18828:36;;;571:74:169;18819:111:130;;18828:4;;;;;:14;;544:18:169;;18828:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18900:3;18886:11;883:6;18886:2;:11;:::i;:::-;:17;;;;:::i;:::-;18866:37;;-1:-1:-1;;;;;18866:37:130;:17;:37;:::i;:::-;18819:111;;;;;;;;;;;;;;;;;:8;:111::i;:::-;18950:7;;:24;;-1:-1:-1;;;18950:24:130;;-1:-1:-1;;;;;18968:5:130;589:55:169;;18950:24:130;;;571:74:169;18941:79:130;;18950:7;;;;;:17;;544:18:169;;18950:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18990:3;18976:11;883:6;18976:2;:11;:::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;18941:79:130;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;19039:4;;:21;;-1:-1:-1;;;19039:21:130;;-1:-1:-1;;;;;19054:5:130;589:55:169;;19039:21:130;;;571:74:169;19030:76:130;;19039:4;;:14;;544:18:169;;19039:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19076:3;19062:11;883:6;19062:2;:11;:::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;19030:76:130;;;;;;;;;;;;;;;;;;:8;:76::i;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;20574:1371:130:-;20658:16;;;20672:1;20658:16;;;;;;;;;20635:20;;20658:16;;;;;;;;;-1:-1:-1;;20693:11:130;;:25;;;-1:-1:-1;;;20693:25:130;;;;20635:39;;-1:-1:-1;;;;;;20693:11:130;;;;:23;;-1:-1:-1;20693:25:130;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20684:34;;:3;20688:1;20684:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;20756:16;;;20770:1;20756:16;;;;;;;;;20729:24;;20756:16;;;;;;;;;;-1:-1:-1;;20795:11:130;;20822:6;;20729:43;;-1:-1:-1;20832:1:130;;-1:-1:-1;;;;;20795:11:130;;;;-1:-1:-1;20795:21:130;;20817:3;;20822;;20795:11;;20822:6;;;;:::i;:::-;;;;;;;20795:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;20795:34:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;20782:7;20790:1;20782:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;20844:13;;-1:-1:-1;;;20844:13:130;;-1:-1:-1;;;;;20853:3:130;589:55:169;20844:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;20844:8:130;;;544:18:169;;20844:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20867:11:130;;20901:5;;20867:47;;-1:-1:-1;;;20867:47:130;;-1:-1:-1;;;;;20901:5:130;;;20867:47;;;27263:74:169;20867:11:130;27353:18:169;;;27346:50;20867:11:130;;;-1:-1:-1;20867:25:130;;-1:-1:-1;27236:18:169;;20867:47:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20925:5:130;;20962:11;;20976:85;;-1:-1:-1;;;;;20925:5:130;;;;-1:-1:-1;20925:15:130;;-1:-1:-1;20962:11:130;;;-1:-1:-1;;;20999:35:130;20976:85;;21036:3;;21041:5;;21048:3;;21053:7;;20976:85;;;:::i;:::-;;;;-1:-1:-1;;20976:85:130;;;;;;;;;;;;;;-1:-1:-1;;;;;20976:85:130;-1:-1:-1;;;;;;20976:85:130;;;;;;20925:146;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21082:81:130;;-1:-1:-1;;;21082:81:130;;-1:-1:-1;;;21082:81:130;;;25364:52:169;-1:-1:-1;;;;;;;;;;;21082:15:130;-1:-1:-1;21082:15:130;;-1:-1:-1;25337:18:169;;21082:81:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21173:13:130;;-1:-1:-1;;;21173:13:130;;-1:-1:-1;;;;;21182:3:130;589:55:169;21173:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;21173:8:130;-1:-1:-1;21173:8:130;;-1:-1:-1;544:18:169;;21173:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21196:11:130;;:55;;-1:-1:-1;;;21196:55:130;;-1:-1:-1;;;;;21196:11:130;;;;-1:-1:-1;21196:29:130;;-1:-1:-1;21196:55:130;;21226:3;;21231:5;;21238:3;;21243:7;;21196:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21262:5:130;;21290:12;;;21262:5;21290:12;;;;;;;;;;-1:-1:-1;;;21262:41:130;;;-1:-1:-1;;;;;21262:5:130;;;;-1:-1:-1;21262:15:130;;-1:-1:-1;21262:41:130;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21314:5:130;;21350:11;;21364:85;;-1:-1:-1;;;;;21314:5:130;;;;-1:-1:-1;21314:14:130;;-1:-1:-1;21350:11:130;;;-1:-1:-1;;;21387:35:130;21364:85;;21424:3;;21429:5;;21436:3;;21441:7;;21364:85;;;:::i;:::-;;;;-1:-1:-1;;21364:85:130;;;;;;;;;;;;;;-1:-1:-1;;;;;21364:85:130;-1:-1:-1;;;;;;21364:85:130;;;;;;21314:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21479:11:130;;21508:6;;21470:88;;-1:-1:-1;;;;;;21479:11:130;;;;-1:-1:-1;21479:21:130;;21501:5;;21508:3;;21479:11;;21508:6;;;;:::i;:::-;;;;;;;21479:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21479:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21517:1;21470:88;;;;;;;;;;;;;;;;;:8;:88::i;:::-;21577:11;;21604:6;;21568:86;;-1:-1:-1;;;;;21577:11:130;;:21;;21599:3;;21604;;21577:11;;21604:6;;;;:::i;:::-;;;;;;;21577:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21577:34:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21613:1;21568:86;;;;;;;;;;;;;;;;;:8;:86::i;:::-;21665:13;;-1:-1:-1;;;21665:13:130;;-1:-1:-1;;;;;21674:3:130;589:55:169;21665:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;21665:8:130;;;544:18:169;;21665:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21688:11:130;;:55;;-1:-1:-1;;;21688:55:130;;-1:-1:-1;;;;;21688:11:130;;;;-1:-1:-1;21688:29:130;;-1:-1:-1;21688:55:130;;21718:3;;21723:5;;21730:3;;21735:7;;21688:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21763:11:130;;21792:6;;21754:88;;-1:-1:-1;;;;;;21763:11:130;;;;-1:-1:-1;21763:21:130;;21785:5;;21792:3;;21763:11;;21792:6;;;;:::i;:::-;;;;;;;21763:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21763:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21801:1;21754:88;;;;;;;;;;;;;;;;;:8;:88::i;:::-;21861:11;;21888:6;;21852:86;;-1:-1:-1;;;;;21861:11:130;;:21;;21883:3;;21888;;21861:11;;21888:6;;;;:::i;:::-;;;;;;;21861:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21861:34:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21897:1;21852:86;;;;;;;;;;;;;;;;;:8;:86::i;:::-;20625:1320;;20574:1371::o;14930:801::-;14991:7;;15009:11;;15023:39;;-1:-1:-1;;;15023:39:130;;-1:-1:-1;;;;;15009:11:130;;;15023:39;;;571:74:169;;;14978:94:130;;14991:7;;;;;;;15009:11;883:6;;14991:7;;15023:17;;544:18:169;;15023:39:130;425:226:169;14978:94:130;15083:5;;15107:11;;15121:58;;;15083:5;15121:58;;;28316:41:169;15173:5:130;-1:-1:-1;;;;;28393:55:169;;;28373:18;;;;28366:83;;;;15121:58:130;;;;;;;;;;28289:18:169;;;;15121:58:130;;;;;;;-1:-1:-1;;;;;15121:58:130;-1:-1:-1;;;15121:58:130;;;15083:97;;-1:-1:-1;;;15083:97:130;;:5;;;;:15;;:97;;15107:11;;15121:58;15083:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15191:81:130;;-1:-1:-1;;;15191:81:130;;-1:-1:-1;;;15191:81:130;;;25364:52:169;-1:-1:-1;;;;;;;;;;;15191:15:130;-1:-1:-1;15191:15:130;;-1:-1:-1;25337:18:169;;15191:81:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15282:15:130;;-1:-1:-1;;;15282:15:130;;-1:-1:-1;;;;;15291:5:130;589:55:169;15282:15:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;15282:8:130;-1:-1:-1;15282:8:130;;-1:-1:-1;544:18:169;;15282:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15307:11:130;;:29;;-1:-1:-1;;;15307:29:130;;:11;:29;;;28316:41:169;-1:-1:-1;;;;;15330:5:130;28393:55:169;;28373:18;;;28366:83;15307:11:130;;;;-1:-1:-1;15307:16:130;;-1:-1:-1;28289:18:169;;15307:29:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15347:5:130;;15375:12;;;15347:5;15375:12;;;;;;;;;;-1:-1:-1;;;15347:41:130;;;-1:-1:-1;;;;;15347:5:130;;;;:15;;:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15399:5:130;;15422:11;;15436:59;;;15399:5;15436:59;;;28316:41:169;15489:5:130;-1:-1:-1;;;;;28393:55:169;;;28373:18;;;;28366:83;;;;15436:59:130;;;;;;;;;;28289:18:169;;;;15436:59:130;;;;;;;-1:-1:-1;;;;;15436:59:130;-1:-1:-1;;;15436:59:130;;;15399:97;;-1:-1:-1;;;15399:97:130;;:5;;;;-1:-1:-1;15399:14:130;;-1:-1:-1;15399:97:130;;15422:11;;;;;15436:59;15399:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15516:7:130;;:24;;-1:-1:-1;;;15516:24:130;;-1:-1:-1;;;;;15534:5:130;589:55:169;;15516:24:130;;;571:74:169;15507:63:130;;-1:-1:-1;15516:7:130;;;;;;;;-1:-1:-1;15516:17:130;;544:18:169;;15516:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15542:1;15507:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;15581:15;;-1:-1:-1;;;15581:15:130;;-1:-1:-1;;;;;15590:5:130;589:55:169;15581:15:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;15581:8:130;;;544:18:169;;15581:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15606:11:130;;:44;;-1:-1:-1;;;15606:44:130;;:11;:44;;;28316:41:169;-1:-1:-1;;;;;15606:11:130;;;28373:18:169;;;28366:83;;;15606:11:130;-1:-1:-1;15606:16:130;;-1:-1:-1;28289:18:169;;15606:44:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15670:7:130;;:24;;-1:-1:-1;;;15670:24:130;;-1:-1:-1;;;;;15688:5:130;589:55:169;;15670:24:130;;;571:74:169;15661:63:130;;15670:7;;;;;:17;;544:18:169;;15670:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15696:1;15661:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;14930:801::o;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;2981:1642:130:-;3082:11;;:36;;-1:-1:-1;;;3082:36:130;;883:6;3082:36;;;29260:66:169;3082:11:130;29342:18:169;;;29335:50;3040:18:130;;;;-1:-1:-1;;;;;3082:11:130;;;;:22;;29233:18:169;;3082:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3129:24:130;;-1:-1:-1;;;3129:24:130;;-1:-1:-1;;;;;3139:13:130;;;;3129:24;;;1406:41:169;3039:79:130;;-1:-1:-1;3039:79:130;-1:-1:-1;;;;;;;;;;;;3129:9:130;;;1379:18:169;;3129:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:59;3173:10;-1:-1:-1;;;;;3164:59:130;3185:1;3164:59;;;;;;;;;;;;;;;;;:8;:59::i;:::-;3247:7;;3234:37;;3247:7;;;-1:-1:-1;;;;;3247:7:130;3257:5;883:6;3234:4;:37::i;:::-;3317:5;;:16;;;-1:-1:-1;;;3317:16:130;;;;3282:32;;-1:-1:-1;;;;;3317:5:130;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3344:20;;-1:-1:-1;;;3344:20:130;;-1:-1:-1;;;;;3358:5:130;589:55:169;3344:20:130;;;571:74:169;3282:51:130;;-1:-1:-1;;;;;;;;;;;;3344:13:130;;;544:18:169;;3344:20:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3374:7:130;;3399:11;;3374:46;;-1:-1:-1;;;3374:46:130;;-1:-1:-1;;;;;3399:11:130;;;3374:46;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;3374:7:130;;;;;;-1:-1:-1;3374:16:130;;-1:-1:-1;13185:18:169;;3374:46:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3430:11:130;;:29;;-1:-1:-1;;;3430:29:130;;:11;:29;;;28316:41:169;-1:-1:-1;;;;;3453:5:130;28393:55:169;;28373:18;;;28366:83;3430:11:130;;;;:16;;28289:18:169;;3430:29:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;3469:12:130;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3494:31;3528:5;;;;;;;;;-1:-1:-1;;;;;3528:5:130;-1:-1:-1;;;;;3528:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3564:7;;:24;;-1:-1:-1;;;3564:24:130;;-1:-1:-1;;;;;3582:5:130;589:55:169;;3564:24:130;;;571:74:169;3494:50:130;;-1:-1:-1;3555:73:130;;3564:7;;;;;;;;:17;;544:18:169;;3564:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3590:1;3555:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;3647:4;;:21;;-1:-1:-1;;;3647:21:130;;-1:-1:-1;;;;;3662:5:130;589:55:169;;3647:21:130;;;571:74:169;3638:78:130;;3647:4;;:14;;544:18:169;;3647:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3670:9;-1:-1:-1;;;;;3638:78:130;;;;;;;;;;;;;;;;;;:8;:78::i;:::-;3759:5;;:18;;;-1:-1:-1;;;3759:18:130;;;;3727:313;;-1:-1:-1;;;;;3759:5:130;;:16;;:18;;;;;:5;;:18;;;;;;;:5;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3759:18:130;;;;;;;;;;;;:::i;:::-;3749:29;;;;;;;3819:149;;;-1:-1:-1;;;;;3893:5:130;30115:15:169;3819:149:130;;;30097:34:169;;;30147:18;;;30140:43;3907:4:130;30199:18:169;;;30192:50;883:6:130;30258:18:169;;;;30251:34;;;;3819:149:130;;;;;;;;;;30008:19:169;;;;3819:149:130;;;;;;;-1:-1:-1;;;;;3819:149:130;-1:-1:-1;;;3819:149:130;;;3792:190;;;;3727:313;;;;;;;;;;;;;;;;;;;3749:29;;3792:190;3727:8;:313::i;:::-;4083:5;;:17;;;-1:-1:-1;;;4083:17:130;;;;4051:315;;-1:-1:-1;;;;;4083:5:130;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4083:17:130;;;;;;;;;;;;:::i;:::-;4073:28;;;;;;;-1:-1:-1;;;4215:5:130;;4229:4;4235:41;4266:9;1778:6:118;1774:15;;1668:137;4235:41:130;4142:152;;-1:-1:-1;;;;;30115:15:169;;;4142:152:130;;;30097:34:169;30167:15;;;;30147:18;;;30140:43;30226:14;30219:22;30199:18;;;30192:50;30258:18;;;30251:34;30008:19;;4142:152:130;;;;;;;;;;;;;-1:-1:-1;;;;;4142:152:130;;;;;;;-1:-1:-1;;;;;4142:152:130;;;;;;;;;;;4115:193;;;;;;4051:315;;;;;;;;;;;;;;;;;:8;:315::i;:::-;4409:5;;:22;;;-1:-1:-1;;;4409:22:130;;;;4377:29;;-1:-1:-1;;;;;4409:5:130;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4377:54;;4441:28;4472:5;;;;;;;;;-1:-1:-1;;;;;4472:5:130;-1:-1:-1;;;;;4472:19:130;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4441:52;;4504;4518:16;4536:19;4504:13;:52::i;:::-;4566:50;4580:15;4597:18;4566:13;:50::i;:::-;3029:1594;;;;;;2981:1642::o;3385:141:6:-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;4629:1640:130:-;4730:11;;:37;;-1:-1:-1;;;4730:37:130;;883:6;4730:37;;;29260:66:169;4688:18:130;29342::169;;;29335:50;;;4688:18:130;;;-1:-1:-1;;;;;4730:11:130;;;;:22;;29233:18:169;;4730:37:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4778:24:130;;-1:-1:-1;;;4778:24:130;;-1:-1:-1;;;;;4788:13:130;;;;4778:24;;;1406:41:169;4687:80:130;;-1:-1:-1;4687:80:130;-1:-1:-1;;;;;;;;;;;;4778:9:130;;;1379:18:169;;4778:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4813:59;4822:10;-1:-1:-1;;;;;4813:59:130;4834:1;4813:59;;;;;;;;;;;;;;;;;:8;:59::i;:::-;4896:4;;4883:34;;-1:-1:-1;;;;;4896:4:130;4903:5;883:6;4883:4;:34::i;:::-;4963:5;;:16;;;-1:-1:-1;;;4963:16:130;;;;4928:32;;-1:-1:-1;;;;;4963:5:130;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4990:20;;-1:-1:-1;;;4990:20:130;;-1:-1:-1;;;;;5004:5:130;589:55:169;4990:20:130;;;571:74:169;4928:51:130;;-1:-1:-1;;;;;;;;;;;;4990:13:130;;;544:18:169;;4990:20:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5020:4:130;;5042:11;;5020:43;;-1:-1:-1;;;5020:43:130;;-1:-1:-1;;;;;5042:11:130;;;5020:43;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;5020:4:130;;;-1:-1:-1;5020:13:130;;-1:-1:-1;13185:18:169;;5020:43:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5073:11:130;;:30;;-1:-1:-1;;;5073:30:130;;:11;:30;;;28316:41:169;-1:-1:-1;;;;;5097:5:130;28393:55:169;;28373:18;;;28366:83;5073:11:130;;;;:16;;28289:18:169;;5073:30:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;5113:12:130;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5138:31;5172:5;;;;;;;;;-1:-1:-1;;;;;5172:5:130;-1:-1:-1;;;;;5172:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5208:4;;:21;;-1:-1:-1;;;5208:21:130;;-1:-1:-1;;;;;5223:5:130;589:55:169;;5208:21:130;;;571:74:169;5138:50:130;;-1:-1:-1;5199:70:130;;5208:4;;;;:14;;544:18:169;;5208:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5231:1;5199:70;;;;;;;;;;;;;;;;;:8;:70::i;:::-;5288:7;;:24;;-1:-1:-1;;;5288:24:130;;-1:-1:-1;;;;;5306:5:130;589:55:169;;5288:24:130;;;571:74:169;5279:81:130;;5288:7;;;;;:17;;544:18:169;;5288:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5314:9;-1:-1:-1;;;;;5279:81:130;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;5403:5;;:18;;;-1:-1:-1;;;5403:18:130;;;;5371:315;;-1:-1:-1;;;;;5403:5:130;;:16;;:18;;;;;:5;;:18;;;;;;;:5;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5403:18:130;;;;;;;;;;;;:::i;:::-;5393:29;;;;;;;5463:151;;;-1:-1:-1;;;;;5537:5:130;30115:15:169;5463:151:130;;;30097:34:169;;;30147:18;;;30140:43;5551:5:130;30199:18:169;;;30192:50;1774:15:118;30258:18:169;;;;30251:34;;;;5463:151:130;;;;;;;;;;30008:19:169;;;;5463:151:130;;;;;;;-1:-1:-1;;;;;5463:151:130;-1:-1:-1;;;5463:151:130;;;5436:192;;;;5371:315;;;;;;;;;;;;;;;;;;;5393:29;;5436:192;5371:8;:315::i;:::-;5729:5;;:17;;;-1:-1:-1;;;5729:17:130;;;;5697:315;;-1:-1:-1;;;;;5729:5:130;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5729:17:130;;;;;;;;;;;;:::i;:::-;5719:28;;;;;;;5788:152;;;-1:-1:-1;;;;;5861:5:130;30115:15:169;5788:152:130;;;30097:34:169;;;30147:18;;;30140:43;5875:5:130;30199:18:169;;;30192:50;-1:-1:-1;;;;;1414:17:118;;30258:18:169;;;;30251:34;;;;5788:152:130;;;;;;;;;;30008:19:169;;;;5788:152:130;;;;;;;-1:-1:-1;;;;;5788:152:130;-1:-1:-1;;;5788:152:130;;;5761:193;;;;5697:315;;;;;;;;;;;;;;;;;;;5719:28;;5761:193;5697:8;:315::i;12786:168:140:-;12857:7;12892:1;12883:6;:10;;;:24;;;;;12906:1;12897:6;:10;;;12883:24;:64;;12932:15;12941:6;12932;:15;:::i;:::-;12883:64;;;12928:1;12910:15;12919:6;12910;:15;:::i;:::-;:19;;;;:::i;:::-;12876:71;;;;12786:168;;;;;:::o;15737:1667:130:-;15790:5;;15827:11;;15978:12;;;15988:1;15978:12;;;;;;;;-1:-1:-1;;;;;15790:5:130;;;;:15;;15827:11;;-1:-1:-1;;;15893:26:130;15853:151;;15929:4;;1035:38:118;;15853:151:130;;;;:::i;:::-;;;;-1:-1:-1;;15853:151:130;;;;;;;;;;;;;;-1:-1:-1;;;;;15853:151:130;-1:-1:-1;;;;;;15853:151:130;;;;;;15790:224;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16025:81:130;;-1:-1:-1;;;16025:81:130;;-1:-1:-1;;;16025:81:130;;;25364:52:169;-1:-1:-1;;;;;;;;;;;16025:15:130;-1:-1:-1;16025:15:130;;-1:-1:-1;25337:18:169;;16025:81:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16116:15:130;;-1:-1:-1;;;16116:15:130;;-1:-1:-1;;;;;16125:5:130;589:55:169;16116:15:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;16116:8:130;-1:-1:-1;16116:8:130;;-1:-1:-1;544:18:169;;16116:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16141:11:130;;16255:12;;;16265:1;16255:12;;;;;;;;;-1:-1:-1;;;16141:136:130;;;-1:-1:-1;;;;;16141:11:130;;;;-1:-1:-1;16141:21:130;;-1:-1:-1;16141:136:130;;16205:4;;1035:38:118;;16141:136:130;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16288:5:130;;16316:12;;;16288:5;16316:12;;;;;;;;;;-1:-1:-1;;;16288:41:130;;;-1:-1:-1;;;;;16288:5:130;;;;-1:-1:-1;16288:15:130;;-1:-1:-1;16288:41:130;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16340:5:130;;16376:11;;16527:12;;;16537:1;16527:12;;;;;;;;-1:-1:-1;;;;;16340:5:130;;;;-1:-1:-1;16340:14:130;;-1:-1:-1;16376:11:130;;;-1:-1:-1;;;16442:26:130;16402:151;;16478:4;;1035:38:118;;16402:151:130;;;;:::i;:::-;;;;-1:-1:-1;;16402:151:130;;;;;;;;;;;;;;-1:-1:-1;;;;;16402:151:130;-1:-1:-1;;;;;;16402:151:130;;;;;;16340:223;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16605:7:130;;16631:11;;16605:39;;-1:-1:-1;;;16605:39:130;;-1:-1:-1;;;;;16631:11:130;;;16605:39;;;571:74:169;16574:28:130;;-1:-1:-1;16605:7:130;;;;;;-1:-1:-1;16605:17:130;;544:18:169;;16605:39:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16682:4;;16705:11;;16682:36;;-1:-1:-1;;;16682:36:130;;-1:-1:-1;;;;;16705:11:130;;;16682:36;;;571:74:169;16574:70:130;;-1:-1:-1;16654:25:130;;16682:4;;;:14;;544:18:169;;16682:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16729:15;;-1:-1:-1;;;16729:15:130;;-1:-1:-1;;;;;16738:5:130;589:55:169;16729:15:130;;;571:74:169;16654:64:130;;-1:-1:-1;;;;;;;;;;;;16729:8:130;;;544:18:169;;16729:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16754:11:130;;16868:12;;;16878:1;16868:12;;;;;;;;;-1:-1:-1;;;16754:136:130;;;-1:-1:-1;;;;;16754:11:130;;;;-1:-1:-1;16754:21:130;;-1:-1:-1;16754:136:130;;16818:4;;1035:38:118;;16754:136:130;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16975:7:130;;17001:11;;16975:39;;-1:-1:-1;;;16975:39:130;;-1:-1:-1;;;;;17001:11:130;;;16975:39;;;571:74:169;16953:137:130;;-1:-1:-1;16975:7:130;;;;;;-1:-1:-1;16975:17:130;;544:18:169;;16975:39:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17039:10;883:6;17039:1;:10;:::i;:::-;17016:33;;-1:-1:-1;;;;;17016:33:130;:20;:33;:::i;:::-;16953:137;;;;;;;;;;;;;;;;;:8;:137::i;:::-;17109:4;;17132:11;;17109:36;;-1:-1:-1;;;17109:36:130;;-1:-1:-1;;;;;17132:11:130;;;17109:36;;;571:74:169;17100:109:130;;17109:4;;;;;:14;;544:18:169;;17109:36:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17167:10;883:6;17167:1;:10;:::i;:::-;17147:30;;-1:-1:-1;;;;;17147:30:130;:17;:30;:::i;:::-;17100:109;;;;;;;;;;;;;;;;;:8;:109::i;:::-;17229:7;;:32;;-1:-1:-1;;;17229:32:130;;17255:4;17229:32;;;571:74:169;17220:85:130;;17229:7;;;-1:-1:-1;;;;;17229:7:130;;:17;;544:18:169;;17229:32:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17263:10;883:6;17263:1;:10;:::i;:::-;-1:-1:-1;;;;;17220:85:130;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;17324:4;;:29;;-1:-1:-1;;;17324:29:130;;17347:4;17324:29;;;571:74:169;17315:82:130;;-1:-1:-1;;;;;17324:4:130;;:14;;544:18:169;;17324:29:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17355:10;883:6;17355:1;:10;:::i;:::-;-1:-1:-1;;;;;17315:82:130;;;;;;;;;;;;;;;;;;:8;:82::i;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19119:1449:130;19190:16;;;19204:1;19190:16;;;;;;;;;19167:20;;19190:16;;;;;;;;;-1:-1:-1;;19225:11:130;;:25;;;-1:-1:-1;;;19225:25:130;;;;19167:39;;-1:-1:-1;;;;;;19225:11:130;;;;:23;;-1:-1:-1;19225:25:130;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19216:34;;:3;19220:1;19216:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;19294:16;;;19308:1;19294:16;;;;;;;;;19261:30;;19294:16;;;;;;;;;;-1:-1:-1;;19339:11:130;;19366:6;;19261:49;;-1:-1:-1;19376:1:130;;-1:-1:-1;;;;;19339:11:130;;;;-1:-1:-1;19339:21:130;;19361:3;;19366;;19339:11;;19366:6;;;;:::i;:::-;;;;;;;19339:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;19339:34:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;19320:13;19334:1;19320:16;;;;;;;;:::i;:::-;;;;;;;;;;:57;19388:13;;-1:-1:-1;;;19388:13:130;;-1:-1:-1;;;;;19397:3:130;589:55:169;19388:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;19388:8:130;;;544:18:169;;19388:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19411:11:130;;19445:5;;19411:47;;-1:-1:-1;;;19411:47:130;;-1:-1:-1;;;;;19445:5:130;;;19411:47;;;27263:74:169;19411:11:130;27353:18:169;;;27346:50;19411:11:130;;;-1:-1:-1;19411:25:130;;-1:-1:-1;27236:18:169;;19411:47:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19469:5:130;;19506:11;;19520:77;;-1:-1:-1;;;;;19469:5:130;;;;-1:-1:-1;19469:15:130;;-1:-1:-1;19506:11:130;;;-1:-1:-1;;;19543:21:130;19520:77;;19566:3;;19571:5;;19578:3;;19583:13;;19520:77;;;:::i;:::-;;;;-1:-1:-1;;19520:77:130;;;;;;;;;;;;;;-1:-1:-1;;;;;19520:77:130;-1:-1:-1;;;;;;19520:77:130;;;;;;19469:138;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19618:81:130;;-1:-1:-1;;;19618:81:130;;-1:-1:-1;;;19618:81:130;;;25364:52:169;-1:-1:-1;;;;;;;;;;;19618:15:130;-1:-1:-1;19618:15:130;;-1:-1:-1;25337:18:169;;19618:81:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19709:13:130;;-1:-1:-1;;;19709:13:130;;-1:-1:-1;;;;;19718:3:130;589:55:169;19709:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;19709:8:130;-1:-1:-1;19709:8:130;;-1:-1:-1;544:18:169;;19709:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19732:11:130;;:48;;-1:-1:-1;;;19732:48:130;;-1:-1:-1;;;;;19732:11:130;;;;-1:-1:-1;19732:16:130;;-1:-1:-1;19732:48:130;;19749:3;;19754:5;;19761:3;;19766:13;;19732:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19732:48:130;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19791:5:130;;19819:12;;;19791:5;19819:12;;;;;;;;;;-1:-1:-1;;;19791:41:130;;;-1:-1:-1;;;;;19791:5:130;;;;:15;;:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19843:5:130;;19879:11;;19893:77;;-1:-1:-1;;;;;19843:5:130;;;;-1:-1:-1;19843:14:130;;-1:-1:-1;19879:11:130;;;-1:-1:-1;;;19916:21:130;19893:77;;19939:3;;19944:5;;19951:3;;19956:13;;19893:77;;;:::i;:::-;;;;-1:-1:-1;;19893:77:130;;;;;;;;;;;;;;-1:-1:-1;;;;;19893:77:130;-1:-1:-1;;;;;;19893:77:130;;;;;;19843:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20000:7:130;;:24;;-1:-1:-1;;;20000:24:130;;-1:-1:-1;;;;;20018:5:130;589:55:169;;20000:24:130;;;571:74:169;19991:63:130;;-1:-1:-1;20000:7:130;;;;;;;;-1:-1:-1;20000:17:130;;544:18:169;;20000:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20026:1;19991:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;20073:4;;:21;;-1:-1:-1;;;20073:21:130;;-1:-1:-1;;;;;20088:5:130;589:55:169;;20073:21:130;;;571:74:169;20064:60:130;;20073:4;;:14;;544:18:169;;20073:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20096:1;20064:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;20135:13;;-1:-1:-1;;;20135:13:130;;-1:-1:-1;;;;;20144:3:130;589:55:169;20135:13:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;20135:8:130;;;544:18:169;;20135:13:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20158:11:130;;:48;;-1:-1:-1;;;20158:48:130;;-1:-1:-1;;;;;20158:11:130;;;;-1:-1:-1;20158:16:130;;-1:-1:-1;20158:48:130;;20175:3;;20180:5;;20187:3;;20192:13;;20158:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20158:48:130;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20226:7:130;;:24;;-1:-1:-1;;;20226:24:130;;-1:-1:-1;;;;;20244:5:130;589:55:169;;20226:24:130;;;571:74:169;20217:63:130;;20226:7;;;;;:17;;544:18:169;;20226:24:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20252:1;20217:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;20299:4;;:21;;-1:-1:-1;;;20299:21:130;;-1:-1:-1;;;;;20314:5:130;589:55:169;;20299:21:130;;;571:74:169;20290:60:130;;20299:4;;:14;;544:18:169;;20299:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20322:1;20290:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;20406:11;;20432:6;;20362:19;;;;-1:-1:-1;;;;;20406:11:130;;;;:18;;20432:3;;20362:19;;20432:6;;;;:::i;:::-;;;;;;;20406:34;;;;;;;;;;;;;;8348:8:169;8336:21;;;;8318:40;;8306:2;8291:18;;8174:190;20406:34:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;20361:79:130;;;-1:-1:-1;;;;;20361:79:130;;;20451:50;20460:11;20473:1;20451:50;;;;;;;;;;;;;;;;;:8;:50::i;:::-;20511;20520:11;20533:1;20511:50;;;;;;;;;;;;;;;;;:8;:50::i;:::-;19157:1411;;;;19119:1449::o;3047:140:6:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12960:205:140;13038:6;;13069:12;13080:1;13069:12;;;;:::i;:::-;13056:25;;13105:1;13096:6;:10;;;:33;;13127:2;13096:33;;;13109:11;;;;:2;:11;:::i;:::-;:15;;13123:1;13109:15;:::i;:::-;13091:38;;13147:11;:2;:9;:11::i;:::-;13140:18;;;12960:205;;;;;;:::o;1854:1121:130:-;1934:11;;:34;;;-1:-1:-1;;;1934:34:130;;;;1913:18;;-1:-1:-1;;;;;1934:11:130;;:32;;:34;;;;;;;;;;;;;;:11;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;2877:44:107;;;;;;-1:-1:-1;;;2957:34:107;;2956:41;;-1:-1:-1;;;;2932:65:107;;;;-1:-1:-1;;;3031:33:107;;3030:40;;-1:-1:-1;;;3007:63:107;-1:-1:-1;;;3110:40:107;;3109:47;;-1:-1:-1;;;3080:76:107;-1:-1:-1;;;3195:39:107;;3194:46;;-1:-1:-1;;;3166:74:107;-1:-1:-1;;;3275:34:107;;3274:41;;-1:-1:-1;;;3250:65:107;-1:-1:-1;;;3349:33:107;;3348:40;;-1:-1:-1;;;3325:63:107;-1:-1:-1;;;3423:34:107;;3422:41;;-1:-1:-1;;;3398:65:107;-1:-1:-1;;;3497:33:107;;3496:40;;-1:-1:-1;;;3473:63:107;-1:-1:-1;;;3584:38:107;;3583:45;;-1:-1:-1;;;3546:82:107;-1:-1:-1;;;3675:37:107;;3674:44;;-1:-1:-1;;;3638:80:107;2096:5:130;;2056:79;;;;;;;;;;;;;;;;;;;2877:44:107;;-1:-1:-1;;;2056:79:130;;2096:5;;;2056:8;:79::i;:::-;2145:70;2156:15;:26;;;2145:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2225:69;2236:15;:25;;;2225:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2304:75;2315:15;:31;;;2304:75;;;;;;;;;;;;;;;;;:10;:75::i;:::-;2389:74;2400:15;:30;;;2389:74;;;;;;;;;;;;;;;;;:10;:74::i;:::-;2473:70;2484:15;:26;;;2473:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2553:69;2564:15;:25;;;2553:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2632:70;2643:15;:26;;;2632:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2712:69;2723:15;:25;;;2712:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2791:84;2802:15;:39;;;2791:84;;;;;;;;;;;;;;;;;:10;:84::i;:::-;2885:83;2896:15;:38;;;2885:83;;;;;;;;;;;;;;;;;:10;:83::i;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6275:1429:130;6369:5;;:16;;;-1:-1:-1;;;6369:16:130;;;;6334:32;;-1:-1:-1;;;;;6369:5:130;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6334:51;-1:-1:-1;6396:15:130;1035:38:118;6465:15:130;;-1:-1:-1;;;6465:15:130;;-1:-1:-1;;;;;6474:5:130;589:55:169;6465:15:130;;;571:74:169;6396:58:130;;-1:-1:-1;;;;;;;;;;;;6465:8:130;;;544:18:169;;6465:15:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6490:11:130;;6558:12;;;6490:11;6558:12;;;;;;;;;-1:-1:-1;;;6490:81:130;;;-1:-1:-1;;;;;6490:11:130;;;;-1:-1:-1;6490:21:130;;-1:-1:-1;6490:81:130;;6541:4;;6549:7;;6490:81;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6582:31;6616:5;;;;;;;;;-1:-1:-1;;;;;6616:5:130;-1:-1:-1;;;;;6616:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6582:50;;6643:223;6675:5;;;;;;;;;-1:-1:-1;;;;;6675:5:130;-1:-1:-1;;;;;6675:16:130;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6675:18:130;;;;;;;;;;;;:::i;:::-;6665:29;;;;;;;6718:88;;;6776:5;-1:-1:-1;;;;;32191:15:169;6718:88:130;;;32173:34:169;6791:4:130;32223:18:169;;;32216:43;32275:18;;;;32268:34;;;6718:88:130;;;;;;;;;;32085:18:169;;;;6718:88:130;;;;;;;-1:-1:-1;;;;;6718:88:130;-1:-1:-1;;;6718:88:130;;;6708:99;;;;6643:223;;;;;;;;;;;;6665:29;;6708:99;;6643:223;;;;;;:8;:223::i;:::-;6877:20;6945:4;883:6;-1:-1:-1;;;;;6908:34:130;:7;;;;;;;;;-1:-1:-1;;;;;6908:7:130;-1:-1:-1;;;;;6908:23:130;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;:41;;;;:::i;:::-;7071:5;;:17;;;-1:-1:-1;;;7071:17:130;;;;6877:73;;-1:-1:-1;;;;;;1038:17:118;;1061:6;1057:15;;;1035:38;;7039:408:130;;-1:-1:-1;;;;;7071:5:130;;:15;;:17;;;;;6961:12;;7071:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7071:17:130;;;;;;;;;;;;:::i;:::-;7061:28;;;;;;;7130:244;;;-1:-1:-1;;;;;7228:5:130;32812:15:169;7130:244:130;;;32794:34:169;7263:4:130;32844:18:169;;;32837:43;32896:18;;;32889:34;;;1035:38:118;32939:18:169;;;;32932:34;;;;7130:244:130;;;;;;;;;;32705:19:169;;;;7130:244:130;;;;;;;-1:-1:-1;;;;;7130:244:130;-1:-1:-1;;;7130:244:130;;;7103:285;;;;7039:408;;;;;;;;;;;;7061:28;;7103:285;;7039:408;;;;;;:8;:408::i;:::-;7490:5;;:22;;;-1:-1:-1;;;7490:22:130;;;;7458:29;;-1:-1:-1;;;;;7490:5:130;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:54;;7522:28;7553:5;;;;;;;;;-1:-1:-1;;;;;7553:5:130;-1:-1:-1;;;;;7553:19:130;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7522:52;;7585;7599:16;7617:19;7585:13;:52::i;:::-;7647:50;7661:15;7678:18;7647:13;:50::i;:::-;6324:1380;;;;;;;6275:1429::o;11103:1715::-;11188:11;;:25;;;-1:-1:-1;;;11188:25:130;;;;11170:15;;-1:-1:-1;;;;;11188:11:130;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11260:16;;;11274:1;11260:16;;;;;;;;;11170:43;;-1:-1:-1;11224:33:130;;11260:16;;;;;;;;;;;;-1:-1:-1;11260:16:130;11224:52;;11308:58;11345:4;11351;11357:8;11308:36;:58::i;:::-;11286:16;11303:1;11286:19;;;;;;;;:::i;:::-;;;;;;;;;;:80;11390:7;;11377:37;;11390:7;;;-1:-1:-1;;;;;11390:7:130;11400:5;883:6;11377:4;:37::i;:::-;11437:4;;11424:34;;-1:-1:-1;;;;;11437:4:130;11444:5;883:6;11424:4;:34::i;:::-;11469:20;;-1:-1:-1;;;11469:20:130;;-1:-1:-1;;;;;11483:5:130;589:55:169;11469:20:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;11469:13:130;;;544:18:169;;11469:20:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11499:7:130;;11524:11;;11499:46;;-1:-1:-1;;;11499:46:130;;-1:-1:-1;;;;;11524:11:130;;;11499:46;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;11499:7:130;;;;;;-1:-1:-1;11499:16:130;;-1:-1:-1;13185:18:169;;11499:46:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11555:4:130;;11577:11;;11555:43;;-1:-1:-1;;;11555:43:130;;-1:-1:-1;;;;;11577:11:130;;;11555:43;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;11555:4:130;;;:13;;13185:18:169;;11555:43:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11608:11:130;;:48;;-1:-1:-1;;;11608:48:130;;-1:-1:-1;;;;;11608:11:130;;;;:16;;:48;;11625:5;;11632:16;;11625:5;;11608:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11608:48:130;;;;;;;;;;;;:::i;:::-;;;;11667:32;11702:5;;;;;;;;;-1:-1:-1;;;;;11702:5:130;-1:-1:-1;;;;;11702:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11752;;;11766:1;11752:16;;;;;;;;;11667:51;;-1:-1:-1;11729:20:130;;11752:16;;;;;;;;;;;;-1:-1:-1;11752:16:130;11729:39;;11787:8;11778:17;;:3;11782:1;11778:6;;;;;;;;:::i;:::-;;;;;;;;;;:17;11833:16;;;11847:1;11833:16;;;;;;;;;11806:24;;11833:16;;;;;;;;;;;;-1:-1:-1;11833:16:130;11806:43;;883:6;-1:-1:-1;;;;;11859:19:130;:7;11867:1;11859:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;11889:11;;:55;;-1:-1:-1;;;11889:55:130;;-1:-1:-1;;;;;11889:11:130;;;;:29;;:55;;11919:5;;11926:3;;11931;;11936:7;;11889:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:0;309:37;;-1:-1:-1;;;;;11954:12:130;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11979:31;12013:5;;;;;;;;;-1:-1:-1;;;;;12013:5:130;-1:-1:-1;;;;;12013:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11979:50;;12040:271;12072:5;;;;;;;;;-1:-1:-1;;;;;12072:5:130;-1:-1:-1;;;;;12072:16:130;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12072:18:130;;;;;;;;;;;;:::i;:::-;12062:29;;;;;;12155:41;;;12198:5;12205;12212:3;12217;12222:7;12132:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;12132:98:130;;;;;;;-1:-1:-1;;;;;12132:98:130;;;;;;;;;;;12105:139;;;;;;12040:271;;;;;;;;;;;;;;;;;:8;:271::i;:::-;12354:5;;:17;;;-1:-1:-1;;;12354:17:130;;;;12322:239;;-1:-1:-1;;;;;12354:5:130;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12354:17:130;;;;;;;;;;;;:::i;:::-;12344:28;;;;;;12419:40;;;12461:5;12468;12475:3;12480;12485:7;12396:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;12396:97:130;;;;;;;-1:-1:-1;;;;;12396:97:130;;;;;;;;;;;12386:108;;;;;;12322:239;;;;;;;;;;;;;;;;;:8;:239::i;10811:1171:140:-;11040:13;11056:6;-1:-1:-1;;;;;11056:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11040:34;;11084:13;11100:6;-1:-1:-1;;;;;11100:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11084:34;;11129:36;11142:6;11151:4;11157:7;11129:4;:36::i;:::-;11175;11188:6;11197:4;11203:7;11175:4;:36::i;:::-;11222:13;11238:28;11251:6;11259;11238:12;:28::i;:::-;11222:44;;11277:40;11334:5;11320:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11320:20:140;;11277:63;;11356:9;11351:412;11371:5;11367:1;:9;11351:412;;;11397:9;11409:26;11415:8;11425:1;11428:6;11409:5;:26::i;:::-;11397:38;;11450:15;11474:8;11468:14;;:2;:14;;;;:28;;;;;11495:1;11486:6;:10;;;11468:28;:74;;11541:1;11468:74;;;11499:39;11500:28;;;;363:4:105;11500:28:140;:::i;:::-;11499:37;:39::i;:::-;11450:92;;11556:15;11580:8;11574:14;;:2;:14;;;;:28;;;;;11601:1;11592:6;:10;;;11574:28;:74;;11647:1;11574:74;;;11605:39;11606:28;;;;363:4:105;11606:28:140;:::i;11605:39::-;11556:92;;11692:60;11729:8;11739;11749:2;11692:36;:60::i;:::-;11663:23;11687:1;11663:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11383:380;;;11378:3;;;;:::i;:::-;;;11351:412;;;-1:-1:-1;11773:19:140;;-1:-1:-1;;;11773:19:140;;-1:-1:-1;;;;;589:55:169;;11773:19:140;;;571:74:169;-1:-1:-1;;;;;;;;;;;11773:13:140;;;544:18:169;;11773:19:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11802:41:140;;-1:-1:-1;;;11802:41:140;;-1:-1:-1;;;;;26860:55:169;;;11802:41:140;;;26842:74:169;26932:18;;;26925:34;;;11802:15:140;;;-1:-1:-1;11802:15:140;;-1:-1:-1;26815:18:169;;11802:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11853:41:140;;-1:-1:-1;;;11853:41:140;;-1:-1:-1;;;;;26860:55:169;;;11853:41:140;;;26842:74:169;26932:18;;;26925:34;;;11853:15:140;;;;;26815:18:169;;11853:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11904:12:140;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11929:6;-1:-1:-1;;;;;11929:11:140;;11941:2;11945:23;11970:4;11929:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11929:46:140;;;;;;;;;;;;:::i;:::-;;;;11030:952;;;;10811:1171;;;;;;;;:::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13171:134:140;13272:7;;:26;;-1:-1:-1;;;13272:26:140;;24339:6:169;24327:19;;13272:26:140;;;24309:38:169;13230:11:140;;-1:-1:-1;;;;;13272:7:140;;:17;;24282:18:169;;13272:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13253:45;13171:134;-1:-1:-1;;;;;;;;;13171:134:140:o;7710:1738:130:-;7799:5;;:16;;;-1:-1:-1;;;7799:16:130;;;;7764:32;;-1:-1:-1;;;;;7799:5:130;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7862;;;7876:1;7862:16;;;;;;;;;7764:51;;-1:-1:-1;7826:33:130;;7862:16;;;;;;;;;;;;-1:-1:-1;7862:16:130;7826:52;;7910:78;7947:4;7953;7959:19;:28;;;7910:36;:78::i;:::-;7888:16;7905:1;7888:19;;;;;;;;:::i;:::-;;;;;;;;;;:100;8012:7;;7999:37;;8012:7;;;-1:-1:-1;;;;;8012:7:130;8022:5;883:6;7999:4;:37::i;:::-;8059:4;;8046:34;;-1:-1:-1;;;;;8059:4:130;8066:5;883:6;8046:4;:34::i;:::-;8091:20;;-1:-1:-1;;;8091:20:130;;-1:-1:-1;;;;;8105:5:130;589:55:169;8091:20:130;;;571:74:169;-1:-1:-1;;;;;;;;;;;8091:13:130;;;544:18:169;;8091:20:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8121:7:130;;8146:11;;8121:46;;-1:-1:-1;;;8121:46:130;;-1:-1:-1;;;;;8146:11:130;;;8121:46;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;8121:7:130;;;;;;-1:-1:-1;8121:16:130;;-1:-1:-1;13185:18:169;;8121:46:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8177:4:130;;8199:11;;8177:43;;-1:-1:-1;;;8177:43:130;;-1:-1:-1;;;;;8199:11:130;;;8177:43;;;13212:74:169;883:6:130;13302:18:169;;;13295:75;8177:4:130;;;:13;;13185:18:169;;8177:43:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8230:11:130;;:48;;-1:-1:-1;;;8230:48:130;;-1:-1:-1;;;;;8230:11:130;;;;:16;;:48;;8247:5;;8254:16;;8247:5;;8230:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8230:48:130;;;;;;;;;;;;:::i;:::-;;;;317:28:0;309:37;;-1:-1:-1;;;;;8288:12:130;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8313:31;8347:5;;;;;;;;;-1:-1:-1;;;;;8347:5:130;-1:-1:-1;;;;;8347:14:130;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8313:50;;8374:404;8406:5;;;;;;;;;-1:-1:-1;;;;;8406:5:130;-1:-1:-1;;;;;8406:16:130;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8406:18:130;;;;;;;;;;;;:::i;:::-;8396:29;;;;;;;-1:-1:-1;;;8560:5:130;;8614:16;1035:38:118;8466:244:130;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8466:244:130;;;;;;;-1:-1:-1;;;;;8466:244:130;;;;;;;;;;;8439:285;;;;;;8374:404;;;;;;;;;;;;;;;;;:8;:404::i;:::-;8821:5;;:17;;;-1:-1:-1;;;8821:17:130;;;;8789:402;;-1:-1:-1;;;;;8821:5:130;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8821:17:130;;;;;;;;;;;;:::i;:::-;8811:28;;;;;;;-1:-1:-1;;;8973:5:130;;9027:16;1035:38:118;8880:243:130;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8880:243:130;;;;;;;-1:-1:-1;;;;;8880:243:130;;;;;;;;;;;8853:284;;;;;;8789:402;;;;;;;;;;;;;;;;;:8;:402::i;:::-;9234:5;;:22;;;-1:-1:-1;;;9234:22:130;;;;9202:29;;-1:-1:-1;;;;;9234:5:130;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9202:54;;9266:28;9297:5;;;;;;;;;-1:-1:-1;;;;;9297:5:130;-1:-1:-1;;;;;9297:19:130;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9266:52;;9329;9343:16;9361:19;9329:13;:52::i;:::-;9391:50;9405:15;9422:18;9391:13;:50::i;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;26842:74:169;;;1398:17:2;26932:18:169;;;26925:34;1428:1:2;;1377:7;;26815:18:169;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;11988:792:140:-;363:4:105;12209:13:140;:36;;12201:73;;;;-1:-1:-1;;;12201:73:140;;36107:2:169;12201:73:140;;;36089:21:169;36146:2;36126:18;;;36119:30;36185:26;36165:18;;;36158:54;36229:18;;12201:73:140;;;;;;;;;12285:13;12301:28;12314:6;12322;12301:12;:28::i;:::-;12285:44;;12340:20;12377:5;12363:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12363:20:140;;12340:43;;12393:24;12434:5;12420:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12420:20:140;;12393:47;;12456:9;12451:253;12471:5;12467:1;:9;12451:253;;;12497:9;12509:26;12515:8;12525:1;12528:6;12509:5;:26::i;:::-;12561;;-1:-1:-1;;;12561:26:140;;-1:-1:-1;;;;;36449:55:169;;;12561:26:140;;;36431:74:169;36553:8;36541:21;;36521:18;;;36514:49;12497:38:140;;-1:-1:-1;12549:9:140;;12561:16;;;;;36404:18:169;;12561:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12549:38;;12611:2;12602:11;;:3;12606:1;12602:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12640:53;:1;12658:13;363:4:105;12640:17:140;:53::i;:::-;12627:7;12635:1;12627:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12483:221;;12478:3;;;;:::i;:::-;;;12451:253;;;-1:-1:-1;12714:14:140;;-1:-1:-1;;;12714:14:140;;-1:-1:-1;;;;;589:55:169;;12714:14:140;;;571:74:169;-1:-1:-1;;;;;;;;;;;12714:8:140;;;544:18:169;;12714:14:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;-1:-1:-1;;;12738:35:140;;-1:-1:-1;;;;;12738:11:140;;;-1:-1:-1;12738:11:140;;-1:-1:-1;12738:35:140;;12750:4;;12756:2;;12760:3;;12765:7;;12738:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;;;;;;;;;;;:::i;:::-;;12191:589;;;11988:792;;;;;;;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;589:55:169;;;27501:38:4;;;;571:74:169;;;;27501:38:4;;;;;;;;;;544:18:169;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;1214:392:117:-;674:2;1398:29:116;;;;;731:2:117;1398:29:116;;;;;1383:45;1553:46:117;;;1383:45:116;;1553:46:117;1544:55;1214:392;-1:-1:-1;;;;1214:392:117:o;3826:134:2:-;3924:29;;-1:-1:-1;;;3924:29:2;;-1:-1:-1;;;;;;;;;;;3924:11:2;;;:29;;3936:4;;3942:5;;3949:3;;3924:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13226:1698:130;13326:73;13335:10;:19;;;-1:-1:-1;;;;;13326:73:130;13356:13;:22;;;-1:-1:-1;;;;;13326:73:130;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13409;13418:10;:19;;;-1:-1:-1;;;;;13409:73:130;13439:13;:22;;;-1:-1:-1;;;;;13409:73:130;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13492:81;13501:10;:23;;;-1:-1:-1;;;;;13492:81:130;13526:13;:26;;;-1:-1:-1;;;;;13492:81:130;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;13583;13592:10;:23;;;-1:-1:-1;;;;;13583:81:130;13617:13;:26;;;-1:-1:-1;;;;;13583:81:130;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;13674:73;13683:10;:19;;;13674:73;;13704:13;:22;;;13674:73;;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13757:85;13766:10;:25;;;-1:-1:-1;;;;;13757:85:130;13793:13;:28;;;-1:-1:-1;;;;;13757:85:130;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;13852;13861:10;:25;;;-1:-1:-1;;;;;13852:85:130;13888:13;:28;;;-1:-1:-1;;;;;13852:85:130;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;13981:31;;;;;14056:34;;;;14110:24;;14136:25;;14101:81;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;14192:77;14201:2;:22;;;14192:77;;14225:3;:23;;;14192:77;;;;;;;;;;;;;;;;;;;:8;:77::i;:::-;14279:62;14288:2;:14;;;14279:62;;14304:3;:15;;;14279:62;;;;;;;;;;;;;;;;;;;:8;:62::i;:::-;14351:72;14360:2;:19;;;14351:72;;14381:3;:20;;;14351:72;;;;;;;;;;;;;;;;;;;:8;:72::i;:::-;14463:27;;;;;14530:30;;;;14580:17;;14599:18;;14571:68;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:68::i;:::-;14649:48;14658:2;:7;;;14649:48;;14667:3;:8;;;14649:48;;;;;;;;;;;;;;;;;;;:8;:48::i;:::-;14707:60;14716:2;:13;;;14707:60;;14731:3;:14;;;14707:60;;;;;;;;;;;;;;;;;;;:8;:60::i;:::-;14777:62;14786:2;:14;;;14777:62;;14802:3;:15;;;14777:62;;;;;;;;;;;;;;;;;;;:8;:62::i;:::-;14849:68;14858:2;:17;;;14849:68;;14877:3;:18;;;14849:68;;;;;;;;;;;;;;;;;;;:8;:68::i;2759:3601:140:-;2801:7;:45;;;;;;;;;;-1:-1:-1;;;;;2801:45:140;2907:7;;;;2899:28;-1:-1:-1;2899:33:140;2895:118;;2964:7;;2982:13;;-1:-1:-1;;;;;;;;;;;2948:7:140;;;2964;;;;-1:-1:-1;;;;;2964:7:140;;2982:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2974:27:140;;;;;;;;;;;;;;;;;;;;;;;;2948:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:118;3068:1;3054:16;;;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3054:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3047:4:140;:23;;-1:-1:-1;;;;;;3047:23:140;-1:-1:-1;;;;;3047:23:140;;;;;;;;;;3087:16;;3101:1;;3087:16;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3087:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:4:140;:23;;-1:-1:-1;;;;;;3080:23:140;-1:-1:-1;;;;;3080:23:140;;;;;;;;;;3120:16;;3134:1;;3120:16;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3120:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3113:4:140;:23;;-1:-1:-1;;;;;;3113:23:140;-1:-1:-1;;;;;3113:23:140;;;;;;;;;;3153:17;;3167:2;;3153:17;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3153:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3146:4:140;:24;;-1:-1:-1;;;;;;3146:24:140;-1:-1:-1;;;;;3146:24:140;;;;;;;;;;3187:17;;3201:2;;3187:17;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3187:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3180:4:140;:24;;-1:-1:-1;;;;;;3180:24:140;-1:-1:-1;;;;;3180:24:140;;;;;;;;;;3220:17;;3234:2;;3220:17;;;:::i;:::-;38108:4:169;38096:17;;;38078:36;;38066:2;38051:18;3220:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3214:3:140;:23;;-1:-1:-1;;;;;;3214:23:140;-1:-1:-1;;;;;3214:23:140;;;;;;;;;;3258:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3247:8:140;:37;;-1:-1:-1;;;;;;3247:37:140;-1:-1:-1;;;;;3247:37:140;;;;;;3335:7;;3318:37;;;-1:-1:-1;;;3318:37:140;;3247;3335:7;;;;;;3318:37;;;38736:74:169;38826:18;;;38819:30;;;;38885:1;38865:18;;;38858:29;38923:9;38903:18;;;38896:37;-1:-1:-1;;;;;;;;;;;3318:8:140;;;38950:19:169;;3318:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3382:4:140;;3365:31;;;-1:-1:-1;;;3365:31:140;;-1:-1:-1;;;;;3382:4:140;;;3365:31;;;;39192:74:169;;;;39282:18;;;39275:30;;;;39321:18;;;39314:29;-1:-1:-1;;;39359:18:169;;;39352:34;-1:-1:-1;;;;;;;;;;;3365:8:140;-1:-1:-1;3365:8:140;;-1:-1:-1;39403:19:169;;3365:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3423:4:140;;3406:31;;;-1:-1:-1;;;3406:31:140;;-1:-1:-1;;;;;3423:4:140;;;3406:31;;;;39645:74:169;;;;39735:18;;;39728:30;;;;39774:18;;;39767:29;-1:-1:-1;;;39812:18:169;;;39805:34;-1:-1:-1;;;;;;;;;;;3406:8:140;-1:-1:-1;3406:8:140;;-1:-1:-1;39856:19:169;;3406:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3464:4:140;;3447:31;;;-1:-1:-1;;;3447:31:140;;-1:-1:-1;;;;;3464:4:140;;;3447:31;;;;40098:74:169;;;;40188:18;;;40181:30;;;;40227:18;;;40220:29;-1:-1:-1;;;40265:18:169;;;40258:34;-1:-1:-1;;;;;;;;;;;3447:8:140;-1:-1:-1;3447:8:140;;-1:-1:-1;40309:19:169;;3447:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3505:4:140;;3488:31;;;-1:-1:-1;;;3488:31:140;;-1:-1:-1;;;;;3505:4:140;;;3488:31;;;;40551:74:169;;;;40641:18;;;40634:30;;;;40680:18;;;40673:29;-1:-1:-1;;;40718:18:169;;;40711:34;-1:-1:-1;;;;;;;;;;;3488:8:140;-1:-1:-1;3488:8:140;;-1:-1:-1;40762:19:169;;3488:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3546:4:140;;3529:31;;;-1:-1:-1;;;3529:31:140;;-1:-1:-1;;;;;3546:4:140;;;3529:31;;;;41004:74:169;;;;41094:18;;;41087:30;;;;41133:18;;;41126:29;-1:-1:-1;;;41171:18:169;;;41164:34;-1:-1:-1;;;;;;;;;;;3529:8:140;-1:-1:-1;3529:8:140;;-1:-1:-1;41215:19:169;;3529:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3587:3:140;;;3570:29;;;-1:-1:-1;;;3570:29:140;;-1:-1:-1;;;;;3587:3:140;;;3570:29;;;41457:74:169;41547:18;;;41540:30;;;;41606:1;41586:18;;;41579:29;-1:-1:-1;;;41624:18:169;;;41617:33;-1:-1:-1;;;;;;;;;;;3570:8:140;-1:-1:-1;3570:8:140;;-1:-1:-1;41667:19:169;;3570:29:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3626:8:140;;3609:39;;;-1:-1:-1;;;3609:39:140;;-1:-1:-1;;;;;3626:8:140;;;3609:39;;;41909:74:169;41999:18;;;41992:30;42058:1;42038:18;;;42031:29;42096:10;42076:18;;;42069:38;-1:-1:-1;;;;;;;;;;;3609:8:140;-1:-1:-1;3609:8:140;;-1:-1:-1;42124:19:169;;3609:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3691:8:140;:67;;-1:-1:-1;;;;;;3691:67:140;;;335:42:142;3691:67:140;;;;3768:9;:70;;;;;240:42:142;3768:70:140;;;-1:-1:-1;;3899:15:140;;3691:8;;3899:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3875:39;;3992:11;4006:3;3952:62;;;;;:::i;:::-;-1:-1:-1;;;;;42480:15:169;;;42462:34;;42532:15;;42527:2;42512:18;;42505:43;42584:2;42579;42564:18;;42557:30;;;-1:-1:-1;42603:18:169;;;42596:29;42657:3;42642:19;3952:62:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3924:7:140;:92;;-1:-1:-1;;;;;;3924:92:140;-1:-1:-1;;;;;3924:92:140;;;;;;;;;4056:40;;-1:-1:-1;;3924:92:140;4056:40;;;:::i;:::-;-1:-1:-1;;;;;589:55:169;;;571:74;;559:2;544:18;4056:40:140;;;;;;;;;;;;;;;;;;;;;;;4026:70;;4106:47;4192:20;4215:3;4228:7;;;;;;;;;-1:-1:-1;;;;;4228:7:140;4156:81;;;;;:::i;:::-;-1:-1:-1;;;;;43212:15:169;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4156:81:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4247:7:140;;:85;;-1:-1:-1;;;4247:85:140;;-1:-1:-1;;;;;4266:3:140;43669:15:169;;4247:85:140;;;43651:34:169;;;43701:18;;;43694:43;1892:4:140;43753:18:169;;;43746:34;43816:15;;;43796:18;;;43789:43;43816:15;;-1:-1:-1;4247:7:140;;;:18;;43562:19:169;;4247:85:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4374:7:140;;4363:19;;-1:-1:-1;;;;;4374:7:140;;;;-1:-1:-1;4363:19:140;;-1:-1:-1;4363:19:140;:::i;:::-;-1:-1:-1;;;;;589:55:169;;;571:74;;559:2;544:18;4363:19:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4342:18:140;:40;;-1:-1:-1;;;;;;4342:40:140;-1:-1:-1;;;;;4342:40:140;;;;;;;;;4418:7;;:60;;-1:-1:-1;;;4418:60:140;;;;;571:74:169;;;;4418:7:140;;;;:31;;544:18:169;;4418:60:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:30;:28;:30::i;:::-;4528:42;1340:2;4528:24;:42::i;:::-;4641:7;;4650:9;;4678:7;;4628:60;;4606:19;;-1:-1:-1;;;;;4641:7:140;;;;4650:9;;;4641:7;4678;;;;4628:60;;;:::i;:::-;-1:-1:-1;;;;;43212:15:169;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4628:60:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4790:39:140;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4790:39:140;-1:-1:-1;;;4790:39:140;;;4732:98;;4606:82;;-1:-1:-1;4606:82:140;;4785:3;;4790:39;4732:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4698:6:140;:135;;-1:-1:-1;;;;;;4698:135:140;-1:-1:-1;;;;;4698:135:140;;;;;;;;;4912:9;;4944:7;;4878:113;;4912:9;;;;4944:7;;4698:135;4878:113;;;:::i;:::-;-1:-1:-1;;;;;43212:15:169;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4878:113:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4869:6:140;:122;;-1:-1:-1;;;;;;4869:122:140;-1:-1:-1;;;;;4869:122:140;;;;;;5055:6;;5038:35;;;-1:-1:-1;;;5038:35:140;;5055:6;;;;5038:35;;;45646:74:169;45736:18;;;45729:30;;;;45795:1;45775:18;;;45768:29;45833:8;45813:18;;;45806:36;-1:-1:-1;;;;;;;;;;;5038:8:140;;;45859:19:169;;5038:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:6:140;;5083:35;;;-1:-1:-1;;;5083:35:140;;-1:-1:-1;;;;;5100:6:140;;;5083:35;;;46101:74:169;46191:18;;;46184:30;46250:1;46230:18;;;46223:29;46288:8;46268:18;;;46261:36;-1:-1:-1;;;;;;;;;;;5083:8:140;-1:-1:-1;5083:8:140;;-1:-1:-1;46314:19:169;;5083:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5145:7:140;;5128:37;;;-1:-1:-1;;;5128:37:140;;-1:-1:-1;;;;;5145:7:140;;;5128:37;;;46556:74:169;46646:18;;;46639:30;46705:1;46685:18;;;46678:29;46743:9;46723:18;;;46716:37;-1:-1:-1;;;;;;;;;;;5128:8:140;-1:-1:-1;5128:8:140;;-1:-1:-1;46770:19:169;;5128:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5192:18:140;;5175:59;;;-1:-1:-1;;;5175:59:140;;-1:-1:-1;;;;;5192:18:140;;;5175:59;;;47012:74:169;47102:18;;;47095:30;47161:2;47141:18;;;47134:30;47200:20;47180:18;;;47173:48;-1:-1:-1;;;;;;;;;;;5175:8:140;-1:-1:-1;5175:8:140;;-1:-1:-1;47238:19:169;;5175:59:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5285:8:140;;5268:39;;;-1:-1:-1;;;5268:39:140;;-1:-1:-1;;;;;5285:8:140;;;5268:39;;;47480:74:169;47570:18;;;47563:30;47629:1;47609:18;;;47602:29;47667:10;47647:18;;;47640:38;-1:-1:-1;;;;;;;;;;;5268:8:140;-1:-1:-1;5268:8:140;;-1:-1:-1;47695:19:169;;5268:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5334:9:140;;5317:41;;;-1:-1:-1;;;5317:41:140;;-1:-1:-1;;;;;5334:9:140;;;5317:41;;;47937:74:169;48027:18;;;48020:30;48086:1;48066:18;;;48059:29;48124:11;48104:18;;;48097:39;-1:-1:-1;;;;;;;;;;;5317:8:140;-1:-1:-1;5317:8:140;;-1:-1:-1;48153:19:169;;5317:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5406:7:140;;5430:8;;5406:53;;-1:-1:-1;;;5406:53:140;;-1:-1:-1;;;;;5430:8:140;;;5406:53;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5406:7:140;;;;;;-1:-1:-1;5406:15:140;;-1:-1:-1;26815:18:169;;5406:53:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5469:4:140;;5490:8;;5469:50;;-1:-1:-1;;;5469:50:140;;-1:-1:-1;;;;;5490:8:140;;;5469:50;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5469:4:140;;;:12;;26815:18:169;;5469:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5529:4:140;;5550:8;;5529:50;;-1:-1:-1;;;5529:50:140;;-1:-1:-1;;;;;5550:8:140;;;5529:50;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5529:4:140;;;:12;;26815:18:169;;5529:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5589:4:140;;5610:8;;5589:50;;-1:-1:-1;;;5589:50:140;;-1:-1:-1;;;;;5610:8:140;;;5589:50;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5589:4:140;;;:12;;26815:18:169;;5589:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5649:4:140;;5670:8;;5649:50;;-1:-1:-1;;;5649:50:140;;-1:-1:-1;;;;;5670:8:140;;;5649:50;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5649:4:140;;;:12;;26815:18:169;;5649:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5709:4:140;;5730:8;;5709:50;;-1:-1:-1;;;5709:50:140;;-1:-1:-1;;;;;5730:8:140;;;5709:50;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5709:4:140;;;:12;;26815:18:169;;5709:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5769:3:140;;;5789:8;;5769:49;;-1:-1:-1;;;5769:49:140;;-1:-1:-1;;;;;5789:8:140;;;5769:49;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;;;;5769:3:140;;:11;;26815:18:169;;5769:49:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5828:8:140;;5853;;5828:54;;-1:-1:-1;;;5828:54:140;;-1:-1:-1;;;;;5853:8:140;;;5828:54;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5828:8:140;;;:16;;26815:18:169;;5828:54:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5893:7:140;;5917:6;;5893:51;;-1:-1:-1;;;5893:51:140;;-1:-1:-1;;;;;5917:6:140;;;5893:51;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5893:7:140;;;;;;:15;;26815:18:169;;5893:51:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5954:4:140;;5975:6;;5954:48;;-1:-1:-1;;;5954:48:140;;-1:-1:-1;;;;;5975:6:140;;;5954:48;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;5954:4:140;;;:12;;26815:18:169;;5954:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6012:4:140;;6033:6;;6012:48;;-1:-1:-1;;;6012:48:140;;-1:-1:-1;;;;;6033:6:140;;;6012:48;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;6012:4:140;;;:12;;26815:18:169;;6012:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6070:4:140;;6091:6;;6070:48;;-1:-1:-1;;;6070:48:140;;-1:-1:-1;;;;;6091:6:140;;;6070:48;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;6070:4:140;;;:12;;26815:18:169;;6070:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6128:4:140;;6149:6;;6128:48;;-1:-1:-1;;;6128:48:140;;-1:-1:-1;;;;;6149:6:140;;;6128:48;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;6128:4:140;;;:12;;26815:18:169;;6128:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6186:4:140;;6207:6;;6186:48;;-1:-1:-1;;;6186:48:140;;-1:-1:-1;;;;;6207:6:140;;;6186:48;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;6186:4:140;;;:12;;26815:18:169;;6186:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6244:3:140;;;6264:6;;6244:47;;-1:-1:-1;;;6244:47:140;;-1:-1:-1;;;;;6264:6:140;;;6244:47;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;;;;6244:3:140;;:11;;26815:18:169;;6244:47:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6301:8:140;;6326:6;;6301:52;;-1:-1:-1;;;6301:52:140;;-1:-1:-1;;;;;6326:6:140;;;6301:52;;;26842:74:169;-1:-1:-1;;26932:18:169;;;26925:34;6301:8:140;;;:16;;26815:18:169;;6301:52:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7887:160::-;7957:14;7993:47;8017:6;8025;1185:7;7993:23;:47::i;1610:948:107:-;1764:16;;1799:21;;;;-1:-1:-1;;;;;1740:43:107;;;;1795:62;;;-1:-1:-1;;;1822:35:107;1795:62;1871:10;:20;;;1867:60;;;-1:-1:-1;;;1893:34:107;1867:60;1941:10;:26;;;1937:73;;;-1:-1:-1;;;1969:41:107;1937:73;2024:10;:25;;;2020:71;;;-1:-1:-1;;;2051:40:107;2020:71;2105:10;:21;;;2101:62;;;-1:-1:-1;;;2128:35:107;2101:62;2177:10;:20;;;2173:60;;;-1:-1:-1;;;2199:34:107;2173:60;2247:10;:21;;;2243:62;;;-1:-1:-1;;;2270:35:107;2243:62;2319:10;:20;;;2315:60;;;-1:-1:-1;;;2341:34:107;2315:60;2389:10;:34;;;2385:79;;;-1:-1:-1;;;2425:39:107;2385:79;2478:10;:33;;;2474:77;;;-1:-1:-1;;;2513:38:107;2474:77;1610:948;;;:::o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;13228:134::-;13326:29;;-1:-1:-1;;;13326:29:2;;-1:-1:-1;;;;;;;;;;;13326:11:2;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;10236:135:119:-;10329:1;10310:20;;;;;10306:58;;10339:25;;-1:-1:-1;;;10339:25:119;;;;;;;;;;;3570:134:2;3668:29;;-1:-1:-1;;;3668:29:2;;-1:-1:-1;;;;;;;;;;;3668:11:2;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;1689:113::-;1771:24;;-1:-1:-1;;;1771:24:2;;-1:-1:-1;;;;;;;;;;;1771:13:2;;;:24;;1785:4;;1791:3;;1771:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:135:119;8804:1;8785:20;;;;;8781:58;;8814:25;;-1:-1:-1;;;8814:25:119;;;;;;;;;;;956:247:123;1047:14;1074:13;1089;1106:18;1119:1;1122;1106:12;:18::i;:::-;1073:51;;;;1142:54;1164:1;1167;1170:11;1183:5;1190;1142:21;:54::i;:::-;1135:61;956:247;-1:-1:-1;;;;;;956:247:123:o;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;6748:156;13421:143;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;6825:628:140:-;6896:7;;;;;-1:-1:-1;;;;;6896:7:140;6888:30;6884:66;;6920:7;;6942;;6920:30;;-1:-1:-1;;;6920:30:140;;-1:-1:-1;;;;;6920:7:140;6942;;;;;6920:30;;;571:74:169;6920:7:140;;;:21;;544:18:169;;6920:30:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6884:66;6972:4;;-1:-1:-1;;;;;6972:4:140;6964:27;6960:60;;6993:7;;7015:4;;6993:27;;-1:-1:-1;;;6993:27:140;;-1:-1:-1;;;;;7015:4:140;;;6993:27;;;571:74:169;6993:7:140;;;:21;;544:18:169;;6993:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6960:60;7042:4;;-1:-1:-1;;;;;7042:4:140;7034:27;7030:60;;7063:7;;7085:4;;7063:27;;-1:-1:-1;;;7063:27:140;;-1:-1:-1;;;;;7085:4:140;;;7063:27;;;571:74:169;7063:7:140;;;:21;;544:18:169;;7063:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7030:60;7112:4;;-1:-1:-1;;;;;7112:4:140;7104:27;7100:60;;7133:7;;7155:4;;7133:27;;-1:-1:-1;;;7133:27:140;;-1:-1:-1;;;;;7155:4:140;;;7133:27;;;571:74:169;7133:7:140;;;:21;;544:18:169;;7133:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7100:60;7182:4;;-1:-1:-1;;;;;7182:4:140;7174:27;7170:60;;7203:7;;7225:4;;7203:27;;-1:-1:-1;;;7203:27:140;;-1:-1:-1;;;;;7225:4:140;;;7203:27;;;571:74:169;7203:7:140;;;:21;;544:18:169;;7203:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:60;7252:4;;-1:-1:-1;;;;;7252:4:140;7244:27;7240:60;;7273:7;;7295:4;;7273:27;;-1:-1:-1;;;7273:27:140;;-1:-1:-1;;;;;7295:4:140;;;7273:27;;;571:74:169;7273:7:140;;;:21;;544:18:169;;7273:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:60;7322:3;;-1:-1:-1;;;;;7322:3:140;7314:26;7310:58;;7342:7;;7364:3;;;7342:26;;-1:-1:-1;;;7342:26:140;;-1:-1:-1;;;;;7364:3:140;;;7342:26;;;571:74:169;7342:7:140;;;:21;;544:18:169;7342:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:58;7390:8;;-1:-1:-1;;;;;7390:8:140;7382:31;7378:68;;7415:7;;7437:8;;7415:31;;-1:-1:-1;;;7415:31:140;;-1:-1:-1;;;;;7437:8:140;;;7415:31;;;571:74:169;7415:7:140;;;:21;;544:18:169;;7415:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7459:422;7528:7;;:346;;-1:-1:-1;;;7528:346:140;;50423:6:169;50456:15;;7528:346:140;;;50438:34:169;1395:5:140;50488:18:169;;;50481:43;;;1455:2:140;50540:18:169;;;50533:43;1511:3:140;50592:18:169;;;50585:43;50644:19;;;50637:44;1639:6:140;50724:19:169;;;50717:44;1701:5:140;50777:19:169;;;50770:44;1774:7:140;50830:19:169;;;50823:44;7528:7:140;50883:19:169;;;50876:51;-1:-1:-1;;;;;7528:7:140;;;;:17;;50385:19:169;;7528:346:140;50064:869:169;8053:216:140;8150:14;8186:76;8220:6;8228;8236:7;1340:2;8186:33;:76::i;6220:547:123:-;6286:13;;-1:-1:-1;;6654:1:123;6651;6644:20;6693:1;6690;6686:9;6677:18;;6744:5;6740:2;6737:13;6729:5;6725:2;6721:14;6717:34;6708:43;;;6220:547;;;;;:::o;7208:3395::-;7358:14;7450:5;7459:1;7450:10;7446:3151;;7521:11;7513:5;:19;;;;;:::i;:::-;;7504:28;;7446:3151;;;7677:11;7668:5;:20;7664:66;;7697:33;;-1:-1:-1;;;7697:33:123;;;;;;;;;;;7664:66;7829:17;7964:11;7961:1;7958;7951:25;8543:1;8528:12;;:16;;8513:32;;8663:25;;;;;8495:15;8944;;;8940:29;;;8936:37;;;8078:20;;;8067:32;;;9073:15;;;8125:21;;;;8775:19;;;;9064:24;;;;;-1:-1:-1;;9459:1:123;9440;:15;;9439:21;;9703;;;9699:25;;9688:36;9776:21;;;9772:25;;9761:36;9850:21;;;9846:25;;9835:36;9924:21;;;9920:25;;9909:36;9998:21;;;9994:25;;9983:36;10073:21;;;10069:25;;;10058:36;10557:15;;7446:3151;7208:3395;;;;;;;:::o;15439:1484:9:-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;5095:25:169;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;5068:18:169;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;26860:55:169;;16424:32:9;;;26842:74:169;26932:18;;;26925:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;26815:18:169;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;54183:55:169;;16587:43:9;;;54165:74:169;54255:18;;;54248:34;;;;54298:18;;;54291:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;54138:18:169;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;54183:55:169;;16769:41:9;;;54165:74:169;54255:18;;;54248:34;;;;54298:18;;;54291:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;54138:18:169;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;54538:2:169;16824:61:9;;;54520:21:169;54577:2;54557:18;;;54550:30;54616:34;54596:18;;;54589:62;54687:21;54667:18;;;54660:49;54726:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;54336:415:169;16720:176:9;16905:11;16911:4;16905:5;:11::i;8275:257:140:-;8469:7;;:54;;-1:-1:-1;;;8469:54:140;;-1:-1:-1;;;;;55094:15:169;;;8469:54:140;;;55076:34:169;55146:15;;;55126:18;;;55119:43;55210:8;55198:21;;55178:18;;;55171:49;55268:6;55256:19;;55236:18;;;55229:47;8414:14:140;;8469:7;;:20;;54987:19:169;;8469:54:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;953:236:9:-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;11187:393::-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;;-1:-1:-1;11567:6:9;11187:393;-1:-1:-1;;11187:393:9:o;4249:2493::-;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;589:55:169;;4911:25:9;;;571:74:169;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;544:18:169;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;56770:2:169;4984:74:9;;;56752:21:169;56789:18;;;56782:30;;;;56848:34;56828:18;;;56821:62;56919:34;56899:18;;;56892:62;56971:19;;4984:74:9;56568:428:169;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:169;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;26860:55:169;;;26842:74;;26932:18;;;26925:34;26815:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;57248:55:169;;;57230:74;;-1:-1:-1;;;;;;57340:33:169;;;57320:18;;;57313:61;;;;57390:18;;;57383:34;57448:2;57433:18;;57426:34;57217:3;57202:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;57673:2:169;6418:171:9;;;57655:21:169;57712:2;57692:18;;;57685:30;57751:34;57731:18;;;57724:62;57822:17;57802:18;;;57795:45;57857:19;;6418:171:9;57471:411:169;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;26842:74:169;;;;26932:18;;;26925:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;26815:18:169;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;54165:74:169;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;54138:18:169;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;54165:74:169;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;54138:18:169;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;26842:74:169;;;;26932:18;;;26925:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;26815:18:169;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;54165:74:169;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;54138:18:169;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;54165:74:169;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;54138:18:169;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:169:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:274;-1:-1:-1;;;;;284:10:169;;;296;;;280:27;327:20;;;;218:34;366:24;;;356:58;;394:18;;:::i;:::-;356:58;;146:274;;;;:::o;656:184::-;726:6;779:2;767:9;758:7;754:23;750:32;747:52;;;795:1;792;785:12;747:52;-1:-1:-1;818:16:169;;656:184;-1:-1:-1;656:184:169:o;845:125::-;910:9;;;931:10;;;928:36;;;944:18;;:::i;975:286::-;1033:6;1086:2;1074:9;1065:7;1061:23;1057:32;1054:52;;;1102:1;1099;1092:12;1054:52;1128:23;;-1:-1:-1;;;;;;1180:32:169;;1170:43;;1160:71;;1227:1;1224;1217:12;1458:681;1629:2;1681:21;;;1751:13;;1654:18;;;1773:22;;;1600:4;;1629:2;1852:15;;;;1826:2;1811:18;;;1600:4;1895:218;1909:6;1906:1;1903:13;1895:218;;;1974:13;;-1:-1:-1;;;;;1970:62:169;1958:75;;2088:15;;;;2053:12;;;;1931:1;1924:9;1895:218;;;-1:-1:-1;2130:3:169;;1458:681;-1:-1:-1;;;;;;1458:681:169:o;2144:250::-;2229:1;2239:113;2253:6;2250:1;2247:13;2239:113;;;2329:11;;;2323:18;2310:11;;;2303:39;2275:2;2268:10;2239:113;;;-1:-1:-1;;2386:1:169;2368:16;;2361:27;2144:250::o;2399:271::-;2441:3;2479:5;2473:12;2506:6;2501:3;2494:19;2522:76;2591:6;2584:4;2579:3;2575:14;2568:4;2561:5;2557:16;2522:76;:::i;:::-;2652:2;2631:15;-1:-1:-1;;2627:29:169;2618:39;;;;2659:4;2614:50;;2399:271;-1:-1:-1;;2399:271:169:o;2675:1765::-;2908:2;2960:21;;;3030:13;;2933:18;;;3052:22;;;2879:4;;2908:2;3093;;3111:18;;;;3148:1;3191:15;;;3176:31;;3172:40;;3235:15;;;2879:4;;3299:1112;3315:6;3310:3;3307:15;3299:1112;;;-1:-1:-1;;3384:22:169;;;3380:36;3368:49;;3440:13;;3527:9;;-1:-1:-1;;;;;3523:58:169;3508:74;;3621:11;;3615:18;3653:15;;;3646:27;;;3734:19;;3480:15;;;3766:24;;;3947:21;;;;3813:2;3895:17;;;3883:30;;3879:39;;;3837:15;;;;3992:1;4006:296;4022:8;4017:3;4014:17;4006:296;;;4128:2;4124:7;4115:6;4107;4103:19;4099:33;4092:5;4085:48;4160:42;4195:6;4184:8;4178:15;4160:42;:::i;:::-;4231:17;;;;4150:52;-1:-1:-1;4274:14:169;;;;4050:1;4041:11;4006:296;;;-1:-1:-1;;;4389:12:169;;;;4325:6;-1:-1:-1;;4354:15:169;;;;3341:1;3332:11;3299:1112;;;-1:-1:-1;4428:6:169;;2675:1765;-1:-1:-1;;;;;;;;;;2675:1765:169:o;4445:114::-;4529:4;4522:5;4518:16;4511:5;4508:27;4498:55;;4549:1;4546;4539:12;4564:380;4628:6;4636;4689:2;4677:9;4668:7;4664:23;4660:32;4657:52;;;4705:1;4702;4695:12;4657:52;4744:9;4731:23;4763:29;4786:5;4763:29;:::i;:::-;4811:5;-1:-1:-1;4868:2:169;4853:18;;4840:32;4881:31;4840:32;4881:31;:::i;:::-;4931:7;4921:17;;;4564:380;;;;;:::o;5131:461::-;5183:3;5221:5;5215:12;5248:6;5243:3;5236:19;5274:4;5303:2;5298:3;5294:12;5287:19;;5340:2;5333:5;5329:14;5361:1;5371:196;5385:6;5382:1;5379:13;5371:196;;;5450:13;;-1:-1:-1;;;;;;5446:40:169;5434:53;;5507:12;;;;5542:15;;;;5407:1;5400:9;5371:196;;;-1:-1:-1;5583:3:169;;5131:461;-1:-1:-1;;;;;5131:461:169:o;5597:1185::-;5815:4;5844:2;5884;5873:9;5869:18;5914:2;5903:9;5896:21;5937:6;5972;5966:13;6003:6;5995;5988:22;6029:2;6019:12;;6062:2;6051:9;6047:18;6040:25;;6124:2;6114:6;6111:1;6107:14;6096:9;6092:30;6088:39;6162:2;6154:6;6150:15;6183:1;6193:560;6207:6;6204:1;6201:13;6193:560;;;6272:22;;;-1:-1:-1;;6268:36:169;6256:49;;6328:13;;6374:9;;6396:18;;;6441:48;6473:15;;;6374:9;6441:48;:::i;:::-;6530:11;;;6524:18;6579:19;;;6562:15;;;6555:44;6524:18;6427:62;-1:-1:-1;6622:51:169;6427:62;6524:18;6622:51;:::i;:::-;6731:12;;;;6612:61;-1:-1:-1;;;6696:15:169;;;;6229:1;6222:9;6193:560;;;-1:-1:-1;6770:6:169;;5597:1185;-1:-1:-1;;;;;;;;5597:1185:169:o;6787:803::-;6949:4;6978:2;7018;7007:9;7003:18;7048:2;7037:9;7030:21;7071:6;7106;7100:13;7137:6;7129;7122:22;7175:2;7164:9;7160:18;7153:25;;7237:2;7227:6;7224:1;7220:14;7209:9;7205:30;7201:39;7187:53;;7275:2;7267:6;7263:15;7296:1;7306:255;7320:6;7317:1;7314:13;7306:255;;;7413:2;7409:7;7397:9;7389:6;7385:22;7381:36;7376:3;7369:49;7441:40;7474:6;7465;7459:13;7441:40;:::i;:::-;7431:50;-1:-1:-1;7539:12:169;;;;7504:15;;;;7342:1;7335:9;7306:255;;;-1:-1:-1;7578:6:169;;6787:803;-1:-1:-1;;;;;;;6787:803:169:o;7595:119::-;7680:8;7673:5;7669:20;7662:5;7659:31;7649:59;;7704:1;7701;7694:12;7719:450;7793:6;7801;7809;7862:2;7850:9;7841:7;7837:23;7833:32;7830:52;;;7878:1;7875;7868:12;7830:52;7917:9;7904:23;7936:30;7960:5;7936:30;:::i;:::-;7985:5;-1:-1:-1;8037:2:169;8022:18;;8009:32;;-1:-1:-1;8093:2:169;8078:18;;8065:32;8106:31;8065:32;8106:31;:::i;:::-;8156:7;8146:17;;;7719:450;;;;;:::o;8369:1096::-;8571:4;8600:2;8640;8629:9;8625:18;8670:2;8659:9;8652:21;8693:6;8728;8722:13;8759:6;8751;8744:22;8785:2;8775:12;;8818:2;8807:9;8803:18;8796:25;;8880:2;8870:6;8867:1;8863:14;8852:9;8848:30;8844:39;8918:2;8910:6;8906:15;8939:1;8949:487;8963:6;8960:1;8957:13;8949:487;;;9028:22;;;-1:-1:-1;;9024:36:169;9012:49;;9084:13;;9129:9;;-1:-1:-1;;;;;9125:58:169;9110:74;;9223:11;;9217:18;9255:15;;;9248:27;;;9298:58;9340:15;;;9217:18;9298:58;:::i;:::-;9414:12;;;;9288:68;-1:-1:-1;;9379:15:169;;;;8985:1;8978:9;8949:487;;9470:154;-1:-1:-1;;;;;9549:5:169;9545:54;9538:5;9535:65;9525:93;;9614:1;9611;9604:12;9629:1099;9762:6;9770;9778;9786;9794;9802;9810;9818;9871:3;9859:9;9850:7;9846:23;9842:33;9839:53;;;9888:1;9885;9878:12;9839:53;9927:9;9914:23;9946:31;9971:5;9946:31;:::i;:::-;9996:5;-1:-1:-1;10053:2:169;10038:18;;10025:32;10066:33;10025:32;10066:33;:::i;:::-;10118:7;-1:-1:-1;10177:2:169;10162:18;;10149:32;10190:33;10149:32;10190:33;:::i;:::-;10242:7;-1:-1:-1;10301:2:169;10286:18;;10273:32;10314;10273;10314;:::i;:::-;10365:7;-1:-1:-1;10419:3:169;10404:19;;10391:33;;-1:-1:-1;10471:3:169;10456:19;;10443:33;;-1:-1:-1;10528:3:169;10513:19;;10500:33;10542:31;10500:33;10542:31;:::i;:::-;10592:7;-1:-1:-1;10651:3:169;10636:19;;10623:33;10665:31;10623:33;10665:31;:::i;:::-;10715:7;10705:17;;;9629:1099;;;;;;;;;;;:::o;10733:117::-;10818:6;10811:5;10807:18;10800:5;10797:29;10787:57;;10840:1;10837;10830:12;10855:245;10913:6;10966:2;10954:9;10945:7;10941:23;10937:32;10934:52;;;10982:1;10979;10972:12;10934:52;11021:9;11008:23;11040:30;11064:5;11040:30;:::i;11105:1030::-;11229:6;11237;11245;11253;11261;11269;11277;11330:3;11318:9;11309:7;11305:23;11301:33;11298:53;;;11347:1;11344;11337:12;11298:53;11386:9;11373:23;11405:31;11430:5;11405:31;:::i;:::-;11455:5;-1:-1:-1;11512:2:169;11497:18;;11484:32;11525:33;11484:32;11525:33;:::i;:::-;11577:7;-1:-1:-1;11636:2:169;11621:18;;11608:32;11649:33;11608:32;11649:33;:::i;:::-;11701:7;-1:-1:-1;11760:2:169;11745:18;;11732:32;11773;11732;11773;:::i;:::-;11824:7;-1:-1:-1;11878:3:169;11863:19;;11850:33;;-1:-1:-1;11935:3:169;11920:19;;11907:33;11949:31;11907:33;11949:31;:::i;:::-;11999:7;-1:-1:-1;12058:3:169;12043:19;;12030:33;12072:31;12030:33;12072:31;:::i;:::-;12122:7;12112:17;;;11105:1030;;;;;;;;;;:::o;12140:136::-;12218:13;;12240:30;12218:13;12240:30;:::i;12281:249::-;12350:6;12403:2;12391:9;12382:7;12378:23;12374:32;12371:52;;;12419:1;12416;12409:12;12371:52;12451:9;12445:16;12470:30;12494:5;12470:30;:::i;12535:127::-;12596:10;12591:3;12587:20;12584:1;12577:31;12627:4;12624:1;12617:15;12651:4;12648:1;12641:15;12667:127;12728:10;12723:3;12719:20;12716:1;12709:31;12759:4;12756:1;12749:15;12783:4;12780:1;12773:15;13381:164;13457:13;;13506;;13499:21;13489:32;;13479:60;;13535:1;13532;13525:12;13550:202;13617:6;13670:2;13658:9;13649:7;13645:23;13641:32;13638:52;;;13686:1;13683;13676:12;13638:52;13709:37;13736:9;13709:37;:::i;13757:435::-;13810:3;13848:5;13842:12;13875:6;13870:3;13863:19;13901:4;13930:2;13925:3;13921:12;13914:19;;13967:2;13960:5;13956:14;13988:1;13998:169;14012:6;14009:1;14006:13;13998:169;;;14073:13;;14061:26;;14107:12;;;;14142:15;;;;14034:1;14027:9;13998:169;;14197:498;14411:4;-1:-1:-1;;;;;14521:2:169;14513:6;14509:15;14498:9;14491:34;14561:2;14556;14545:9;14541:18;14534:30;14581:56;14633:2;14622:9;14618:18;14610:6;14581:56;:::i;:::-;14573:64;;14685:2;14677:6;14673:15;14668:2;14657:9;14653:18;14646:43;;14197:498;;;;;;:::o;14700:255::-;14772:2;14766:9;14814:6;14802:19;;14851:18;14836:34;;14872:22;;;14833:62;14830:88;;;14898:18;;:::i;:::-;14934:2;14927:22;14700:255;:::o;14960:275::-;15031:2;15025:9;15096:2;15077:13;;-1:-1:-1;;15073:27:169;15061:40;;15131:18;15116:34;;15152:22;;;15113:62;15110:88;;;15178:18;;:::i;:::-;15214:2;15207:22;14960:275;;-1:-1:-1;14960:275:169:o;15240:183::-;15300:4;15333:18;15325:6;15322:30;15319:56;;;15355:18;;:::i;:::-;-1:-1:-1;15400:1:169;15396:14;15412:4;15392:25;;15240:183::o;15428:1003::-;15541:6;15549;15557;15610:2;15598:9;15589:7;15585:23;15581:32;15578:52;;;15626:1;15623;15616:12;15578:52;15655:9;15649:16;15639:26;;15684:2;15726;15715:9;15711:18;15705:25;15695:35;;15774:2;15763:9;15759:18;15753:25;15801:18;15793:6;15790:30;15787:50;;;15833:1;15830;15823:12;15787:50;15856:22;;15909:4;15901:13;;15897:27;-1:-1:-1;15887:55:169;;15938:1;15935;15928:12;15887:55;15967:2;15961:9;15990:60;16006:43;16046:2;16006:43;:::i;:::-;15990:60;:::i;:::-;16084:15;;;16166:1;16162:10;;;;16154:19;;16150:28;;;16115:12;;;;16190:19;;;16187:39;;;16222:1;16219;16212:12;16187:39;16246:11;;;;16266:135;16282:6;16277:3;16274:15;16266:135;;;16348:10;;16336:23;;16299:12;;;;16379;;;;16266:135;;;16420:5;16410:15;;;;;;;15428:1003;;;;;:::o;16436:192::-;16515:13;;-1:-1:-1;;;;;16557:46:169;;16547:57;;16537:85;;16618:1;16615;16608:12;16633:169;16711:13;;16764:12;16753:24;;16743:35;;16733:63;;16792:1;16789;16782:12;16807:839;16885:5;16933:4;16921:9;16916:3;16912:19;16908:30;16905:50;;;16951:1;16948;16941:12;16905:50;16984:2;16978:9;17026:4;17018:6;17014:17;17097:6;17085:10;17082:22;17061:18;17049:10;17046:34;17043:62;17040:88;;;17108:18;;:::i;:::-;17148:10;17144:2;17137:22;;17177:6;17168:15;;17213:9;17207:16;17232:32;17256:7;17232:32;:::i;:::-;17273:23;;17341:2;17326:18;;17320:25;17354:32;17320:25;17354:32;:::i;:::-;17414:2;17402:15;;17395:32;17472:2;17457:18;;17451:25;17485:32;17451:25;17485:32;:::i;:::-;17545:2;17533:15;;17526:32;17591:48;17635:2;17620:18;;17591:48;:::i;:::-;17586:2;17578:6;17574:15;17567:73;;16807:839;;;;:::o;17651:918::-;17725:5;17773:4;17761:9;17756:3;17752:19;17748:30;17745:50;;;17791:1;17788;17781:12;17745:50;17824:2;17818:9;17866:4;17858:6;17854:17;17937:6;17925:10;17922:22;17901:18;17889:10;17886:34;17883:62;17880:88;;;17948:18;;:::i;:::-;17988:10;17984:2;17977:22;;18017:6;18008:15;;18053:9;18047:16;18072:31;18095:7;18072:31;:::i;:::-;18112:23;;18180:2;18165:18;;18159:25;18193:32;18159:25;18193:32;:::i;:::-;18253:2;18241:15;;18234:32;18311:2;18296:18;;18290:25;18324:32;18290:25;18324:32;:::i;:::-;18384:2;18372:15;;18365:32;18430:48;18474:2;18459:18;;18430:48;:::i;:::-;18425:2;18417:6;18413:15;18406:73;18513:49;18557:3;18546:9;18542:19;18513:49;:::i;:::-;18507:3;18499:6;18495:16;18488:75;;17651:918;;;;:::o;18574:1028::-;18668:6;18721:3;18709:9;18700:7;18696:23;18692:33;18689:53;;;18738:1;18735;18728:12;18689:53;18764:22;;:::i;:::-;18809:40;18839:9;18809:40;:::i;:::-;18802:5;18795:55;18882:49;18927:2;18916:9;18912:18;18882:49;:::i;:::-;18877:2;18870:5;18866:14;18859:73;18964:49;19009:2;18998:9;18994:18;18964:49;:::i;:::-;18959:2;18952:5;18948:14;18941:73;19046:49;19091:2;19080:9;19076:18;19046:49;:::i;:::-;19041:2;19034:5;19030:14;19023:73;19129:49;19173:3;19162:9;19158:19;19129:49;:::i;:::-;19123:3;19116:5;19112:15;19105:74;19212:50;19257:3;19246:9;19242:19;19212:50;:::i;:::-;19206:3;19199:5;19195:15;19188:75;19296:50;19341:3;19330:9;19326:19;19296:50;:::i;:::-;19290:3;19283:5;19279:15;19272:75;19380:79;19451:7;19445:3;19434:9;19430:19;19380:79;:::i;:::-;19374:3;19367:5;19363:15;19356:104;19496:75;19563:7;19557:3;19546:9;19542:19;19496:75;:::i;:::-;19487:6;19476:18;;19469:103;19480:5;18574:1028;-1:-1:-1;;;18574:1028:169:o;19607:704::-;19899:4;-1:-1:-1;;;;;20009:2:169;20001:6;19997:15;19986:9;19979:34;20061:2;20053:6;20049:15;20044:2;20033:9;20029:18;20022:43;;20101:3;20096:2;20085:9;20081:18;20074:31;20128:57;20180:3;20169:9;20165:19;20157:6;20128:57;:::i;:::-;20233:9;20225:6;20221:22;20216:2;20205:9;20201:18;20194:50;20261:44;20298:6;20290;20261:44;:::i;:::-;20253:52;19607:704;-1:-1:-1;;;;;;;19607:704:169:o;20316:659::-;20381:5;20434:3;20427:4;20419:6;20415:17;20411:27;20401:55;;20452:1;20449;20442:12;20401:55;20481:6;20475:13;20507:4;20531:60;20547:43;20587:2;20547:43;:::i;20531:60::-;20625:15;;;20711:1;20707:10;;;;20695:23;;20691:32;;;20656:12;;;;20735:15;;;20732:35;;;20763:1;20760;20753:12;20732:35;20799:2;20791:6;20787:15;20811:135;20827:6;20822:3;20819:15;20811:135;;;20893:10;;20881:23;;20924:12;;;;20844;;20811:135;;;-1:-1:-1;20964:5:169;20316:659;-1:-1:-1;;;;;;20316:659:169:o;20980:363::-;21075:6;21128:2;21116:9;21107:7;21103:23;21099:32;21096:52;;;21144:1;21141;21134:12;21096:52;21177:9;21171:16;21210:18;21202:6;21199:30;21196:50;;;21242:1;21239;21232:12;21196:50;21265:72;21329:7;21320:6;21309:9;21305:22;21265:72;:::i;21348:390::-;21423:5;21457:18;21449:6;21446:30;21443:56;;;21479:18;;:::i;:::-;21517:57;21562:2;21541:15;;-1:-1:-1;;21537:29:169;21568:4;21533:40;21517:57;:::i;:::-;21508:66;;21597:6;21590:5;21583:21;21637:3;21628:6;21623:3;21619:16;21616:25;21613:45;;;21654:1;21651;21644:12;21613:45;21667:65;21725:6;21718:4;21711:5;21707:16;21702:3;21667:65;:::i;21743:457::-;21822:6;21875:2;21863:9;21854:7;21850:23;21846:32;21843:52;;;21891:1;21888;21881:12;21843:52;21924:9;21918:16;21957:18;21949:6;21946:30;21943:50;;;21989:1;21986;21979:12;21943:50;22012:22;;22065:4;22057:13;;22053:27;-1:-1:-1;22043:55:169;;22094:1;22091;22084:12;22043:55;22117:77;22186:7;22181:2;22175:9;22170:2;22166;22162:11;22117:77;:::i;22205:817::-;22557:4;-1:-1:-1;;;;;22667:2:169;22659:6;22655:15;22644:9;22637:34;22719:2;22711:6;22707:15;22702:2;22691:9;22687:18;22680:43;22771:2;22763:6;22759:15;22754:2;22743:9;22739:18;22732:43;;22811:3;22806:2;22795:9;22791:18;22784:31;22838:57;22890:3;22879:9;22875:19;22867:6;22838:57;:::i;:::-;22944:9;22936:6;22932:22;22926:3;22915:9;22911:19;22904:51;22972:44;23009:6;23001;22972:44;:::i;23518:633::-;23776:4;-1:-1:-1;;;;;23886:2:169;23878:6;23874:15;23863:9;23856:34;23938:2;23930:6;23926:15;23921:2;23910:9;23906:18;23899:43;;23990:6;23982;23978:19;23973:2;23962:9;23958:18;23951:47;24034:6;24029:2;24018:9;24014:18;24007:34;24078:3;24072;24061:9;24057:19;24050:32;24099:46;24140:3;24129:9;24125:19;24117:6;24099:46;:::i;24877:338::-;-1:-1:-1;;;;;25056:6:169;25052:55;25041:9;25034:74;25144:2;25139;25128:9;25124:18;25117:30;25015:4;25164:45;25205:2;25194:9;25190:18;25182:6;25164:45;:::i;25922:127::-;25983:10;25978:3;25974:20;25971:1;25964:31;26014:4;26011:1;26004:15;26038:4;26035:1;26028:15;26054:216;26094:1;-1:-1:-1;;;;;26181:2:169;26178:1;26174:10;26203:3;26193:37;;26210:18;;:::i;:::-;26248:10;;26244:20;;;;;26054:216;-1:-1:-1;;26054:216:169:o;26275:380::-;26354:1;26350:12;;;;26397;;;26418:61;;26472:4;26464:6;26460:17;26450:27;;26418:61;26525:2;26517:6;26514:14;26494:18;26491:38;26488:161;;26571:10;26566:3;26562:20;26559:1;26552:31;26606:4;26603:1;26596:15;26634:4;26631:1;26624:15;26488:161;;26275:380;;;:::o;26970:120::-;27010:1;27036;27026:35;;27041:18;;:::i;:::-;-1:-1:-1;27075:9:169;;26970:120::o;29396:378::-;29484:6;29492;29500;29553:2;29541:9;29532:7;29528:23;29524:32;29521:52;;;29569:1;29566;29559:12;29521:52;29592:40;29622:9;29592:40;:::i;:::-;29582:50;;29651:49;29696:2;29685:9;29681:18;29651:49;:::i;:::-;29641:59;;29719:49;29764:2;29753:9;29749:18;29719:49;:::i;:::-;29709:59;;29396:378;;;;;:::o;30296:148::-;30384:4;30363:12;;;30377;;;30359:31;;30402:13;;30399:39;;;30418:18;;:::i;30449:151::-;30539:4;30532:12;;;30518;;;30514:31;;30557:14;;30554:40;;;30574:18;;:::i;30605:409::-;-1:-1:-1;;;;;30812:6:169;30808:55;30797:9;30790:74;30900:6;30895:2;30884:9;30880:18;30873:34;30943:2;30938;30927:9;30923:18;30916:30;30771:4;30963:45;31004:2;30993:9;30989:18;30981:6;30963:45;:::i;31463:293::-;31542:6;31550;31603:2;31591:9;31582:7;31578:23;31574:32;31571:52;;;31619:1;31616;31609:12;31571:52;31642:40;31672:9;31642:40;:::i;:::-;31632:50;;31701:49;31746:2;31735:9;31731:18;31701:49;:::i;:::-;31691:59;;31463:293;;;;;:::o;31761:128::-;31828:9;;;31849:11;;;31846:37;;;31863:18;;:::i;32313:168::-;32386:9;;;32417;;32434:15;;;32428:22;;32414:37;32404:71;;32455:18;;:::i;32977:267::-;33063:6;33116:2;33104:9;33095:7;33091:23;33087:32;33084:52;;;33132:1;33129;33122:12;33084:52;33164:9;33158:16;33183:31;33208:5;33183:31;:::i;33249:135::-;33288:3;33309:17;;;33306:43;;33329:18;;:::i;:::-;-1:-1:-1;33376:1:169;33365:13;;33249:135::o;34372:634::-;34502:6;34510;34518;34526;34534;34542;34550;34558;34611:3;34599:9;34590:7;34586:23;34582:33;34579:53;;;34628:1;34625;34618:12;34579:53;34657:9;34651:16;34641:26;;34707:2;34696:9;34692:18;34686:25;34676:35;;34751:2;34740:9;34736:18;34730:25;34720:35;;34795:2;34784:9;34780:18;34774:25;34764:35;;34839:3;34828:9;34824:19;34818:26;34808:36;;34884:3;34873:9;34869:19;34863:26;34853:36;;34929:3;34918:9;34914:19;34908:26;34898:36;;34953:47;34995:3;34984:9;34980:19;34953:47;:::i;:::-;34943:57;;34372:634;;;;;;;;;;;:::o;35011:587::-;35269:4;-1:-1:-1;;;;;35379:2:169;35371:6;35367:15;35356:9;35349:34;35431:2;35423:6;35419:15;35414:2;35403:9;35399:18;35392:43;;35471:3;35466:2;35455:9;35451:18;35444:31;35492:57;35544:3;35533:9;35529:19;35521:6;35492:57;:::i;:::-;35484:65;;35585:6;35580:2;35569:9;35565:18;35558:34;35011:587;;;;;;;:::o;37267:287::-;37396:3;37434:6;37428:13;37450:66;37509:6;37504:3;37497:4;37489:6;37485:17;37450:66;:::i;:::-;37532:16;;;;;37267:287;-1:-1:-1;;37267:287:169:o;37559:362::-;37764:6;37753:9;37746:25;37807:6;37802:2;37791:9;37787:18;37780:34;37850:2;37845;37834:9;37830:18;37823:30;37727:4;37870:45;37911:2;37900:9;37896:18;37888:6;37870:45;:::i;44570:447::-;44744:4;-1:-1:-1;;;;;44854:2:169;44846:6;44842:15;44831:9;44824:34;44906:2;44898:6;44894:15;44889:2;44878:9;44874:18;44867:43;;44946:2;44941;44930:9;44926:18;44919:30;44966:45;45007:2;44996:9;44992:18;44984:6;44966:45;:::i;48996:301::-;49181:6;49174:14;49167:22;49156:9;49149:41;49226:2;49221;49210:9;49206:18;49199:30;49130:4;49246:45;49287:2;49276:9;49272:18;49264:6;49246:45;:::i;50938:383::-;51095:3;51133:6;51127:13;51149:66;51208:6;51203:3;51196:4;51188:6;51184:17;51149:66;:::i;:::-;51237:16;;;;51262:21;;;-1:-1:-1;51310:4:169;51299:16;;50938:383;-1:-1:-1;50938:383:169:o;51326:422::-;51415:1;51458:5;51415:1;51472:270;51493:7;51483:8;51480:21;51472:270;;;51552:4;51548:1;51544:6;51540:17;51534:4;51531:27;51528:53;;;51561:18;;:::i;:::-;51611:7;51601:8;51597:22;51594:55;;;51631:16;;;;51594:55;51710:22;;;;51670:15;;;;51472:270;;;51476:3;51326:422;;;;;:::o;51753:806::-;51802:5;51832:8;51822:80;;-1:-1:-1;51873:1:169;51887:5;;51822:80;51921:4;51911:76;;-1:-1:-1;51958:1:169;51972:5;;51911:76;52003:4;52021:1;52016:59;;;;52089:1;52084:130;;;;51996:218;;52016:59;52046:1;52037:10;;52060:5;;;52084:130;52121:3;52111:8;52108:17;52105:43;;;52128:18;;:::i;:::-;-1:-1:-1;;52184:1:169;52170:16;;52199:5;;51996:218;;52298:2;52288:8;52285:16;52279:3;52273:4;52270:13;52266:36;52260:2;52250:8;52247:16;52242:2;52236:4;52233:12;52229:35;52226:77;52223:159;;;-1:-1:-1;52335:19:169;;;52367:5;;52223:159;52414:34;52439:8;52433:4;52414:34;:::i;:::-;52484:6;52480:1;52476:6;52472:19;52463:7;52460:32;52457:58;;;52495:18;;:::i;:::-;52533:20;;51753:806;-1:-1:-1;;;51753:806:169:o;52564:131::-;52624:5;52653:36;52680:8;52674:4;52653:36;:::i;53163:570::-;53425:34;53420:3;53413:47;53490:34;53485:2;53480:3;53476:12;53469:56;53555:12;53550:2;53545:3;53541:12;53534:34;53395:3;53597:6;53591:13;53613:73;53679:6;53674:2;53669:3;53665:12;53660:2;53652:6;53648:15;53613:73;:::i;:::-;53706:16;;;;53724:2;53702:25;;53163:570;-1:-1:-1;;53163:570:169:o;53738:220::-;53887:2;53876:9;53869:21;53850:4;53907:45;53948:2;53937:9;53933:18;53925:6;53907:45;:::i;55560:384::-;-1:-1:-1;;;;;;55745:33:169;;55733:46;;55802:13;;55715:3;;55824:74;55802:13;55887:1;55878:11;;55871:4;55859:17;;55824:74;:::i;:::-;55918:16;;;;55936:1;55914:24;;55560:384;-1:-1:-1;;;55560:384:169:o;55949:614::-;56078:6;56086;56139:2;56127:9;56118:7;56114:23;56110:32;56107:52;;;56155:1;56152;56145:12;56107:52;56188:9;56182:16;56217:18;56258:2;56250:6;56247:14;56244:34;;;56274:1;56271;56264:12;56244:34;56297:72;56361:7;56352:6;56341:9;56337:22;56297:72;:::i;:::-;56287:82;;56415:2;56404:9;56400:18;56394:25;56378:41;;56444:2;56434:8;56431:16;56428:36;;;56460:1;56457;56450:12;56428:36;;56483:74;56549:7;56538:8;56527:9;56523:24;56483:74;:::i;:::-;56473:84;;;55949:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "105060": [
        {
          "start": 4180,
          "length": 32
        },
        {
          "start": 8367,
          "length": 32
        },
        {
          "start": 8613,
          "length": 32
        },
        {
          "start": 8880,
          "length": 32
        },
        {
          "start": 9208,
          "length": 32
        },
        {
          "start": 9366,
          "length": 32
        },
        {
          "start": 9659,
          "length": 32
        },
        {
          "start": 10130,
          "length": 32
        },
        {
          "start": 10365,
          "length": 32
        },
        {
          "start": 10521,
          "length": 32
        },
        {
          "start": 10920,
          "length": 32
        },
        {
          "start": 20879,
          "length": 32
        },
        {
          "start": 21125,
          "length": 32
        },
        {
          "start": 21392,
          "length": 32
        },
        {
          "start": 21720,
          "length": 32
        },
        {
          "start": 21878,
          "length": 32
        },
        {
          "start": 22194,
          "length": 32
        },
        {
          "start": 22848,
          "length": 32
        },
        {
          "start": 23004,
          "length": 32
        },
        {
          "start": 38612,
          "length": 32
        },
        {
          "start": 38827,
          "length": 32
        },
        {
          "start": 38982,
          "length": 32
        },
        {
          "start": 39491,
          "length": 32
        }
      ],
      "105068": [
        {
          "start": 1679,
          "length": 32
        },
        {
          "start": 1744,
          "length": 32
        },
        {
          "start": 1813,
          "length": 32
        },
        {
          "start": 2238,
          "length": 32
        },
        {
          "start": 2690,
          "length": 32
        },
        {
          "start": 3206,
          "length": 32
        },
        {
          "start": 3239,
          "length": 32
        },
        {
          "start": 3272,
          "length": 32
        },
        {
          "start": 3581,
          "length": 32
        },
        {
          "start": 3614,
          "length": 32
        },
        {
          "start": 3647,
          "length": 32
        },
        {
          "start": 5089,
          "length": 32
        },
        {
          "start": 5383,
          "length": 32
        },
        {
          "start": 5541,
          "length": 32
        },
        {
          "start": 5826,
          "length": 32
        },
        {
          "start": 6420,
          "length": 32
        },
        {
          "start": 6576,
          "length": 32
        },
        {
          "start": 7203,
          "length": 32
        },
        {
          "start": 7460,
          "length": 32
        },
        {
          "start": 8914,
          "length": 32
        },
        {
          "start": 9400,
          "length": 32
        },
        {
          "start": 9693,
          "length": 32
        },
        {
          "start": 9891,
          "length": 32
        },
        {
          "start": 10555,
          "length": 32
        },
        {
          "start": 10681,
          "length": 32
        },
        {
          "start": 11234,
          "length": 32
        },
        {
          "start": 11544,
          "length": 32
        },
        {
          "start": 11692,
          "length": 32
        },
        {
          "start": 11949,
          "length": 32
        },
        {
          "start": 12163,
          "length": 32
        },
        {
          "start": 12380,
          "length": 32
        },
        {
          "start": 12643,
          "length": 32
        },
        {
          "start": 13275,
          "length": 32
        },
        {
          "start": 13458,
          "length": 32
        },
        {
          "start": 13746,
          "length": 32
        },
        {
          "start": 14139,
          "length": 32
        },
        {
          "start": 14360,
          "length": 32
        },
        {
          "start": 14693,
          "length": 32
        },
        {
          "start": 15005,
          "length": 32
        },
        {
          "start": 15922,
          "length": 32
        },
        {
          "start": 16105,
          "length": 32
        },
        {
          "start": 16388,
          "length": 32
        },
        {
          "start": 16781,
          "length": 32
        },
        {
          "start": 16996,
          "length": 32
        },
        {
          "start": 17334,
          "length": 32
        },
        {
          "start": 17666,
          "length": 32
        },
        {
          "start": 18269,
          "length": 32
        },
        {
          "start": 19130,
          "length": 32
        },
        {
          "start": 21426,
          "length": 32
        },
        {
          "start": 21912,
          "length": 32
        },
        {
          "start": 22228,
          "length": 32
        },
        {
          "start": 22421,
          "length": 32
        },
        {
          "start": 22641,
          "length": 32
        },
        {
          "start": 23038,
          "length": 32
        },
        {
          "start": 23184,
          "length": 32
        },
        {
          "start": 23399,
          "length": 32
        },
        {
          "start": 25669,
          "length": 32
        },
        {
          "start": 26177,
          "length": 32
        },
        {
          "start": 26651,
          "length": 32
        },
        {
          "start": 27319,
          "length": 32
        },
        {
          "start": 27384,
          "length": 32
        },
        {
          "start": 27453,
          "length": 32
        },
        {
          "start": 27878,
          "length": 32
        },
        {
          "start": 28330,
          "length": 32
        },
        {
          "start": 28855,
          "length": 32
        },
        {
          "start": 28888,
          "length": 32
        },
        {
          "start": 29202,
          "length": 32
        },
        {
          "start": 29235,
          "length": 32
        },
        {
          "start": 31414,
          "length": 32
        },
        {
          "start": 31479,
          "length": 32
        },
        {
          "start": 31548,
          "length": 32
        },
        {
          "start": 31973,
          "length": 32
        },
        {
          "start": 32490,
          "length": 32
        },
        {
          "start": 32824,
          "length": 32
        }
      ],
      "105076": [
        {
          "start": 28364,
          "length": 32
        },
        {
          "start": 28921,
          "length": 32
        },
        {
          "start": 29268,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_BatchTransferFromReentrancy()": "2cb279c6",
    "test_BeforeAfterBatchTransferFromHooks()": "a42b6139",
    "test_BeforeAfterBurnHooks()": "06fb3530",
    "test_BeforeAfterFlashLoanHooks()": "93a5870c",
    "test_BeforeAfterMintHooks()": "b8c238fd",
    "test_BeforeAfterSwapHooksXtoY()": "3f71aea7",
    "test_BeforeAfterSwapHooksYtoX()": "45bf2c09",
    "test_BurnReentrancy()": "7626ddcc",
    "test_FlashLoanReentrancy()": "4f3e1504",
    "test_GetLBHooksParameters()": "8e78d4e3",
    "test_MintReentrancy()": "16c1fcdd",
    "test_SwapReentrancy()": "314bf908"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BatchTransferFromReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterBatchTransferFromHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterBurnHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterFlashLoanHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterMintHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterSwapHooksXtoY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterSwapHooksYtoX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BurnReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_FlashLoanReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_GetLBHooksParameters\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_MintReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBPairHooks.t.sol\":\"LBPairHooksTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBBaseHooks.sol\":{\"keccak256\":\"0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1\",\"dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126\",\"dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96\",\"dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156\",\"dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe\",\"dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980\",\"dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d\",\"dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11\",\"dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc\",\"dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf\",\"dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c\",\"dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15\",\"dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561\",\"dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f\",\"dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009\",\"dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee\",\"dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156\",\"dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5\",\"dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1\",\"dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e\",\"dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3\",\"dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8\",\"dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de\",\"dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8\",\"dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5\",\"dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4\",\"dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e\",\"dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20\",\"dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1\",\"dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f\",\"dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242\",\"dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY\"]},\"test/LBPairHooks.t.sol\":{\"keccak256\":\"0x8ee9e72828981a5d24d3f61ccd3f63c4ed1f2385405de3768edbf2b854168d93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9322d62668e6ba562af2477422746448f8245ee58dae8bf073d7ed0480e817b6\",\"dweb:/ipfs/Qmcb4m8szBS4E9usVkd8LsKwfuGTJfHjj8GcEvsW1TfBU7\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937\",\"dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f\",\"dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170\",\"dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/MockHooks.sol\":{\"keccak256\":\"0x4daf8f583d9393a3131a87bd2affdcc16b518b0e71b4f6e898fa2b1f464752d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6ea4ea16f5c587a25f12b4cfdcae46dcf965bcb8bf754034ff7eb9616f6fe0\",\"dweb:/ipfs/QmTDz1S7RmgzCRxUNPLM4qFi1fJc1fsadYAhkCjeWezTrV\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BatchTransferFromReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterBatchTransferFromHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterBurnHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterFlashLoanHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterMintHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterSwapHooksXtoY"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterSwapHooksYtoX"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BurnReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_FlashLoanReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_GetLBHooksParameters"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MintReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapReentrancy"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBPairHooks.t.sol": "LBPairHooksTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d",
        "urls": [
          "bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db",
          "dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBBaseHooks.sol": {
        "keccak256": "0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778",
        "urls": [
          "bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1",
          "dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44",
        "urls": [
          "bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126",
          "dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01",
        "urls": [
          "bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96",
          "dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4",
        "urls": [
          "bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156",
          "dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495",
        "urls": [
          "bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe",
          "dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2",
        "urls": [
          "bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980",
          "dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b",
        "urls": [
          "bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d",
          "dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3",
        "urls": [
          "bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11",
          "dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9",
        "urls": [
          "bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246",
          "dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62",
        "urls": [
          "bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56",
          "dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca",
        "urls": [
          "bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc",
          "dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a",
        "urls": [
          "bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf",
          "dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2",
        "urls": [
          "bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c",
          "dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727",
        "urls": [
          "bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15",
          "dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47",
        "urls": [
          "bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561",
          "dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9",
        "urls": [
          "bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f",
          "dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49",
        "urls": [
          "bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f",
          "dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2",
        "urls": [
          "bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009",
          "dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084",
        "urls": [
          "bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee",
          "dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151",
        "urls": [
          "bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156",
          "dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9",
        "urls": [
          "bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5",
          "dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3",
        "urls": [
          "bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1",
          "dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a",
        "urls": [
          "bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e",
          "dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658",
        "urls": [
          "bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3",
          "dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154",
        "urls": [
          "bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8",
          "dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994",
        "urls": [
          "bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de",
          "dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba",
        "urls": [
          "bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8",
          "dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1",
        "urls": [
          "bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5",
          "dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901",
        "urls": [
          "bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4",
          "dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed",
        "urls": [
          "bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e",
          "dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63",
        "urls": [
          "bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20",
          "dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b",
        "urls": [
          "bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1",
          "dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba",
        "urls": [
          "bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f",
          "dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2",
        "urls": [
          "bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242",
          "dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY"
        ],
        "license": "MIT"
      },
      "test/LBPairHooks.t.sol": {
        "keccak256": "0x8ee9e72828981a5d24d3f61ccd3f63c4ed1f2385405de3768edbf2b854168d93",
        "urls": [
          "bzz-raw://9322d62668e6ba562af2477422746448f8245ee58dae8bf073d7ed0480e817b6",
          "dweb:/ipfs/Qmcb4m8szBS4E9usVkd8LsKwfuGTJfHjj8GcEvsW1TfBU7"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00",
        "urls": [
          "bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937",
          "dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6",
        "urls": [
          "bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f",
          "dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb",
        "urls": [
          "bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170",
          "dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/MockHooks.sol": {
        "keccak256": "0x4daf8f583d9393a3131a87bd2affdcc16b518b0e71b4f6e898fa2b1f464752d3",
        "urls": [
          "bzz-raw://5c6ea4ea16f5c587a25f12b4cfdcae46dcf965bcb8bf754034ff7eb9616f6fe0",
          "dweb:/ipfs/QmTDz1S7RmgzCRxUNPLM4qFi1fJc1fsadYAhkCjeWezTrV"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBPairHooks.t.sol",
    "id": 93129,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39192
      ],
      "Address": [
        42990
      ],
      "AvalancheAddresses": [
        106823
      ],
      "BinHelper": [
        72278
      ],
      "BitMath": [
        75786
      ],
      "Constants": [
        72438
      ],
      "ERC20": [
        42210
      ],
      "ERC20Mock": [
        122897
      ],
      "ERC20TransferTaxMock": [
        122951
      ],
      "Encoded": [
        75993
      ],
      "EnumerableMap": [
        48826
      ],
      "EnumerableSet": [
        49439
      ],
      "FeeHelper": [
        72631
      ],
      "FlashBorrower": [
        123680
      ],
      "Hooks": [
        73505
      ],
      "IERC20": [
        42288
      ],
      "IERC20Metadata": [
        42314
      ],
      "ILBFactory": [
        67981
      ],
      "ILBFlashLoanCallback": [
        68006
      ],
      "ILBHooks": [
        68179
      ],
      "ILBLegacyFactory": [
        68545
      ],
      "ILBLegacyPair": [
        68961
      ],
      "ILBLegacyRouter": [
        69370
      ],
      "ILBPair": [
        69932
      ],
      "ILBRouter": [
        70464
      ],
      "ILBToken": [
        70587
      ],
      "ISovrynLBFactoryV1": [
        70661
      ],
      "ISovrynLBPairV1": [
        70904
      ],
      "ISovrynLBRouter01": [
        71213
      ],
      "ISovrynLBRouter02": [
        71303
      ],
      "IWNATIVE": [
        71319
      ],
      "ImmutableClone": [
        73583
      ],
      "Initializable": [
        41695
      ],
      "LBBaseHooks": [
        57571
      ],
      "LBFactory": [
        59243
      ],
      "LBPair": [
        62123
      ],
      "LBPairBeaconProxy": [
        62222
      ],
      "LBPairHooksTest": [
        92474
      ],
      "LBPairUpgradeableBeacon": [
        62426
      ],
      "LBQuoter": [
        63714
      ],
      "LBRouter": [
        66964
      ],
      "LBToken": [
        67483
      ],
      "LiquidityConfigurations": [
        76163
      ],
      "MockHooks": [
        123934
      ],
      "MockLBHooks": [
        93128
      ],
      "OracleHelper": [
        74240
      ],
      "OracleParameters": [
        89959
      ],
      "Ownable": [
        40391
      ],
      "Ownable2StepUpgradeable": [
        39329
      ],
      "OwnableUpgradeable": [
        39524
      ],
      "PackedUint128Math": [
        76517
      ],
      "PairParameterHelper": [
        75097
      ],
      "PriceHelper": [
        75271
      ],
      "ReentrancyGuardUpgradeable": [
        75400
      ],
      "SafeCast": [
        77265
      ],
      "SafeERC20": [
        42737
      ],
      "SampleMath": [
        77690
      ],
      "SovrynLBLibrary": [
        75606
      ],
      "State": [
        89980
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3561
      ],
      "StdCheats": [
        6414
      ],
      "StdInvariant": [
        6774
      ],
      "StdStorage": [
        7546
      ],
      "StdStyle": [
        10716
      ],
      "StdUtils": [
        12094
      ],
      "Test": [
        12146
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        106622
      ],
      "TokenHelper": [
        75692
      ],
      "TransparentUpgradeableProxy": [
        41441
      ],
      "TreeMath": [
        78622
      ],
      "Uint256x256Math": [
        79258
      ],
      "UpgradeableBeacon": [
        41258
      ],
      "Utils": [
        106790
      ],
      "Vm": [
        15989
      ],
      "VolatilityParameters": [
        89948
      ],
      "WNATIVE": [
        123990
      ],
      "console": [
        24113
      ],
      "console2": [
        24113
      ],
      "safeconsole": [
        38829
      ],
      "stdError": [
        6480
      ],
      "stdJson": [
        7366
      ],
      "stdMath": [
        7508
      ],
      "stdStorage": [
        9505
      ],
      "stdToml": [
        11308
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:27466:130",
    "nodes": [
      {
        "id": 89936,
        "nodeType": "PragmaDirective",
        "src": "33:24:130",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 89937,
        "nodeType": "ImportDirective",
        "src": "59:51:130",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93129,
        "sourceUnit": 42991,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89938,
        "nodeType": "ImportDirective",
        "src": "112:34:130",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "./helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93129,
        "sourceUnit": 106623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89939,
        "nodeType": "ImportDirective",
        "src": "147:31:130",
        "nodes": [],
        "absolutePath": "test/mocks/MockHooks.sol",
        "file": "./mocks/MockHooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 93129,
        "sourceUnit": 123935,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89948,
        "nodeType": "StructDefinition",
        "src": "180:150:130",
        "nodes": [],
        "canonicalName": "VolatilityParameters",
        "members": [
          {
            "constant": false,
            "id": 89941,
            "mutability": "mutable",
            "name": "volatilityAccumulator",
            "nameLocation": "221:21:130",
            "nodeType": "VariableDeclaration",
            "scope": 89948,
            "src": "214:28:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 89940,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "214:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89943,
            "mutability": "mutable",
            "name": "volatilityReference",
            "nameLocation": "255:19:130",
            "nodeType": "VariableDeclaration",
            "scope": 89948,
            "src": "248:26:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 89942,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "248:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89945,
            "mutability": "mutable",
            "name": "idReference",
            "nameLocation": "287:11:130",
            "nodeType": "VariableDeclaration",
            "scope": 89948,
            "src": "280:18:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 89944,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "280:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89947,
            "mutability": "mutable",
            "name": "timeOfLastUpdate",
            "nameLocation": "311:16:130",
            "nodeType": "VariableDeclaration",
            "scope": 89948,
            "src": "304:23:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 89946,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "304:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "VolatilityParameters",
        "nameLocation": "187:20:130",
        "scope": 93129,
        "visibility": "public"
      },
      {
        "id": 89959,
        "nodeType": "StructDefinition",
        "src": "332:144:130",
        "nodes": [],
        "canonicalName": "OracleParameters",
        "members": [
          {
            "constant": false,
            "id": 89950,
            "mutability": "mutable",
            "name": "sampleLifetime",
            "nameLocation": "368:14:130",
            "nodeType": "VariableDeclaration",
            "scope": 89959,
            "src": "362:20:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 89949,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "362:5:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89952,
            "mutability": "mutable",
            "name": "size",
            "nameLocation": "395:4:130",
            "nodeType": "VariableDeclaration",
            "scope": 89959,
            "src": "388:11:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 89951,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "388:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89954,
            "mutability": "mutable",
            "name": "activeSize",
            "nameLocation": "412:10:130",
            "nodeType": "VariableDeclaration",
            "scope": 89959,
            "src": "405:17:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 89953,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "405:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89956,
            "mutability": "mutable",
            "name": "lastUpdated",
            "nameLocation": "435:11:130",
            "nodeType": "VariableDeclaration",
            "scope": 89959,
            "src": "428:18:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 89955,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "428:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89958,
            "mutability": "mutable",
            "name": "firstTimestamp",
            "nameLocation": "459:14:130",
            "nodeType": "VariableDeclaration",
            "scope": 89959,
            "src": "452:21:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 89957,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "452:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "OracleParameters",
        "nameLocation": "339:16:130",
        "scope": 93129,
        "visibility": "public"
      },
      {
        "id": 89980,
        "nodeType": "StructDefinition",
        "src": "478:275:130",
        "nodes": [],
        "canonicalName": "State",
        "members": [
          {
            "constant": false,
            "id": 89961,
            "mutability": "mutable",
            "name": "reserveX",
            "nameLocation": "505:8:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "497:16:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89960,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89963,
            "mutability": "mutable",
            "name": "reserveY",
            "nameLocation": "527:8:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "519:16:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89962,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "519:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89965,
            "mutability": "mutable",
            "name": "protocolFeeX",
            "nameLocation": "549:12:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "541:20:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89964,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89967,
            "mutability": "mutable",
            "name": "protocolFeeY",
            "nameLocation": "575:12:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "567:20:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89966,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "567:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89969,
            "mutability": "mutable",
            "name": "activeId",
            "nameLocation": "600:8:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "593:15:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 89968,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "593:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89971,
            "mutability": "mutable",
            "name": "activeReserveX",
            "nameLocation": "622:14:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "614:22:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89970,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89973,
            "mutability": "mutable",
            "name": "activeReserveY",
            "nameLocation": "650:14:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "642:22:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89972,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "642:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89976,
            "mutability": "mutable",
            "name": "volatilityParameters",
            "nameLocation": "691:20:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "670:41:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_VolatilityParameters_$89948_storage_ptr",
              "typeString": "struct VolatilityParameters"
            },
            "typeName": {
              "id": 89975,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89974,
                "name": "VolatilityParameters",
                "nameLocations": [
                  "670:20:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 89948,
                "src": "670:20:130"
              },
              "referencedDeclaration": 89948,
              "src": "670:20:130",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_VolatilityParameters_$89948_storage_ptr",
                "typeString": "struct VolatilityParameters"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 89979,
            "mutability": "mutable",
            "name": "oracleParameters",
            "nameLocation": "734:16:130",
            "nodeType": "VariableDeclaration",
            "scope": 89980,
            "src": "717:33:130",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_OracleParameters_$89959_storage_ptr",
              "typeString": "struct OracleParameters"
            },
            "typeName": {
              "id": 89978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89977,
                "name": "OracleParameters",
                "nameLocations": [
                  "717:16:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 89959,
                "src": "717:16:130"
              },
              "referencedDeclaration": 89959,
              "src": "717:16:130",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_OracleParameters_$89959_storage_ptr",
                "typeString": "struct OracleParameters"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "State",
        "nameLocation": "485:5:130",
        "scope": 93129,
        "visibility": "public"
      },
      {
        "id": 92474,
        "nodeType": "ContractDefinition",
        "src": "755:21192:130",
        "nodes": [
          {
            "id": 89985,
            "nodeType": "UsingForDirective",
            "src": "800:27:130",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 89983,
              "name": "SafeCast",
              "nameLocations": [
                "806:8:130"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77265,
              "src": "806:8:130"
            },
            "typeName": {
              "id": 89984,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "819:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 89988,
            "nodeType": "VariableDeclaration",
            "src": "833:17:130",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "hooks",
            "nameLocation": "845:5:130",
            "scope": 92474,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
              "typeString": "contract MockLBHooks"
            },
            "typeName": {
              "id": 89987,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89986,
                "name": "MockLBHooks",
                "nameLocations": [
                  "833:11:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 93128,
                "src": "833:11:130"
              },
              "referencedDeclaration": 93128,
              "src": "833:11:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                "typeString": "contract MockLBHooks"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89991,
            "nodeType": "VariableDeclaration",
            "src": "857:32:130",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "amount",
            "nameLocation": "874:6:130",
            "scope": 92474,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 89989,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "857:7:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "value": {
              "hexValue": "302e31653138",
              "id": 89990,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 90092,
            "nodeType": "FunctionDefinition",
            "src": "896:952:130",
            "nodes": [],
            "body": {
              "id": 90091,
              "nodeType": "Block",
              "src": "929:919:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89995,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "939:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LBPairHooksTest_$92474_$",
                          "typeString": "type(contract super LBPairHooksTest)"
                        }
                      },
                      "id": 89997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "945:5:130",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105749,
                      "src": "939:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89999,
                  "nodeType": "ExpressionStatement",
                  "src": "939:13:130"
                },
                {
                  "expression": {
                    "id": 90005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90000,
                      "name": "pairWnative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105112,
                      "src": "963:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 90002,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "990:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 90003,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "999:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 90001,
                        "name": "createLBPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105969,
                        "src": "977:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_contract$_LBPair_$62123_$",
                          "typeString": "function (contract IERC20,contract IERC20) returns (contract LBPair)"
                        }
                      },
                      "id": 90004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:27:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "src": "963:41:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPair_$62123",
                      "typeString": "contract LBPair"
                    }
                  },
                  "id": 90006,
                  "nodeType": "ExpressionStatement",
                  "src": "963:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90008,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1028:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90009,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1033:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90010,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1038:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 90011,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "1051:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 90012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1059:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 90013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1065:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3530",
                        "id": 90014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1071:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      {
                        "hexValue": "3530",
                        "id": 90015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1075:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 90007,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "1015:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 90016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90017,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:63:130"
                },
                {
                  "expression": {
                    "id": 90023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90018,
                      "name": "hooks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89988,
                      "src": "1089:5:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                        "typeString": "contract MockLBHooks"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 90021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1097:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockLBHooks_$93128_$",
                          "typeString": "function () returns (contract MockLBHooks)"
                        },
                        "typeName": {
                          "id": 90020,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 90019,
                            "name": "MockLBHooks",
                            "nameLocations": [
                              "1101:11:130"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 93128,
                            "src": "1101:11:130"
                          },
                          "referencedDeclaration": 93128,
                          "src": "1101:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      },
                      "id": 90022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1097:17:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                        "typeString": "contract MockLBHooks"
                      }
                    },
                    "src": "1089:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                      "typeString": "contract MockLBHooks"
                    }
                  },
                  "id": 90024,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:25:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90030,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "1146:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1138:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90028,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1138:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1138:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90025,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "1124:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1130:7:130",
                      "memberName": "setPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123701,
                      "src": "1124:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:35:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90033,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:35:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 90037,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105103,
                            "src": "1188:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          },
                          "id": 90038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1196:21:130",
                          "memberName": "LB_HOOKS_MANAGER_ROLE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57639,
                          "src": "1188:29:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 90039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:31:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 90042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1229:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                              "typeString": "contract LBPairHooksTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                              "typeString": "contract LBPairHooksTest"
                            }
                          ],
                          "id": 90041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1221:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1221:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1221:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 90034,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "1170:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 90036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1178:9:130",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39020,
                      "src": "1170:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 90044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:65:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90045,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:65:130"
                },
                {
                  "assignments": [
                    90050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90050,
                      "mutability": "mutable",
                      "name": "parameters",
                      "nameLocation": "1270:10:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90091,
                      "src": "1246:34:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                        "typeString": "struct Hooks.Parameters"
                      },
                      "typeName": {
                        "id": 90049,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90048,
                          "name": "Hooks.Parameters",
                          "nameLocations": [
                            "1246:5:130",
                            "1252:10:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72771,
                          "src": "1246:16:130"
                        },
                        "referencedDeclaration": 72771,
                        "src": "1246:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Parameters_$72771_storage_ptr",
                          "typeString": "struct Hooks.Parameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90068,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90055,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89988,
                            "src": "1329:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 90054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1321:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90053,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1321:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1321:14:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1361:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1425:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1489:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1518:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1577:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 90051,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73505,
                        "src": "1283:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$73505_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 90052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1289:10:130",
                      "memberName": "Parameters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72771,
                      "src": "1283:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Parameters_$72771_storage_ptr_$",
                        "typeString": "type(struct Hooks.Parameters storage pointer)"
                      }
                    },
                    "id": 90067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1314:5:130",
                      "1349:10:130",
                      "1379:9:130",
                      "1408:15:130",
                      "1443:14:130",
                      "1477:10:130",
                      "1507:9:130",
                      "1536:10:130",
                      "1566:9:130",
                      "1595:23:130",
                      "1638:22:130"
                    ],
                    "names": [
                      "hooks",
                      "beforeSwap",
                      "afterSwap",
                      "beforeFlashLoan",
                      "afterFlashLoan",
                      "beforeMint",
                      "afterMint",
                      "beforeBurn",
                      "afterBurn",
                      "beforeBatchTransferFrom",
                      "afterBatchTransferFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1283:394:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                      "typeString": "struct Hooks.Parameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1246:431:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90072,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "1723:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 90073,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "1732:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 90074,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105024,
                        "src": "1738:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 90077,
                            "name": "parameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90050,
                            "src": "1769:10:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                              "typeString": "struct Hooks.Parameters memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                              "typeString": "struct Hooks.Parameters memory"
                            }
                          ],
                          "expression": {
                            "id": 90075,
                            "name": "Hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73505,
                            "src": "1756:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Hooks_$73505_$",
                              "typeString": "type(library Hooks)"
                            }
                          },
                          "id": 90076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1762:6:130",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72868,
                          "src": "1756:12:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Parameters_$72771_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct Hooks.Parameters memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1756:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 90081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1792:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 90080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1782:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 90079,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1786:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 90082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 90069,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "1688:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 90071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1696:26:130",
                      "memberName": "setLBHooksParametersOnPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58858,
                      "src": "1688:34:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint16_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint16,bytes32,bytes memory) external"
                      }
                    },
                    "id": 90083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:107:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90084,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:107:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 90088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1839:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 90085,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1806:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1818:20:130",
                      "memberName": "increaseOracleLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61339,
                      "src": "1806:32:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16) external"
                      }
                    },
                    "id": 90089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:35:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90090,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:35:130"
                }
              ]
            },
            "baseFunctions": [
              105749
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "905:5:130",
            "overrides": {
              "id": 89993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "920:8:130"
            },
            "parameters": {
              "id": 89992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:130"
            },
            "returnParameters": {
              "id": 89994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90182,
            "nodeType": "FunctionDefinition",
            "src": "1854:1121:130",
            "nodes": [],
            "body": {
              "id": 90181,
              "nodeType": "Block",
              "src": "1903:1072:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90096,
                      "mutability": "mutable",
                      "name": "parameters",
                      "nameLocation": "1921:10:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90181,
                      "src": "1913:18:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90095,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1913:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90100,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90097,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1934:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1946:20:130",
                      "memberName": "getLBHooksParameters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59731,
                      "src": "1934:32:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 90099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1934:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1913:55:130"
                },
                {
                  "assignments": [
                    90105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90105,
                      "mutability": "mutable",
                      "name": "hooksParameters",
                      "nameLocation": "2003:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90181,
                      "src": "1979:39:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                        "typeString": "struct Hooks.Parameters"
                      },
                      "typeName": {
                        "id": 90104,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90103,
                          "name": "Hooks.Parameters",
                          "nameLocations": [
                            "1979:5:130",
                            "1985:10:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72771,
                          "src": "1979:16:130"
                        },
                        "referencedDeclaration": 72771,
                        "src": "1979:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Parameters_$72771_storage_ptr",
                          "typeString": "struct Hooks.Parameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90110,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90108,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90096,
                        "src": "2034:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 90106,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73505,
                        "src": "2021:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$73505_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 90107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2027:6:130",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72996,
                      "src": "2021:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Parameters_$72771_memory_ptr_$",
                        "typeString": "function (bytes32) pure returns (struct Hooks.Parameters memory)"
                      }
                    },
                    "id": 90109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:24:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                      "typeString": "struct Hooks.Parameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1979:66:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90112,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2065:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90113,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2081:5:130",
                        "memberName": "hooks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72750,
                        "src": "2065:21:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 90116,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89988,
                            "src": "2096:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 90115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2088:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2088:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2088:14:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a31",
                        "id": 90118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2104:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc55b4b023e5fb67be80e8800fe5ef5a14e5e1e5a8f8aa3c5522117633ce4d87",
                          "typeString": "literal_string \"test_GetLBHooksParameters::1\""
                        },
                        "value": "test_GetLBHooksParameters::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc55b4b023e5fb67be80e8800fe5ef5a14e5e1e5a8f8aa3c5522117633ce4d87",
                          "typeString": "literal_string \"test_GetLBHooksParameters::1\""
                        }
                      ],
                      "id": 90111,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "2056:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 90119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:79:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90120,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:79:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90122,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2156:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2172:10:130",
                        "memberName": "beforeSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72752,
                        "src": "2156:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a32",
                        "id": 90124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d184504260b8b56426904259d9fbcdb412f25e7a3d0da32373df1d8bcdf8e1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::2\""
                        },
                        "value": "test_GetLBHooksParameters::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d184504260b8b56426904259d9fbcdb412f25e7a3d0da32373df1d8bcdf8e1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::2\""
                        }
                      ],
                      "id": 90121,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2145:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2145:70:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90126,
                  "nodeType": "ExpressionStatement",
                  "src": "2145:70:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90128,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2236:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2252:9:130",
                        "memberName": "afterSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72754,
                        "src": "2236:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a33",
                        "id": 90130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2263:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c2ed9f7f2dbba0235cc63a0f44024a9d270e83e50333ab715f7263acecf4449",
                          "typeString": "literal_string \"test_GetLBHooksParameters::3\""
                        },
                        "value": "test_GetLBHooksParameters::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c2ed9f7f2dbba0235cc63a0f44024a9d270e83e50333ab715f7263acecf4449",
                          "typeString": "literal_string \"test_GetLBHooksParameters::3\""
                        }
                      ],
                      "id": 90127,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2225:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:69:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90132,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:69:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90134,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2315:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2331:15:130",
                        "memberName": "beforeFlashLoan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72756,
                        "src": "2315:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a34",
                        "id": 90136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2348:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefe02058398d2e6ad04aad75fa2f4b827d1b243743e5f1d34060d43380d8f9b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::4\""
                        },
                        "value": "test_GetLBHooksParameters::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eefe02058398d2e6ad04aad75fa2f4b827d1b243743e5f1d34060d43380d8f9b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::4\""
                        }
                      ],
                      "id": 90133,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2304:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:75:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90138,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:75:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90140,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2400:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90141,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2416:14:130",
                        "memberName": "afterFlashLoan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72758,
                        "src": "2400:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a35",
                        "id": 90142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2432:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f3ed4cb392cad2b2f98bafe4c39b3af5045cb9b57765b064b2ff44608bd05a",
                          "typeString": "literal_string \"test_GetLBHooksParameters::5\""
                        },
                        "value": "test_GetLBHooksParameters::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f3ed4cb392cad2b2f98bafe4c39b3af5045cb9b57765b064b2ff44608bd05a",
                          "typeString": "literal_string \"test_GetLBHooksParameters::5\""
                        }
                      ],
                      "id": 90139,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2389:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:74:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90144,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:74:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90146,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2484:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90147,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2500:10:130",
                        "memberName": "beforeMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72760,
                        "src": "2484:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a36",
                        "id": 90148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afeff83e7018ed49b308a4d6a9ed9499c4602cb161cab0c870b4dfe206444ca7",
                          "typeString": "literal_string \"test_GetLBHooksParameters::6\""
                        },
                        "value": "test_GetLBHooksParameters::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afeff83e7018ed49b308a4d6a9ed9499c4602cb161cab0c870b4dfe206444ca7",
                          "typeString": "literal_string \"test_GetLBHooksParameters::6\""
                        }
                      ],
                      "id": 90145,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2473:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:70:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90150,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:70:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90152,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2564:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2580:9:130",
                        "memberName": "afterMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72762,
                        "src": "2564:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a37",
                        "id": 90154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2591:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a38a2a29361913f4262fce346519808c8661f22d0c5afaad4d8ca8bdeb4bfde9",
                          "typeString": "literal_string \"test_GetLBHooksParameters::7\""
                        },
                        "value": "test_GetLBHooksParameters::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a38a2a29361913f4262fce346519808c8661f22d0c5afaad4d8ca8bdeb4bfde9",
                          "typeString": "literal_string \"test_GetLBHooksParameters::7\""
                        }
                      ],
                      "id": 90151,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2553:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:69:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90156,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:69:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90158,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2643:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2659:10:130",
                        "memberName": "beforeBurn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72764,
                        "src": "2643:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a38",
                        "id": 90160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68617b5893d73284e9e794f3c2c53b32bc5aa1dcba4341f15b41db5c8d4502d1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::8\""
                        },
                        "value": "test_GetLBHooksParameters::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68617b5893d73284e9e794f3c2c53b32bc5aa1dcba4341f15b41db5c8d4502d1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::8\""
                        }
                      ],
                      "id": 90157,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2632:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:70:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90162,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:70:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90164,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2723:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2739:9:130",
                        "memberName": "afterBurn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72766,
                        "src": "2723:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a39",
                        "id": 90166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2750:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20d066172f80582f69c0fd5d56d5823b628862e9e30e526ef474dae874d8547c",
                          "typeString": "literal_string \"test_GetLBHooksParameters::9\""
                        },
                        "value": "test_GetLBHooksParameters::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20d066172f80582f69c0fd5d56d5823b628862e9e30e526ef474dae874d8547c",
                          "typeString": "literal_string \"test_GetLBHooksParameters::9\""
                        }
                      ],
                      "id": 90163,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2712:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:69:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90168,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:69:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90170,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2802:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2818:23:130",
                        "memberName": "beforeBatchTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72768,
                        "src": "2802:39:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a3130",
                        "id": 90172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2843:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e196990d7265e470560c03370ab6f6d4049e82b55c1a8ad455618bf9c002224e",
                          "typeString": "literal_string \"test_GetLBHooksParameters::10\""
                        },
                        "value": "test_GetLBHooksParameters::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e196990d7265e470560c03370ab6f6d4049e82b55c1a8ad455618bf9c002224e",
                          "typeString": "literal_string \"test_GetLBHooksParameters::10\""
                        }
                      ],
                      "id": 90169,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2791:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2791:84:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90174,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:84:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 90176,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90105,
                          "src": "2896:15:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72771_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 90177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2912:22:130",
                        "memberName": "afterBatchTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72770,
                        "src": "2896:38:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a3131",
                        "id": 90178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b3a3b2a31992b2b52a661b1e32bb5e26333c68b54f05b96fdfaee9290b774b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::11\""
                        },
                        "value": "test_GetLBHooksParameters::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b3a3b2a31992b2b52a661b1e32bb5e26333c68b54f05b96fdfaee9290b774b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::11\""
                        }
                      ],
                      "id": 90175,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2885:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:83:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90180,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:83:130"
                }
              ]
            },
            "functionSelector": "8e78d4e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_GetLBHooksParameters",
            "nameLocation": "1863:25:130",
            "parameters": {
              "id": 90093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:2:130"
            },
            "returnParameters": {
              "id": 90094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1903:0:130"
            },
            "scope": 92474,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90351,
            "nodeType": "FunctionDefinition",
            "src": "2981:1642:130",
            "nodes": [],
            "body": {
              "id": 90350,
              "nodeType": "Block",
              "src": "3029:1594:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90186,
                    90188,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90186,
                      "mutability": "mutable",
                      "name": "amountLeft",
                      "nameLocation": "3048:10:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "3040:18:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 90185,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3040:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 90188,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3068:9:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "3060:17:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 90187,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 90194,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90191,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "3105:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 90192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3113:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 90189,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3082:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3094:10:130",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "3082:22:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 90193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:36:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3039:79:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 90200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 90198,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90188,
                          "src": "3139:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 90199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3151:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3139:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 90195,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3129:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3132:6:130",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "3129:9:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 90201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3129:24:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90202,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:24:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90204,
                        "name": "amountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90186,
                        "src": "3173:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 90205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a31",
                        "id": 90206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3188:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6543dd5325d0b8d02645d92e7f9ae9d7476c328dac1c3d6c3abf7f1e0b2dd6e4",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::1\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6543dd5325d0b8d02645d92e7f9ae9d7476c328dac1c3d6c3abf7f1e0b2dd6e4",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::1\""
                        }
                      ],
                      "id": 90203,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3164:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:59:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90208,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:59:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90212,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "3247:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 90211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3239:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3239:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3239:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90214,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3257:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90215,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "3264:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90209,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "3234:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:37:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90217,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:37:130"
                },
                {
                  "assignments": [
                    90220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90220,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "3295:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "3282:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90219,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90218,
                          "name": "State",
                          "nameLocations": [
                            "3282:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "3282:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "3282:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90224,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90221,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "3317:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3323:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "3317:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3282:51:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90228,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3358:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90225,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3344:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3347:10:130",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15770,
                      "src": "3344:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3344:20:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90230,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:20:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90236,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "3399:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3391:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3391:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3391:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90238,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "3413:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90231,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "3374:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 90233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3382:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "3374:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3374:46:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90240,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:46:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 90244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3447:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 90245,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3453:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90241,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3430:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3442:4:130",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "3430:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 90246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:29:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 90247,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:29:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3469:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3472:9:130",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15782,
                      "src": "3469:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 90251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:14:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90252,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:14:130"
                },
                {
                  "assignments": [
                    90255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90255,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "3507:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "3494:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90253,
                          "name": "State",
                          "nameLocations": [
                            "3494:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "3494:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "3494:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90259,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90256,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "3528:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3534:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "3528:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3494:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90263,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "3582:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 90261,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "3564:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 90262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3572:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "3564:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 90264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3564:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 90265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3590:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a32",
                        "id": 90266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_846c27ff1e4d595b3c68f72c25c7e18b0f9101e9315ce20a685eefa46f415a7f",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::2\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_846c27ff1e4d595b3c68f72c25c7e18b0f9101e9315ce20a685eefa46f415a7f",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::2\""
                        }
                      ],
                      "id": 90260,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3555:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:73:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90268,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:73:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90272,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "3662:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 90270,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "3647:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 90271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3652:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "3647:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 90273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3647:21:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 90274,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90188,
                        "src": "3670:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a33",
                        "id": 90275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3681:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8da8be1a6ad7168cc0d3e0f325133e07693cfa8f800f32af8db4fd10586729ba",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::3\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8da8be1a6ad7168cc0d3e0f325133e07693cfa8f800f32af8db4fd10586729ba",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::3\""
                        }
                      ],
                      "id": 90269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3638:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3638:78:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90277,
                  "nodeType": "ExpressionStatement",
                  "src": "3638:78:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90280,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "3759:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3765:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "3759:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3759:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90279,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3749:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3749:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90287,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "3863:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3872:10:130",
                                  "memberName": "beforeSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68045,
                                  "src": "3863:19:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3883:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "3863:28:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90290,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "3893:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90291,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "3900:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 90292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3907:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90295,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "3943:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90293,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "3913:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3931:11:130",
                                  "memberName": "encodeFirst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76207,
                                  "src": "3913:29:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3913:37:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90285,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3819:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3823:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "3819:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3819:149:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90284,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3792:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:190:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a34",
                        "id": 90299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3996:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dd9ae348ccdb3293bc966baee75c2f2d7d9c958150407612c34498eb6d002e6",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::4\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2dd9ae348ccdb3293bc966baee75c2f2d7d9c958150407612c34498eb6d002e6",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::4\""
                        }
                      ],
                      "id": 90278,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "3727:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:313:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90301,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:313:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90304,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "4083:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4089:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "4083:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4083:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90303,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4073:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90311,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "4186:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4195:9:130",
                                  "memberName": "afterSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68058,
                                  "src": "4186:18:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4205:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4186:27:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90314,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "4215:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90315,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "4222:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 90316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4229:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90319,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90188,
                                    "src": "4266:9:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90317,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "4235:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4253:12:130",
                                  "memberName": "encodeSecond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76217,
                                  "src": "4235:30:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4235:41:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90309,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4142:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4146:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "4142:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4142:152:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90308,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4115:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4115:193:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a35",
                        "id": 90323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4322:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90cd05f08cf63af14b8263a3c20934707fd9bfe3a1837991a6e1d5c096d5d2c8",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::5\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90cd05f08cf63af14b8263a3c20934707fd9bfe3a1837991a6e1d5c096d5d2c8",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::5\""
                        }
                      ],
                      "id": 90302,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "4051:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4051:315:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90325,
                  "nodeType": "ExpressionStatement",
                  "src": "4051:315:130"
                },
                {
                  "assignments": [
                    90328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90328,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "4390:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "4377:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90326,
                          "name": "State",
                          "nameLocations": [
                            "4377:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "4377:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "4377:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90332,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90329,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "4409:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4415:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "4409:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4377:54:130"
                },
                {
                  "assignments": [
                    90335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90335,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "4454:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90350,
                      "src": "4441:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90334,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90333,
                          "name": "State",
                          "nameLocations": [
                            "4441:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "4441:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "4441:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90339,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90336,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "4472:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4478:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "4472:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90341,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90328,
                        "src": "4518:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90342,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90220,
                        "src": "4536:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90340,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "4504:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90344,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90346,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90335,
                        "src": "4580:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90347,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90255,
                        "src": "4597:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90345,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "4566:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90349,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:50:130"
                }
              ]
            },
            "functionSelector": "3f71aea7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterSwapHooksXtoY",
            "nameLocation": "2990:29:130",
            "parameters": {
              "id": 90183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3019:2:130"
            },
            "returnParameters": {
              "id": 90184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3029:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90520,
            "nodeType": "FunctionDefinition",
            "src": "4629:1640:130",
            "nodes": [],
            "body": {
              "id": 90519,
              "nodeType": "Block",
              "src": "4677:1592:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90355,
                    90357,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90355,
                      "mutability": "mutable",
                      "name": "amountLeft",
                      "nameLocation": "4696:10:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "4688:18:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 90354,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4688:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 90357,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4716:9:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "4708:17:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 90356,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4708:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 90363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "4753:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 90361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4761:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 90358,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "4730:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4742:10:130",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "4730:22:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 90362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:37:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4687:80:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 90369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 90367,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90357,
                          "src": "4788:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 90368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4800:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4788:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 90364,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4778:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4781:6:130",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "4778:9:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 90370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:24:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90371,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:24:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90373,
                        "name": "amountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90355,
                        "src": "4822:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 90374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4834:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a31",
                        "id": 90375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4837:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca72f426095c8f63c96c7ff3a4921e9012a44873778f0cd3d19e7e6e23dd227c",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::1\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca72f426095c8f63c96c7ff3a4921e9012a44873778f0cd3d19e7e6e23dd227c",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::1\""
                        }
                      ],
                      "id": 90372,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4813:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:59:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90377,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:59:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90381,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "4896:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 90380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4888:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90379,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4888:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4888:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90383,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "4903:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90384,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "4910:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90378,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "4883:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4883:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90386,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:34:130"
                },
                {
                  "assignments": [
                    90389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90389,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "4941:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "4928:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90388,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90387,
                          "name": "State",
                          "nameLocations": [
                            "4928:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "4928:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "4928:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90393,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90390,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "4963:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4969:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "4963:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4928:51:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90397,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "5004:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90394,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4990:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4993:10:130",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15770,
                      "src": "4990:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:20:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90399,
                  "nodeType": "ExpressionStatement",
                  "src": "4990:20:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90405,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "5042:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5034:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5034:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5034:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90407,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "5056:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90400,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "5020:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 90402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5025:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "5020:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5020:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90409,
                  "nodeType": "ExpressionStatement",
                  "src": "5020:43:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 90413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 90414,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "5097:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90410,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "5073:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5085:4:130",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "5073:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 90415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:30:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 90416,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:30:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90417,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5113:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5116:9:130",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15782,
                      "src": "5113:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 90420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:14:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90421,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:14:130"
                },
                {
                  "assignments": [
                    90424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90424,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "5151:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "5138:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90423,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90422,
                          "name": "State",
                          "nameLocations": [
                            "5138:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "5138:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "5138:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90428,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90425,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "5172:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5178:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "5172:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5172:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5138:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90432,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "5223:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 90430,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "5208:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 90431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5213:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "5208:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 90433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5208:21:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 90434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5231:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a32",
                        "id": 90435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5234:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3aea0e8d83fc227f7ff3554739d32656ed7703cc632608b764365d0d24c943a",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::2\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3aea0e8d83fc227f7ff3554739d32656ed7703cc632608b764365d0d24c943a",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::2\""
                        }
                      ],
                      "id": 90429,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5199:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:70:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90437,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:70:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90441,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "5306:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 90439,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "5288:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 90440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5296:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "5288:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 90442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5288:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 90443,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90357,
                        "src": "5314:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a33",
                        "id": 90444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a5b1e82816fe78f4e2401651eabd850ac0557df065fbe5fa0742a1269a2b144",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::3\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a5b1e82816fe78f4e2401651eabd850ac0557df065fbe5fa0742a1269a2b144",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::3\""
                        }
                      ],
                      "id": 90438,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5279:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 90445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90446,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90449,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "5403:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5409:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "5403:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5403:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90448,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5393:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5393:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90456,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "5507:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5516:10:130",
                                  "memberName": "beforeSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68045,
                                  "src": "5507:19:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5527:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5507:28:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90459,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "5537:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90460,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "5544:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 90461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5551:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90464,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "5589:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90462,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "5558:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5576:12:130",
                                  "memberName": "encodeSecond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76217,
                                  "src": "5558:30:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5558:38:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90454,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5463:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5467:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "5463:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5463:151:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90453,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5436:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5436:192:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a34",
                        "id": 90468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27d3eacfa9662e8022d66fbd56925d726a2e8240aaa3ba210dcad44762eab64d",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::4\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27d3eacfa9662e8022d66fbd56925d726a2e8240aaa3ba210dcad44762eab64d",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::4\""
                        }
                      ],
                      "id": 90447,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "5371:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5371:315:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90470,
                  "nodeType": "ExpressionStatement",
                  "src": "5371:315:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90473,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "5729:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5735:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "5729:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5729:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90472,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5719:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5719:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90480,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "5832:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5841:9:130",
                                  "memberName": "afterSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68058,
                                  "src": "5832:18:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5851:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5832:27:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90483,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "5861:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90484,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "5868:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 90485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5875:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90488,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90357,
                                    "src": "5912:9:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90486,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "5882:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5900:11:130",
                                  "memberName": "encodeFirst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76207,
                                  "src": "5882:29:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5882:40:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90478,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5788:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5792:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "5788:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5788:152:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90477,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5761:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5761:193:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a35",
                        "id": 90492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5968:34:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27dcf73e1f4500c7acb401d36f3d457d73fcdfbeb9857c548d140c0b5cdb74c5",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::5\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27dcf73e1f4500c7acb401d36f3d457d73fcdfbeb9857c548d140c0b5cdb74c5",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::5\""
                        }
                      ],
                      "id": 90471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "5697:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5697:315:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90494,
                  "nodeType": "ExpressionStatement",
                  "src": "5697:315:130"
                },
                {
                  "assignments": [
                    90497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90497,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "6036:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "6023:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90496,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90495,
                          "name": "State",
                          "nameLocations": [
                            "6023:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "6023:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "6023:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90501,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90498,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "6055:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6061:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "6055:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6055:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6023:54:130"
                },
                {
                  "assignments": [
                    90504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90504,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "6100:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90519,
                      "src": "6087:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90503,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90502,
                          "name": "State",
                          "nameLocations": [
                            "6087:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "6087:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "6087:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90508,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90505,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "6118:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6124:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "6118:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6118:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6087:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90510,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90497,
                        "src": "6164:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90511,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90389,
                        "src": "6182:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90509,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "6150:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6150:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90513,
                  "nodeType": "ExpressionStatement",
                  "src": "6150:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90515,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90504,
                        "src": "6226:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90516,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90424,
                        "src": "6243:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90514,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "6212:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6212:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90518,
                  "nodeType": "ExpressionStatement",
                  "src": "6212:50:130"
                }
              ]
            },
            "functionSelector": "45bf2c09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterSwapHooksYtoX",
            "nameLocation": "4638:29:130",
            "parameters": {
              "id": 90352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:2:130"
            },
            "returnParameters": {
              "id": 90353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4677:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90664,
            "nodeType": "FunctionDefinition",
            "src": "6275:1429:130",
            "nodes": [],
            "body": {
              "id": 90663,
              "nodeType": "Block",
              "src": "6324:1380:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90525,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "6347:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "6334:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90524,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90523,
                          "name": "State",
                          "nameLocations": [
                            "6334:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "6334:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "6334:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90529,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90526,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "6369:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6375:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "6369:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6334:51:130"
                },
                {
                  "assignments": [
                    90531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90531,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "6404:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "6396:15:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90530,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6396:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90537,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90534,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "6439:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 90535,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "6447:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90532,
                        "name": "PackedUint128Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76517,
                        "src": "6414:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                          "typeString": "type(library PackedUint128Math)"
                        }
                      },
                      "id": 90533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6432:6:130",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76197,
                      "src": "6414:24:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                        "typeString": "function (uint128,uint128) pure returns (bytes32)"
                      }
                    },
                    "id": 90536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:40:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6396:58:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90541,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "6474:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90538,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6465:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6468:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "6465:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6465:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90543,
                  "nodeType": "ExpressionStatement",
                  "src": "6465:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 90550,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6541:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 90549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6533:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 90548,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6533:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 90551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6533:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90547,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68006,
                          "src": "6512:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$68006_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 90552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:35:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "id": 90553,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90531,
                        "src": "6549:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 90556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6568:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 90555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6558:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 90554,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6562:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 90557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6558:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 90544,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "6490:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6502:9:130",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "6490:21:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 90558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6490:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90559,
                  "nodeType": "ExpressionStatement",
                  "src": "6490:81:130"
                },
                {
                  "assignments": [
                    90562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90562,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "6595:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "6582:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90561,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90560,
                          "name": "State",
                          "nameLocations": [
                            "6582:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "6582:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "6582:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90566,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90563,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "6616:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6622:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "6616:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6616:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6582:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90569,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "6675:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6681:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "6675:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6675:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90568,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6665:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6665:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90576,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "6741:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6750:15:130",
                                  "memberName": "beforeFlashLoan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68069,
                                  "src": "6741:24:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeFlashLoan(address,address,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6766:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6741:33:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90579,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "6776:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90582,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6791:4:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  ],
                                  "id": 90581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6783:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90580,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6783:7:130",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 90583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6783:13:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 90584,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90531,
                                "src": "6798:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90574,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6718:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6722:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "6718:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6718:88:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90573,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6708:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6708:99:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a31",
                        "id": 90587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6821:35:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7d5638f5e8305530b8462ce2167303c0e93d80e5028c41fdf7106d36af042bd",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::1\""
                        },
                        "value": "test_BeforeAfterFlashLoanHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7d5638f5e8305530b8462ce2167303c0e93d80e5028c41fdf7106d36af042bd",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::1\""
                        }
                      ],
                      "id": 90567,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "6643:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6643:223:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90589,
                  "nodeType": "ExpressionStatement",
                  "src": "6643:223:130"
                },
                {
                  "assignments": [
                    90591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90591,
                      "mutability": "mutable",
                      "name": "flashloanFee",
                      "nameLocation": "6885:12:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "6877:20:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 90590,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6877:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90602,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 90598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90594,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105103,
                                "src": "6908:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBFactory_$59243",
                                  "typeString": "contract LBFactory"
                                }
                              },
                              "id": 90595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6916:15:130",
                              "memberName": "getFlashLoanFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57786,
                              "src": "6908:23:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 90596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6908:25:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 90597,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "6936:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "6908:34:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 90599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6945:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "6908:41:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6900:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 90592,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6900:7:130",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 90601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6877:73:130"
                },
                {
                  "assignments": [
                    90604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90604,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "6969:4:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "6961:12:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90603,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6961:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90610,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90607,
                        "name": "flashloanFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90591,
                        "src": "7001:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 90608,
                        "name": "flashloanFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90591,
                        "src": "7015:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90605,
                        "name": "PackedUint128Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76517,
                        "src": "6976:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                          "typeString": "type(library PackedUint128Math)"
                        }
                      },
                      "id": 90606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6994:6:130",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76197,
                      "src": "6976:24:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                        "typeString": "function (uint128,uint128) pure returns (bytes32)"
                      }
                    },
                    "id": 90609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6976:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6961:67:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90613,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "7071:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7077:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "7071:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7071:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90612,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7061:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7061:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90620,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "7174:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7183:14:130",
                                  "memberName": "afterFlashLoan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68082,
                                  "src": "7174:23:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterFlashLoan(address,address,bytes32,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7198:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "7174:32:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90623,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "7228:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90626,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7263:4:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  ],
                                  "id": 90625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7255:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90624,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7255:7:130",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 90627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7255:13:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 90628,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90604,
                                "src": "7290:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90631,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "7341:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 90632,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "7349:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90629,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "7316:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7334:6:130",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76197,
                                  "src": "7316:24:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7316:40:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90618,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7130:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7134:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "7130:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7130:244:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90617,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7103:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7103:285:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a32",
                        "id": 90636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7402:35:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e80f7f08a78b39beadadad7814914ea0bfaae0781431461af9ef350eabd70c",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::2\""
                        },
                        "value": "test_BeforeAfterFlashLoanHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8e80f7f08a78b39beadadad7814914ea0bfaae0781431461af9ef350eabd70c",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::2\""
                        }
                      ],
                      "id": 90611,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "7039:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7039:408:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90638,
                  "nodeType": "ExpressionStatement",
                  "src": "7039:408:130"
                },
                {
                  "assignments": [
                    90641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90641,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "7471:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "7458:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90640,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90639,
                          "name": "State",
                          "nameLocations": [
                            "7458:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "7458:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "7458:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90645,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90642,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "7490:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7496:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "7490:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7490:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7458:54:130"
                },
                {
                  "assignments": [
                    90648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90648,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "7535:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90663,
                      "src": "7522:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90647,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90646,
                          "name": "State",
                          "nameLocations": [
                            "7522:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "7522:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "7522:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90652,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90649,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "7553:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7559:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "7553:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7553:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7522:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90654,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90641,
                        "src": "7599:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90655,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90525,
                        "src": "7617:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90653,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "7585:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90657,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90659,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90648,
                        "src": "7661:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90660,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90562,
                        "src": "7678:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90658,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "7647:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7647:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90662,
                  "nodeType": "ExpressionStatement",
                  "src": "7647:50:130"
                }
              ]
            },
            "functionSelector": "93a5870c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterFlashLoanHooks",
            "nameLocation": "6284:30:130",
            "parameters": {
              "id": 90521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6314:2:130"
            },
            "returnParameters": {
              "id": 90522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6324:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 90836,
            "nodeType": "FunctionDefinition",
            "src": "7710:1738:130",
            "nodes": [],
            "body": {
              "id": 90835,
              "nodeType": "Block",
              "src": "7754:1694:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90669,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "7777:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90835,
                      "src": "7764:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90668,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90667,
                          "name": "State",
                          "nameLocations": [
                            "7764:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "7764:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "7764:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90673,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90670,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "7799:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7805:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "7799:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7799:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7764:51:130"
                },
                {
                  "assignments": [
                    90678
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90678,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "7843:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90835,
                      "src": "7826:33:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90676,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7826:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 90677,
                        "nodeType": "ArrayTypeName",
                        "src": "7826:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90684,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 90682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7876:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 90681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7862:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90679,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7866:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 90680,
                        "nodeType": "ArrayTypeName",
                        "src": "7866:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 90683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7862:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7826:52:130"
                },
                {
                  "expression": {
                    "id": 90695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90685,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90678,
                        "src": "7888:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 90687,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 90686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7905:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7888:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 90690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7947:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 90691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7953:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "expression": {
                            "id": 90692,
                            "name": "expectedBeforeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90669,
                            "src": "7959:19:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 90693,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7979:8:130",
                          "memberName": "activeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89969,
                          "src": "7959:28:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 90688,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76163,
                          "src": "7910:23:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$76163_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 90689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7934:12:130",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76066,
                        "src": "7910:36:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 90694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7910:78:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7888:100:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 90696,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:100:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90700,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "8012:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 90699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8004:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8004:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8004:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90702,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8022:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90703,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "8029:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90697,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "7999:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7999:37:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90705,
                  "nodeType": "ExpressionStatement",
                  "src": "7999:37:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90709,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "8059:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 90708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8051:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8051:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8051:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90711,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8066:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90712,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "8073:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90706,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "8046:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8046:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90714,
                  "nodeType": "ExpressionStatement",
                  "src": "8046:34:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90718,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8105:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90715,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8091:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8094:10:130",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15770,
                      "src": "8091:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:20:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90720,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:20:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90726,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "8146:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8138:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8138:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8138:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90728,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "8160:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90721,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "8121:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 90723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8129:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "8121:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8121:46:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90730,
                  "nodeType": "ExpressionStatement",
                  "src": "8121:46:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90736,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "8199:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8191:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8191:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8191:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90738,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "8213:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90731,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "8177:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 90733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8182:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "8177:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8177:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90740,
                  "nodeType": "ExpressionStatement",
                  "src": "8177:43:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90744,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8247:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90745,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90678,
                        "src": "8254:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 90746,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8272:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90741,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8230:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8242:4:130",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60973,
                      "src": "8230:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 90747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8230:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 90748,
                  "nodeType": "ExpressionStatement",
                  "src": "8230:48:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90749,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8288:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8291:9:130",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15782,
                      "src": "8288:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 90752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:14:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90753,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:14:130"
                },
                {
                  "assignments": [
                    90756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90756,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "8326:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90835,
                      "src": "8313:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90755,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90754,
                          "name": "State",
                          "nameLocations": [
                            "8313:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "8313:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "8313:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90760,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90757,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "8347:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8353:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "8347:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8347:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8313:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90763,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "8406:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8412:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "8406:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8406:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90762,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8396:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8396:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90770,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "8510:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8519:10:130",
                                  "memberName": "beforeMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68096,
                                  "src": "8510:19:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeMint(address,address,bytes32[] calldata,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8530:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8510:28:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90773,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "8560:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90774,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "8587:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90775,
                                "name": "liquidityConfigs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90678,
                                "src": "8614:16:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90778,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "8677:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 90779,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "8685:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90776,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "8652:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8670:6:130",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76197,
                                  "src": "8652:24:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8652:40:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90768,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8466:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8470:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "8466:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8466:244:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90767,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8439:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8439:285:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724d696e74486f6f6b733a3a31",
                        "id": 90783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8738:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0db1c8b109928dfbe7e9ef89db6635e2bc29c2e2de039db9764f40894a69e43",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::1\""
                        },
                        "value": "test_BeforeAfterMintHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0db1c8b109928dfbe7e9ef89db6635e2bc29c2e2de039db9764f40894a69e43",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::1\""
                        }
                      ],
                      "id": 90761,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "8374:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8374:404:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90785,
                  "nodeType": "ExpressionStatement",
                  "src": "8374:404:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90788,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "8821:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8827:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "8821:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8821:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90787,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8811:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8811:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90795,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "8924:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8933:9:130",
                                  "memberName": "afterMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68110,
                                  "src": "8924:18:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterMint(address,address,bytes32[] calldata,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 90797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8943:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8924:27:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90798,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "8973:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90799,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "9000:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90800,
                                "name": "liquidityConfigs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90678,
                                "src": "9027:16:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 90803,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "9090:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 90804,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89991,
                                    "src": "9098:6:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 90801,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76517,
                                    "src": "9065:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 90802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9083:6:130",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76197,
                                  "src": "9065:24:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 90805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9065:40:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90793,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8880:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8884:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "8880:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8880:243:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90792,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8853:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8853:284:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724d696e74486f6f6b733a3a32",
                        "id": 90808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9151:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ec8a95b59e81203b05e64a63405a9f6105362d7be87d6f898e651f5d4bf12e",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::2\""
                        },
                        "value": "test_BeforeAfterMintHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ec8a95b59e81203b05e64a63405a9f6105362d7be87d6f898e651f5d4bf12e",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::2\""
                        }
                      ],
                      "id": 90786,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "8789:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 90809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8789:402:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90810,
                  "nodeType": "ExpressionStatement",
                  "src": "8789:402:130"
                },
                {
                  "assignments": [
                    90813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90813,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "9215:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90835,
                      "src": "9202:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90811,
                          "name": "State",
                          "nameLocations": [
                            "9202:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "9202:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "9202:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90817,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90814,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "9234:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9240:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "9234:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9202:54:130"
                },
                {
                  "assignments": [
                    90820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90820,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "9279:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 90835,
                      "src": "9266:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90818,
                          "name": "State",
                          "nameLocations": [
                            "9266:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "9266:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "9266:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90824,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90821,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "9297:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9303:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "9297:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9297:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9266:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90826,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90813,
                        "src": "9343:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90827,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90669,
                        "src": "9361:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90825,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "9329:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9329:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90829,
                  "nodeType": "ExpressionStatement",
                  "src": "9329:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90831,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90820,
                        "src": "9405:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 90832,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90756,
                        "src": "9422:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 90830,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "9391:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 90833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9391:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90834,
                  "nodeType": "ExpressionStatement",
                  "src": "9391:50:130"
                }
              ]
            },
            "functionSelector": "b8c238fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterMintHooks",
            "nameLocation": "7719:25:130",
            "parameters": {
              "id": 90665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7744:2:130"
            },
            "returnParameters": {
              "id": 90666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7754:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91050,
            "nodeType": "FunctionDefinition",
            "src": "9454:1643:130",
            "nodes": [],
            "body": {
              "id": 91049,
              "nodeType": "Block",
              "src": "9498:1599:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    90840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90840,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "9515:8:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "9508:15:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 90839,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9508:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90844,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90841,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "9526:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9538:11:130",
                      "memberName": "getActiveId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59596,
                      "src": "9526:23:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                        "typeString": "function () view external returns (uint24)"
                      }
                    },
                    "id": 90843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9526:25:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9508:43:130"
                },
                {
                  "assignments": [
                    90849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90849,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "9579:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "9562:33:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90847,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9562:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 90848,
                        "nodeType": "ArrayTypeName",
                        "src": "9562:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90855,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 90853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9612:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 90852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9598:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90850,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9602:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 90851,
                        "nodeType": "ArrayTypeName",
                        "src": "9602:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 90854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9598:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9562:52:130"
                },
                {
                  "expression": {
                    "id": 90865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90856,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90849,
                        "src": "9624:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 90858,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 90857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9641:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9624:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 90861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9683:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 90862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9689:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "id": 90863,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90840,
                          "src": "9695:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 90859,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76163,
                          "src": "9646:23:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$76163_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 90860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9670:12:130",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76066,
                        "src": "9646:36:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 90864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9646:58:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9624:80:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 90866,
                  "nodeType": "ExpressionStatement",
                  "src": "9624:80:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90870,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "9728:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 90869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9720:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9720:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9720:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90872,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9738:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90873,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "9745:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90867,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "9715:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9715:37:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90875,
                  "nodeType": "ExpressionStatement",
                  "src": "9715:37:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90879,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "9775:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 90878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9767:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90877,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9767:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9767:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90881,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9782:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90882,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "9789:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 90876,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "9762:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 90883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9762:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90884,
                  "nodeType": "ExpressionStatement",
                  "src": "9762:34:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90888,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9821:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90885,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9807:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9810:10:130",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15770,
                      "src": "9807:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 90889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9807:20:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90890,
                  "nodeType": "ExpressionStatement",
                  "src": "9807:20:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90896,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "9862:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9854:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9854:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9854:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90898,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "9876:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90891,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "9837:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 90893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9845:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "9837:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:46:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90900,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:46:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 90906,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "9915:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 90905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9907:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9907:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9907:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 90908,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "9929:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 90901,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "9893:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 90903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9898:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "9893:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 90909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9893:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90910,
                  "nodeType": "ExpressionStatement",
                  "src": "9893:43:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90914,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9963:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90915,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90849,
                        "src": "9970:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 90916,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9988:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 90911,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "9946:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9958:4:130",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60973,
                      "src": "9946:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 90917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9946:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 90918,
                  "nodeType": "ExpressionStatement",
                  "src": "9946:48:130"
                },
                {
                  "assignments": [
                    90921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90921,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "10018:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10005:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90920,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90919,
                          "name": "State",
                          "nameLocations": [
                            "10005:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "10005:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "10005:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90925,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90922,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "10040:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10046:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "10040:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10040:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10005:51:130"
                },
                {
                  "assignments": [
                    90930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90930,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "10084:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10067:20:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90928,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10067:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90929,
                        "nodeType": "ArrayTypeName",
                        "src": "10067:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90936,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 90934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10104:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 90933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10090:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90931,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10094:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90932,
                        "nodeType": "ArrayTypeName",
                        "src": "10094:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 90935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10090:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10067:39:130"
                },
                {
                  "expression": {
                    "id": 90941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90937,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90930,
                        "src": "10116:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 90939,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 90938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10120:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10116:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90940,
                      "name": "activeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90840,
                      "src": "10125:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "10116:17:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90942,
                  "nodeType": "ExpressionStatement",
                  "src": "10116:17:130"
                },
                {
                  "assignments": [
                    90947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90947,
                      "mutability": "mutable",
                      "name": "amountsToBurn",
                      "nameLocation": "10161:13:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10144:30:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10144:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90946,
                        "nodeType": "ArrayTypeName",
                        "src": "10144:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90953,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 90951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10191:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 90950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10177:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10181:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90949,
                        "nodeType": "ArrayTypeName",
                        "src": "10181:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 90952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10177:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10144:49:130"
                },
                {
                  "expression": {
                    "id": 90958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90954,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90947,
                        "src": "10203:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 90956,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 90955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10203:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90957,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89991,
                      "src": "10222:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "10203:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90959,
                  "nodeType": "ExpressionStatement",
                  "src": "10203:25:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90963,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "10256:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90964,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "10263:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 90965,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90930,
                        "src": "10270:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 90966,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90947,
                        "src": "10275:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 90960,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "10239:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 90962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10251:4:130",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61203,
                      "src": "10239:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 90967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10239:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 90968,
                  "nodeType": "ExpressionStatement",
                  "src": "10239:50:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90969,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10299:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 90971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10302:9:130",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15782,
                      "src": "10299:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 90972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10299:14:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90973,
                  "nodeType": "ExpressionStatement",
                  "src": "10299:14:130"
                },
                {
                  "assignments": [
                    90976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90976,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "10337:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10324:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 90975,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90974,
                          "name": "State",
                          "nameLocations": [
                            "10324:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "10324:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "10324:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90980,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 90977,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "10358:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 90978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10364:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "10358:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 90979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10358:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10324:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 90983,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "10417:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 90984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10423:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "10417:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 90985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10417:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90982,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10407:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10407:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 90990,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "10483:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 90991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10492:10:130",
                                  "memberName": "beforeBurn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68127,
                                  "src": "10483:19:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeBurn(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 90992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10503:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "10483:28:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 90993,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10513:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90994,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10520:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90995,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10527:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 90996,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90930,
                                "src": "10534:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 90997,
                                "name": "amountsToBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90947,
                                "src": "10539:13:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 90988,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10460:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 90989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10464:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "10460:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 90998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10460:93:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 90987,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10450:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 90999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10450:104:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724275726e486f6f6b733a3a31",
                        "id": 91000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10568:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464273b8aa9ba87e0ef16287084e41c5229075cb4d21e2ca097b5dd53c8ccbfd",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::1\""
                        },
                        "value": "test_BeforeAfterBurnHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464273b8aa9ba87e0ef16287084e41c5229075cb4d21e2ca097b5dd53c8ccbfd",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::1\""
                        }
                      ],
                      "id": 90981,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "10385:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 91001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10385:223:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91002,
                  "nodeType": "ExpressionStatement",
                  "src": "10385:223:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 91005,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "10651:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 91006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10657:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "10651:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 91007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10651:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91004,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10641:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10641:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 91012,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "10716:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 91013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10725:9:130",
                                  "memberName": "afterBurn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68144,
                                  "src": "10716:18:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterBurn(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 91014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10735:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "10716:27:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 91015,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10745:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91016,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10752:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91017,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "10759:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91018,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90930,
                                "src": "10766:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 91019,
                                "name": "amountsToBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90947,
                                "src": "10771:13:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 91010,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10693:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 91011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10697:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "10693:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 91020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10693:92:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91009,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10683:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10683:103:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724275726e486f6f6b733a3a32",
                        "id": 91022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10800:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd025da3a00b12073ef75f79a44168964ca72097198c872d05dc77b33d81e0d3",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::2\""
                        },
                        "value": "test_BeforeAfterBurnHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd025da3a00b12073ef75f79a44168964ca72097198c872d05dc77b33d81e0d3",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::2\""
                        }
                      ],
                      "id": 91003,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "10619:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 91023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:221:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91024,
                  "nodeType": "ExpressionStatement",
                  "src": "10619:221:130"
                },
                {
                  "assignments": [
                    91027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91027,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "10864:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10851:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91025,
                          "name": "State",
                          "nameLocations": [
                            "10851:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "10851:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "10851:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91031,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91028,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "10883:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10889:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "10883:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10883:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10851:54:130"
                },
                {
                  "assignments": [
                    91034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91034,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "10928:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91049,
                      "src": "10915:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91033,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91032,
                          "name": "State",
                          "nameLocations": [
                            "10915:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "10915:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "10915:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91038,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91035,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "10946:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10952:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "10946:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10946:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10915:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91040,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91027,
                        "src": "10992:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 91041,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90921,
                        "src": "11010:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 91039,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "10978:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 91042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10978:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91043,
                  "nodeType": "ExpressionStatement",
                  "src": "10978:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91045,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91034,
                        "src": "11054:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 91046,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90976,
                        "src": "11071:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 91044,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "11040:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 91047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11040:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91048,
                  "nodeType": "ExpressionStatement",
                  "src": "11040:50:130"
                }
              ]
            },
            "functionSelector": "06fb3530",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterBurnHooks",
            "nameLocation": "9463:25:130",
            "parameters": {
              "id": 90837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:2:130"
            },
            "returnParameters": {
              "id": 90838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9498:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91264,
            "nodeType": "FunctionDefinition",
            "src": "11103:1715:130",
            "nodes": [],
            "body": {
              "id": 91263,
              "nodeType": "Block",
              "src": "11160:1658:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    91054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91054,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "11177:8:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11170:15:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 91053,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "11170:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91058,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91055,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11188:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11200:11:130",
                      "memberName": "getActiveId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59596,
                      "src": "11188:23:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                        "typeString": "function () view external returns (uint24)"
                      }
                    },
                    "id": 91057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11188:25:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11170:43:130"
                },
                {
                  "assignments": [
                    91063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91063,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "11241:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11224:33:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91061,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11224:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 91062,
                        "nodeType": "ArrayTypeName",
                        "src": "11224:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91069,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 91067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11274:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 91066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11260:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91064,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11264:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 91065,
                        "nodeType": "ArrayTypeName",
                        "src": "11264:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 91068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11224:52:130"
                },
                {
                  "expression": {
                    "id": 91079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91070,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91063,
                        "src": "11286:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 91072,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 91071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11303:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11286:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 91075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11345:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 91076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11351:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "id": 91077,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91054,
                          "src": "11357:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 91073,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76163,
                          "src": "11308:23:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$76163_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 91074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11332:12:130",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76066,
                        "src": "11308:36:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 91078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11308:58:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11286:80:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 91080,
                  "nodeType": "ExpressionStatement",
                  "src": "11286:80:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91084,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "11390:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 91083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11382:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11382:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11382:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91086,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11400:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91087,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "11407:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 91081,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "11377:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11377:37:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91089,
                  "nodeType": "ExpressionStatement",
                  "src": "11377:37:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91093,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "11437:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 91092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11429:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91091,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11429:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11429:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91095,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11444:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "11451:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 91090,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "11424:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11424:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91098,
                  "nodeType": "ExpressionStatement",
                  "src": "11424:34:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91102,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11483:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91099,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11469:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11472:10:130",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15770,
                      "src": "11469:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11469:20:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91104,
                  "nodeType": "ExpressionStatement",
                  "src": "11469:20:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91110,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "11524:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11516:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11516:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11516:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91112,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "11538:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 91105,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "11499:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 91107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11507:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "11499:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 91113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11499:46:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91114,
                  "nodeType": "ExpressionStatement",
                  "src": "11499:46:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91120,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "11577:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11569:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11569:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11569:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89991,
                        "src": "11591:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 91115,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "11555:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 91117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11560:8:130",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "11555:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 91123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11555:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91124,
                  "nodeType": "ExpressionStatement",
                  "src": "11555:43:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91128,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11625:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91129,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91063,
                        "src": "11632:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 91130,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11650:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91125,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11608:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11620:4:130",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60973,
                      "src": "11608:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 91131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11608:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 91132,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:48:130"
                },
                {
                  "assignments": [
                    91135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91135,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "11680:19:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11667:32:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91133,
                          "name": "State",
                          "nameLocations": [
                            "11667:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "11667:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "11667:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91139,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91136,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "11702:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11708:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "11702:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11702:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11667:51:130"
                },
                {
                  "assignments": [
                    91144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91144,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "11746:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11729:20:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11729:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91143,
                        "nodeType": "ArrayTypeName",
                        "src": "11729:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91150,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 91148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11766:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 91147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11752:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11756:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91146,
                        "nodeType": "ArrayTypeName",
                        "src": "11756:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 91149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11752:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11729:39:130"
                },
                {
                  "expression": {
                    "id": 91155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91151,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91144,
                        "src": "11778:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 91153,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 91152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11782:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11778:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91154,
                      "name": "activeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91054,
                      "src": "11787:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "11778:17:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91156,
                  "nodeType": "ExpressionStatement",
                  "src": "11778:17:130"
                },
                {
                  "assignments": [
                    91161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91161,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11823:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11806:24:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11806:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91160,
                        "nodeType": "ArrayTypeName",
                        "src": "11806:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91167,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 91165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11847:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 91164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11833:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11837:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91163,
                        "nodeType": "ArrayTypeName",
                        "src": "11837:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 91166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11833:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11806:43:130"
                },
                {
                  "expression": {
                    "id": 91172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91168,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91161,
                        "src": "11859:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 91170,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 91169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11867:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11859:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91171,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89991,
                      "src": "11872:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "11859:19:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91173,
                  "nodeType": "ExpressionStatement",
                  "src": "11859:19:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91177,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11919:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91178,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "11926:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91179,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91144,
                        "src": "11931:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 91180,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91161,
                        "src": "11936:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 91174,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11889:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11901:17:130",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61528,
                      "src": "11889:29:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 91181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11889:55:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91182,
                  "nodeType": "ExpressionStatement",
                  "src": "11889:55:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91183,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11954:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11957:9:130",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15782,
                      "src": "11954:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 91186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11954:14:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91187,
                  "nodeType": "ExpressionStatement",
                  "src": "11954:14:130"
                },
                {
                  "assignments": [
                    91190
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91190,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "11992:18:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "11979:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91189,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91188,
                          "name": "State",
                          "nameLocations": [
                            "11979:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "11979:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "11979:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91194,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91191,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "12013:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12019:8:130",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 93077,
                      "src": "12013:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12013:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11979:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 91197,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "12072:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 91198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12078:10:130",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123687,
                              "src": "12072:16:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 91199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12072:18:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91196,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12062:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12062:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 91204,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "12155:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 91205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12164:23:130",
                                  "memberName": "beforeBatchTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68161,
                                  "src": "12155:32:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeBatchTransferFrom(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 91206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12188:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "12155:41:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 91207,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "12198:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91208,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "12205:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91209,
                                "name": "BOB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105076,
                                "src": "12212:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91210,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91144,
                                "src": "12217:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 91211,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91161,
                                "src": "12222:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 91202,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12132:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 91203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12136:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "12132:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 91212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12132:98:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91201,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12105:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12105:139:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a31",
                        "id": 91214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12258:43:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bba10984d0b8ce672d4d312555d8fa02d821de8c2e095f128a6cd18b075c066",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::1\""
                        },
                        "value": "test_BeforeAfterBatchTransferFromHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bba10984d0b8ce672d4d312555d8fa02d821de8c2e095f128a6cd18b075c066",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::1\""
                        }
                      ],
                      "id": 91195,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "12040:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 91215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12040:271:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91216,
                  "nodeType": "ExpressionStatement",
                  "src": "12040:271:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 91219,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89988,
                                "src": "12354:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 91220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12360:9:130",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 123689,
                              "src": "12354:15:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 91221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12354:17:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91218,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12344:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12344:28:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 91226,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68179,
                                    "src": "12419:8:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$68179_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 91227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12428:22:130",
                                  "memberName": "afterBatchTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 68178,
                                  "src": "12419:31:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterBatchTransferFrom(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 91228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12451:8:130",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "12419:40:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 91229,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "12461:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91230,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "12468:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91231,
                                "name": "BOB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105076,
                                "src": "12475:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 91232,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91144,
                                "src": "12480:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 91233,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91161,
                                "src": "12485:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 91224,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12396:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 91225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12400:18:130",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "12396:22:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 91234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12396:97:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 91223,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12386:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 91235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12386:108:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a32",
                        "id": 91236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12508:43:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_399e107c8394fda667492ef92718b8d74aabf2375add65ed42ef93cff40b2d30",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::2\""
                        },
                        "value": "test_BeforeAfterBatchTransferFromHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_399e107c8394fda667492ef92718b8d74aabf2375add65ed42ef93cff40b2d30",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::2\""
                        }
                      ],
                      "id": 91217,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "12322:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 91237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12322:239:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91238,
                  "nodeType": "ExpressionStatement",
                  "src": "12322:239:130"
                },
                {
                  "assignments": [
                    91241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91241,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "12585:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "12572:29:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91239,
                          "name": "State",
                          "nameLocations": [
                            "12572:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "12572:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "12572:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91245,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91242,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "12604:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12610:14:130",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92499,
                      "src": "12604:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12604:22:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12572:54:130"
                },
                {
                  "assignments": [
                    91248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91248,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "12649:15:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91263,
                      "src": "12636:28:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 91247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91246,
                          "name": "State",
                          "nameLocations": [
                            "12636:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89980,
                          "src": "12636:5:130"
                        },
                        "referencedDeclaration": 89980,
                        "src": "12636:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91252,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 91249,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "12667:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12673:13:130",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92508,
                      "src": "12667:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 91251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12667:21:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12636:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91254,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91241,
                        "src": "12713:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 91255,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91135,
                        "src": "12731:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 91253,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "12699:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 91256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12699:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91257,
                  "nodeType": "ExpressionStatement",
                  "src": "12699:52:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91259,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91248,
                        "src": "12775:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 91260,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91190,
                        "src": "12792:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 91258,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91480,
                      "src": "12761:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$89980_memory_ptr_$_t_struct$_State_$89980_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 91261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12761:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91262,
                  "nodeType": "ExpressionStatement",
                  "src": "12761:50:130"
                }
              ]
            },
            "functionSelector": "a42b6139",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterBatchTransferFromHooks",
            "nameLocation": "11112:38:130",
            "parameters": {
              "id": 91051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11150:2:130"
            },
            "returnParameters": {
              "id": 91052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11160:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91318,
            "nodeType": "FunctionDefinition",
            "src": "12824:396:130",
            "nodes": [],
            "body": {
              "id": 91317,
              "nodeType": "Block",
              "src": "12844:376:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91270,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "12867:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 91269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12859:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12859:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12859:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91274,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "12885:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12877:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12877:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12877:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91280,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105112,
                                  "src": "12925:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 91279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12917:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91278,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12917:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12917:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 91276,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105079,
                              "src": "12899:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$123990",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 91277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12907:9:130",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41796,
                            "src": "12899:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12899:39:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 91285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 91283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12941:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 91284,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "12945:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "12941:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12899:52:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91267,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "12854:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12854:98:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91288,
                  "nodeType": "ExpressionStatement",
                  "src": "12854:98:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91292,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "12975:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 91291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12967:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12967:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12967:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91296,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "12990:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12982:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12982:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12982:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91302,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105112,
                                  "src": "13027:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 91301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13019:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91300,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13019:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13019:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 91298,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105082,
                              "src": "13004:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                "typeString": "contract ERC20Mock"
                              }
                            },
                            "id": 91299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13009:9:130",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41796,
                            "src": "13004:14:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13004:36:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 91307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 91305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13043:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 91306,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "13047:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "13043:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13004:49:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91289,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "12962:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12962:92:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91310,
                  "nodeType": "ExpressionStatement",
                  "src": "12962:92:130"
                },
                {
                  "assignments": [
                    91312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91312,
                      "mutability": "mutable",
                      "name": "callback_success",
                      "nameLocation": "13073:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91317,
                      "src": "13065:24:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 91311,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13065:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91315,
                  "initialValue": {
                    "expression": {
                      "id": 91313,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72438,
                      "src": "13092:9:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 91314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "13102:16:130",
                    "memberName": "CALLBACK_SUCCESS",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 72437,
                    "src": "13092:26:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13065:53:130"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13137:77:130",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13158:1:130",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "callback_success",
                              "nodeType": "YulIdentifier",
                              "src": "13161:16:130"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13151:6:130"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13151:27:130"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13151:27:130"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13198:1:130",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13201:2:130",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13191:6:130"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13191:13:130"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13191:13:130"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 91312,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13161:16:130",
                      "valueSize": 1
                    }
                  ],
                  "id": 91316,
                  "nodeType": "InlineAssembly",
                  "src": "13128:86:130"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 91265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12832:2:130"
            },
            "returnParameters": {
              "id": 91266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12844:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91480,
            "nodeType": "FunctionDefinition",
            "src": "13226:1698:130",
            "nodes": [],
            "body": {
              "id": 91479,
              "nodeType": "Block",
              "src": "13316:1608:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91328,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13335:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13346:8:130",
                        "memberName": "reserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89961,
                        "src": "13335:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91330,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13356:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13370:8:130",
                        "memberName": "reserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89961,
                        "src": "13356:22:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a31",
                        "id": 91332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13380:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5025449c4b3be533e83464e775f34d1e999cb011c9f0dc1c7a6d1edd110a107a",
                          "typeString": "literal_string \"_verifyStates::1\""
                        },
                        "value": "_verifyStates::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5025449c4b3be533e83464e775f34d1e999cb011c9f0dc1c7a6d1edd110a107a",
                          "typeString": "literal_string \"_verifyStates::1\""
                        }
                      ],
                      "id": 91327,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13326:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13326:73:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91334,
                  "nodeType": "ExpressionStatement",
                  "src": "13326:73:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91336,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13418:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13429:8:130",
                        "memberName": "reserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89963,
                        "src": "13418:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91338,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13439:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91339,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13453:8:130",
                        "memberName": "reserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89963,
                        "src": "13439:22:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a32",
                        "id": 91340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13463:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46ec804b743e1ccf51e0b5934e9d0659d5a1c9e9a018ba9786d95d74e48861c4",
                          "typeString": "literal_string \"_verifyStates::2\""
                        },
                        "value": "_verifyStates::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46ec804b743e1ccf51e0b5934e9d0659d5a1c9e9a018ba9786d95d74e48861c4",
                          "typeString": "literal_string \"_verifyStates::2\""
                        }
                      ],
                      "id": 91335,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13409:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13409:73:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91342,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:73:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91344,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13501:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91345,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13512:12:130",
                        "memberName": "protocolFeeX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89965,
                        "src": "13501:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91346,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13526:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91347,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13540:12:130",
                        "memberName": "protocolFeeX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89965,
                        "src": "13526:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a33",
                        "id": 91348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13554:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ad897216e87ed47e81cd812ae3f2cb556b2d841facb5639181a5db489ed521c",
                          "typeString": "literal_string \"_verifyStates::3\""
                        },
                        "value": "_verifyStates::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ad897216e87ed47e81cd812ae3f2cb556b2d841facb5639181a5db489ed521c",
                          "typeString": "literal_string \"_verifyStates::3\""
                        }
                      ],
                      "id": 91343,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13492:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13492:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91350,
                  "nodeType": "ExpressionStatement",
                  "src": "13492:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91352,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13592:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13603:12:130",
                        "memberName": "protocolFeeY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89967,
                        "src": "13592:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91354,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13617:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91355,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13631:12:130",
                        "memberName": "protocolFeeY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89967,
                        "src": "13617:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a34",
                        "id": 91356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13645:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_492ffbfb215a064365c205d7df6d2ec7ae4cd9c2c402c7c9c8801afa6c545dee",
                          "typeString": "literal_string \"_verifyStates::4\""
                        },
                        "value": "_verifyStates::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_492ffbfb215a064365c205d7df6d2ec7ae4cd9c2c402c7c9c8801afa6c545dee",
                          "typeString": "literal_string \"_verifyStates::4\""
                        }
                      ],
                      "id": 91351,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13583:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13583:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91358,
                  "nodeType": "ExpressionStatement",
                  "src": "13583:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91360,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13683:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91361,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13694:8:130",
                        "memberName": "activeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89969,
                        "src": "13683:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 91362,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13704:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91363,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13718:8:130",
                        "memberName": "activeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89969,
                        "src": "13704:22:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a35",
                        "id": 91364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13728:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70453dfd608c63567c90adbf8eb48d3774d30e923475e5776171eba80e19c8cd",
                          "typeString": "literal_string \"_verifyStates::5\""
                        },
                        "value": "_verifyStates::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70453dfd608c63567c90adbf8eb48d3774d30e923475e5776171eba80e19c8cd",
                          "typeString": "literal_string \"_verifyStates::5\""
                        }
                      ],
                      "id": 91359,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13674:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13674:73:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91366,
                  "nodeType": "ExpressionStatement",
                  "src": "13674:73:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91368,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13766:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91369,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13777:14:130",
                        "memberName": "activeReserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89971,
                        "src": "13766:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91370,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13793:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13807:14:130",
                        "memberName": "activeReserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89971,
                        "src": "13793:28:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a36",
                        "id": 91372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13823:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc7a5ea0948d0e764b45ed596d3c96a7d91e71a838039124495e79b8c2956bf",
                          "typeString": "literal_string \"_verifyStates::6\""
                        },
                        "value": "_verifyStates::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc7a5ea0948d0e764b45ed596d3c96a7d91e71a838039124495e79b8c2956bf",
                          "typeString": "literal_string \"_verifyStates::6\""
                        }
                      ],
                      "id": 91367,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13757:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13757:85:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91374,
                  "nodeType": "ExpressionStatement",
                  "src": "13757:85:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91376,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91321,
                          "src": "13861:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91377,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13872:14:130",
                        "memberName": "activeReserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89973,
                        "src": "13861:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 91378,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91324,
                          "src": "13888:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 91379,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13902:14:130",
                        "memberName": "activeReserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89973,
                        "src": "13888:28:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a37",
                        "id": 91380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13918:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d27d92b73ef5485386a7a7c3479cfc5bf6f1ff01a3b14bbb73126caf7accb41",
                          "typeString": "literal_string \"_verifyStates::7\""
                        },
                        "value": "_verifyStates::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d27d92b73ef5485386a7a7c3479cfc5bf6f1ff01a3b14bbb73126caf7accb41",
                          "typeString": "literal_string \"_verifyStates::7\""
                        }
                      ],
                      "id": 91375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13852:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13852:85:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91382,
                  "nodeType": "ExpressionStatement",
                  "src": "13852:85:130"
                },
                {
                  "assignments": [
                    91385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91385,
                      "mutability": "mutable",
                      "name": "vp",
                      "nameLocation": "13976:2:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91479,
                      "src": "13948:30:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 91384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91383,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "13948:20:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89948,
                          "src": "13948:20:130"
                        },
                        "referencedDeclaration": 89948,
                        "src": "13948:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$89948_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91388,
                  "initialValue": {
                    "expression": {
                      "id": 91386,
                      "name": "hooksState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91321,
                      "src": "13981:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 91387,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13992:20:130",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89976,
                    "src": "13981:31:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13948:64:130"
                },
                {
                  "assignments": [
                    91391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91391,
                      "mutability": "mutable",
                      "name": "evp",
                      "nameLocation": "14050:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91479,
                      "src": "14022:31:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 91390,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91389,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "14022:20:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89948,
                          "src": "14022:20:130"
                        },
                        "referencedDeclaration": 89948,
                        "src": "14022:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$89948_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91394,
                  "initialValue": {
                    "expression": {
                      "id": 91392,
                      "name": "expectedState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91324,
                      "src": "14056:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 91393,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14070:20:130",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89976,
                    "src": "14056:34:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14022:68:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91396,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91385,
                          "src": "14110:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91397,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14113:21:130",
                        "memberName": "volatilityAccumulator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89941,
                        "src": "14110:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 91398,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91391,
                          "src": "14136:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14140:21:130",
                        "memberName": "volatilityAccumulator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89941,
                        "src": "14136:25:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a38",
                        "id": 91400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14163:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01b0e3419f254c8189d653fa1ad6e77522c675194b3c013560e67480da7d7100",
                          "typeString": "literal_string \"_verifyStates::8\""
                        },
                        "value": "_verifyStates::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01b0e3419f254c8189d653fa1ad6e77522c675194b3c013560e67480da7d7100",
                          "typeString": "literal_string \"_verifyStates::8\""
                        }
                      ],
                      "id": 91395,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14101:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14101:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91402,
                  "nodeType": "ExpressionStatement",
                  "src": "14101:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91404,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91385,
                          "src": "14201:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14204:19:130",
                        "memberName": "volatilityReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89943,
                        "src": "14201:22:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 91406,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91391,
                          "src": "14225:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14229:19:130",
                        "memberName": "volatilityReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89943,
                        "src": "14225:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a39",
                        "id": 91408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14250:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cefe8918b96176c4e62a27f305e5a50df5186542947f329853450fdc0c4d3b",
                          "typeString": "literal_string \"_verifyStates::9\""
                        },
                        "value": "_verifyStates::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cefe8918b96176c4e62a27f305e5a50df5186542947f329853450fdc0c4d3b",
                          "typeString": "literal_string \"_verifyStates::9\""
                        }
                      ],
                      "id": 91403,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14192:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14192:77:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91410,
                  "nodeType": "ExpressionStatement",
                  "src": "14192:77:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91412,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91385,
                          "src": "14288:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91413,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14291:11:130",
                        "memberName": "idReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89945,
                        "src": "14288:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 91414,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91391,
                          "src": "14304:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14308:11:130",
                        "memberName": "idReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89945,
                        "src": "14304:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3130",
                        "id": 91416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14321:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e5e11ec4ae33843a704b93489f88310fb98a3fdeb344ba00f1313d6dde13e3",
                          "typeString": "literal_string \"_verifyStates::10\""
                        },
                        "value": "_verifyStates::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e5e11ec4ae33843a704b93489f88310fb98a3fdeb344ba00f1313d6dde13e3",
                          "typeString": "literal_string \"_verifyStates::10\""
                        }
                      ],
                      "id": 91411,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14279:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14279:62:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91418,
                  "nodeType": "ExpressionStatement",
                  "src": "14279:62:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91420,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91385,
                          "src": "14360:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14363:16:130",
                        "memberName": "timeOfLastUpdate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89947,
                        "src": "14360:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 91422,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91391,
                          "src": "14381:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 91423,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14385:16:130",
                        "memberName": "timeOfLastUpdate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89947,
                        "src": "14381:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3131",
                        "id": 91424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14403:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf4532b9b4d89e14429ae86c0104796aae934ecf2b000730c1c6215bf2dd9a2e",
                          "typeString": "literal_string \"_verifyStates::11\""
                        },
                        "value": "_verifyStates::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf4532b9b4d89e14429ae86c0104796aae934ecf2b000730c1c6215bf2dd9a2e",
                          "typeString": "literal_string \"_verifyStates::11\""
                        }
                      ],
                      "id": 91419,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14351:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14351:72:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91426,
                  "nodeType": "ExpressionStatement",
                  "src": "14351:72:130"
                },
                {
                  "assignments": [
                    91429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91429,
                      "mutability": "mutable",
                      "name": "op",
                      "nameLocation": "14458:2:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91479,
                      "src": "14434:26:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 91428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91427,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "14434:16:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89959,
                          "src": "14434:16:130"
                        },
                        "referencedDeclaration": 89959,
                        "src": "14434:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$89959_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91432,
                  "initialValue": {
                    "expression": {
                      "id": 91430,
                      "name": "hooksState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91321,
                      "src": "14463:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 91431,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14474:16:130",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89979,
                    "src": "14463:27:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14434:56:130"
                },
                {
                  "assignments": [
                    91435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91435,
                      "mutability": "mutable",
                      "name": "eop",
                      "nameLocation": "14524:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91479,
                      "src": "14500:27:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 91434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91433,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "14500:16:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89959,
                          "src": "14500:16:130"
                        },
                        "referencedDeclaration": 89959,
                        "src": "14500:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$89959_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91438,
                  "initialValue": {
                    "expression": {
                      "id": 91436,
                      "name": "expectedState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91324,
                      "src": "14530:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 91437,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14544:16:130",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89979,
                    "src": "14530:30:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14500:60:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91440,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91429,
                          "src": "14580:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91441,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14583:14:130",
                        "memberName": "sampleLifetime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89950,
                        "src": "14580:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 91442,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91435,
                          "src": "14599:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14603:14:130",
                        "memberName": "sampleLifetime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89950,
                        "src": "14599:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3132",
                        "id": 91444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14619:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a1ce6f263406ea0179c667e41daaabf74f3fe69c577522f7019a6a4c5d7453d",
                          "typeString": "literal_string \"_verifyStates::12\""
                        },
                        "value": "_verifyStates::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a1ce6f263406ea0179c667e41daaabf74f3fe69c577522f7019a6a4c5d7453d",
                          "typeString": "literal_string \"_verifyStates::12\""
                        }
                      ],
                      "id": 91439,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14571:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14571:68:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91446,
                  "nodeType": "ExpressionStatement",
                  "src": "14571:68:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91448,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91429,
                          "src": "14658:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91449,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14661:4:130",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89952,
                        "src": "14658:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 91450,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91435,
                          "src": "14667:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91451,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14671:4:130",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89952,
                        "src": "14667:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3133",
                        "id": 91452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14677:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d5ea2767b7544e759b180386e10c3d69bbe44d021464d966b41796d8d3ea2a7",
                          "typeString": "literal_string \"_verifyStates::13\""
                        },
                        "value": "_verifyStates::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d5ea2767b7544e759b180386e10c3d69bbe44d021464d966b41796d8d3ea2a7",
                          "typeString": "literal_string \"_verifyStates::13\""
                        }
                      ],
                      "id": 91447,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14649:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14649:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91454,
                  "nodeType": "ExpressionStatement",
                  "src": "14649:48:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91456,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91429,
                          "src": "14716:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91457,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14719:10:130",
                        "memberName": "activeSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89954,
                        "src": "14716:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 91458,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91435,
                          "src": "14731:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91459,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14735:10:130",
                        "memberName": "activeSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89954,
                        "src": "14731:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3134",
                        "id": 91460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14747:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8b8810a8dd52f0b497fb48e9ec30299dfa7cb4347c36c23956bc556ac28e74",
                          "typeString": "literal_string \"_verifyStates::14\""
                        },
                        "value": "_verifyStates::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d8b8810a8dd52f0b497fb48e9ec30299dfa7cb4347c36c23956bc556ac28e74",
                          "typeString": "literal_string \"_verifyStates::14\""
                        }
                      ],
                      "id": 91455,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14707:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14707:60:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91462,
                  "nodeType": "ExpressionStatement",
                  "src": "14707:60:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91464,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91429,
                          "src": "14786:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91465,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14789:11:130",
                        "memberName": "lastUpdated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89956,
                        "src": "14786:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 91466,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91435,
                          "src": "14802:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91467,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14806:11:130",
                        "memberName": "lastUpdated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89956,
                        "src": "14802:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3135",
                        "id": 91468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14819:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395a6bcb36ff2a9bf7a39653d3b8c532839390f347e463cdb4c38387804e1b8",
                          "typeString": "literal_string \"_verifyStates::15\""
                        },
                        "value": "_verifyStates::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395a6bcb36ff2a9bf7a39653d3b8c532839390f347e463cdb4c38387804e1b8",
                          "typeString": "literal_string \"_verifyStates::15\""
                        }
                      ],
                      "id": 91463,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14777:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14777:62:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91470,
                  "nodeType": "ExpressionStatement",
                  "src": "14777:62:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91472,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91429,
                          "src": "14858:2:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14861:14:130",
                        "memberName": "firstTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89958,
                        "src": "14858:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 91474,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91435,
                          "src": "14877:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 91475,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14881:14:130",
                        "memberName": "firstTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 89958,
                        "src": "14877:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3136",
                        "id": 91476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14897:19:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7095ef122d0024a60520a7eee7c52fcb30c1a3e6d5f5f0e6b3b38817d5582fc6",
                          "typeString": "literal_string \"_verifyStates::16\""
                        },
                        "value": "_verifyStates::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7095ef122d0024a60520a7eee7c52fcb30c1a3e6d5f5f0e6b3b38817d5582fc6",
                          "typeString": "literal_string \"_verifyStates::16\""
                        }
                      ],
                      "id": 91471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14849:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14849:68:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91478,
                  "nodeType": "ExpressionStatement",
                  "src": "14849:68:130"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyStates",
            "nameLocation": "13235:13:130",
            "parameters": {
              "id": 91325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91321,
                  "mutability": "mutable",
                  "name": "hooksState",
                  "nameLocation": "13262:10:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91480,
                  "src": "13249:23:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 91320,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91319,
                      "name": "State",
                      "nameLocations": [
                        "13249:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89980,
                      "src": "13249:5:130"
                    },
                    "referencedDeclaration": 89980,
                    "src": "13249:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91324,
                  "mutability": "mutable",
                  "name": "expectedState",
                  "nameLocation": "13287:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91480,
                  "src": "13274:26:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 91323,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91322,
                      "name": "State",
                      "nameLocations": [
                        "13274:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89980,
                      "src": "13274:5:130"
                    },
                    "referencedDeclaration": 89980,
                    "src": "13274:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13248:53:130"
            },
            "returnParameters": {
              "id": 91326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13316:0:130"
            },
            "scope": 92474,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91606,
            "nodeType": "FunctionDefinition",
            "src": "14930:801:130",
            "nodes": [],
            "body": {
              "id": 91605,
              "nodeType": "Block",
              "src": "14968:763:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91486,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "14991:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 91485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14983:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14983:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14983:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91490,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "15009:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15001:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91488,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15001:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15001:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91496,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105112,
                                  "src": "15049:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 91495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15041:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91494,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15041:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15041:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 91492,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105079,
                              "src": "15023:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$123990",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 91493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15031:9:130",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41796,
                            "src": "15023:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15023:39:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 91499,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89991,
                          "src": "15065:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "15023:48:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91483,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "14978:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14978:94:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91502,
                  "nodeType": "ExpressionStatement",
                  "src": "14978:94:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91508,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "15107:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15099:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15099:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15099:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91512,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "15144:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15152:4:130",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69851,
                              "src": "15144:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function ILBPair.swap(bool,address) returns (bytes32)"
                              }
                            },
                            "id": 91514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15157:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15144:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 91515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15167:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "id": 91516,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "15173:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91510,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15121:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15125:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15121:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15121:58:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91503,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "15083:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15089:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "15083:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15083:97:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91519,
                  "nodeType": "ExpressionStatement",
                  "src": "15083:97:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 91523,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75400,
                            "src": "15207:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$75400_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 91524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15234:28:130",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75302,
                          "src": "15207:55:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 91525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15263:8:130",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "15207:64:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 91520,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15191:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15194:12:130",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "15191:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 91526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15191:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91527,
                  "nodeType": "ExpressionStatement",
                  "src": "15191:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91531,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "15291:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91528,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15282:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15285:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "15282:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15282:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91533,
                  "nodeType": "ExpressionStatement",
                  "src": "15282:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 91537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15324:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 91538,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "15330:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91534,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "15307:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15319:4:130",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "15307:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 91539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15307:29:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 91540,
                  "nodeType": "ExpressionStatement",
                  "src": "15307:29:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15371:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15363:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91544,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15363:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15363:10:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15385:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "15375:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 91548,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "15379:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 91551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15375:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91541,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "15347:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15353:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "15347:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15347:41:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91553,
                  "nodeType": "ExpressionStatement",
                  "src": "15347:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91559,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "15422:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15414:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91557,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15414:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15414:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91563,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "15459:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15467:4:130",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69851,
                              "src": "15459:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function ILBPair.swap(bool,address) returns (bytes32)"
                              }
                            },
                            "id": 91565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15472:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15459:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 91566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15482:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 91567,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "15489:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91561,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15436:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15440:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15436:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15436:59:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91554,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "15399:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15405:8:130",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92556,
                      "src": "15399:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15399:97:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91570,
                  "nodeType": "ExpressionStatement",
                  "src": "15399:97:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91574,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "15534:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91572,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "15516:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 91573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15524:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15516:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15516:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 91576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15542:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f537761705265656e7472616e63793a3a31",
                        "id": 91577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15545:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349b2f7e98ca099c2c26467e4f4ebc6cb45265b54886d1b59310b80602406d09",
                          "typeString": "literal_string \"test_SwapReentrancy::1\""
                        },
                        "value": "test_SwapReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349b2f7e98ca099c2c26467e4f4ebc6cb45265b54886d1b59310b80602406d09",
                          "typeString": "literal_string \"test_SwapReentrancy::1\""
                        }
                      ],
                      "id": 91571,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15507:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15507:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91579,
                  "nodeType": "ExpressionStatement",
                  "src": "15507:63:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91583,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "15590:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91580,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15581:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15584:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "15581:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15581:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91585,
                  "nodeType": "ExpressionStatement",
                  "src": "15581:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 91589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15623:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 91592,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "15637:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15629:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15629:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15629:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91586,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "15606:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15618:4:130",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "15606:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 91594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15606:44:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 91595,
                  "nodeType": "ExpressionStatement",
                  "src": "15606:44:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91599,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "15688:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91597,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "15670:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 91598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15678:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15670:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15670:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 91601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15696:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f537761705265656e7472616e63793a3a32",
                        "id": 91602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15699:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8272ed657c34aa3b1c78af7fe993f7cfcd655994393750cda7dae7eecc3ff866",
                          "typeString": "literal_string \"test_SwapReentrancy::2\""
                        },
                        "value": "test_SwapReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8272ed657c34aa3b1c78af7fe993f7cfcd655994393750cda7dae7eecc3ff866",
                          "typeString": "literal_string \"test_SwapReentrancy::2\""
                        }
                      ],
                      "id": 91596,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "15661:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15661:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91604,
                  "nodeType": "ExpressionStatement",
                  "src": "15661:63:130"
                }
              ]
            },
            "functionSelector": "314bf908",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapReentrancy",
            "nameLocation": "14939:19:130",
            "parameters": {
              "id": 91481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14958:2:130"
            },
            "returnParameters": {
              "id": 91482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14968:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91819,
            "nodeType": "FunctionDefinition",
            "src": "15737:1667:130",
            "nodes": [],
            "body": {
              "id": 91818,
              "nodeType": "Block",
              "src": "15780:1624:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91614,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "15827:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15819:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15819:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15819:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91618,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "15893:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15901:9:130",
                              "memberName": "flashLoan",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69861,
                              "src": "15893:17:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                                "typeString": "function ILBPair.flashLoan(contract ILBFlashLoanCallback,bytes32,bytes calldata)"
                              }
                            },
                            "id": 91620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15911:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15893:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91623,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15929:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15921:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91621,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15921:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15921:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91627,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89991,
                                "src": "15961:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 91628,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89991,
                                "src": "15969:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 91625,
                                "name": "PackedUint128Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76517,
                                "src": "15936:17:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                  "typeString": "type(library PackedUint128Math)"
                                }
                              },
                              "id": 91626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15954:6:130",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76197,
                              "src": "15936:24:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                "typeString": "function (uint128,uint128) pure returns (bytes32)"
                              }
                            },
                            "id": 91629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15936:40:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 91632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15988:1:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 91631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "15978:9:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 91630,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "15982:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 91633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15978:12:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 91616,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15853:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15857:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15853:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15853:151:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91609,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "15790:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15796:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "15790:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:224:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91636,
                  "nodeType": "ExpressionStatement",
                  "src": "15790:224:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 91640,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75400,
                            "src": "16041:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$75400_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 91641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16068:28:130",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75302,
                          "src": "16041:55:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 91642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16097:8:130",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "16041:64:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 91637,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16025:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16028:12:130",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "16025:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 91643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16025:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91644,
                  "nodeType": "ExpressionStatement",
                  "src": "16025:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91648,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "16125:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91645,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16116:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16119:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "16116:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16116:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91650,
                  "nodeType": "ExpressionStatement",
                  "src": "16116:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91657,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16205:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16197:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91655,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16197:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16197:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91654,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68006,
                          "src": "16176:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$68006_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 91659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16176:35:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91662,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "16238:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 91663,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "16246:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 91660,
                            "name": "PackedUint128Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76517,
                            "src": "16213:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                              "typeString": "type(library PackedUint128Math)"
                            }
                          },
                          "id": 91661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16231:6:130",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76197,
                          "src": "16213:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 91664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16213:40:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16265:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16255:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 91665,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16259:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 91668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16255:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91651,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16141:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16153:9:130",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "16141:21:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 91669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16141:136:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91670,
                  "nodeType": "ExpressionStatement",
                  "src": "16141:136:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16312:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16304:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91674,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16304:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16304:10:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16326:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16316:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 91678,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16320:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 91681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16316:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91671,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "16288:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16294:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "16288:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16288:41:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91683,
                  "nodeType": "ExpressionStatement",
                  "src": "16288:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91689,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "16376:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16368:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16368:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16368:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91693,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "16442:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "16450:9:130",
                              "memberName": "flashLoan",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69861,
                              "src": "16442:17:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                                "typeString": "function ILBPair.flashLoan(contract ILBFlashLoanCallback,bytes32,bytes calldata)"
                              }
                            },
                            "id": 91695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16460:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16442:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91698,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16478:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16470:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91696,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16470:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16470:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91702,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89991,
                                "src": "16510:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 91703,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89991,
                                "src": "16518:6:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 91700,
                                "name": "PackedUint128Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76517,
                                "src": "16485:17:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                                  "typeString": "type(library PackedUint128Math)"
                                }
                              },
                              "id": 91701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16503:6:130",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76197,
                              "src": "16485:24:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                "typeString": "function (uint128,uint128) pure returns (bytes32)"
                              }
                            },
                            "id": 91704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16485:40:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 91707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16537:1:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 91706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "16527:9:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 91705,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "16531:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 91708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16527:12:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 91691,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16402:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16406:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16402:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16402:151:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91684,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "16340:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16346:8:130",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92556,
                      "src": "16340:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16340:223:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91711,
                  "nodeType": "ExpressionStatement",
                  "src": "16340:223:130"
                },
                {
                  "assignments": [
                    91713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91713,
                      "mutability": "mutable",
                      "name": "beforeBalanceWnative",
                      "nameLocation": "16582:20:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91818,
                      "src": "16574:28:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16574:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91721,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91718,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "16631:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16623:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16623:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16623:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91714,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "16605:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 91715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16613:9:130",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "16605:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 91720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16605:39:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16574:70:130"
                },
                {
                  "assignments": [
                    91723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91723,
                      "mutability": "mutable",
                      "name": "beforeBalanceUsdc",
                      "nameLocation": "16662:17:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91818,
                      "src": "16654:25:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91722,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16654:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91731,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91728,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "16705:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16697:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91726,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16697:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16697:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91724,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "16682:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 91725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16687:9:130",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "16682:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 91730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16682:36:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16654:64:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91735,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "16738:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91732,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16729:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16732:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "16729:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16729:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91737,
                  "nodeType": "ExpressionStatement",
                  "src": "16729:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91744,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16818:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16810:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16810:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16810:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91741,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68006,
                          "src": "16789:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$68006_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 91746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16789:35:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91749,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "16851:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 91750,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "16859:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 91747,
                            "name": "PackedUint128Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76517,
                            "src": "16826:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76517_$",
                              "typeString": "type(library PackedUint128Math)"
                            }
                          },
                          "id": 91748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16844:6:130",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76197,
                          "src": "16826:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 91751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16826:40:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16878:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16868:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 91752,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16872:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 91755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16868:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$68006",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91738,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16754:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16766:9:130",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "16754:21:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 91756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:136:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91757,
                  "nodeType": "ExpressionStatement",
                  "src": "16754:136:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91763,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "17001:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 91762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16993:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91761,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16993:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16993:20:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91759,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "16975:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 91760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16983:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "16975:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16975:39:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91766,
                          "name": "beforeBalanceWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91713,
                          "src": "17016:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 91769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 91767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17039:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 91768,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "17043:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17039:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17016:33:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a31",
                        "id": 91771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17051:29:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_519107eba47119411abd674a05b7e9b8b2e22bd26e2a7c14bac62bdbaa488672",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::1\""
                        },
                        "value": "test_FlashLoanReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_519107eba47119411abd674a05b7e9b8b2e22bd26e2a7c14bac62bdbaa488672",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::1\""
                        }
                      ],
                      "id": 91758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16953:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16953:137:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91773,
                  "nodeType": "ExpressionStatement",
                  "src": "16953:137:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91779,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "17132:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 91778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17124:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91777,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17124:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17124:20:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91775,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "17109:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 91776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17114:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "17109:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17109:36:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 91782,
                          "name": "beforeBalanceUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91723,
                          "src": "17147:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 91785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 91783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17167:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 91784,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "17171:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17167:10:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17147:30:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a32",
                        "id": 91787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17179:29:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_722449d81d5adf77b94c2ec8aac6e221d76be233c2fdaf9b990604f594800ef6",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::2\""
                        },
                        "value": "test_FlashLoanReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_722449d81d5adf77b94c2ec8aac6e221d76be233c2fdaf9b990604f594800ef6",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::2\""
                        }
                      ],
                      "id": 91774,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17100:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17100:109:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91789,
                  "nodeType": "ExpressionStatement",
                  "src": "17100:109:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91795,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17255:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17247:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17247:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17247:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91791,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "17229:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 91792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17237:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "17229:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17229:32:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 91800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 91798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17263:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 91799,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89991,
                          "src": "17267:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17263:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a33",
                        "id": 91801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17275:29:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc418b42398a9a51fd29fd6e9348e91518d0eecbf83ab3b1026d2f856f407149",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::3\""
                        },
                        "value": "test_FlashLoanReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc418b42398a9a51fd29fd6e9348e91518d0eecbf83ab3b1026d2f856f407149",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::3\""
                        }
                      ],
                      "id": 91790,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17220:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17220:85:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91803,
                  "nodeType": "ExpressionStatement",
                  "src": "17220:85:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91809,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17347:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$92474",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 91808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17339:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91807,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17339:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17339:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91805,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "17324:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 91806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17329:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "17324:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 91811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17324:29:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 91814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 91812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17355:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 91813,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89991,
                          "src": "17359:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17355:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a34",
                        "id": 91815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17367:29:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ec6c7e4acccb2447481eb79cc484d2f89d5f7ba943e6f7d1f390cac1fe935fd",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::4\""
                        },
                        "value": "test_FlashLoanReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ec6c7e4acccb2447481eb79cc484d2f89d5f7ba943e6f7d1f390cac1fe935fd",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::4\""
                        }
                      ],
                      "id": 91804,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17315:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 91816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17315:82:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91817,
                  "nodeType": "ExpressionStatement",
                  "src": "17315:82:130"
                }
              ]
            },
            "functionSelector": "4f3e1504",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_FlashLoanReentrancy",
            "nameLocation": "15746:24:130",
            "parameters": {
              "id": 91607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15770:2:130"
            },
            "returnParameters": {
              "id": 91608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15780:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92057,
            "nodeType": "FunctionDefinition",
            "src": "17410:1703:130",
            "nodes": [],
            "body": {
              "id": 92056,
              "nodeType": "Block",
              "src": "17448:1665:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    91826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91826,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "17475:16:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92056,
                      "src": "17458:33:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91824,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17458:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 91825,
                        "nodeType": "ArrayTypeName",
                        "src": "17458:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91832,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 91830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17508:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 91829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17494:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 91827,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17498:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 91828,
                        "nodeType": "ArrayTypeName",
                        "src": "17498:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 91831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17494:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17458:52:130"
                },
                {
                  "expression": {
                    "id": 91844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 91833,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91826,
                        "src": "17520:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 91835,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 91834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17537:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17520:19:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "302e35653138",
                          "id": 91838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17579:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        {
                          "hexValue": "302e35653138",
                          "id": 91839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17587:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          },
                          "id": 91842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 91840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17595:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3233",
                            "id": 91841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17600:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_23_by_1",
                              "typeString": "int_const 23"
                            },
                            "value": "23"
                          },
                          "src": "17595:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          }
                        ],
                        "expression": {
                          "id": 91836,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76163,
                          "src": "17542:23:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$76163_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 91837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17566:12:130",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76066,
                        "src": "17542:36:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 91843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17542:61:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "17520:83:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 91845,
                  "nodeType": "ExpressionStatement",
                  "src": "17520:83:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91851,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "17651:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17643:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91849,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17643:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17643:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91855,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "17688:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "17696:4:130",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69878,
                              "src": "17688:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.mint(address,bytes32[] calldata,address) returns (bytes32,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 91857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17701:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17688:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 91858,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "17711:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 91859,
                            "name": "liquidityConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91826,
                            "src": "17718:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 91860,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "17736:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91853,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17665:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17669:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17665:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17665:77:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91846,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "17614:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17620:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "17614:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17614:138:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91863,
                  "nodeType": "ExpressionStatement",
                  "src": "17614:138:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 91867,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75400,
                            "src": "17779:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$75400_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 91868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17806:28:130",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75302,
                          "src": "17779:55:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 91869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17835:8:130",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "17779:64:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 91864,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17763:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17766:12:130",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "17763:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 91870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17763:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91871,
                  "nodeType": "ExpressionStatement",
                  "src": "17763:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91875,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "17863:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91872,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17854:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17857:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "17854:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17854:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91877,
                  "nodeType": "ExpressionStatement",
                  "src": "17854:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91881,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "17896:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91882,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91826,
                        "src": "17903:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 91883,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "17921:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91878,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "17879:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17891:4:130",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60973,
                      "src": "17879:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 91884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17879:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 91885,
                  "nodeType": "ExpressionStatement",
                  "src": "17879:48:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17962:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17954:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17954:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17954:10:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 91895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17976:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 91894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "17966:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 91893,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "17970:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 91896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17966:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91886,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "17938:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17944:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "17938:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17938:41:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91898,
                  "nodeType": "ExpressionStatement",
                  "src": "17938:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91904,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18026:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18018:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18018:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18018:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91908,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "18063:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 91909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "18071:4:130",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69878,
                              "src": "18063:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.mint(address,bytes32[] calldata,address) returns (bytes32,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 91910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18076:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18063:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 91911,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "18086:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 91912,
                            "name": "liquidityConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91826,
                            "src": "18093:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 91913,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "18111:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 91906,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18040:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 91907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18044:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18040:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 91914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18040:77:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 91899,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "17990:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 91901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17996:8:130",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92556,
                      "src": "17990:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 91915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17990:137:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91916,
                  "nodeType": "ExpressionStatement",
                  "src": "17990:137:130"
                },
                {
                  "assignments": [
                    91918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91918,
                      "mutability": "mutable",
                      "name": "beforeBalanceWnative",
                      "nameLocation": "18146:20:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92056,
                      "src": "18138:28:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18138:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91926,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91923,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18195:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18187:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91921,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18187:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18187:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91919,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "18169:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 91920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18177:9:130",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "18169:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 91925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18169:39:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18138:70:130"
                },
                {
                  "assignments": [
                    91928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91928,
                      "mutability": "mutable",
                      "name": "beforeBalanceUsdc",
                      "nameLocation": "18226:17:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92056,
                      "src": "18218:25:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18218:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91936,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91933,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18269:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18261:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91931,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18261:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18261:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91929,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "18246:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 91930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18251:9:130",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "18246:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 91935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18246:36:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18218:64:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91940,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "18306:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 91939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18298:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18298:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18298:16:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91944,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18324:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18316:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18316:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18316:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91950,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105112,
                                  "src": "18364:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 91949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18356:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91948,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18356:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18356:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 91946,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105079,
                              "src": "18338:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$123990",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 91947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18346:9:130",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41796,
                            "src": "18338:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18338:39:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 91953,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89991,
                          "src": "18380:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18338:48:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91937,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "18293:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18293:94:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91956,
                  "nodeType": "ExpressionStatement",
                  "src": "18293:94:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91960,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "18410:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 91959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18402:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18402:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18402:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91964,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18425:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18417:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91962,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18417:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18417:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91970,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 105112,
                                  "src": "18462:11:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$62123",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 91969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18454:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91968,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18454:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18454:20:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 91966,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105082,
                              "src": "18439:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                "typeString": "contract ERC20Mock"
                              }
                            },
                            "id": 91967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18444:9:130",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41796,
                            "src": "18439:14:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 91972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18439:36:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 91973,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89991,
                          "src": "18478:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18439:45:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91957,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "18397:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 91975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18397:88:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91976,
                  "nodeType": "ExpressionStatement",
                  "src": "18397:88:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91980,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "18505:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 91977,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18496:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 91979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18499:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "18496:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18496:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91982,
                  "nodeType": "ExpressionStatement",
                  "src": "18496:15:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91986,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "18538:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 91987,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91826,
                        "src": "18545:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 91990,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "18571:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 91989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18563:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18563:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18563:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91983,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "18521:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 91985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18533:4:130",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60973,
                      "src": "18521:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 91992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18521:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 91993,
                  "nodeType": "ExpressionStatement",
                  "src": "18521:63:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91999,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "18718:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 91998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18710:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91997,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18710:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 92000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18710:20:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 91995,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "18692:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 91996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18700:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18692:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18692:39:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92002,
                          "name": "beforeBalanceWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91918,
                          "src": "18733:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 92007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 92005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3735",
                              "id": 92003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18756:2:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75_by_1",
                                "typeString": "int_const 75"
                              },
                              "value": "75"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 92004,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89991,
                              "src": "18761:6:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "18756:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 92006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18770:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "18756:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18733:40:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a31",
                        "id": 92009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18775:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4bc6757f239ee41519ad587a62ab6c77f239342684367250ccfa5b15c28508f",
                          "typeString": "literal_string \"test_MintReentrancy::1\""
                        },
                        "value": "test_MintReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4bc6757f239ee41519ad587a62ab6c77f239342684367250ccfa5b15c28508f",
                          "typeString": "literal_string \"test_MintReentrancy::1\""
                        }
                      ],
                      "id": 91994,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18670:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18670:139:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92011,
                  "nodeType": "ExpressionStatement",
                  "src": "18670:139:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 92017,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "18851:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 92016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18843:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 92015,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18843:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 92018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18843:20:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 92013,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "18828:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 92014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18833:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18828:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18828:36:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 92020,
                          "name": "beforeBalanceUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91928,
                          "src": "18866:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 92025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 92023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3735",
                              "id": 92021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18886:2:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75_by_1",
                                "typeString": "int_const 75"
                              },
                              "value": "75"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 92022,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89991,
                              "src": "18891:6:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "18886:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 92024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18900:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "18886:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18866:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a32",
                        "id": 92027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18905:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a50c2c0d2d532f4dc0b41e33fe97e86dd5054234b1de196c7c2d558fb935c57",
                          "typeString": "literal_string \"test_MintReentrancy::2\""
                        },
                        "value": "test_MintReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a50c2c0d2d532f4dc0b41e33fe97e86dd5054234b1de196c7c2d558fb935c57",
                          "typeString": "literal_string \"test_MintReentrancy::2\""
                        }
                      ],
                      "id": 92012,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18819:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18819:111:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92029,
                  "nodeType": "ExpressionStatement",
                  "src": "18819:111:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92033,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "18968:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92031,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "18950:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 92032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18958:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18950:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18950:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 92039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 92037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3235",
                            "id": 92035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18976:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 92036,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "18981:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "18976:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 92038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18990:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "18976:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a33",
                        "id": 92040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18995:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f83993d063da94d5e6bbb9b30be7fda651726e6628a037db0bf7a63dfbad8270",
                          "typeString": "literal_string \"test_MintReentrancy::3\""
                        },
                        "value": "test_MintReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f83993d063da94d5e6bbb9b30be7fda651726e6628a037db0bf7a63dfbad8270",
                          "typeString": "literal_string \"test_MintReentrancy::3\""
                        }
                      ],
                      "id": 92030,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18941:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18941:79:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92042,
                  "nodeType": "ExpressionStatement",
                  "src": "18941:79:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92046,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "19054:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92044,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "19039:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 92045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19044:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "19039:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19039:21:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 92052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 92050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3235",
                            "id": 92048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19062:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 92049,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89991,
                            "src": "19067:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "19062:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 92051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19076:3:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "19062:17:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a34",
                        "id": 92053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19081:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce5e63d31a483a6fc355e54c8f7e5776264016c28d7c5384b093a3f07eb1f214",
                          "typeString": "literal_string \"test_MintReentrancy::4\""
                        },
                        "value": "test_MintReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce5e63d31a483a6fc355e54c8f7e5776264016c28d7c5384b093a3f07eb1f214",
                          "typeString": "literal_string \"test_MintReentrancy::4\""
                        }
                      ],
                      "id": 92043,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19030:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19030:76:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92055,
                  "nodeType": "ExpressionStatement",
                  "src": "19030:76:130"
                }
              ]
            },
            "functionSelector": "16c1fcdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MintReentrancy",
            "nameLocation": "17419:19:130",
            "parameters": {
              "id": 91820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17438:2:130"
            },
            "returnParameters": {
              "id": 91821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17448:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92272,
            "nodeType": "FunctionDefinition",
            "src": "19119:1449:130",
            "nodes": [],
            "body": {
              "id": 92271,
              "nodeType": "Block",
              "src": "19157:1411:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    92064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92064,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "19184:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92271,
                      "src": "19167:20:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19167:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92063,
                        "nodeType": "ArrayTypeName",
                        "src": "19167:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92070,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 92068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19204:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 92067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19190:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19194:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92066,
                        "nodeType": "ArrayTypeName",
                        "src": "19194:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 92069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19190:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19167:39:130"
                },
                {
                  "expression": {
                    "id": 92077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92071,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92064,
                        "src": "19216:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 92073,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 92072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19220:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19216:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 92074,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "19225:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 92075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19237:11:130",
                        "memberName": "getActiveId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59596,
                        "src": "19225:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                          "typeString": "function () view external returns (uint24)"
                        }
                      },
                      "id": 92076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19225:25:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "19216:34:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92078,
                  "nodeType": "ExpressionStatement",
                  "src": "19216:34:130"
                },
                {
                  "assignments": [
                    92083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92083,
                      "mutability": "mutable",
                      "name": "amountsToBurn",
                      "nameLocation": "19278:13:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92271,
                      "src": "19261:30:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19261:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92082,
                        "nodeType": "ArrayTypeName",
                        "src": "19261:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92089,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 92087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19308:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 92086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19294:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19298:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92085,
                        "nodeType": "ArrayTypeName",
                        "src": "19298:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 92088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19294:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19261:49:130"
                },
                {
                  "expression": {
                    "id": 92102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92090,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92083,
                        "src": "19320:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 92092,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 92091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19334:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19320:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 92101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 92095,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "19361:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92096,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92064,
                              "src": "19366:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92098,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19370:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19366:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92093,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "19339:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19351:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "19339:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19339:34:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 92100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19376:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "19339:38:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19320:57:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92103,
                  "nodeType": "ExpressionStatement",
                  "src": "19320:57:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92107,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "19397:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92104,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19388:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19391:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "19388:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19388:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92109,
                  "nodeType": "ExpressionStatement",
                  "src": "19388:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92115,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89988,
                            "src": "19445:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 92114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19437:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19437:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19437:14:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 92117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19453:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 92110,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19411:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19423:13:130",
                      "memberName": "approveForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67177,
                      "src": "19411:25:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 92118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19411:47:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92119,
                  "nodeType": "ExpressionStatement",
                  "src": "19411:47:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92125,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "19506:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 92124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19498:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19498:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19498:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 92129,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "19543:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 92130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "19551:4:130",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69894,
                              "src": "19543:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.burn(address,address,uint256[] calldata,uint256[] calldata) returns (bytes32[] memory)"
                              }
                            },
                            "id": 92131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "19556:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19543:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 92132,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "19566:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92133,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "19571:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92134,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92064,
                            "src": "19578:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 92135,
                            "name": "amountsToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92083,
                            "src": "19583:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 92127,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19520:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 92128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19524:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19520:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 92136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19520:77:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92120,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "19469:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19475:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "19469:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19469:138:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92138,
                  "nodeType": "ExpressionStatement",
                  "src": "19469:138:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 92142,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75400,
                            "src": "19634:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$75400_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 92143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19661:28:130",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75302,
                          "src": "19634:55:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 92144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19690:8:130",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "19634:64:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 92139,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19618:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19621:12:130",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "19618:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 92145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19618:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92146,
                  "nodeType": "ExpressionStatement",
                  "src": "19618:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92150,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "19718:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92147,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19709:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19712:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "19709:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19709:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92152,
                  "nodeType": "ExpressionStatement",
                  "src": "19709:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92156,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "19749:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92157,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "19754:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92158,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92064,
                        "src": "19761:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 92159,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92083,
                        "src": "19766:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 92153,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19732:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19744:4:130",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61203,
                      "src": "19732:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 92160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19732:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 92161,
                  "nodeType": "ExpressionStatement",
                  "src": "19732:48:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 92167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19815:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 92166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19807:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92165,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19807:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19807:10:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 92171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19829:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 92170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "19819:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 92169,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "19823:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 92172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19819:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92162,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "19791:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19797:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "19791:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19791:41:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92174,
                  "nodeType": "ExpressionStatement",
                  "src": "19791:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92180,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "19879:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 92179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19871:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92178,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19871:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19871:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 92184,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69932,
                                "src": "19916:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 92185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "19924:4:130",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69894,
                              "src": "19916:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.burn(address,address,uint256[] calldata,uint256[] calldata) returns (bytes32[] memory)"
                              }
                            },
                            "id": 92186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "19929:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19916:21:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 92187,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "19939:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92188,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "19944:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92189,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92064,
                            "src": "19951:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 92190,
                            "name": "amountsToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92083,
                            "src": "19956:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 92182,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19893:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 92183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19897:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19893:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 92191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19893:77:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92175,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "19843:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19849:8:130",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92556,
                      "src": "19843:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19843:137:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92193,
                  "nodeType": "ExpressionStatement",
                  "src": "19843:137:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92197,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "20018:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92195,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "20000:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 92196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20008:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20000:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20000:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20026:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a31",
                        "id": 92200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20029:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c877a9423dcc79b8034fd4976a4691802808e9472390e31ae221a9c886aff448",
                          "typeString": "literal_string \"test_BurnReentrancy::1\""
                        },
                        "value": "test_BurnReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c877a9423dcc79b8034fd4976a4691802808e9472390e31ae221a9c886aff448",
                          "typeString": "literal_string \"test_BurnReentrancy::1\""
                        }
                      ],
                      "id": 92194,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19991:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19991:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92202,
                  "nodeType": "ExpressionStatement",
                  "src": "19991:63:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92206,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "20088:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92204,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "20073:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 92205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20078:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20073:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20073:21:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20096:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a32",
                        "id": 92209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20099:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e9bf08050d2b0370c3215fbf58f040d4597b9d26375d5eeb8417e7a98b541a",
                          "typeString": "literal_string \"test_BurnReentrancy::2\""
                        },
                        "value": "test_BurnReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e9bf08050d2b0370c3215fbf58f040d4597b9d26375d5eeb8417e7a98b541a",
                          "typeString": "literal_string \"test_BurnReentrancy::2\""
                        }
                      ],
                      "id": 92203,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20064:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20064:60:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92211,
                  "nodeType": "ExpressionStatement",
                  "src": "20064:60:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92215,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "20144:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92212,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "20135:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20138:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "20135:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20135:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92217,
                  "nodeType": "ExpressionStatement",
                  "src": "20135:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92221,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "20175:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92222,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "20180:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92223,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92064,
                        "src": "20187:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 92224,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92083,
                        "src": "20192:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 92218,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "20158:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20170:4:130",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61203,
                      "src": "20158:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 92225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20158:48:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 92226,
                  "nodeType": "ExpressionStatement",
                  "src": "20158:48:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92230,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "20244:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92228,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "20226:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 92229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20234:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20226:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20226:24:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20252:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a33",
                        "id": 92233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20255:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a721926be5492e529a1e0327a1d85c6ff9a9d551121f4b4739fe3b3529bf973c",
                          "typeString": "literal_string \"test_BurnReentrancy::3\""
                        },
                        "value": "test_BurnReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a721926be5492e529a1e0327a1d85c6ff9a9d551121f4b4739fe3b3529bf973c",
                          "typeString": "literal_string \"test_BurnReentrancy::3\""
                        }
                      ],
                      "id": 92227,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "20217:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20217:63:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92235,
                  "nodeType": "ExpressionStatement",
                  "src": "20217:63:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92239,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "20314:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 92237,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "20299:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 92238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20304:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20299:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 92240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20299:21:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20322:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a34",
                        "id": 92242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20325:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc3144b3bbd88beea6ce6ce8b9e11a6dd8d56545c443726fef6f7d0755d64b24",
                          "typeString": "literal_string \"test_BurnReentrancy::4\""
                        },
                        "value": "test_BurnReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc3144b3bbd88beea6ce6ce8b9e11a6dd8d56545c443726fef6f7d0755d64b24",
                          "typeString": "literal_string \"test_BurnReentrancy::4\""
                        }
                      ],
                      "id": 92236,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "20290:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20290:60:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92244,
                  "nodeType": "ExpressionStatement",
                  "src": "20290:60:130"
                },
                {
                  "assignments": [
                    92246,
                    92248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92246,
                      "mutability": "mutable",
                      "name": "binReserveX",
                      "nameLocation": "20370:11:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92271,
                      "src": "20362:19:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20362:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 92248,
                      "mutability": "mutable",
                      "name": "binReserveY",
                      "nameLocation": "20391:11:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92271,
                      "src": "20383:19:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92247,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20383:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92258,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 92253,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92064,
                              "src": "20432:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92255,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20436:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20432:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 92252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20425:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint24_$",
                            "typeString": "type(uint24)"
                          },
                          "typeName": {
                            "id": 92251,
                            "name": "uint24",
                            "nodeType": "ElementaryTypeName",
                            "src": "20425:6:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20425:14:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 92249,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "20406:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20418:6:130",
                      "memberName": "getBin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59618,
                      "src": "20406:18:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint24) view external returns (uint128,uint128)"
                      }
                    },
                    "id": 92257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20406:34:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20361:79:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92260,
                        "name": "binReserveX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92246,
                        "src": "20460:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20473:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a35",
                        "id": 92262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20476:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b484c8b7ed72878e6259f6752b17b1ebb7cb8147d7bd775fc036ce6340a55390",
                          "typeString": "literal_string \"test_BurnReentrancy::5\""
                        },
                        "value": "test_BurnReentrancy::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b484c8b7ed72878e6259f6752b17b1ebb7cb8147d7bd775fc036ce6340a55390",
                          "typeString": "literal_string \"test_BurnReentrancy::5\""
                        }
                      ],
                      "id": 92259,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20451:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20451:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92264,
                  "nodeType": "ExpressionStatement",
                  "src": "20451:50:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92266,
                        "name": "binReserveY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92248,
                        "src": "20520:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20533:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a36",
                        "id": 92268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20536:24:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_732ddc01ba4da8d8acf726b7cadd14b316f556547d0ac14814cea63257de6dde",
                          "typeString": "literal_string \"test_BurnReentrancy::6\""
                        },
                        "value": "test_BurnReentrancy::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_732ddc01ba4da8d8acf726b7cadd14b316f556547d0ac14814cea63257de6dde",
                          "typeString": "literal_string \"test_BurnReentrancy::6\""
                        }
                      ],
                      "id": 92265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20511:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20511:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92270,
                  "nodeType": "ExpressionStatement",
                  "src": "20511:50:130"
                }
              ]
            },
            "functionSelector": "7626ddcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BurnReentrancy",
            "nameLocation": "19128:19:130",
            "parameters": {
              "id": 92058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19147:2:130"
            },
            "returnParameters": {
              "id": 92059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19157:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92473,
            "nodeType": "FunctionDefinition",
            "src": "20574:1371:130",
            "nodes": [],
            "body": {
              "id": 92472,
              "nodeType": "Block",
              "src": "20625:1320:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    92279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92279,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "20652:3:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92472,
                      "src": "20635:20:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20635:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92278,
                        "nodeType": "ArrayTypeName",
                        "src": "20635:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92285,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 92283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20672:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 92282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20658:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20662:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92281,
                        "nodeType": "ArrayTypeName",
                        "src": "20662:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 92284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20658:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20635:39:130"
                },
                {
                  "expression": {
                    "id": 92292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92286,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92279,
                        "src": "20684:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 92288,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 92287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20688:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20684:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 92289,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "20693:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 92290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20705:11:130",
                        "memberName": "getActiveId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59596,
                        "src": "20693:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                          "typeString": "function () view external returns (uint24)"
                        }
                      },
                      "id": 92291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20693:25:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "20684:34:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92293,
                  "nodeType": "ExpressionStatement",
                  "src": "20684:34:130"
                },
                {
                  "assignments": [
                    92298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92298,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "20746:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 92472,
                      "src": "20729:24:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20729:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92297,
                        "nodeType": "ArrayTypeName",
                        "src": "20729:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92304,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 92302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20770:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 92301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20756:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 92299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20760:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 92300,
                        "nodeType": "ArrayTypeName",
                        "src": "20760:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 92303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20756:16:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20729:43:130"
                },
                {
                  "expression": {
                    "id": 92317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92305,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92298,
                        "src": "20782:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 92307,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 92306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20790:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20782:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 92316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 92310,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "20817:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92311,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92279,
                              "src": "20822:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92313,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20826:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20822:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92308,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "20795:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20807:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "20795:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20795:34:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 92315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20832:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "20795:38:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20782:51:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92318,
                  "nodeType": "ExpressionStatement",
                  "src": "20782:51:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92322,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "20853:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92319,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "20844:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20847:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "20844:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20844:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92324,
                  "nodeType": "ExpressionStatement",
                  "src": "20844:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92330,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89988,
                            "src": "20901:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 92329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20893:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92328,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20893:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20893:14:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 92332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20909:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 92325,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "20867:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20879:13:130",
                      "memberName": "approveForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67177,
                      "src": "20867:25:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 92333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20867:47:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92334,
                  "nodeType": "ExpressionStatement",
                  "src": "20867:47:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92340,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "20962:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 92339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20954:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92338,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20954:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20954:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 92344,
                                "name": "ILBToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70587,
                                "src": "20999:8:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBToken_$70587_$",
                                  "typeString": "type(contract ILBToken)"
                                }
                              },
                              "id": 92345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "21008:17:130",
                              "memberName": "batchTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70586,
                              "src": "20999:26:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function ILBToken.batchTransferFrom(address,address,uint256[] calldata,uint256[] calldata)"
                              }
                            },
                            "id": 92346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21026:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "20999:35:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 92347,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "21036:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92348,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "21041:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92349,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92279,
                            "src": "21048:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 92350,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92298,
                            "src": "21053:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 92342,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20976:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 92343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20980:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "20976:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 92351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20976:85:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92335,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "20925:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20931:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "20925:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20925:146:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92353,
                  "nodeType": "ExpressionStatement",
                  "src": "20925:146:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 92357,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75400,
                            "src": "21098:26:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$75400_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 92358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21125:28:130",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75302,
                          "src": "21098:55:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 92359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21154:8:130",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "21098:64:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 92354,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21082:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21085:12:130",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "21082:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 92360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21082:81:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92361,
                  "nodeType": "ExpressionStatement",
                  "src": "21082:81:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92365,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "21182:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92362,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21173:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21176:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "21173:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21173:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92367,
                  "nodeType": "ExpressionStatement",
                  "src": "21173:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92371,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "21226:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92372,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "21231:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92373,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92279,
                        "src": "21238:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 92374,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92298,
                        "src": "21243:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 92368,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "21196:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21208:17:130",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61528,
                      "src": "21196:29:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 92375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21196:55:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92376,
                  "nodeType": "ExpressionStatement",
                  "src": "21196:55:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 92382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21286:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 92381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21278:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21278:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21278:10:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 92386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21300:1:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 92385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "21290:9:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 92384,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21294:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 92387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21290:12:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92377,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "21262:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21268:9:130",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92540,
                      "src": "21262:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21262:41:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92389,
                  "nodeType": "ExpressionStatement",
                  "src": "21262:41:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92395,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "21350:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 92394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21342:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 92393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21342:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21342:20:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 92399,
                                "name": "ILBToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70587,
                                "src": "21387:8:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBToken_$70587_$",
                                  "typeString": "type(contract ILBToken)"
                                }
                              },
                              "id": 92400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "21396:17:130",
                              "memberName": "batchTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70586,
                              "src": "21387:26:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function ILBToken.batchTransferFrom(address,address,uint256[] calldata,uint256[] calldata)"
                              }
                            },
                            "id": 92401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21414:8:130",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "21387:35:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 92402,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "21424:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92403,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "21429:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 92404,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92279,
                            "src": "21436:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 92405,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92298,
                            "src": "21441:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 92397,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21364:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 92398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21368:18:130",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "21364:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 92406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21364:85:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 92390,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89988,
                        "src": "21314:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 92392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21320:8:130",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92556,
                      "src": "21314:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 92407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21314:145:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92408,
                  "nodeType": "ExpressionStatement",
                  "src": "21314:145:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92412,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "21501:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92413,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92279,
                              "src": "21508:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92415,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21512:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21508:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92410,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "21479:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21491:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "21479:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21479:36:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21517:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a31",
                        "id": 92418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21520:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e8a469e7afd66e6d8fe4581d22c75b6ee572a2945b5b465e50d1038c7339eb3",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::1\""
                        },
                        "value": "test_BatchTransferFromReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e8a469e7afd66e6d8fe4581d22c75b6ee572a2945b5b465e50d1038c7339eb3",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::1\""
                        }
                      ],
                      "id": 92409,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21470:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21470:88:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92420,
                  "nodeType": "ExpressionStatement",
                  "src": "21470:88:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92424,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "21599:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92425,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92279,
                              "src": "21604:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92427,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21608:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21604:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92422,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "21577:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21589:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "21577:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21577:34:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21613:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a32",
                        "id": 92430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21616:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbca1f74d8accb0b09f890d0e02e68955a96e8db84a5193b07d743e183722f7f",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::2\""
                        },
                        "value": "test_BatchTransferFromReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbca1f74d8accb0b09f890d0e02e68955a96e8db84a5193b07d743e183722f7f",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::2\""
                        }
                      ],
                      "id": 92421,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "21568:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21568:86:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92432,
                  "nodeType": "ExpressionStatement",
                  "src": "21568:86:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92436,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "21674:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 92433,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21665:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 92435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21668:5:130",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "21665:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21665:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92438,
                  "nodeType": "ExpressionStatement",
                  "src": "21665:13:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92442,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "21718:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92443,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "21723:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 92444,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92279,
                        "src": "21730:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 92445,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92298,
                        "src": "21735:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 92439,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "21688:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 92441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21700:17:130",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61528,
                      "src": "21688:29:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 92446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21688:55:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92447,
                  "nodeType": "ExpressionStatement",
                  "src": "21688:55:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92451,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "21785:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92452,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92279,
                              "src": "21792:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92454,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21796:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21792:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92449,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "21763:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21775:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "21763:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21763:36:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21801:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a33",
                        "id": 92457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21804:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7506d4545ec779af78fb73bdcad46af1b348e6815212ff4e26dda8cc8ecb85ac",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::3\""
                        },
                        "value": "test_BatchTransferFromReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7506d4545ec779af78fb73bdcad46af1b348e6815212ff4e26dda8cc8ecb85ac",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::3\""
                        }
                      ],
                      "id": 92448,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "21754:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21754:88:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92459,
                  "nodeType": "ExpressionStatement",
                  "src": "21754:88:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 92463,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105060,
                            "src": "21883:3:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 92464,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92279,
                              "src": "21888:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 92466,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 92465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21892:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21888:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92461,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "21861:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 92462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21873:9:130",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "21861:21:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 92467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21861:34:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 92468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21897:1:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a34",
                        "id": 92469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21900:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ae74d5a8b40e8fcc5754ed81286056e40f36feb51cf290ff1970c1f5833c0de",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::4\""
                        },
                        "value": "test_BatchTransferFromReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ae74d5a8b40e8fcc5754ed81286056e40f36feb51cf290ff1970c1f5833c0de",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::4\""
                        }
                      ],
                      "id": 92460,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21852:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 92470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21852:86:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92471,
                  "nodeType": "ExpressionStatement",
                  "src": "21852:86:130"
                }
              ]
            },
            "functionSelector": "2cb279c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BatchTransferFromReentrancy",
            "nameLocation": "20583:32:130",
            "parameters": {
              "id": 92273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20615:2:130"
            },
            "returnParameters": {
              "id": 92274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20625:0:130"
            },
            "scope": 92474,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 89981,
              "name": "TestHelper",
              "nameLocations": [
                "783:10:130"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106622,
              "src": "783:10:130"
            },
            "id": 89982,
            "nodeType": "InheritanceSpecifier",
            "src": "783:10:130"
          }
        ],
        "canonicalName": "LBPairHooksTest",
        "contractDependencies": [
          41441,
          59243,
          62123,
          62426,
          63714,
          66964,
          93128,
          122897,
          122951,
          123990
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          92474,
          106622,
          12146,
          12094,
          6774,
          6414,
          5621,
          3561,
          2734,
          65,
          62
        ],
        "name": "LBPairHooksTest",
        "nameLocation": "764:15:130",
        "scope": 93129,
        "usedErrors": [
          76568,
          76578,
          78857
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7556,
          7562
        ]
      },
      {
        "id": 93128,
        "nodeType": "ContractDefinition",
        "src": "21949:5549:130",
        "nodes": [
          {
            "id": 92479,
            "nodeType": "VariableDeclaration",
            "src": "21989:26:130",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_beforeState",
            "nameLocation": "22003:12:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_State_$89980_storage",
              "typeString": "struct State"
            },
            "typeName": {
              "id": 92478,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92477,
                "name": "State",
                "nameLocations": [
                  "21989:5:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 89980,
                "src": "21989:5:130"
              },
              "referencedDeclaration": 89980,
              "src": "21989:5:130",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                "typeString": "struct State"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92482,
            "nodeType": "VariableDeclaration",
            "src": "22021:25:130",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_afterState",
            "nameLocation": "22035:11:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_State_$89980_storage",
              "typeString": "struct State"
            },
            "typeName": {
              "id": 92481,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92480,
                "name": "State",
                "nameLocations": [
                  "22021:5:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 89980,
                "src": "22021:5:130"
              },
              "referencedDeclaration": 89980,
              "src": "22021:5:130",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                "typeString": "struct State"
              }
            },
            "visibility": "private"
          },
          {
            "id": 92484,
            "nodeType": "VariableDeclaration",
            "src": "22053:27:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "0f146a3e",
            "mutability": "mutable",
            "name": "beforeTarget",
            "nameLocation": "22068:12:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92483,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "22053:7:130",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92486,
            "nodeType": "VariableDeclaration",
            "src": "22086:29:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "df0ccc48",
            "mutability": "mutable",
            "name": "beforeTargetData",
            "nameLocation": "22099:16:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 92485,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "22086:5:130",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92488,
            "nodeType": "VariableDeclaration",
            "src": "22122:26:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "2aac3e12",
            "mutability": "mutable",
            "name": "afterTarget",
            "nameLocation": "22137:11:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 92487,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "22122:7:130",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92490,
            "nodeType": "VariableDeclaration",
            "src": "22154:28:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "c153f4cd",
            "mutability": "mutable",
            "name": "afterTargetData",
            "nameLocation": "22167:15:130",
            "scope": 93128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 92489,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "22154:5:130",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "public"
          },
          {
            "id": 92499,
            "nodeType": "FunctionDefinition",
            "src": "22189:97:130",
            "nodes": [],
            "body": {
              "id": 92498,
              "nodeType": "Block",
              "src": "22250:36:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92496,
                    "name": "_beforeState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92479,
                    "src": "22267:12:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "functionReturnParameters": 92495,
                  "id": 92497,
                  "nodeType": "Return",
                  "src": "22260:19:130"
                }
              ]
            },
            "functionSelector": "78b253c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeforeState",
            "nameLocation": "22198:14:130",
            "parameters": {
              "id": 92491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22212:2:130"
            },
            "returnParameters": {
              "id": 92495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92499,
                  "src": "22236:12:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 92493,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92492,
                      "name": "State",
                      "nameLocations": [
                        "22236:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89980,
                      "src": "22236:5:130"
                    },
                    "referencedDeclaration": 89980,
                    "src": "22236:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22235:14:130"
            },
            "scope": 93128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92508,
            "nodeType": "FunctionDefinition",
            "src": "22292:95:130",
            "nodes": [],
            "body": {
              "id": 92507,
              "nodeType": "Block",
              "src": "22352:35:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92505,
                    "name": "_afterState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92482,
                    "src": "22369:11:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "functionReturnParameters": 92504,
                  "id": 92506,
                  "nodeType": "Return",
                  "src": "22362:18:130"
                }
              ]
            },
            "functionSelector": "f08e95c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAfterState",
            "nameLocation": "22301:13:130",
            "parameters": {
              "id": 92500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22314:2:130"
            },
            "returnParameters": {
              "id": 92504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 92508,
                  "src": "22338:12:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 92502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92501,
                      "name": "State",
                      "nameLocations": [
                        "22338:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89980,
                      "src": "22338:5:130"
                    },
                    "referencedDeclaration": 89980,
                    "src": "22338:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22337:14:130"
            },
            "scope": 93128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92524,
            "nodeType": "FunctionDefinition",
            "src": "22393:121:130",
            "nodes": [],
            "body": {
              "id": 92523,
              "nodeType": "Block",
              "src": "22426:88:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 92512,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22436:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22442:5:130",
                      "memberName": "reset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123711,
                      "src": "22436:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22436:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92516,
                  "nodeType": "ExpressionStatement",
                  "src": "22436:13:130"
                },
                {
                  "expression": {
                    "id": 92518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "22460:19:130",
                    "subExpression": {
                      "id": 92517,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "22467:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92519,
                  "nodeType": "ExpressionStatement",
                  "src": "22460:19:130"
                },
                {
                  "expression": {
                    "id": 92521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "22489:18:130",
                    "subExpression": {
                      "id": 92520,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "22496:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92522,
                  "nodeType": "ExpressionStatement",
                  "src": "22489:18:130"
                }
              ]
            },
            "baseFunctions": [
              123711
            ],
            "functionSelector": "d826f88f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "22402:5:130",
            "overrides": {
              "id": 92510,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22417:8:130"
            },
            "parameters": {
              "id": 92509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22407:2:130"
            },
            "returnParameters": {
              "id": 92511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22426:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92540,
            "nodeType": "FunctionDefinition",
            "src": "22520:134:130",
            "nodes": [],
            "body": {
              "id": 92539,
              "nodeType": "Block",
              "src": "22583:71:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92531,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92484,
                      "src": "22593:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92532,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92526,
                      "src": "22608:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22593:21:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92534,
                  "nodeType": "ExpressionStatement",
                  "src": "22593:21:130"
                },
                {
                  "expression": {
                    "id": 92537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92535,
                      "name": "beforeTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92486,
                      "src": "22624:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92536,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92528,
                      "src": "22643:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "22624:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 92538,
                  "nodeType": "ExpressionStatement",
                  "src": "22624:23:130"
                }
              ]
            },
            "functionSelector": "33ad78d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBefore",
            "nameLocation": "22529:9:130",
            "parameters": {
              "id": 92529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92526,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "22547:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92540,
                  "src": "22539:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22539:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92528,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "22570:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92540,
                  "src": "22555:19:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92527,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22555:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22538:37:130"
            },
            "returnParameters": {
              "id": 92530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22583:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92556,
            "nodeType": "FunctionDefinition",
            "src": "22660:131:130",
            "nodes": [],
            "body": {
              "id": 92555,
              "nodeType": "Block",
              "src": "22722:69:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 92549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92547,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92488,
                      "src": "22732:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92548,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92542,
                      "src": "22746:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22732:20:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92550,
                  "nodeType": "ExpressionStatement",
                  "src": "22732:20:130"
                },
                {
                  "expression": {
                    "id": 92553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92551,
                      "name": "afterTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92490,
                      "src": "22762:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92552,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92544,
                      "src": "22780:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "22762:22:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 92554,
                  "nodeType": "ExpressionStatement",
                  "src": "22762:22:130"
                }
              ]
            },
            "functionSelector": "c70e8bd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAfter",
            "nameLocation": "22669:8:130",
            "parameters": {
              "id": 92545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92542,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "22686:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92556,
                  "src": "22678:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22678:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92544,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "22709:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92556,
                  "src": "22694:19:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92543,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22694:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22677:37:130"
            },
            "returnParameters": {
              "id": 92546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22722:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 92577,
            "nodeType": "FunctionDefinition",
            "src": "22797:198:130",
            "nodes": [],
            "body": {
              "id": 92576,
              "nodeType": "Block",
              "src": "22892:103:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92567,
                        "name": "hooksParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92558,
                        "src": "22920:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 92568,
                        "name": "onHooksSetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92560,
                        "src": "22937:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 92564,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22902:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22908:11:130",
                      "memberName": "_onHooksSet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123737,
                      "src": "22902:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes calldata)"
                      }
                    },
                    "id": 92569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22902:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92570,
                  "nodeType": "ExpressionStatement",
                  "src": "22902:50:130"
                },
                {
                  "expression": {
                    "id": 92574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92571,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "22963:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92572,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "22978:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22978:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "22963:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92575,
                  "nodeType": "ExpressionStatement",
                  "src": "22963:25:130"
                }
              ]
            },
            "baseFunctions": [
              123737
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onHooksSet",
            "nameLocation": "22806:11:130",
            "overrides": {
              "id": 92562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22883:8:130"
            },
            "parameters": {
              "id": 92561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92558,
                  "mutability": "mutable",
                  "name": "hooksParameters",
                  "nameLocation": "22826:15:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92577,
                  "src": "22818:23:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92557,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22818:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92560,
                  "mutability": "mutable",
                  "name": "onHooksSetData",
                  "nameLocation": "22858:14:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92577,
                  "src": "22843:29:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 92559,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22843:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22817:56:130"
            },
            "returnParameters": {
              "id": 92563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22892:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92615,
            "nodeType": "FunctionDefinition",
            "src": "23001:274:130",
            "nodes": [],
            "body": {
              "id": 92614,
              "nodeType": "Block",
              "src": "23102:173:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92589,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92579,
                      "src": "23116:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92592,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23134:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23126:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23126:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23126:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23116:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92596,
                  "nodeType": "IfStatement",
                  "src": "23112:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92588,
                    "id": 92595,
                    "nodeType": "Return",
                    "src": "23141:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92600,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92579,
                        "src": "23176:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92601,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92581,
                        "src": "23184:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92602,
                        "name": "swapForY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92583,
                        "src": "23188:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 92603,
                        "name": "amountsIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92585,
                        "src": "23198:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92597,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23158:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23164:11:130",
                      "memberName": "_beforeSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123755,
                      "src": "23158:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bool,bytes32)"
                      }
                    },
                    "id": 92604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23158:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92605,
                  "nodeType": "ExpressionStatement",
                  "src": "23158:50:130"
                },
                {
                  "expression": {
                    "id": 92609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92606,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "23219:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92607,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "23234:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23234:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23219:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92610,
                  "nodeType": "ExpressionStatement",
                  "src": "23219:25:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92611,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93102,
                      "src": "23255:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23255:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92613,
                  "nodeType": "ExpressionStatement",
                  "src": "23255:13:130"
                }
              ]
            },
            "baseFunctions": [
              123755
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeSwap",
            "nameLocation": "23010:11:130",
            "overrides": {
              "id": 92587,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23093:8:130"
            },
            "parameters": {
              "id": 92586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92579,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23030:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92615,
                  "src": "23022:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23022:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92581,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23046:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92615,
                  "src": "23038:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23038:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92583,
                  "mutability": "mutable",
                  "name": "swapForY",
                  "nameLocation": "23055:8:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92615,
                  "src": "23050:13:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92582,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23050:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92585,
                  "mutability": "mutable",
                  "name": "amountsIn",
                  "nameLocation": "23073:9:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92615,
                  "src": "23065:17:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92584,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23065:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23021:62:130"
            },
            "returnParameters": {
              "id": 92588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23102:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92653,
            "nodeType": "FunctionDefinition",
            "src": "23281:272:130",
            "nodes": [],
            "body": {
              "id": 92652,
              "nodeType": "Block",
              "src": "23382:171:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92627,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92617,
                      "src": "23396:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92630,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23414:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23406:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23406:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23406:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23396:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92634,
                  "nodeType": "IfStatement",
                  "src": "23392:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92626,
                    "id": 92633,
                    "nodeType": "Return",
                    "src": "23421:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92638,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92617,
                        "src": "23455:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92639,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92619,
                        "src": "23463:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92640,
                        "name": "swapForY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92621,
                        "src": "23467:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 92641,
                        "name": "amountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92623,
                        "src": "23477:10:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92635,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23438:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23444:10:130",
                      "memberName": "_afterSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123773,
                      "src": "23438:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bool,bytes32)"
                      }
                    },
                    "id": 92642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23438:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92643,
                  "nodeType": "ExpressionStatement",
                  "src": "23438:50:130"
                },
                {
                  "expression": {
                    "id": 92647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92644,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "23499:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92645,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "23513:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23513:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23499:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92648,
                  "nodeType": "ExpressionStatement",
                  "src": "23499:24:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92649,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93127,
                      "src": "23534:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23534:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92651,
                  "nodeType": "ExpressionStatement",
                  "src": "23534:12:130"
                }
              ]
            },
            "baseFunctions": [
              123773
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterSwap",
            "nameLocation": "23290:10:130",
            "overrides": {
              "id": 92625,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23373:8:130"
            },
            "parameters": {
              "id": 92624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92617,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23309:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92653,
                  "src": "23301:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23301:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92619,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23325:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92653,
                  "src": "23317:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23317:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92621,
                  "mutability": "mutable",
                  "name": "swapForY",
                  "nameLocation": "23334:8:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92653,
                  "src": "23329:13:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23329:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92623,
                  "mutability": "mutable",
                  "name": "amountsOut",
                  "nameLocation": "23352:10:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92653,
                  "src": "23344:18:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23344:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23300:63:130"
            },
            "returnParameters": {
              "id": 92626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23382:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92688,
            "nodeType": "FunctionDefinition",
            "src": "23559:255:130",
            "nodes": [],
            "body": {
              "id": 92687,
              "nodeType": "Block",
              "src": "23648:166:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92663,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92655,
                      "src": "23662:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92666,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23680:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23672:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92664,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23672:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23672:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23662:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92670,
                  "nodeType": "IfStatement",
                  "src": "23658:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92662,
                    "id": 92669,
                    "nodeType": "Return",
                    "src": "23687:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92674,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92655,
                        "src": "23727:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92675,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92657,
                        "src": "23735:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92676,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92659,
                        "src": "23739:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92671,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23704:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23710:16:130",
                      "memberName": "_beforeFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123789,
                      "src": "23704:22:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32)"
                      }
                    },
                    "id": 92677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23704:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92678,
                  "nodeType": "ExpressionStatement",
                  "src": "23704:43:130"
                },
                {
                  "expression": {
                    "id": 92682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92679,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "23758:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92680,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "23773:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23773:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23758:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92683,
                  "nodeType": "ExpressionStatement",
                  "src": "23758:25:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92684,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93102,
                      "src": "23794:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23794:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92686,
                  "nodeType": "ExpressionStatement",
                  "src": "23794:13:130"
                }
              ]
            },
            "baseFunctions": [
              123789
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFlashLoan",
            "nameLocation": "23568:16:130",
            "overrides": {
              "id": 92661,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23639:8:130"
            },
            "parameters": {
              "id": 92660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92655,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23593:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92688,
                  "src": "23585:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23585:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92657,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23609:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92688,
                  "src": "23601:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23601:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92659,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "23621:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92688,
                  "src": "23613:15:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23613:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23584:45:130"
            },
            "returnParameters": {
              "id": 92662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23648:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92726,
            "nodeType": "FunctionDefinition",
            "src": "23820:281:130",
            "nodes": [],
            "body": {
              "id": 92725,
              "nodeType": "Block",
              "src": "23927:174:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92700,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92690,
                      "src": "23941:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92703,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23959:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23951:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92701,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23951:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23951:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23941:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92707,
                  "nodeType": "IfStatement",
                  "src": "23937:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92699,
                    "id": 92706,
                    "nodeType": "Return",
                    "src": "23966:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92711,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92690,
                        "src": "24005:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92712,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92692,
                        "src": "24013:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92713,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92694,
                        "src": "24017:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 92714,
                        "name": "feesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92696,
                        "src": "24023:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92708,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23983:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23989:15:130",
                      "memberName": "_afterFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123807,
                      "src": "23983:21:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes32)"
                      }
                    },
                    "id": 92715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23983:53:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92716,
                  "nodeType": "ExpressionStatement",
                  "src": "23983:53:130"
                },
                {
                  "expression": {
                    "id": 92720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92717,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "24047:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92718,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "24061:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24061:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24047:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92721,
                  "nodeType": "ExpressionStatement",
                  "src": "24047:24:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92722,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93127,
                      "src": "24082:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24082:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92724,
                  "nodeType": "ExpressionStatement",
                  "src": "24082:12:130"
                }
              ]
            },
            "baseFunctions": [
              123807
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterFlashLoan",
            "nameLocation": "23829:15:130",
            "overrides": {
              "id": 92698,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23918:8:130"
            },
            "parameters": {
              "id": 92697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92690,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23853:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92726,
                  "src": "23845:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23845:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92692,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23869:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92726,
                  "src": "23861:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23861:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92694,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "23881:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92726,
                  "src": "23873:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92693,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23873:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92696,
                  "mutability": "mutable",
                  "name": "feesReceived",
                  "nameLocation": "23895:12:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92726,
                  "src": "23887:20:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92695,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23887:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23844:64:130"
            },
            "returnParameters": {
              "id": 92699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23927:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92765,
            "nodeType": "FunctionDefinition",
            "src": "24107:336:130",
            "nodes": [],
            "body": {
              "id": 92764,
              "nodeType": "Block",
              "src": "24256:187:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92739,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92728,
                      "src": "24270:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92742,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24288:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24280:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24280:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24280:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24270:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92746,
                  "nodeType": "IfStatement",
                  "src": "24266:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92738,
                    "id": 92745,
                    "nodeType": "Return",
                    "src": "24295:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92750,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92728,
                        "src": "24330:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92751,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92730,
                        "src": "24338:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92752,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92733,
                        "src": "24342:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 92753,
                        "name": "amountsReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92735,
                        "src": "24360:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92747,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "24312:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24318:11:130",
                      "memberName": "_beforeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123826,
                      "src": "24312:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32[] calldata,bytes32)"
                      }
                    },
                    "id": 92754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24312:64:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92755,
                  "nodeType": "ExpressionStatement",
                  "src": "24312:64:130"
                },
                {
                  "expression": {
                    "id": 92759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92756,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "24387:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92757,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "24402:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24402:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24387:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92760,
                  "nodeType": "ExpressionStatement",
                  "src": "24387:25:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92761,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93102,
                      "src": "24423:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24423:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92763,
                  "nodeType": "ExpressionStatement",
                  "src": "24423:13:130"
                }
              ]
            },
            "baseFunctions": [
              123826
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeMint",
            "nameLocation": "24116:11:130",
            "overrides": {
              "id": 92737,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24243:8:130"
            },
            "parameters": {
              "id": 92736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92728,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24136:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92765,
                  "src": "24128:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24128:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92730,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24152:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92765,
                  "src": "24144:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24144:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92733,
                  "mutability": "mutable",
                  "name": "liquidityConfigs",
                  "nameLocation": "24175:16:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92765,
                  "src": "24156:35:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92731,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "24156:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 92732,
                    "nodeType": "ArrayTypeName",
                    "src": "24156:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92735,
                  "mutability": "mutable",
                  "name": "amountsReceived",
                  "nameLocation": "24201:15:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92765,
                  "src": "24193:23:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24193:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24127:90:130"
            },
            "returnParameters": {
              "id": 92738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24256:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92804,
            "nodeType": "FunctionDefinition",
            "src": "24449:320:130",
            "nodes": [],
            "body": {
              "id": 92803,
              "nodeType": "Block",
              "src": "24591:178:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92778,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92767,
                      "src": "24605:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92781,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24623:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24615:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24615:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24615:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24605:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92785,
                  "nodeType": "IfStatement",
                  "src": "24601:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92777,
                    "id": 92784,
                    "nodeType": "Return",
                    "src": "24630:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92789,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92767,
                        "src": "24664:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92790,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92769,
                        "src": "24672:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92791,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92772,
                        "src": "24676:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 92792,
                        "name": "amountsIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92774,
                        "src": "24694:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 92786,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "24647:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24653:10:130",
                      "memberName": "_afterMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123845,
                      "src": "24647:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32[] calldata,bytes32)"
                      }
                    },
                    "id": 92793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24647:57:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92794,
                  "nodeType": "ExpressionStatement",
                  "src": "24647:57:130"
                },
                {
                  "expression": {
                    "id": 92798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92795,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "24715:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92796,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "24729:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24729:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24715:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92799,
                  "nodeType": "ExpressionStatement",
                  "src": "24715:24:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92800,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93127,
                      "src": "24750:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24750:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92802,
                  "nodeType": "ExpressionStatement",
                  "src": "24750:12:130"
                }
              ]
            },
            "baseFunctions": [
              123845
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterMint",
            "nameLocation": "24458:10:130",
            "overrides": {
              "id": 92776,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24578:8:130"
            },
            "parameters": {
              "id": 92775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92767,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24477:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92804,
                  "src": "24469:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24469:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92769,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24493:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92804,
                  "src": "24485:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24485:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92772,
                  "mutability": "mutable",
                  "name": "liquidityConfigs",
                  "nameLocation": "24516:16:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92804,
                  "src": "24497:35:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92770,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "24497:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 92771,
                    "nodeType": "ArrayTypeName",
                    "src": "24497:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92774,
                  "mutability": "mutable",
                  "name": "amountsIn",
                  "nameLocation": "24542:9:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92804,
                  "src": "24534:17:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 92773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24534:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24468:84:130"
            },
            "returnParameters": {
              "id": 92777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24591:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92847,
            "nodeType": "FunctionDefinition",
            "src": "24775:363:130",
            "nodes": [],
            "body": {
              "id": 92846,
              "nodeType": "Block",
              "src": "24960:178:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92820,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92806,
                      "src": "24974:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92823,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24992:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24984:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24984:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24984:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24974:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92827,
                  "nodeType": "IfStatement",
                  "src": "24970:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92819,
                    "id": 92826,
                    "nodeType": "Return",
                    "src": "24999:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92831,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92806,
                        "src": "25034:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92832,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92808,
                        "src": "25042:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92833,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92810,
                        "src": "25048:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92834,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92813,
                        "src": "25052:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 92835,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92816,
                        "src": "25057:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 92828,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25016:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25022:11:130",
                      "memberName": "_beforeBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123867,
                      "src": "25016:17:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 92836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25016:55:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92837,
                  "nodeType": "ExpressionStatement",
                  "src": "25016:55:130"
                },
                {
                  "expression": {
                    "id": 92841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92838,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "25082:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92839,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "25097:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25097:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25082:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92842,
                  "nodeType": "ExpressionStatement",
                  "src": "25082:25:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92843,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93102,
                      "src": "25118:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25118:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92845,
                  "nodeType": "ExpressionStatement",
                  "src": "25118:13:130"
                }
              ]
            },
            "baseFunctions": [
              123867
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeBurn",
            "nameLocation": "24784:11:130",
            "overrides": {
              "id": 92818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24951:8:130"
            },
            "parameters": {
              "id": 92817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92806,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24813:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92847,
                  "src": "24805:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24805:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92808,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "24837:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92847,
                  "src": "24829:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24829:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92810,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24859:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92847,
                  "src": "24851:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24851:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92813,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "24890:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92847,
                  "src": "24871:22:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92811,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "24871:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92812,
                    "nodeType": "ArrayTypeName",
                    "src": "24871:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92816,
                  "mutability": "mutable",
                  "name": "amountsToBurn",
                  "nameLocation": "24922:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92847,
                  "src": "24903:32:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92814,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "24903:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92815,
                    "nodeType": "ArrayTypeName",
                    "src": "24903:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24795:146:130"
            },
            "returnParameters": {
              "id": 92819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24960:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92890,
            "nodeType": "FunctionDefinition",
            "src": "25144:359:130",
            "nodes": [],
            "body": {
              "id": 92889,
              "nodeType": "Block",
              "src": "25328:175:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92863,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92849,
                      "src": "25342:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92866,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "25360:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25352:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25352:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25352:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25342:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92870,
                  "nodeType": "IfStatement",
                  "src": "25338:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92862,
                    "id": 92869,
                    "nodeType": "Return",
                    "src": "25367:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92874,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92849,
                        "src": "25401:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92875,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92851,
                        "src": "25409:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92876,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92853,
                        "src": "25415:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92877,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92856,
                        "src": "25419:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 92878,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92859,
                        "src": "25424:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 92871,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25384:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25390:10:130",
                      "memberName": "_afterBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123889,
                      "src": "25384:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 92879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25384:54:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92880,
                  "nodeType": "ExpressionStatement",
                  "src": "25384:54:130"
                },
                {
                  "expression": {
                    "id": 92884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92881,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "25449:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92882,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "25463:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25463:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25449:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92885,
                  "nodeType": "ExpressionStatement",
                  "src": "25449:24:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92886,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93127,
                      "src": "25484:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25484:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92888,
                  "nodeType": "ExpressionStatement",
                  "src": "25484:12:130"
                }
              ]
            },
            "baseFunctions": [
              123889
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterBurn",
            "nameLocation": "25153:10:130",
            "overrides": {
              "id": 92861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25319:8:130"
            },
            "parameters": {
              "id": 92860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92849,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25181:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92890,
                  "src": "25173:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25173:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92851,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25205:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92890,
                  "src": "25197:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25197:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92853,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25227:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92890,
                  "src": "25219:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25219:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92856,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "25258:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92890,
                  "src": "25239:22:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92854,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25239:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92855,
                    "nodeType": "ArrayTypeName",
                    "src": "25239:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92859,
                  "mutability": "mutable",
                  "name": "amountsToBurn",
                  "nameLocation": "25290:13:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92890,
                  "src": "25271:32:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92857,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25271:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92858,
                    "nodeType": "ArrayTypeName",
                    "src": "25271:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25163:146:130"
            },
            "returnParameters": {
              "id": 92862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25328:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92933,
            "nodeType": "FunctionDefinition",
            "src": "25509:377:130",
            "nodes": [],
            "body": {
              "id": 92932,
              "nodeType": "Block",
              "src": "25701:185:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92906,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92892,
                      "src": "25715:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92909,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "25733:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25725:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25725:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25725:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25715:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92913,
                  "nodeType": "IfStatement",
                  "src": "25711:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92905,
                    "id": 92912,
                    "nodeType": "Return",
                    "src": "25740:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92917,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92892,
                        "src": "25788:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92918,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92894,
                        "src": "25796:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92919,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92896,
                        "src": "25802:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92920,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92899,
                        "src": "25806:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 92921,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92902,
                        "src": "25811:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 92914,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25757:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25763:24:130",
                      "memberName": "_beforeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123911,
                      "src": "25757:30:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 92922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25757:62:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92923,
                  "nodeType": "ExpressionStatement",
                  "src": "25757:62:130"
                },
                {
                  "expression": {
                    "id": 92927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92924,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92479,
                      "src": "25830:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92925,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "25845:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25845:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25830:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92928,
                  "nodeType": "ExpressionStatement",
                  "src": "25830:25:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92929,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93102,
                      "src": "25866:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25866:13:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92931,
                  "nodeType": "ExpressionStatement",
                  "src": "25866:13:130"
                }
              ]
            },
            "baseFunctions": [
              123911
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeBatchTransferFrom",
            "nameLocation": "25518:24:130",
            "overrides": {
              "id": 92904,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25692:8:130"
            },
            "parameters": {
              "id": 92903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92892,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25560:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92933,
                  "src": "25552:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25552:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92894,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25584:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92933,
                  "src": "25576:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25576:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92896,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25606:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92933,
                  "src": "25598:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25598:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92899,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "25637:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92933,
                  "src": "25618:22:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92897,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25618:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92898,
                    "nodeType": "ArrayTypeName",
                    "src": "25618:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92902,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "25669:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92933,
                  "src": "25650:26:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92900,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25650:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92901,
                    "nodeType": "ArrayTypeName",
                    "src": "25650:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25542:140:130"
            },
            "returnParameters": {
              "id": 92905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25701:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 92976,
            "nodeType": "FunctionDefinition",
            "src": "25892:373:130",
            "nodes": [],
            "body": {
              "id": 92975,
              "nodeType": "Block",
              "src": "26083:182:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 92954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92949,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92935,
                      "src": "26097:6:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 92952,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "26115:4:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$93128",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 92951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26107:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 92950,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26107:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 92953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26107:13:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26097:23:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 92956,
                  "nodeType": "IfStatement",
                  "src": "26093:36:130",
                  "trueBody": {
                    "functionReturnParameters": 92948,
                    "id": 92955,
                    "nodeType": "Return",
                    "src": "26122:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92960,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92935,
                        "src": "26169:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92961,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92937,
                        "src": "26177:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92962,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92939,
                        "src": "26183:2:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92963,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92942,
                        "src": "26187:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 92964,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92945,
                        "src": "26192:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 92957,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "26139:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$93128_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 92959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26145:23:130",
                      "memberName": "_afterBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123933,
                      "src": "26139:29:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 92965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26139:61:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92966,
                  "nodeType": "ExpressionStatement",
                  "src": "26139:61:130"
                },
                {
                  "expression": {
                    "id": 92970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 92967,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92482,
                      "src": "26211:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 92968,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93077,
                        "src": "26225:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$89980_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 92969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26225:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "26211:24:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 92971,
                  "nodeType": "ExpressionStatement",
                  "src": "26211:24:130"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92972,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93127,
                      "src": "26246:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 92973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26246:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92974,
                  "nodeType": "ExpressionStatement",
                  "src": "26246:12:130"
                }
              ]
            },
            "baseFunctions": [
              123933
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterBatchTransferFrom",
            "nameLocation": "25901:23:130",
            "overrides": {
              "id": 92947,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26074:8:130"
            },
            "parameters": {
              "id": 92946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92935,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25942:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "25934:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25934:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92937,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25966:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "25958:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25958:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92939,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25988:2:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "25980:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25980:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92942,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "26019:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "26000:22:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92940,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26000:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92941,
                    "nodeType": "ArrayTypeName",
                    "src": "26000:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92945,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "26051:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 92976,
                  "src": "26032:26:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92943,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26032:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 92944,
                    "nodeType": "ArrayTypeName",
                    "src": "26032:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25924:140:130"
            },
            "returnParameters": {
              "id": 92948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26083:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 93077,
            "nodeType": "FunctionDefinition",
            "src": "26271:793:130",
            "nodes": [],
            "body": {
              "id": 93076,
              "nodeType": "Block",
              "src": "26332:732:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    92984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92984,
                      "mutability": "mutable",
                      "name": "lbPair",
                      "nameLocation": "26350:6:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 93076,
                      "src": "26342:14:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 92983,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 92982,
                          "name": "ILBPair",
                          "nameLocations": [
                            "26342:7:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "26342:7:130"
                        },
                        "referencedDeclaration": 69932,
                        "src": "26342:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92987,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92985,
                      "name": "_getLBPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123723
                      ],
                      "referencedDeclaration": 123723,
                      "src": "26359:10:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ILBPair_$69932_$",
                        "typeString": "function () view returns (contract ILBPair)"
                      }
                    },
                    "id": 92986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26359:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26342:29:130"
                },
                {
                  "expression": {
                    "id": 92997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 92988,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26383:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 92990,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26389:8:130",
                          "memberName": "reserveX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89961,
                          "src": "26383:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 92991,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26399:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 92992,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26405:8:130",
                          "memberName": "reserveY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89963,
                          "src": "26399:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 92993,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26382:32:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 92994,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92984,
                          "src": "26417:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 92995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26424:11:130",
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69715,
                        "src": "26417:18:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 92996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26417:20:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26382:55:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92998,
                  "nodeType": "ExpressionStatement",
                  "src": "26382:55:130"
                },
                {
                  "expression": {
                    "id": 93008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 92999,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26448:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 93001,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26454:12:130",
                          "memberName": "protocolFeeX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89965,
                          "src": "26448:18:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 93002,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26468:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 93003,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26474:12:130",
                          "memberName": "protocolFeeY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89967,
                          "src": "26468:18:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 93004,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26447:40:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 93005,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92984,
                          "src": "26490:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 93006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26497:15:130",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69745,
                        "src": "26490:22:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 93007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26490:24:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26447:67:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93009,
                  "nodeType": "ExpressionStatement",
                  "src": "26447:67:130"
                },
                {
                  "assignments": [
                    93011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93011,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "26531:8:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 93076,
                      "src": "26524:15:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 93010,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "26524:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 93019,
                  "initialValue": {
                    "components": [
                      {
                        "id": 93017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 93012,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26543:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 93013,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26549:8:130",
                          "memberName": "activeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89969,
                          "src": "26543:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 93014,
                              "name": "lbPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92984,
                              "src": "26560:6:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILBPair_$69932",
                                "typeString": "contract ILBPair"
                              }
                            },
                            "id": 93015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "26567:11:130",
                            "memberName": "getActiveId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69720,
                            "src": "26560:18:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                              "typeString": "function () view external returns (uint24)"
                            }
                          },
                          "id": 93016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26560:20:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "src": "26543:37:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "id": 93018,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26542:39:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26524:57:130"
                },
                {
                  "expression": {
                    "id": 93030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 93020,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26592:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 93022,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26598:14:130",
                          "memberName": "activeReserveX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89971,
                          "src": "26592:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 93023,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92980,
                            "src": "26614:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 93024,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26620:14:130",
                          "memberName": "activeReserveY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89973,
                          "src": "26614:20:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 93025,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26591:44:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 93028,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93011,
                          "src": "26652:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 93026,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92984,
                          "src": "26638:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 93027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26645:6:130",
                        "memberName": "getBin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69729,
                        "src": "26638:13:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function (uint24) view external returns (uint128,uint128)"
                        }
                      },
                      "id": 93029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26638:23:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26591:70:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93031,
                  "nodeType": "ExpressionStatement",
                  "src": "26591:70:130"
                },
                {
                  "assignments": [
                    93034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93034,
                      "mutability": "mutable",
                      "name": "vp",
                      "nameLocation": "26700:2:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 93076,
                      "src": "26672:30:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 93033,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 93032,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "26672:20:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89948,
                          "src": "26672:20:130"
                        },
                        "referencedDeclaration": 89948,
                        "src": "26672:20:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$89948_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 93037,
                  "initialValue": {
                    "expression": {
                      "id": 93035,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92980,
                      "src": "26705:5:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 93036,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26711:20:130",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89976,
                    "src": "26705:26:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26672:59:130"
                },
                {
                  "expression": {
                    "id": 93051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 93038,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93034,
                            "src": "26742:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 93040,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26745:21:130",
                          "memberName": "volatilityAccumulator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89941,
                          "src": "26742:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 93041,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93034,
                            "src": "26768:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 93042,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26771:19:130",
                          "memberName": "volatilityReference",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89943,
                          "src": "26768:22:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 93043,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93034,
                            "src": "26792:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 93044,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26795:11:130",
                          "memberName": "idReference",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89945,
                          "src": "26792:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 93045,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93034,
                            "src": "26808:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$89948_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 93046,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26811:16:130",
                          "memberName": "timeOfLastUpdate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89947,
                          "src": "26808:19:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        }
                      ],
                      "id": 93047,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26741:87:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                        "typeString": "tuple(uint24,uint24,uint24,uint40)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 93048,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92984,
                          "src": "26843:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 93049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26850:24:130",
                        "memberName": "getVariableFeeParameters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69778,
                        "src": "26843:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                          "typeString": "function () view external returns (uint24,uint24,uint24,uint40)"
                        }
                      },
                      "id": 93050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26843:33:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                        "typeString": "tuple(uint24,uint24,uint24,uint40)"
                      }
                    },
                    "src": "26741:135:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93052,
                  "nodeType": "ExpressionStatement",
                  "src": "26741:135:130"
                },
                {
                  "assignments": [
                    93055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93055,
                      "mutability": "mutable",
                      "name": "op",
                      "nameLocation": "26911:2:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 93076,
                      "src": "26887:26:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 93054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 93053,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "26887:16:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89959,
                          "src": "26887:16:130"
                        },
                        "referencedDeclaration": 89959,
                        "src": "26887:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$89959_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 93058,
                  "initialValue": {
                    "expression": {
                      "id": 93056,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92980,
                      "src": "26916:5:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 93057,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26922:16:130",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89979,
                    "src": "26916:22:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26887:51:130"
                },
                {
                  "expression": {
                    "id": 93074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 93059,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93055,
                            "src": "26949:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 93061,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26952:14:130",
                          "memberName": "sampleLifetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89950,
                          "src": "26949:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "expression": {
                            "id": 93062,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93055,
                            "src": "26968:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 93063,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26971:4:130",
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89952,
                          "src": "26968:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 93064,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93055,
                            "src": "26977:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 93065,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26980:10:130",
                          "memberName": "activeSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89954,
                          "src": "26977:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 93066,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93055,
                            "src": "26992:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 93067,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26995:11:130",
                          "memberName": "lastUpdated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89956,
                          "src": "26992:14:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        {
                          "expression": {
                            "id": 93068,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93055,
                            "src": "27008:2:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$89959_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 93069,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "27011:14:130",
                          "memberName": "firstTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89958,
                          "src": "27008:17:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        }
                      ],
                      "id": 93070,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26948:78:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                        "typeString": "tuple(uint8,uint16,uint16,uint40,uint40)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 93071,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92984,
                          "src": "27029:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 93072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "27036:19:130",
                        "memberName": "getOracleParameters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69791,
                        "src": "27029:26:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                          "typeString": "function () view external returns (uint8,uint16,uint16,uint40,uint40)"
                        }
                      },
                      "id": 93073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27029:28:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                        "typeString": "tuple(uint8,uint16,uint16,uint40,uint40)"
                      }
                    },
                    "src": "26948:109:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93075,
                  "nodeType": "ExpressionStatement",
                  "src": "26948:109:130"
                }
              ]
            },
            "functionSelector": "1865c57d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "26280:8:130",
            "parameters": {
              "id": 92977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26288:2:130"
            },
            "returnParameters": {
              "id": 92981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92980,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "26325:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 93077,
                  "src": "26312:18:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$89980_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 92979,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92978,
                      "name": "State",
                      "nameLocations": [
                        "26312:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89980,
                      "src": "26312:5:130"
                    },
                    "referencedDeclaration": 89980,
                    "src": "26312:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$89980_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26311:20:130"
            },
            "scope": 93128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 93102,
            "nodeType": "FunctionDefinition",
            "src": "27070:213:130",
            "nodes": [],
            "body": {
              "id": 93101,
              "nodeType": "Block",
              "src": "27102:181:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 93085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 93080,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92484,
                      "src": "27116:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 93083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27140:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 93082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27132:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 93081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27132:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 93084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27132:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27116:26:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93087,
                  "nodeType": "IfStatement",
                  "src": "27112:39:130",
                  "trueBody": {
                    "functionReturnParameters": 93079,
                    "id": 93086,
                    "nodeType": "Return",
                    "src": "27144:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93091,
                        "name": "beforeTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92484,
                        "src": "27182:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93092,
                        "name": "beforeTargetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92486,
                        "src": "27196:16:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 93088,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42990,
                        "src": "27161:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42990_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 93090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27169:12:130",
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42811,
                      "src": "27161:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 93093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27161:52:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 93094,
                  "nodeType": "ExpressionStatement",
                  "src": "27161:52:130"
                },
                {
                  "expression": {
                    "id": 93096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27224:19:130",
                    "subExpression": {
                      "id": 93095,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92484,
                      "src": "27231:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93097,
                  "nodeType": "ExpressionStatement",
                  "src": "27224:19:130"
                },
                {
                  "expression": {
                    "id": 93099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27253:23:130",
                    "subExpression": {
                      "id": 93098,
                      "name": "beforeTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92486,
                      "src": "27260:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93100,
                  "nodeType": "ExpressionStatement",
                  "src": "27253:23:130"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeCall",
            "nameLocation": "27079:11:130",
            "parameters": {
              "id": 93078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27090:2:130"
            },
            "returnParameters": {
              "id": 93079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27102:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 93127,
            "nodeType": "FunctionDefinition",
            "src": "27289:207:130",
            "nodes": [],
            "body": {
              "id": 93126,
              "nodeType": "Block",
              "src": "27320:176:130",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 93110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 93105,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92488,
                      "src": "27334:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 93108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27357:1:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 93107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27349:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 93106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27349:7:130",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 93109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27349:10:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27334:25:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93112,
                  "nodeType": "IfStatement",
                  "src": "27330:38:130",
                  "trueBody": {
                    "functionReturnParameters": 93104,
                    "id": 93111,
                    "nodeType": "Return",
                    "src": "27361:7:130"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93116,
                        "name": "afterTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92488,
                        "src": "27399:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 93117,
                        "name": "afterTargetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92490,
                        "src": "27412:15:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 93113,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42990,
                        "src": "27378:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42990_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 93115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27386:12:130",
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42811,
                      "src": "27378:20:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 93118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27378:50:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 93119,
                  "nodeType": "ExpressionStatement",
                  "src": "27378:50:130"
                },
                {
                  "expression": {
                    "id": 93121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27439:18:130",
                    "subExpression": {
                      "id": 93120,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92488,
                      "src": "27446:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93122,
                  "nodeType": "ExpressionStatement",
                  "src": "27439:18:130"
                },
                {
                  "expression": {
                    "id": 93124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27467:22:130",
                    "subExpression": {
                      "id": 93123,
                      "name": "afterTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92490,
                      "src": "27474:15:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93125,
                  "nodeType": "ExpressionStatement",
                  "src": "27467:22:130"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterCall",
            "nameLocation": "27298:10:130",
            "parameters": {
              "id": 93103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27308:2:130"
            },
            "returnParameters": {
              "id": 93104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27320:0:130"
            },
            "scope": 93128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 92475,
              "name": "MockHooks",
              "nameLocations": [
                "21973:9:130"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123934,
              "src": "21973:9:130"
            },
            "id": 92476,
            "nodeType": "InheritanceSpecifier",
            "src": "21973:9:130"
          }
        ],
        "canonicalName": "MockLBHooks",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          93128,
          123934,
          57571,
          68179
        ],
        "name": "MockLBHooks",
        "nameLocation": "21958:11:130",
        "scope": 93129,
        "usedErrors": [
          42745,
          42750,
          42753,
          56993,
          56995
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 130
}