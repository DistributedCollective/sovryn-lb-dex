{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BatchTransferFromReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterBatchTransferFromHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterBurnHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterFlashLoanHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterMintHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterSwapHooksXtoY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BeforeAfterSwapHooksYtoX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BurnReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_FlashLoanReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_GetLBHooksParameters",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MintReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapReentrancy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:135;1903:54;;2005:17;755:21192:126;2005:17:135;;755:21192:126;2005:17:135;;;-1:-1:-1;;;3126:44:3;2005:17:135;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:135;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:135;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:135;;;755:21192:126;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:147;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:147;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:147:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:147;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:147:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:147;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:147:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:147;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:147:o
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620002145760003560e01c80637626ddcc1162000129578063b0464fdc11620000b1578063ba414fa6116200007b578063ba414fa6146200055d578063e20c9f711462000567578063fa7626d41462000571578063fecaa223146200057f5762000214565b8063b0464fdc1462000528578063b5508aa91462000532578063b89e0233146200053c578063b8c238fd14620005535762000214565b8063916a17c611620000f3578063916a17c614620004e457806393a5870c14620004fd578063a42b61391462000507578063a7aa85e914620005115762000214565b80637626ddcc146200048b57806385226c811462000495578063889be5b714620004ae5780638e78d4e314620004da5762000214565b8063314bf90811620001ad57806345bf2c09116200017757806345bf2c09146200043857806349789ef914620004425780634f3e1504146200046857806366d9a9a014620004725762000214565b8063314bf90814620004105780633e5e3c23146200041a5780633f71aea714620004245780633f7286f4146200042e5762000214565b806316c1fcdd11620001ef57806316c1fcdd14620003ca5780631ed7831c14620003d45780632ade388014620003ed5780632cb279c614620004065762000214565b806301ffc9a7146200037857806306fb353014620003b45780630a9254e414620003c0575b601f54602a54620002de916001600160a01b03610100909104811691166200024667016345785d8a000060026200c486565b601f54602a546040516370a0823160e01b81526001600160a01b0391821660048201526001600160801b03939093169261010090920416906370a08231906024015b602060405180830381865afa158015620002a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cc91906200c4b4565b620002d891906200c4ce565b62000596565b602054602a546200034d916001600160a01b0390811691166200030b67016345785d8a000060026200c486565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201526001600160801b0393909316929116906370a082319060240162000288565b7fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c26000818152602090f35b6200039f620003893660046200c4e4565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b620003be620005aa565b005b620003be62001001565b620003be62001359565b620003de62001e06565b604051620003ab91906200c510565b620003f762001e6a565b604051620003ab91906200c5b3565b620003be62001fb8565b620003be62002b80565b620003de62003222565b620003be62003284565b620003de62003c7e565b620003be62003ce0565b62000459620004533660046200c689565b620045b2565b604051908152602001620003ab565b620003be62004607565b6200047c62004f1f565b604051620003ab91906200c70e565b620003be62005098565b6200049f62005d63565b604051620003ab91906200c799565b620004c5620004bf3660046200c811565b62005e3d565b60405162ffffff9091168152602001620003ab565b620003be62005e9a565b620004ee620062b5565b604051620003ab91906200c858565b620003be6200639f565b620003be620069d2565b620003be620005223660046200c8e1565b620072e5565b620004ee62007786565b6200049f62007870565b6200039f6200054d3660046200c996565b6200794a565b620003be620079cc565b6200039f62008208565b620003de620082c2565b601f546200039f9060ff1681565b620003be620005903660046200c9b6565b62008324565b620005a5838383600062008629565b505050565b602a54604080516336f997b760e21b815290516000926001600160a01b03169163dbe65edc9160048083019260209291908290030181865afa158015620005f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200061b91906200ca5d565b604080516001808252818301909252919250600091906020808301908036833701905050905062000656670de0b6b3a7640000808462008824565b816000815181106200066c576200066c6200ca93565b6020908102919091010152601f54620006bd9061010090046001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b602054620006fe906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b6040516303223eab60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152906306447d5690602401600060405180830381600087803b1580156200076f57600080fd5b505af115801562000784573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015261010090920416925063a9059cbb91506044016020604051808303816000875af1158015620007ea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081091906200caba565b50602054602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015291169063a9059cbb906044016020604051808303816000875af11580156200086e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200089491906200caba565b50602a5460405163383d15c560e01b81526001600160a01b039091169063383d15c590620008eb907f000000000000000000000000000000000000000000000000000000000000000090859082906004016200cb0a565b6000604051808303816000875af11580156200090b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200093591908101906200cbca565b5050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa1580156200098f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b591906200cde8565b60408051600180825281830190925291925060009190602080830190803683370190505090508362ffffff1681600081518110620009f757620009f76200ca93565b602090810291909101015260408051600180825281830190925260009181602001602082028036833701905050905067016345785d8a00006001600160801b03168160008151811062000a4e5762000a4e6200ca93565b6020908102919091010152602a546040516364c9cfaf60e11b81526001600160a01b039091169063c9939f5e9062000ab1907f0000000000000000000000000000000000000000000000000000000000000000908190879087906004016200ceb6565b6000604051808303816000875af115801562000ad1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000afb91908101906200cf70565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000b5b57600080fd5b505af115801562000b70573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa15801562000bcb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf191906200cde8565b905062000d75603060009054906101000a90046001600160a01b03166001600160a01b031663571eed376040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000c4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c7591908101906200d000565b8051906020012063ea9db9d360e01b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000888860405160240162000cff9594939291906200d04e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060400160405280601c81526020017f746573745f4265666f726541667465724275726e486f6f6b733a3a310000000081525062008862565b603054604080516330bed69960e21b8152905162000eec926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa15801562000dc2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000dec91908101906200d000565b8051906020012063fdc2725760e01b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000888860405160240162000e769594939291906200d04e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060400160405280601c81526020017f746573745f4265666f726541667465724275726e486f6f6b733a3a320000000081525062008862565b60305460408051633c5929e360e11b815290516000926001600160a01b0316916378b253c6916004808301926102009291908290030181865afa15801562000f38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f5e91906200cde8565b90506000603060009054906101000a90046001600160a01b03166001600160a01b031663f08e95c66040518163ffffffff1660e01b815260040161020060405180830381865afa15801562000fb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fdd91906200cde8565b905062000feb8287620088c8565b62000ff78184620088c8565b5050505050505050565b6200100b62008e45565b601f546020546200102e916001600160a01b03610100909104811691166200a693565b602a80546001600160a01b0319166001600160a01b039290921691821790556200108d907f000000000000000000000000000000000000000000000000000000000000000090819062800000670de0b6b3a764000080603280620072e5565b6040516200109b906200c36f565b604051809103906000f080158015620010b8573d6000803e3d6000fd5b50603080546001600160a01b0319166001600160a01b03928316908117909155602a546040516340c3fa8b60e11b81529216600483015290638187f51690602401600060405180830381600087803b1580156200111457600080fd5b505af115801562001129573d6000803e3d6000fd5b5050602754604080516306bd6eb360e21b815290516001600160a01b039092169350632f2ff15d92508391631af5bacc916004808201926020929091908290030181865afa15801562001180573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011a691906200c4b4565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401600060405180830381600087803b158015620011e657600080fd5b505af1158015620011fb573d6000803e3d6000fd5b505060408051610160810182526030546001600160a01b03908116825260016020808401829052938301819052606083018190526080830181905260a0830181905260c0830181905260e083018190526101008084018290526101208401829052610140840191909152602754601f54945493965082169450633a2f1a91930481169116600a6200128c866200a6a5565b604080516000815260208101918290526001600160e01b031960e088901b16909152620012c19493929190602481016200d098565b600060405180830381600087803b158015620012dc57600080fd5b505af1158015620012f1573d6000803e3d6000fd5b5050602a546040516363deb2c360e11b8152600160048201526001600160a01b03909116925063c7bd658691506024015b600060405180830381600087803b1580156200133d57600080fd5b505af115801562001352573d6000803e3d6000fd5b5050505050565b60408051600180825281830190925260009160208083019080368337019050509050620013936706f05b59d3b20000806280000062008824565b81600081518110620013a957620013a96200ca93565b6020908102919091010152603054602a546040516001600160a01b03928316926333ad78d192169063383d15c560e01b906200140e907f000000000000000000000000000000000000000000000000000000000000000090879082906024016200cb0a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200145692916004016200d0d6565b600060405180830381600087803b1580156200147157600080fd5b505af115801562001486573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ee5aeb560e01b600482015260008051602062025819833981519152925063c31eb0e09150602401600060405180830381600087803b158015620014d957600080fd5b505af1158015620014ee573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152925063ca669fa79150602401600060405180830381600087803b1580156200156357600080fd5b505af115801562001578573d6000803e3d6000fd5b5050602a5460405163383d15c560e01b81526001600160a01b03909116925063383d15c59150620015d2907f000000000000000000000000000000000000000000000000000000000000000090859082906004016200cb0a565b6000604051808303816000875af1158015620015f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200161c91908101906200cbca565b505060305460408051600080825260208201928390526333ad78d160e01b9092526001600160a01b0390921692506333ad78d191620016609190602481016200d0d6565b600060405180830381600087803b1580156200167b57600080fd5b505af115801562001690573d6000803e3d6000fd5b5050603054602a546040516001600160a01b03928316945063c70e8bd4935091169063383d15c560e01b90620016ef907f000000000000000000000000000000000000000000000000000000000000000090879082906024016200cb0a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200173792916004016200d0d6565b600060405180830381600087803b1580156200175257600080fd5b505af115801562001767573d6000803e3d6000fd5b5050601f54602a546040516370a0823160e01b81526001600160a01b039182166004820152600094506101009092041691506370a0823190602401602060405180830381865afa158015620017c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017e691906200c4b4565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562001839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200185f91906200c4b4565b601f54602a546040516370a0823160e01b81526001600160a01b0391821660048201819052939450620018b293610100909304909116919067016345785d8a00009083906370a082319060240162000288565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201819052620018fd9392909216919067016345785d8a00009083906370a082319060240162000288565b60405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b1580156200196e57600080fd5b505af115801562001983573d6000803e3d6000fd5b5050602a5460405163383d15c560e01b81526001600160a01b03909116925063383d15c59150620019dd907f000000000000000000000000000000000000000000000000000000000000000090879085906004016200cb0a565b6000604051808303816000875af1158015620019fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001a2791908101906200cbca565b5050601f54602a546040516370a0823160e01b81526001600160a01b03918216600482015262001b1b935061010090920416906370a0823190602401602060405180830381865afa15801562001a81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aa791906200c4b4565b606462001abe67016345785d8a0000604b6200c486565b62001aca91906200d110565b62001adf906001600160801b0316856200c4ce565b6040518060400160405280601681526020017f746573745f4d696e745265656e7472616e63793a3a31000000000000000000008152506200a76f565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262001c099291909116906370a0823190602401602060405180830381865afa15801562001b6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9591906200c4b4565b606462001bac67016345785d8a0000604b6200c486565b62001bb891906200d110565b62001bcd906001600160801b0316846200c4ce565b6040518060400160405280601681526020017f746573745f4d696e745265656e7472616e63793a3a32000000000000000000008152506200a76f565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262001d0a92610100900416906370a0823190602401602060405180830381865afa15801562001c7c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ca291906200c4b4565b606462001cb967016345785d8a000060196200c486565b62001cc591906200d110565b6001600160801b03166040518060400160405280601681526020017f746573745f4d696e745265656e7472616e63793a3a33000000000000000000008152506200a76f565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620005a59216906370a0823190602401602060405180830381865afa15801562001d78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d9e91906200c4b4565b606462001db567016345785d8a000060196200c486565b62001dc191906200d110565b6001600160801b03166040518060400160405280601681526020017f746573745f4d696e745265656e7472616e63793a3a34000000000000000000008152506200a76f565b6060601680548060200260200160405190810160405280929190818152602001828054801562001e6057602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001e41575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b8282101562001faf57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562001f9757838290600052602060002001805462001f03906200d139565b80601f016020809104026020016040519081016040528092919081815260200182805462001f31906200d139565b801562001f825780601f1062001f565761010080835404028352916020019162001f82565b820191906000526020600020905b81548152906001019060200180831162001f6457829003601f168201915b50505050508152602001906001019062001ee1565b50505050815250508152602001906001019062001e8e565b50505050905090565b604080516001808252818301909252600091602080830190803683375050602a54604080516336f997b760e21b815290519394506001600160a01b039091169263dbe65edc925060048083019260209291908290030181865afa15801562002024573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204a91906200ca5d565b62ffffff16816000815181106200206557620020656200ca93565b60209081029190910101526040805160018082528183019092526000918160200160208202803683375050602a5484519293506002926001600160a01b03909116915062fdd58e907f0000000000000000000000000000000000000000000000000000000000000000908690600090620020e357620020e36200ca93565b60200260200101516040518363ffffffff1660e01b81526004016200211d9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200213b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200216191906200c4b4565b6200216d91906200d175565b816000815181106200218357620021836200ca93565b602090810291909101015260405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b158015620021ff57600080fd5b505af115801562002214573d6000803e3d6000fd5b5050602a546030546040516339612d9560e21b81526001600160a01b039182166004820152600160248201529116925063e584b6549150604401600060405180830381600087803b1580156200226957600080fd5b505af11580156200227e573d6000803e3d6000fd5b5050603054602a546040516001600160a01b0392831694506333ad78d193509116906305feb5ff60e21b90620022ff907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906024016200ceb6565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200234792916004016200d0d6565b600060405180830381600087803b1580156200236257600080fd5b505af115801562002377573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ee5aeb560e01b600482015260008051602062025819833981519152925063c31eb0e09150602401600060405180830381600087803b158015620023ca57600080fd5b505af1158015620023df573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152925063ca669fa79150602401600060405180830381600087803b1580156200245457600080fd5b505af115801562002469573d6000803e3d6000fd5b5050602a546040516305feb5ff60e21b81526001600160a01b0390911692506317fad7fc9150620024e5907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090879087906004016200ceb6565b600060405180830381600087803b1580156200250057600080fd5b505af115801562002515573d6000803e3d6000fd5b505060305460408051600080825260208201928390526333ad78d160e01b9092526001600160a01b0390921693506333ad78d192506200255991602481016200d0d6565b600060405180830381600087803b1580156200257457600080fd5b505af115801562002589573d6000803e3d6000fd5b5050603054602a546040516001600160a01b03928316945063c70e8bd493509116906305feb5ff60e21b906200260a907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906024016200ceb6565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200265292916004016200d0d6565b600060405180830381600087803b1580156200266d57600080fd5b505af115801562002682573d6000803e3d6000fd5b5050602a5484516200277793506001600160a01b03909116915062fdd58e907f0000000000000000000000000000000000000000000000000000000000000000908690600090620026d757620026d76200ca93565b60200260200101516040518363ffffffff1660e01b8152600401620027119291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200275591906200c4b4565b6000604051806060016040528060238152602001620258d1602391396200a76f565b602a54825162002866916001600160a01b03169062fdd58e907f0000000000000000000000000000000000000000000000000000000000000000908690600090620027c657620027c66200ca93565b60200260200101516040518363ffffffff1660e01b8152600401620028009291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200281e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200284491906200c4b4565b600060405180606001604052806023815260200162025936602391396200a7a7565b60405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b158015620028d757600080fd5b505af1158015620028ec573d6000803e3d6000fd5b5050602a546040516305feb5ff60e21b81526001600160a01b0390911692506317fad7fc915062002968907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090879087906004016200ceb6565b600060405180830381600087803b1580156200298357600080fd5b505af115801562002998573d6000803e3d6000fd5b5050602a54845162002a8d93506001600160a01b03909116915062fdd58e907f0000000000000000000000000000000000000000000000000000000000000000908690600090620029ed57620029ed6200ca93565b60200260200101516040518363ffffffff1660e01b815260040162002a279291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562002a45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a6b91906200c4b4565b600060405180606001604052806023815260200162025885602391396200a7a7565b602a54825162002b7c916001600160a01b03169062fdd58e907f000000000000000000000000000000000000000000000000000000000000000090869060009062002adc5762002adc6200ca93565b60200260200101516040518363ffffffff1660e01b815260040162002b169291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562002b34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b5a91906200c4b4565b600060405180606001604052806023815260200162025839602391396200a76f565b5050565b601f54602a546040516370a0823160e01b81526001600160a01b039182166004820181905262002bcf936101009004909216919067016345785d8a00009083906370a082319060240162000288565b603054602a5460408051600160248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660448084019190915283518084039091018152606490920183526020820180516001600160e01b031663029e02cd60e51b17905291516333ad78d160e01b8152938216936333ad78d19362002c67931691906004016200d0d6565b600060405180830381600087803b15801562002c8257600080fd5b505af115801562002c97573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ee5aeb560e01b600482015260008051602062025819833981519152925063c31eb0e09150602401600060405180830381600087803b15801562002cea57600080fd5b505af115801562002cff573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152925063ca669fa79150602401600060405180830381600087803b15801562002d7457600080fd5b505af115801562002d89573d6000803e3d6000fd5b5050602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015290911692506353c059a091506044016020604051808303816000875af115801562002e01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e2791906200c4b4565b5060305460408051600080825260208201928390526333ad78d160e01b9092526001600160a01b03909216916333ad78d19162002e6891602481016200d0d6565b600060405180830381600087803b15801562002e8357600080fd5b505af115801562002e98573d6000803e3d6000fd5b5050603054602a5460408051600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660448084019190915283518084039091018152606490920183526020820180516001600160e01b031663029e02cd60e51b17905291516331c3a2f560e21b8152938216955063c70e8bd4945062002f37939190921691906004016200d0d6565b600060405180830381600087803b15801562002f5257600080fd5b505af115801562002f67573d6000803e3d6000fd5b5050601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262003045945061010090920490911691506370a0823190602401602060405180830381865afa15801562002fe1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200300791906200c4b4565b60006040518060400160405280601681526020017f746573745f537761705265656e7472616e63793a3a31000000000000000000008152506200a76f565b60405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b158015620030b657600080fd5b505af1158015620030cb573d6000803e3d6000fd5b5050602a5460405163029e02cd60e51b8152600160048201526001600160a01b039091166024820181905292506353c059a091506044016020604051808303816000875af115801562003122573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200314891906200c4b4565b50601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200322092610100900416906370a0823190602401602060405180830381865afa158015620031bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031e291906200c4b4565b60006040518060400160405280601681526020017f746573745f537761705265656e7472616e63793a3a32000000000000000000008152506200a7a7565b565b6060601880548060200260200160405190810160405280929190818152602001828054801562001e60576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001e41575050505050905090565b602a54604051631cee6cdf60e31b815267016345785d8a000060048201526001602482015260009182916001600160a01b039091169063e77366f890604401606060405180830381865afa158015620032e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200330791906200d18c565b50604051632631f2b160e11b81526001600160801b0382161515600482015291935091506000805160206202581983398151915290634c63e5629060240160006040518083038186803b1580156200335e57600080fd5b505afa15801562003373573d6000803e3d6000fd5b50505050620033c3826001600160801b031660006040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a318152506200a76f565b601f54620034099061010090046001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b60305460408051631865c57d60e01b815290516000926001600160a01b031691631865c57d916004808301926102009291908290030181865afa15801562003455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200347b91906200cde8565b6040516303223eab60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015290915060008051602062025819833981519152906306447d5690602401600060405180830381600087803b158015620034ef57600080fd5b505af115801562003504573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015261010090920416925063a9059cbb91506044016020604051808303816000875af11580156200356a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200359091906200caba565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562003605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200362b91906200c4b4565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200368b57600080fd5b505af1158015620036a0573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa158015620036fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200372191906200cde8565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350620037fe92610100909204909116906370a0823190602401602060405180830381865afa1580156200379a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037c091906200c4b4565b60006040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a328152506200a76f565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620038d89216906370a0823190602401602060405180830381865afa1580156200386c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200389291906200c4b4565b846001600160801b03166040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a338152506200a76f565b6030546040805163571eed3760e01b8152905162003a14926001600160a01b03169163571eed379160048083019260009291908290030181865afa15801562003925573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200394f91908101906200d000565b8051602091820120604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820181905260448201526001606482015267016345785d8a00006084808301919091528251808303909101815260a4909101825280840180516001600160e01b031663feee373560e01b1781529051902081518083019092528382527f746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a349382019390935290919062008862565b603054604080516330bed69960e21b8152905162003b6b926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa15801562003a61573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003a8b91908101906200d000565b80516020909101206353e8079b60e01b7f000000000000000000000000000000000000000000000000000000000000000080600162003aca8960801b90565b6040516001600160a01b03948516602482015293909216604484015215156064830152608482015260a401604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a3581525062008862565b60305460408051633c5929e360e11b815290516000926001600160a01b0316916378b253c6916004808301926102009291908290030181865afa15801562003bb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bdd91906200cde8565b90506000603060009054906101000a90046001600160a01b03166001600160a01b031663f08e95c66040518163ffffffff1660e01b815260040161020060405180830381865afa15801562003c36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c5c91906200cde8565b905062003c6a8285620088c8565b62003c768184620088c8565b505050505050565b6060601780548060200260200160405190810160405280929190818152602001828054801562001e60576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001e41575050505050905090565b602a54604051631cee6cdf60e31b815267016345785d8a000060048201526000602482018190529182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562003d3d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d6391906200d18c565b50604051632631f2b160e11b81526001600160801b0382161515600482015291935091506000805160206202581983398151915290634c63e5629060240160006040518083038186803b15801562003dba57600080fd5b505afa15801562003dcf573d6000803e3d6000fd5b5050505062003e1f826001600160801b031660006040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a318152506200a76f565b60205462003e60906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b60305460408051631865c57d60e01b815290516000926001600160a01b031691631865c57d916004808301926102009291908290030181865afa15801562003eac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ed291906200cde8565b6040516303223eab60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015290915060008051602062025819833981519152906306447d5690602401600060405180830381600087803b15801562003f4657600080fd5b505af115801562003f5b573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a000060248201529116925063a9059cbb91506044016020604051808303816000875af115801562003fbc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003fe291906200caba565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562004057573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200407d91906200c4b4565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620040dd57600080fd5b505af1158015620040f2573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa1580156200414d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200417391906200cde8565b6020546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529293506200424a92909116906370a0823190602401602060405180830381865afa158015620041e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200420c91906200c4b4565b60006040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a328152506200a76f565b601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200432992610100900416906370a0823190602401602060405180830381865afa158015620042bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042e391906200c4b4565b846001600160801b03166040518060400160405280602081526020017f746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a338152506200a76f565b6030546040805163571eed3760e01b8152905162004475926001600160a01b03169163571eed379160048083019260009291908290030181865afa15801562004376573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620043a091908101906200d000565b8051602091820120604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820181905260448201526000606482015277016345785d8a0000000000000000000000000000000000006084808301919091528251808303909101815260a4909101825280840180516001600160e01b031663feee373560e01b1781529051902081518083019092528382527f746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a349382019390935290919062008862565b603054604080516330bed69960e21b8152905162003b6b926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa158015620044c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620044ec91908101906200d000565b8051602091820120604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482018190526044820152600060648201526001600160801b0388166084808301919091528251808303909101815260a4909101825280840180516001600160e01b03166353e8079b60e01b1781529051902081518083019092528382527f746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a359382019390935290919062008862565b6000808360ff16118015620045ca575060008260ff16115b620045e157620045db82846200d1d6565b620045fb565b6001620045ef83856200d1d6565b620045fb91906200d1f2565b60ff1690505b92915050565b603054602a546040805160008152602081019091526001600160a01b03928316926333ad78d192169063ea3446bf60e01b906200466490309077016345785d8a00000000000000000000016345785d8a000090604481016200d20e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b9092168252620046ac92916004016200d0d6565b600060405180830381600087803b158015620046c757600080fd5b505af1158015620046dc573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ee5aeb560e01b600482015260008051602062025819833981519152925063c31eb0e09150602401600060405180830381600087803b1580156200472f57600080fd5b505af115801562004744573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152925063ca669fa79150602401600060405180830381600087803b158015620047b957600080fd5b505af1158015620047ce573d6000803e3d6000fd5b5050602a546040805160008152602081019182905263ea3446bf60e01b9091526001600160a01b03909116925063ea3446bf91506200482d90309077016345785d8a00000000000000000000016345785d8a000090602481016200d20e565b600060405180830381600087803b1580156200484857600080fd5b505af11580156200485d573d6000803e3d6000fd5b505060305460408051600080825260208201928390526333ad78d160e01b9092526001600160a01b0390921693506333ad78d19250620048a191602481016200d0d6565b600060405180830381600087803b158015620048bc57600080fd5b505af1158015620048d1573d6000803e3d6000fd5b5050603054602a546040805160008152602081019091526001600160a01b03928316945063c70e8bd4935091169063ea3446bf60e01b906200493390309077016345785d8a00000000000000000000016345785d8a000090604481016200d20e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200497b92916004016200d0d6565b600060405180830381600087803b1580156200499657600080fd5b505af1158015620049ab573d6000803e3d6000fd5b5050601f54602a546040516370a0823160e01b81526001600160a01b039182166004820152600094506101009092041691506370a0823190602401602060405180830381865afa15801562004a04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a2a91906200c4b4565b602054602a546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa15801562004a7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004aa391906200c4b4565b60405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152909150600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b15801562004b1757600080fd5b505af115801562004b2c573d6000803e3d6000fd5b5050602a546040805160008152602081019182905263ea3446bf60e01b9091526001600160a01b03909116925063ea3446bf915062004b8b90309077016345785d8a00000000000000000000016345785d8a000090602481016200d20e565b600060405180830381600087803b15801562004ba657600080fd5b505af115801562004bbb573d6000803e3d6000fd5b5050601f54602a546040516370a0823160e01b81526001600160a01b03918216600482015262004ca294506101009092041691506370a0823190602401602060405180830381865afa15801562004c16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c3c91906200c4b4565b62004c5167016345785d8a000060026200c486565b62004c66906001600160801b0316856200c4ce565b6040518060400160405280601b81526020017f746573745f466c6173684c6f616e5265656e7472616e63793a3a3100000000008152506200a76f565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262004d829291909116906370a0823190602401602060405180830381865afa15801562004cf6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d1c91906200c4b4565b62004d3167016345785d8a000060026200c486565b62004d46906001600160801b0316846200c4ce565b6040518060400160405280601b81526020017f746573745f466c6173684c6f616e5265656e7472616e63793a3a3200000000008152506200a76f565b601f546040516370a0823160e01b815230600482015262004e539161010090046001600160a01b0316906370a0823190602401602060405180830381865afa15801562004dd3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004df991906200c4b4565b62004e0e67016345785d8a000060026200c486565b6001600160801b03166040518060400160405280601b81526020017f746573745f466c6173684c6f616e5265656e7472616e63793a3a3300000000008152506200a76f565b6020546040516370a0823160e01b815230600482015262002b7c916001600160a01b0316906370a0823190602401602060405180830381865afa15801562004e9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004ec591906200c4b4565b62004eda67016345785d8a000060026200c486565b6001600160801b03166040518060400160405280601b81526020017f746573745f466c6173684c6f616e5265656e7472616e63793a3a3400000000008152506200a76f565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562001faf578382906000526020600020906002020160405180604001604052908160008201805462004f79906200d139565b80601f016020809104026020016040519081016040528092919081815260200182805462004fa7906200d139565b801562004ff85780601f1062004fcc5761010080835404028352916020019162004ff8565b820191906000526020600020905b81548152906001019060200180831162004fda57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200507f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620050405790505b5050505050815250508152602001906001019062004f43565b604080516001808252818301909252600091602080830190803683375050602a54604080516336f997b760e21b815290519394506001600160a01b039091169263dbe65edc925060048083019260209291908290030181865afa15801562005104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200512a91906200ca5d565b62ffffff16816000815181106200514557620051456200ca93565b60209081029190910101526040805160018082528183019092526000918160200160208202803683375050602a5484519293506002926001600160a01b03909116915062fdd58e907f0000000000000000000000000000000000000000000000000000000000000000908690600090620051c357620051c36200ca93565b60200260200101516040518363ffffffff1660e01b8152600401620051fd9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200521b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200524191906200c4b4565b6200524d91906200d175565b816000815181106200526357620052636200ca93565b602090810291909101015260405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b158015620052df57600080fd5b505af1158015620052f4573d6000803e3d6000fd5b5050602a546030546040516339612d9560e21b81526001600160a01b039182166004820152600160248201529116925063e584b6549150604401600060405180830381600087803b1580156200534957600080fd5b505af11580156200535e573d6000803e3d6000fd5b5050603054602a546040516001600160a01b0392831694506333ad78d193509116906364c9cfaf60e11b90620053df907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906024016200ceb6565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200542792916004016200d0d6565b600060405180830381600087803b1580156200544257600080fd5b505af115801562005457573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ee5aeb560e01b600482015260008051602062025819833981519152925063c31eb0e09150602401600060405180830381600087803b158015620054aa57600080fd5b505af1158015620054bf573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152925063ca669fa79150602401600060405180830381600087803b1580156200553457600080fd5b505af115801562005549573d6000803e3d6000fd5b5050602a546040516364c9cfaf60e11b81526001600160a01b03909116925063c9939f5e9150620055c5907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090879087906004016200ceb6565b6000604051808303816000875af1158015620055e5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200560f91908101906200cf70565b5060305460408051600080825260208201928390526333ad78d160e01b9092526001600160a01b03909216916333ad78d1916200565091602481016200d0d6565b600060405180830381600087803b1580156200566b57600080fd5b505af115801562005680573d6000803e3d6000fd5b5050603054602a546040516001600160a01b03928316945063c70e8bd493509116906364c9cfaf60e11b9062005701907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906024016200ceb6565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526200574992916004016200d0d6565b600060405180830381600087803b1580156200576457600080fd5b505af115801562005779573d6000803e3d6000fd5b5050601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262005857945061010090920490911691506370a0823190602401602060405180830381865afa158015620057f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200581991906200c4b4565b60006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a31000000000000000000008152506200a76f565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620059299216906370a0823190602401602060405180830381865afa158015620058c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058eb91906200c4b4565b60006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a32000000000000000000008152506200a76f565b60405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b1580156200599a57600080fd5b505af1158015620059af573d6000803e3d6000fd5b5050602a546040516364c9cfaf60e11b81526001600160a01b03909116925063c9939f5e915062005a2b907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090879087906004016200ceb6565b6000604051808303816000875af115801562005a4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005a7591908101906200cf70565b50601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262005b4d92610100900416906370a0823190602401602060405180830381865afa15801562005ae9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b0f91906200c4b4565b60006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a33000000000000000000008152506200a7a7565b6020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262005c1f9216906370a0823190602401602060405180830381865afa15801562005bbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005be191906200c4b4565b60006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a34000000000000000000008152506200a7a7565b602a54825160009182916001600160a01b0390911690630abe9688908690849062005c4e5762005c4e6200ca93565b60200260200101516040518263ffffffff1660e01b815260040162005c7e919062ffffff91909116815260200190565b6040805180830381865afa15801562005c9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005cc191906200d238565b6001600160801b031691506001600160801b0316915062005d1a8260006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a35000000000000000000008152506200a76f565b62005d5d8160006040518060400160405280601681526020017f746573745f4275726e5265656e7472616e63793a3a36000000000000000000008152506200a76f565b50505050565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562001faf57838290600052602060002001805462005da9906200d139565b80601f016020809104026020016040519081016040528092919081815260200182805462005dd7906200d139565b801562005e285780601f1062005dfc5761010080835404028352916020019162005e28565b820191906000526020600020905b81548152906001019060200180831162005e0a57829003601f168201915b50505050508152602001906001019062005d87565b60008062005e518462ffffff87166200c4ce565b905060008360ff161162005e66578062005e82565b62005e7560ff8416826200d270565b62005e829060016200c4ce565b905062005e8f816200a7df565b9150505b9392505050565b602a546040805163781a891560e01b815290516000926001600160a01b03169163781a89159160048083019260209291908290030181865afa15801562005ee5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f0b91906200c4b4565b60408051610160810182526001600160a01b03838116808352600160a01b85161515602080850191909152600160a11b8616151584860152600160a21b861615156060850152600160a31b861615156080850152600160a41b8616151560a0850152600160a51b8616151560c0850152600160a61b8616151560e0850152600160a71b86161515610100850152600160a81b86161515610120850152600160a91b861615156101408501526030548551808701909652601c86527f746573745f4765744c42486f6f6b73506172616d65746572733a3a310000000091860191909152949550919362006000939116906200a806565b6200604581602001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a32000000008152506200a83e565b6200608a81604001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a33000000008152506200a83e565b620060cf81606001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a34000000008152506200a83e565b6200611481608001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a35000000008152506200a83e565b620061598160a001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a36000000008152506200a83e565b6200619e8160c001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a37000000008152506200a83e565b620061e38160e001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a38000000008152506200a83e565b620062298161010001516040518060400160405280601c81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a39000000008152506200a83e565b6200626f8161012001516040518060400160405280601d81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a31300000008152506200a83e565b62002b7c8161014001516040518060400160405280601d81526020017f746573745f4765744c42486f6f6b73506172616d65746572733a3a31310000008152506200a83e565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562001faf5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200638657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620063475790505b50505050508152505081526020019060010190620062d9565b60305460408051631865c57d60e01b815290516000926001600160a01b031691631865c57d916004808301926102009291908290030181865afa158015620063eb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200641191906200cde8565b9050600077016345785d8a00000000000000000000016345785d8a000060405163ca669fa760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152909150600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b158015620064a257600080fd5b505af1158015620064b7573d6000803e3d6000fd5b5050602a546040805160008152602081019182905263ea3446bf60e01b9091526001600160a01b03909116925063ea3446bf9150620064fe9030908590602481016200d20e565b600060405180830381600087803b1580156200651957600080fd5b505af11580156200652e573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa15801562006589573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620065af91906200cde8565b9050620066cb603060009054906101000a90046001600160a01b03166001600160a01b031663571eed376040518163ffffffff1660e01b8152600401600060405180830381865afa15801562006609573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200663391908101906200d000565b8051602091820120604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201523060448201526064808201889052825180830390910181526084909101825280840180516001600160e01b031663505d903360e01b1781529051902081516060810190925260218083529293909290620259159083013962008862565b6000670de0b6b3a764000067016345785d8a00006001600160801b0316602760009054906101000a90046001600160a01b03166001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200673c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200676291906200c4b4565b6200676e91906200d286565b6200677a91906200d175565b603054604080516330bed69960e21b815290519293506001600160801b038416608085901b1792620068be926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa158015620067db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200680591908101906200d000565b8051602091820120604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201523060448201526064810186905277016345785d8a00000000000000000000016345785d8a00006084808301919091528251808303909101815260a4909101825280840180516001600160e01b03166360bed5f360e01b1781529051902081516060810190925260218083529293909290620258f49083013962008862565b60305460408051633c5929e360e11b815290516000926001600160a01b0316916378b253c6916004808301926102009291908290030181865afa1580156200690a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693091906200cde8565b90506000603060009054906101000a90046001600160a01b03166001600160a01b031663f08e95c66040518163ffffffff1660e01b815260040161020060405180830381865afa15801562006989573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620069af91906200cde8565b9050620069bd8288620088c8565b620069c98186620088c8565b50505050505050565b602a54604080516336f997b760e21b815290516000926001600160a01b03169163dbe65edc9160048083019260209291908290030181865afa15801562006a1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a4391906200ca5d565b604080516001808252818301909252919250600091906020808301908036833701905050905062006a7e670de0b6b3a7640000808462008824565b8160008151811062006a945762006a946200ca93565b6020908102919091010152601f5462006ae59061010090046001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b60205462006b26906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b6040516303223eab60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152906306447d5690602401600060405180830381600087803b15801562006b9757600080fd5b505af115801562006bac573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562006c12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c3891906200caba565b50602054602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015291169063a9059cbb906044016020604051808303816000875af115801562006c96573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006cbc91906200caba565b50602a5460405163383d15c560e01b81526001600160a01b039091169063383d15c59062006d13907f000000000000000000000000000000000000000000000000000000000000000090859082906004016200cb0a565b6000604051808303816000875af115801562006d33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262006d5d91908101906200cbca565b5050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa15801562006db7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ddd91906200cde8565b60408051600180825281830190925291925060009190602080830190803683370190505090508362ffffff168160008151811062006e1f5762006e1f6200ca93565b602090810291909101015260408051600180825281830190925260009181602001602082028036833701905050905067016345785d8a00006001600160801b03168160008151811062006e765762006e766200ca93565b6020908102919091010152602a546040516305feb5ff60e21b81526001600160a01b03909116906317fad7fc9062006ef9907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090879087906004016200ceb6565b600060405180830381600087803b15801562006f1457600080fd5b505af115801562006f29573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562006f8c57600080fd5b505af115801562006fa1573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa15801562006ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200702291906200cde8565b90506200718a603060009054906101000a90046001600160a01b03166001600160a01b031663571eed376040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200707c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620070a691908101906200d000565b805190602001206379c8ccf760e01b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008888604051602401620071309594939291906200d04e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505080519060200120604051806060016040528060298152602001620258a86029913962008862565b603054604080516330bed69960e21b8152905162000eec926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa158015620071d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200720191908101906200d000565b805190602001206367ddb27860e01b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000088886040516024016200728b9594939291906200d04e565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060600160405280602981526020016202585c6029913962008862565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007326573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200734c91906200d2a0565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200738f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620073b591906200d2a0565b9050620073c4828b8862000596565b620073d1818b8762000596565b6000620073df8585620045b2565b905060008167ffffffffffffffff811115620073ff57620073ff6200ca7d565b60405190808252806020026020018201604052801562007429578160200160208202803683370190505b50905060005b8281101562007528576000620074478b838962005e3d565b905060008b62ffffff168262ffffff161015801562007469575060008960ff16115b6200747657600062007497565b620074976200749160ff8b16670de0b6b3a76400006200d175565b6200a8a2565b905060008c62ffffff168362ffffff1611158015620074b9575060008960ff16115b620074c6576000620074e1565b620074e16200749160ff8b16670de0b6b3a76400006200d175565b9050620074f082828562008824565b8585815181106200750557620075056200ca93565b6020026020010181815250505050508062007520906200d2c0565b90506200742f565b506040516303223eab60e11b81526001600160a01b038d16600482015260008051602062025819833981519152906306447d5690602401600060405180830381600087803b1580156200757a57600080fd5b505af11580156200758f573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af1158015620075e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200760991906200caba565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af11580156200765a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200768091906200caba565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620076e057600080fd5b505af1158015620076f5573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b81526004016200772b939291906200cb0a565b6000604051808303816000875af11580156200774b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200777591908101906200cbca565b505050505050505050505050505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101562001faf5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200785757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620078185790505b50505050508152505081526020019060010190620077aa565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562001faf578382906000526020600020018054620078b6906200d139565b80601f0160208091040260200160405190810160405280929190818152602001828054620078e4906200d139565b8015620079355780601f10620079095761010080835404028352916020019162007935565b820191906000526020600020905b8154815290600101906020018083116200791757829003601f168201915b50505050508152602001906001019062007894565b602754604051632aaf12cf60e21b815261ffff831660048201526000916001600160a01b03169063aabc4b3c9060240161010060405180830381865afa15801562007999573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620079bf91906200d2dc565b9998505050505050505050565b60305460408051631865c57d60e01b815290516000926001600160a01b031691631865c57d916004808301926102009291908290030181865afa15801562007a18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007a3e91906200cde8565b604080516001808252818301909252919250600091906020808301908036833701905050905062007a7d670de0b6b3a764000080846080015162008824565b8160008151811062007a935762007a936200ca93565b6020908102919091010152601f5462007ae49061010090046001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b60205462007b25906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000067016345785d8a000062000596565b6040516303223eab60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260008051602062025819833981519152906306447d5690602401600060405180830381600087803b15801562007b9657600080fd5b505af115801562007bab573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562007c11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007c3791906200caba565b50602054602a5460405163a9059cbb60e01b81526001600160a01b03918216600482015267016345785d8a0000602482015291169063a9059cbb906044016020604051808303816000875af115801562007c95573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007cbb91906200caba565b50602a5460405163383d15c560e01b81526001600160a01b039091169063383d15c59062007d12907f000000000000000000000000000000000000000000000000000000000000000090859082906004016200cb0a565b6000604051808303816000875af115801562007d32573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007d5c91908101906200cbca565b5050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007dbe57600080fd5b505af115801562007dd3573d6000803e3d6000fd5b505050506000603060009054906101000a90046001600160a01b03166001600160a01b0316631865c57d6040518163ffffffff1660e01b815260040161020060405180830381865afa15801562007e2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007e5491906200cde8565b905062007faf603060009054906101000a90046001600160a01b03166001600160a01b031663571eed376040518163ffffffff1660e01b8152600401600060405180830381865afa15801562007eae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007ed891908101906200d000565b8051602090910120630d4abdb360e01b7f0000000000000000000000000000000000000000000000000000000000000000808677016345785d8a00000000000000000000016345785d8a000060405160240162007f3994939291906200d345565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060400160405280601c81526020017f746573745f4265666f726541667465724d696e74486f6f6b733a3a310000000081525062008862565b603054604080516330bed69960e21b81529051620080fd926001600160a01b03169163c2fb5a649160048083019260009291908290030181865afa15801562007ffc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200802691908101906200d000565b8051602090910120633d28d26360e11b7f0000000000000000000000000000000000000000000000000000000000000000808677016345785d8a00000000000000000000016345785d8a00006040516024016200808794939291906200d345565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050805190602001206040518060400160405280601c81526020017f746573745f4265666f726541667465724d696e74486f6f6b733a3a320000000081525062008862565b60305460408051633c5929e360e11b815290516000926001600160a01b0316916378b253c6916004808301926102009291908290030181865afa15801562008149573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200816f91906200cde8565b90506000603060009054906101000a90046001600160a01b03166001600160a01b031663f08e95c66040518163ffffffff1660e01b815260040161020060405180830381865afa158015620081c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620081ee91906200cde8565b9050620081fc8286620088c8565b620013528184620088c8565b60085460009060ff161562008221575060085460ff1690565b604051630667f9d760e41b815260008051602062025819833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562008295573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620082bb91906200c4b4565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562001e60576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001e41575050505050905090565b670de0b6b3a7640000831115620083825760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b6000620083908383620045b2565b905060008167ffffffffffffffff811115620083b057620083b06200ca7d565b604051908082528060200260200182016040528015620083da578160200160208202803683370190505b50905060008267ffffffffffffffff811115620083fb57620083fb6200ca7d565b60405190808252806020026020018201604052801562008425578160200160208202803683370190505b50905060005b83811015620085335760006200844389838862005e3d565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562008499573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620084bf91906200c4b4565b90508162ffffff16858481518110620084dc57620084dc6200ca93565b6020908102919091010152620084fc818a670de0b6b3a76400006200a8ce565b8484815181106200851157620085116200ca93565b6020026020010181815250505050806200852b906200d2c0565b90506200842b565b5060405163ca669fa760e01b81526001600160a01b038b166004820152600080516020620258198339815191529063ca669fa790602401600060405180830381600087803b1580156200858557600080fd5b505af11580156200859a573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e9150620085d2908d908d90879087906004016200ceb6565b6000604051808303816000875af1158015620085f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200861c91908101906200cf70565b5050505050505050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200867f916200d384565b600060405180830381855afa9150503d8060008114620086bc576040519150601f19603f3d011682016040523d82523d6000602084013e620086c1565b606091505b50915050600081806020019051810190620086dd91906200c4b4565b905062008717846200871087620087096370a0823160e01b62008702600d8d6200a8fc565b906200a922565b906200a940565b906200a96c565b821562003c765760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200876291906200d384565b600060405180830381855afa9150503d80600081146200879f576040519150601f19603f3d011682016040523d82523d6000602084013e620087a4565b606091505b50915050600081806020019051810190620087c091906200c4b4565b905082861015620087eb57620087d786846200d270565b620087e390826200d270565b905062008806565b620087f783876200d270565b6200880390826200c4ce565b90505b62000ff781620087106318160ddd60e01b62008702600d8d6200a8fc565b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b604051630c1fa1ed60e41b8152600080516020620258198339815191529063c1fa1ed0906200889a908690869086906004016200d3a2565b60006040518083038186803b158015620088b357600080fd5b505afa158015620069c9573d6000803e3d6000fd5b6200892482600001516001600160801b031682600001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a31000000000000000000000000000000008152506200a76f565b6200898082602001516001600160801b031682602001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a32000000000000000000000000000000008152506200a76f565b620089dc82604001516001600160801b031682604001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a33000000000000000000000000000000008152506200a76f565b62008a3882606001516001600160801b031682606001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a34000000000000000000000000000000008152506200a76f565b62008a8c826080015162ffffff16826080015162ffffff166040518060400160405280601081526020017f5f7665726966795374617465733a3a35000000000000000000000000000000008152506200a76f565b62008ae88260a001516001600160801b03168260a001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a36000000000000000000000000000000008152506200a76f565b62008b448260c001516001600160801b03168260c001516001600160801b03166040518060400160405280601081526020017f5f7665726966795374617465733a3a37000000000000000000000000000000008152506200a76f565b60e080830151908201518151815160408051808201909152601081527f5f7665726966795374617465733a3a3800000000000000000000000000000000602082015262008b9b9262ffffff9081169216906200a76f565b62008bef826020015162ffffff16826020015162ffffff166040518060400160405280601081526020017f5f7665726966795374617465733a3a39000000000000000000000000000000008152506200a76f565b62008c43826040015162ffffff16826040015162ffffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31300000000000000000000000000000008152506200a76f565b62008c9b826060015164ffffffffff16826060015164ffffffffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31310000000000000000000000000000008152506200a76f565b61010080850151908401518151815160408051808201909152601181527f5f7665726966795374617465733a3a3132000000000000000000000000000000602082015262008cf19260ff9081169216906200a76f565b62008d43826020015161ffff16826020015161ffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31330000000000000000000000000000008152506200a76f565b62008d95826040015161ffff16826040015161ffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31340000000000000000000000000000008152506200a76f565b62008ded826060015164ffffffffff16826060015164ffffffffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31350000000000000000000000000000008152506200a76f565b62003c76826080015164ffffffffff16826080015164ffffffffff166040518060400160405280601181526020017f5f7665726966795374617465733a3a31360000000000000000000000000000008152506200a76f565b601f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1674b31f66aa3c1e785363f0875a1b74e27b85fd66c70017908190556001600160a01b03610100909104163b60000362008f6d57601f54604051600080516020620258198339815191529163b4d6c782916101009091046001600160a01b03169062008ed6906200c37d565b604051809103906000f08015801562008ef3573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b815260040162008f389291906200d0d6565b600060405180830381600087803b15801562008f5357600080fd5b505af115801562008f68573d6000803e3d6000fd5b505050505b600660405162008f7d906200c38b565b60ff9091168152602001604051809103906000f08015801562008fa4573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b039290921691909117905560405160069062008fd6906200c38b565b60ff9091168152602001604051809103906000f08015801562008ffd573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b03929092169190911790556040516008906200902f906200c38b565b60ff9091168152602001604051809103906000f08015801562009056573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691909117905560405160129062009088906200c38b565b60ff9091168152602001604051809103906000f080158015620090af573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b0392909216919091179055604051601290620090e1906200c38b565b60ff9091168152602001604051809103906000f08015801562009108573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b03929092169190911790556040516012906200913a906200c38b565b60ff9091168152602001604051809103906000f08015801562009161573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b039290921691909117905560405162009190906200c399565b604051809103906000f080158015620091ad573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03928316179055601f54604080516318caf8e360e31b815261010090920490921660048201526024810191909152600760448201527f776e6174697665000000000000000000000000000000000000000000000000006064820152600080516020620258198339815191529063c657c71890608401600060405180830381600087803b1580156200925357600080fd5b505af115801562009268573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b158015620092e057600080fd5b505af1158015620092f5573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b1580156200936d57600080fd5b505af115801562009382573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b158015620093fa57600080fd5b505af11580156200940f573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b1580156200948757600080fd5b505af11580156200949c573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b1580156200951457600080fd5b505af115801562009529573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600360448201526231373160e91b606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b1580156200959e57600080fd5b505af1158015620095b3573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e000000000000000000000000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b1580156200963f57600080fd5b505af115801562009654573d6000803e3d6000fd5b5050602e80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602f8054909116739ad6c38be94206ca50bb0d90783181662f0cfa101790555050604051600090620096b1906200c3a7565b604051809103906000f080158015620096ce573d6000803e3d6000fd5b509050807f000000000000000000000000000000000000000000000000000000000000000060405162009701906200c3b5565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f08015801562009744573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b039290921691821790556040516000919062009776906200c3c3565b6001600160a01b039091168152602001604051809103906000f080158015620097a3573d6000803e3d6000fd5b5060275460405191925082917f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b031690620097e6906200c3d1565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562009823573d6000803e3d6000fd5b50602d80546001600160a01b0319166001600160a01b03928316908117909155602754604051632f880c2560e21b81527f000000000000000000000000000000000000000000000000000000000000000084166004820181905260248201526602d79883d20000604482015260648101929092529091169063be20309490608401600060405180830381600087803b158015620098bf57600080fd5b505af1158015620098d4573d6000803e3d6000fd5b50506027546040516001600160a01b039091169250620098f591506200c3c3565b6001600160a01b039091168152602001604051809103906000f08015801562009922573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b03929092169190911790556200994d6200a978565b62009959600a6200ad2c565b602754602f54601f546040516000936001600160a01b03908116938116926101009004169062009989906200c3df565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620099c6573d6000803e3d6000fd5b5060408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905191925082917f0000000000000000000000000000000000000000000000000000000000000000919062009a24906200c3b5565b62009a32939291906200d3c3565b604051809103906000f08015801562009a4f573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316908117909155602f546027546040519184169316919062009a8a906200c3ed565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562009ac7573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b03928316179055602854604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f7574657200000000000000000000000000000000000000000000000000006064820152600080516020620258198339815191529063c657c71890608401600060405180830381600087803b15801562009b6857600080fd5b505af115801562009b7d573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f7465720000000000000000000000000000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b15801562009c0957600080fd5b505af115801562009c1e573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201527f666163746f727900000000000000000000000000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b15801562009caa57600080fd5b505af115801562009cbf573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e0000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b15801562009d4b57600080fd5b505af115801562009d60573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f757465725631000000000000000000000000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b15801562009dec57600080fd5b505af115801562009e01573d6000803e3d6000fd5b5050602f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f727956310000000000000000000000000000000000000000000000606482015260008051602062025819833981519152925063c657c7189150608401600060405180830381600087803b15801562009e8d57600080fd5b505af115801562009ea2573d6000803e3d6000fd5b5050601f54602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015261010090920416925063095ea7b391506044016020604051808303816000875af115801562009f02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009f2891906200caba565b50602054602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562009f80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009fa691906200caba565b50602154602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562009ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a02491906200caba565b50602254602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a07c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a0a291906200caba565b50602554602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a0fa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a12091906200caba565b50602354602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a178573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a19e91906200caba565b5060248054602e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200a1f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a21e91906200caba565b50602654602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a276573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a29c91906200caba565b50601f5460285460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152610100909204169063095ea7b3906044016020604051808303816000875af11580156200a2f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a31f91906200caba565b5060205460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a377573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a39d91906200caba565b5060215460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a3f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a41b91906200caba565b5060225460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a49991906200caba565b5060255460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a4f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a51791906200caba565b5060235460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a56f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a59591906200caba565b506024805460285460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200a5ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a61591906200caba565b5060265460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200a66d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d5d91906200caba565b600062005e938383628000006200ada1565b805160208201516001600160a01b0390911690156200a6c557600160a01b175b8160400151156200a6d757600160a11b175b8160600151156200a6e957600160a21b175b8160800151156200a6fb57600160a31b175b8160a00151156200a70d57600160a41b175b8160c00151156200a71f57600160a51b175b8160e00151156200a73157600160a61b175b816101000151156200a74457600160a71b175b816101200151156200a75757600160a81b175b816101400151156200a76a57600160a91b175b919050565b6040516388b44c8560e01b815260008051602062025819833981519152906388b44c85906200889a908690869086906004016200d3a2565b604051636cd1e26960e11b8152600080516020620258198339815191529063d9a3c4d2906200889a908690869086906004016200d3a2565b8062ffffff811681146200a76a57604051639b63641560e01b815260040160405180910390fd5b604051632f2769d160e01b81526000805160206202581983398151915290632f2769d1906200889a908690869086906004016200d3c3565b60405163a34edc0360e01b8152600080516020620258198339815191529063a34edc03906200a87490859085906004016200d3f1565b60006040518083038186803b1580156200a88d57600080fd5b505afa15801562003c76573d6000803e3d6000fd5b8067ffffffffffffffff811681146200a76a5760405163cc21feb960e01b815260040160405180910390fd5b60008060006200a8df86866200adb2565b915091506200a8f286868685856200add1565b9695505050505050565b6004820180546001600160a01b0319166001600160a01b03831617905560008262005e93565b60028201805463ffffffff191660e083901c17905560008262005e93565b6001808301805491820181556000908152602081206001600160a01b0384169201919091558262005e93565b62002b7c82826200ae87565b601f5461010090046001600160a01b0316156200a9f857602754601f54604051635a44092360e01b81526001600160a01b0361010090920482166004820152911690635a44092390602401600060405180830381600087803b1580156200a9de57600080fd5b505af11580156200a9f3573d6000803e3d6000fd5b505050505b6020546001600160a01b0316156200aa6e57602754602054604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200aa5457600080fd5b505af11580156200aa69573d6000803e3d6000fd5b505050505b6021546001600160a01b0316156200aae457602754602154604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200aaca57600080fd5b505af11580156200aadf573d6000803e3d6000fd5b505050505b6022546001600160a01b0316156200ab5a57602754602254604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200ab4057600080fd5b505af11580156200ab55573d6000803e3d6000fd5b505050505b6025546001600160a01b0316156200abd057602754602554604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200abb657600080fd5b505af11580156200abcb573d6000803e3d6000fd5b505050505b6023546001600160a01b0316156200ac4657602754602354604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200ac2c57600080fd5b505af11580156200ac41573d6000803e3d6000fd5b505050505b6024546001600160a01b0316156200acbb5760275460248054604051635a44092360e01b81526001600160a01b039182166004820152921691635a4409239101600060405180830381600087803b1580156200aca157600080fd5b505af11580156200acb6573d6000803e3d6000fd5b505050505b6026546001600160a01b0316156200322057602754602654604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200ad1757600080fd5b505af115801562005d5d573d6000803e3d6000fd5b60275460405163379ee80360e01b815261ffff8316600482015261138860248201819052601e604483015261025860648301526084820152619c4060a48201526103e860c48201526205573060e482015260006101048201526001600160a01b039091169063379ee803906101240162001322565b60006200885a848484600a6200b2fe565b6000806000198385098385029250828110838203039150509250929050565b6000816000036200adf7578383816200adee576200adee6200d0fa565b0490506200ae7e565b8382106200ae18576040516313eae71560e01b815260040160405180910390fd5b60008486880960018619810187169687900496600081900381900490910186831190950394850291909503949094049390931792505060026003840281188085028203028085028203028085028203028085028203028085028203028085029091030282025b95945050505050565b6004820154600283015460038401546001600160a01b039092169160e09190911b9060006200aeb6866200b38f565b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051939450926200aef79185918791016200d40e565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200af37576200af358660006200b4a7565b505b6001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909183916200af789186918891016200d40e565b60405160208183030381529060405280519060200120815260200190815260200160002090506000816002015482600101546200afb691906200c4ce565b11156200b0b2576000816002015482600101546200afd591906200c4ce565b6200afe3906101006200d270565b6200aff09060026200d52f565b60405163348051d760e11b815260048101829052909150818810906000805160206202581983398151915290636900a3ae90602401600060405180830381865afa1580156200b043573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b06d91908101906200d000565b6040516020016200b07f91906200d53d565b604051602081830303815290604052906200b0af5760405162461bcd60e51b81526004016200837991906200d5d0565b50505b8054604051630667f9d760e41b81526001600160a01b03871660048201526024810191909152600090600080516020620258198339815191529063667f9d7090604401602060405180830381865afa1580156200b113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b13991906200c4b4565b6001838101546002850154929350600092908101610100039190911b60001901811b1983169089901b1783546040516370ca10bb60e01b81526001600160a01b038a16600482015260248101919091526044810182905290915060008051602062025819833981519152906370ca10bb90606401600060405180830381600087803b1580156200b1c857600080fd5b505af11580156200b1dd573d6000803e3d6000fd5b505050506000806200b1ef8b6200b4bd565b915091508115806200b2015750898114155b156200b2f35784546040516370ca10bb60e01b81526001600160a01b038b16600482015260248101919091526044810185905260008051602062025819833981519152906370ca10bb90606401600060405180830381600087803b1580156200b26957600080fd5b505af11580156200b27e573d6000803e3d6000fd5b505060405162461bcd60e51b815260206004820152603360248201527f73746453746f726167652066696e642853746453746f72616765293a2046616960448201527f6c656420746f2077726974652076616c75652e0000000000000000000000000060648201526084019150620083799050565b6200861c8b6200b594565b60275460405163659ac74b60e01b81526001600160a01b038681166004830152858116602483015262ffffff8516604483015261ffff84166064830152600092169063659ac74b906084016020604051808303816000875af11580156200b369573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ae7e91906200d2a0565b60608160070180546200b3a2906200d139565b90506000036200b40b5762004601826001018054806020026020016040519081016040528092919081815260200182805480156200b40057602002820191906000526020600020905b8154815260200190600101908083116200b3eb575b50505050506200b5a2565b8160070180546200b41c906200d139565b80601f01602080910402602001604051908101604052809291908181526020018280546200b44a906200d139565b80156200b49b5780601f106200b46f576101008083540402835291602001916200b49b565b820191906000526020600020905b8154815290600101906020018083116200b47d57829003601f168201915b50505050509050919050565b60006200b4b583836200b656565b549392505050565b60028101546000908190819060e01b6200b4d7856200b38f565b6040516020016200b4ea9291906200d5e5565b60408051601f1981840301815290829052600486015490925060009182916001600160a01b0316906200b51f9085906200d384565b600060405180830381855afa9150503d80600081146200b55c576040519150601f19603f3d011682016040523d82523d6000602084013e6200b561565b606091505b509150915060006200b58682886003015460206200b58091906200d286565b6200be19565b929792965091945050505050565b6200b59f816200bebb565b50565b60606000825160206200b5b691906200d286565b67ffffffffffffffff8111156200b5d1576200b5d16200ca7d565b6040519080825280601f01601f1916602001820160405280156200b5fc576020820181803683370190505b50905060005b83518110156200b64f5760008482815181106200b623576200b6236200ca93565b6020026020010151905080826020026020018401525080806200b646906200d2c0565b9150506200b602565b5092915050565b6004820154600283015460038401546000926001600160a01b03169160e01b90836200b682876200b38f565b6001600160a01b0385166000908152602089815260408083206001600160e01b03198816845282528083209051939450926200b6c39185918791016200d40e565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff16156200b7775785156200b707576200b707876200bebb565b6001600160a01b0384166000908152602088815260408083206001600160e01b031987168452825280832090519092916200b7479185918791016200d40e565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062004601565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200b7d657600080fd5b505af11580156200b7eb573d6000803e3d6000fd5b5050505060006200b7fc886200b4bd565b6040516365bc948160e01b81526001600160a01b03881660048201529092506000915060008051602062025819833981519152906365bc9481906024016000604051808303816000875af11580156200b859573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b88391908101906200d618565b50905080516000036200b901576040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162008379565b60005b81518110156200bcb45760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898585815181106200b958576200b9586200ca93565b60200260200101516040518363ffffffff1660e01b81526004016200b9929291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200b9b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b9d691906200c4b4565b9050806200ba40577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888484815181106200ba15576200ba156200ca93565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b6200ba688b8484815181106200ba5a576200ba5a6200ca93565b60200260200101516200bf11565b6200ba7457506200bc9f565b60068b0154600090819060ff16156200baca5760006200bab18e8787815181106200baa3576200baa36200ca93565b60200260200101516200c0fa565b90945092509050806200bac857505050506200bc9f565b505b6001828201610100031b60001901811b8316811c8681146200baf057505050506200bc9f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200bb289291906200d40e565b604051602081830303815290604052805190602001208989815181106200bb53576200bb536200ca93565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a160405180608001604052808787815181106200bbb7576200bbb76200ca93565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200bc3d9291906200d40e565b60408051808303601f190181529181528151602092830120835282820193909352908201600020835181559083015160018201559082015160028201556060909101516003909101805460ff1916911515919091179055506200bcb492505050565b806200bcab816200d2c0565b9150506200b904565b506001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200bcf59187918991016200d40e565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200bd955760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162008379565b87156200bda7576200bda7896200bebb565b6001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200bde79187918991016200d40e565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b600080600060208551116200be305784516200be33565b60205b905060005b818110156200beb1576200be4e8160086200d286565b866200be5b83886200c4ce565b815181106200be6e576200be6e6200ca93565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200bea8816200d2c0565b9150506200be38565b5090949350505050565b6004810180546001600160a01b031916905560028101805463ffffffff191690556200beec6001820160006200c3fb565b60006003820181905560068201805460ff191690556200b59f9060078301906200c41b565b600482810154604051630667f9d760e41b81526001600160a01b0390911691810191909152602481018290526000908190600080516020620258198339815191529063667f9d7090604401602060405180830381865afa1580156200bf7a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bfa091906200c4b4565b90506000806200bfb0866200b4bd565b9092509050600081156200bfc65760006200bfca565b6000195b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062025819833981519152906370ca10bb90606401600060405180830381600087803b1580156200c03557600080fd5b505af11580156200c04a573d6000803e3d6000fd5b5050505060006200c05b886200b4bd565b60048a8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018a9052604481018890529092506000805160206202581983398151915291506370ca10bb90606401600060405180830381600087803b1580156200c0c757600080fd5b505af11580156200c0dc573d6000803e3d6000fd5b505050508380156200c0ee5750808314155b98975050505050505050565b600482810154604051630667f9d760e41b81526001600160a01b039091169181019190915260248101829052600090819081908190600080516020620258198339815191529063667f9d7090604401602060405180830381865afa1580156200c167573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c18d91906200c4b4565b90506000806200c1a0888860016200c256565b915091506000806200c1b58a8a60006200c256565b60048c8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018c905260448101889052919350915060008051602062025819833981519152906370ca10bb90606401600060405180830381600087803b1580156200c22257600080fd5b505af11580156200c237573d6000803e3d6000fd5b505050508380156200c2465750815b9a92995097509095505050505050565b60008060005b6101008110156200c35e576000846200c279576001821b6200c28b565b6200c2868260ff6200d270565b6001901b5b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062025819833981519152906370ca10bb90606401600060405180830381600087803b1580156200c2f657600080fd5b505af11580156200c30b573d6000803e3d6000fd5b505050506000806200c31d896200b4bd565b915091508180156200c32e57508015155b156200c3455760018495509550505050506200c367565b50505080806200c355906200d2c0565b9150506200c25c565b50600080915091505b935093915050565b6127cc806200d68483390190565b610b08806200fe5083390190565b610bfd806201095883390190565b610c18806201155583390190565b613c2a806201216d83390190565b610f1f8062015d9783390190565b6167e68062016cb683390190565b6108ff806201d49c83390190565b614e6b806201dd9b83390190565b612c138062022c0683390190565b50805460008255906000526020600020908101906200b59f91906200c455565b5080546200c429906200d139565b6000825580601f106200c43a575050565b601f0160209004906000526020600020908101906200b59f91905b5b808211156200c46c57600081556001016200c456565b5090565b634e487b7160e01b600052601160045260246000fd5b6001600160801b038181168382160280821691908281146200c4ac576200c4ac6200c470565b505092915050565b6000602082840312156200c4c757600080fd5b5051919050565b808201808211156200460157620046016200c470565b6000602082840312156200c4f757600080fd5b81356001600160e01b03198116811462005e9357600080fd5b6020808252825182820181905260009190848201906040850190845b818110156200c5535783516001600160a01b0316835292840192918401916001016200c52c565b50909695505050505050565b60005b838110156200c57c5781810151838201526020016200c562565b50506000910152565b600081518084526200c59f8160208601602086016200c55f565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200c66957603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200c65257605f198985030183526200c63f8486516200c585565b948e01949350918d01916001016200c620565b505050978a0197945050918801916001016200c5da565b50919a9950505050505050505050565b60ff811681146200b59f57600080fd5b600080604083850312156200c69d57600080fd5b82356200c6aa816200c679565b915060208301356200c6bc816200c679565b809150509250929050565b600081518084526020808501945080840160005b838110156200c7035781516001600160e01b031916875295820195908201906001016200c6db565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200c78b57888303603f19018552815180518785526200c75c888601826200c585565b91890151858303868b01529190506200c77681836200c6c7565b9689019694505050908601906001016200c735565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200c7f257603f198886030184526200c7df8583516200c585565b945092850192908501906001016200c7c0565b5092979650505050505050565b62ffffff811681146200b59f57600080fd5b6000806000606084860312156200c82757600080fd5b83356200c834816200c7ff565b92506020840135915060408401356200c84d816200c679565b809150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200c78b57888303603f19018552815180516001600160a01b031684528701518784018790526200c8b7878501826200c6c7565b95880195935050908601906001016200c87f565b6001600160a01b03811681146200b59f57600080fd5b600080600080600080600080610100898b0312156200c8ff57600080fd5b88356200c90c816200c8cb565b975060208901356200c91e816200c8cb565b965060408901356200c930816200c8cb565b955060608901356200c942816200c7ff565b94506080890135935060a0890135925060c08901356200c962816200c679565b915060e08901356200c974816200c679565b809150509295985092959890939650565b61ffff811681146200b59f57600080fd5b6000602082840312156200c9a957600080fd5b813562005e93816200c985565b600080600080600080600060e0888a0312156200c9d257600080fd5b87356200c9df816200c8cb565b965060208801356200c9f1816200c8cb565b955060408801356200ca03816200c8cb565b945060608801356200ca15816200c7ff565b93506080880135925060a08801356200ca2e816200c679565b915060c08801356200ca40816200c679565b8091505092959891949750929550565b80516200a76a816200c7ff565b6000602082840312156200ca7057600080fd5b815162005e93816200c7ff565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b805180151581146200a76a57600080fd5b6000602082840312156200cacd57600080fd5b62005e93826200caa9565b600081518084526020808501945080840160005b838110156200c703578151875295820195908201906001016200caec565b60006001600160a01b038086168352606060208401526200cb2f60608401866200cad8565b9150808416604084015250949350505050565b604051610120810167ffffffffffffffff811182821017156200cb69576200cb696200ca7d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156200cb9b576200cb9b6200ca7d565b604052919050565b600067ffffffffffffffff8211156200cbc0576200cbc06200ca7d565b5060051b60200190565b6000806000606084860312156200cbe057600080fd5b835192506020808501519250604085015167ffffffffffffffff8111156200cc0757600080fd5b8501601f810187136200cc1957600080fd5b80516200cc306200cc2a826200cba3565b6200cb6f565b81815260059190911b820183019083810190898311156200cc5057600080fd5b928401925b828410156200cc70578351825292840192908401906200cc55565b80955050505050509250925092565b80516001600160801b03811681146200a76a57600080fd5b805164ffffffffff811681146200a76a57600080fd5b6000608082840312156200ccc057600080fd5b6040516080810181811067ffffffffffffffff821117156200cce6576200cce66200ca7d565b806040525080915082516200ccfb816200c7ff565b815260208301516200cd0d816200c7ff565b602082015260408301516200cd22816200c7ff565b60408201526200cd35606084016200cc97565b60608201525092915050565b600060a082840312156200cd5457600080fd5b60405160a0810181811067ffffffffffffffff821117156200cd7a576200cd7a6200ca7d565b806040525080915082516200cd8f816200c679565b815260208301516200cda1816200c985565b602082015260408301516200cdb6816200c985565b60408201526200cdc9606084016200cc97565b60608201526200cddc608084016200cc97565b60808201525092915050565b600061020082840312156200cdfc57600080fd5b6200ce066200cb42565b6200ce11836200cc7f565b81526200ce21602084016200cc7f565b60208201526200ce34604084016200cc7f565b60408201526200ce47606084016200cc7f565b60608201526200ce5a608084016200ca50565b60808201526200ce6d60a084016200cc7f565b60a08201526200ce8060c084016200cc7f565b60c08201526200ce948460e085016200ccad565b60e08201526200cea98461016085016200cd41565b6101008201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526200cee460808301856200cad8565b82810360608401526200cef881856200cad8565b979650505050505050565b600082601f8301126200cf1557600080fd5b815160206200cf286200cc2a836200cba3565b82815260059290921b840181019181810190868411156200cf4857600080fd5b8286015b848110156200cf6557805183529183019183016200cf4c565b509695505050505050565b6000602082840312156200cf8357600080fd5b815167ffffffffffffffff8111156200cf9b57600080fd5b6200885a848285016200cf03565b600067ffffffffffffffff8311156200cfc6576200cfc66200ca7d565b6200cfdb601f8401601f19166020016200cb6f565b90508281528383830111156200cff057600080fd5b62005e938360208301846200c55f565b6000602082840312156200d01357600080fd5b815167ffffffffffffffff8111156200d02b57600080fd5b8201601f810184136200d03d57600080fd5b6200885a848251602084016200cfa9565b60006001600160a01b038088168352808716602084015280861660408401525060a060608301526200d08460a08301856200cad8565b82810360808401526200c0ee81856200cad8565b60006001600160a01b03808816835280871660208401525061ffff8516604083015283606083015260a060808301526200cef860a08301846200c585565b6001600160a01b03831681526040602082015260006200885a60408301846200c585565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b03808416806200d12d576200d12d6200d0fa565b92169190910492915050565b600181811c908216806200d14e57607f821691505b6020821081036200d16f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000826200d187576200d1876200d0fa565b500490565b6000806000606084860312156200d1a257600080fd5b6200d1ad846200cc7f565b92506200d1bd602085016200cc7f565b91506200d1cd604085016200cc7f565b90509250925092565b60ff81811683821601908111156200460157620046016200c470565b60ff82811682821603908111156200460157620046016200c470565b6001600160a01b03841681528260208201526060604082015260006200ae7e60608301846200c585565b600080604083850312156200d24c57600080fd5b6200d257836200cc7f565b91506200d267602084016200cc7f565b90509250929050565b818103818111156200460157620046016200c470565b80820281158282048414176200460157620046016200c470565b6000602082840312156200d2b357600080fd5b815162005e93816200c8cb565b6000600182016200d2d5576200d2d56200c470565b5060010190565b600080600080600080600080610100898b0312156200d2fa57600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200d33660e08a016200caa9565b90509295985092959890939650565b60006001600160a01b038087168352808616602084015250608060408301526200d37360808301856200cad8565b905082606083015295945050505050565b600082516200d3988184602087016200c55f565b9190910192915050565b8381528260208201526060604082015260006200ae7e60608301846200c585565b60006001600160a01b038086168352808516602084015250606060408301526200ae7e60608301846200c585565b82151581526040602082015260006200885a60408301846200c585565b600083516200d4228184602088016200c55f565b9190910191825250602001919050565b600181815b808511156200d4735781600019048211156200d457576200d4576200c470565b808516156200d46557918102915b93841c93908002906200d437565b509250929050565b6000826200d48c5750600162004601565b816200d49b5750600062004601565b81600181146200d4b457600281146200d4bf576200d4df565b600191505062004601565b60ff8411156200d4d3576200d4d36200c470565b50506001821b62004601565b5060208310610133831016604e8410600b84101617156200d504575081810a62004601565b6200d51083836200d432565b80600019048211156200d527576200d5276200c470565b029392505050565b600062005e9383836200d47b565b7f73746453746f726167652066696e642853746453746f72616765293a2050616381527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e20000000000000000000000000000000000000000000006040820152600082516200d5c381604a8501602087016200c55f565b91909101604a0192915050565b60208152600062005e9360208301846200c585565b6001600160e01b03198316815281516000906200d60a8160048501602087016200c55f565b919091016004019392505050565b600080604083850312156200d62c57600080fd5b825167ffffffffffffffff808211156200d64557600080fd5b6200d653868387016200cf03565b935060208501519150808211156200d66a57600080fd5b506200d679858286016200cf03565b915050925092905056fe608060405234801561001057600080fd5b506127ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806378b253c6116100f9578063c70e8bd411610097578063ea9db9d311610071578063ea9db9d31461052e578063f08e95c614610541578063fdc27257146106d0578063feee3735146106e357600080fd5b8063c70e8bd41461050b578063d826f88f1461051e578063df0ccc481461052657600080fd5b80638187f516116100d35780638187f516146104b8578063a8aa1b31146104e8578063c153f4cd146104fb578063c2fb5a641461050357600080fd5b806378b253c61461030357806379c8ccf7146104925780637a51a4c6146104a557600080fd5b80634e430b5a11610166578063571eed3711610140578063571eed37146102c05780635f9c01b1146102d557806360bed5f3146102dd57806367ddb278146102f057600080fd5b80634e430b5a14610287578063505d90331461029a57806353e8079b146102ad57600080fd5b80631865c57d116101975780631865c57d1461024a5780632aac3e121461025f57806333ad78d11461027257600080fd5b806309fa1f90146101be5780630d4abdb3146101db5780630f146a3e1461021f575b600080fd5b6101c66106f6565b60405190151581526020015b60405180910390f35b6101ee6101e936600461202a565b610705565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101d2565b600f54610232906001600160a01b031681565b6040516001600160a01b0390911681526020016101d2565b61025261072e565b6040516101d29190612093565b601154610232906001600160a01b031681565b610285610280366004612221565b610b04565b005b6101ee610295366004612274565b610b32565b6101ee6102a83660046122a7565b610b7d565b6101ee6102bb3660046122e3565b610ba2565b6102c8610bc9565b6040516101d29190612359565b610232610c57565b6101ee6102eb36600461238c565b610c6b565b6101ee6102fe3660046123ce565b610c92565b610252604080516101208082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905288518084018a52868152808601879052808a0187905280850187905260e0808a019190915289518084018b52878152808701889052808b018890528086018890528085019790975261010098890196909652885196870189526003546001600160801b038082168952600160801b918290048116898801526004548082168a8d01529190910481168886015260055462ffffff8082168a87015263010000009182900483168a8601526006549092169289019290925289518085018b526007548083168252838104831682890152600160301b8104909216818c0152600160481b90910464ffffffffff90811682870152968801528851918201895260085460ff8116835288810461ffff9081169684019690965290810490941697810197909752650100000000008304841691870191909152600160501b909104909116908401529081019190915290565b6101ee6104a03660046123ce565b610cbf565b6101ee6104b336600461202a565b610cec565b6102856104c6366004612470565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600254610232906001600160a01b031681565b6102c8610d15565b6102c8610d22565b610285610519366004612221565b610d2f565b610285610d57565b6102c8610df8565b6101ee61053c3660046123ce565b610e05565b610252604080516101208082018352600080835260208084018290528385018290526060808501839052608080860184905260a080870185905260c080880186905288518084018a52868152808601879052808a0187905280850187905260e0808a019190915289518084018b52878152808701889052808b018890528086018890528085019790975261010098890196909652885196870189526009546001600160801b038082168952600160801b91829004811689880152600a548082168a8d015291909104811688860152600b5462ffffff8082168a87015263010000009182900483168a860152600c549092169289019290925289518085018b52600d548083168252838104831682890152600160301b8104909216818c0152600160481b90910464ffffffffff908116828701529688015288519182018952600e5460ff8116835288810461ffff9081169684019690965290810490941697810197909752650100000000008304841691870191909152600160501b909104909116908401529081019190915290565b6101ee6106de3660046123ce565b610e32565b6101ee6106f13660046122e3565b610e5f565b6000610700610e86565b905090565b600061070f610f13565b61071c8686868686610f47565b50630d4abdb360e01b95945050505050565b6040805161012081018252600080825260208083018290528284018290526060808401839052608080850184905260a080860185905260c086018590528651808301885285815280850186905280880186905280840186905260e08701528651908101875284815292830184905294820183905281018290529283015261010081019190915260006107c86002546001600160a01b031690565b9050806001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082b91906124a2565b6001600160801b039081166020850152168252604080516306c6fe7560e51b815281516001600160a01b0384169263d8dfcea092600480820193918290030181865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a391906124a2565b8360400184606001826001600160801b03166001600160801b0316815250826001600160801b03166001600160801b031681525050506000816001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d91906124e8565b62ffffff1660808401819052604051630157d2d160e31b8152600481018290529091506001600160a01b03831690630abe9688906024016040805180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b491906124a2565b6001600160801b0390811660c08601521660a084015260e083015160408051638d7024e560e01b815290516001600160a01b03851691638d7024e59160048083019260809291908290030181865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190612518565b64ffffffffff16606085015262ffffff908116604080860191909152918116602085015291909116825261010085015181516315460a2560e21b8152915190916001600160a01b0386169163551828949160048082019260a0929091908290030181865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad2919061257e565b64ffffffffff908116608087015216606085015261ffff908116604085015216602083015260ff169052509192915050565b600f80546001600160a01b0319166001600160a01b0385161790556010610b2c828483612681565b50505050565b6000610b3c610f13565b610b44610e86565b610b6157604051632def67a360e21b815260040160405180910390fd5b610b6c8484846110fd565b5063272185ad60e11b5b9392505050565b6000610b87610f13565b610b92848484611297565b5063505d903360e01b9392505050565b6000610bac610f13565b610bb88585858561144e565b506353e8079b60e01b949350505050565b60008054610bd690612601565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0290612601565b8015610c4f5780601f10610c2457610100808354040283529160200191610c4f565b820191906000526020600020905b815481529060010190602001808311610c3257829003601f168201915b505050505081565b60006107006002546001600160a01b031690565b6000610c75610f13565b610c818585858561144e565b506360bed5f360e01b949350505050565b6000610c9c610f13565b610cab888888888888886115fc565b50630cfbb64f60e31b979650505050505050565b6000610cc9610f13565b610cd8888888888888886117b6565b506379c8ccf760e01b979650505050505050565b6000610cf6610f13565b610d038686868686611967565b50633d28d26360e11b95945050505050565b60128054610bd690612601565b60018054610bd690612601565b601180546001600160a01b0319166001600160a01b0385161790556012610b2c828483612681565b610d5f611b16565b600060038190556004819055600580546001600160981b0319908116909155600680546001600160801b0319908116909155600780546dffffffffffffffffffffffffffff19908116909155600880546effffffffffffffffffffffffffffff199081169091556009859055600a94909455600b8054909316909255600c80549091169055600d80549091169055600e80549091169055565b60108054610bd690612601565b6000610e0f610f13565b610e1e888888888888886117b6565b5063ea9db9d360e01b979650505050505050565b6000610e3c610f13565b610e4b888888888888886115fc565b5063fdc2725760e01b979650505050505050565b6000610e69610f13565b610e7585858585611b2d565b5063feee373560e01b949350505050565b600080610f02610e9e6002546001600160a01b031690565b6001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff9190612741565b90565b6001600160a01b0316301492915050565b6002546001600160a01b03163314610f4557604051634a27038360e01b81523360048201526024015b60405180910390fd5b565b6001600160a01b03851630146110f657610f648585858585611cdb565b610f6c61072e565b80516020808301516001600160801b03928316600160801b918416820217600355604080850151606080870151918616918616909302176004556080808601516005805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600680546001600160801b031916919098161790965560e087015180516007805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff9384160217905561010096870151805160088054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b91909316029190911790556110f6611cf0565b5050505050565b611108838383611dc1565b61111061072e565b80516020808301516001600160801b03928316600160801b918416820217600355604080850151606080870151918616918616909302176004556080808601516005805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600680546001600160801b031916919098161790965560e087015180516007805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff9384160217905561010096870151805160088054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b9190931602919091179055505050565b306001600160a01b038416036112ac57505050565b6112b7838383611dc1565b6112bf61072e565b80516020808301516001600160801b03928316600160801b918416820217600355604080850151606080870151918616918616909302176004556080808601516005805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600680546001600160801b031916919098161790965560e087015180516007805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff9384160217905561010096870151805160088054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b9190931602919091179055611449611cf0565b505050565b6001600160a01b0384163014610b2c5761146a84848484611dce565b61147261072e565b80516020808301516001600160801b03928316600160801b91841682021760095560408085015160608087015191861691861690930217600a55608080860151600b805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600c80546001600160801b031916919098161790965560e08701518051600d805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff93841602179055610100968701518051600e8054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b9190931602919091179055610b2c611ddc565b6001600160a01b03871630146117ad5761161b87878787878787611e2a565b61162361072e565b80516020808301516001600160801b03928316600160801b91841682021760095560408085015160608087015191861691861690930217600a55608080860151600b805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600c80546001600160801b031916919098161790965560e08701518051600d805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff93841602179055610100968701518051600e8054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b91909316029190911790556117ad611ddc565b50505050505050565b6001600160a01b03871630146117ad576117d587878787878787611e42565b6117dd61072e565b80516020808301516001600160801b03928316600160801b918416820217600355604080850151606080870151918616918616909302176004556080808601516005805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600680546001600160801b031916919098161790965560e087015180516007805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff9384160217905561010096870151805160088054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b91909316029190911790556117ad611cf0565b6001600160a01b03851630146110f6576119848585858585611e4f565b61198c61072e565b80516020808301516001600160801b03928316600160801b91841682021760095560408085015160608087015191861691861690930217600a55608080860151600b805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600c80546001600160801b031916919098161790965560e08701518051600d805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff93841602179055610100968701518051600e8054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b91909316029190911790556110f6611ddc565b611b21600080611f74565b610f4560016000611f74565b6001600160a01b0384163014610b2c57611b4984848484611e5d565b611b5161072e565b80516020808301516001600160801b03928316600160801b918416820217600355604080850151606080870151918616918616909302176004556080808601516005805460a089015162ffffff9384166001600160981b031990921691909117630100000091891682021790915560c0880151600680546001600160801b031916919098161790965560e087015180516007805483890151848801519489015193861665ffffffffffff19909216919091179085168a02176dffffffffffffffff0000000000001916600160301b939094169290920264ffffffffff60481b191692909217600160481b64ffffffffff9384160217905561010096870151805160088054978301519583015196830151929094015160ff90911662ffffff199097169690961761ffff9485169098029790971769ffffffffffffff00000019169290931690940269ffffffffff000000000019161765010000000000948216949094029390931764ffffffffff60501b1916600160501b9190931602919091179055610b2c611cf0565b6000611ce8368280612681565b505050505050565b600f546001600160a01b0316611d0257565b600f5460108054611da4926001600160a01b03169190611d2190612601565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4d90612601565b8015611d9a5780601f10611d6f57610100808354040283529160200191611d9a565b820191906000526020600020905b815481529060010190602001808311611d7d57829003601f168201915b5050505050611e6a565b50600f80546001600160a01b0319169055610f4560106000611f74565b6000610b2c368280612681565b60016110f636600083612681565b6011546001600160a01b0316611dee57565b60115460128054611e0d926001600160a01b03169190611d2190612601565b50601180546001600160a01b0319169055610f4560126000611f74565b6001611e3836600083612681565b5050505050505050565b6000611e38368280612681565b6001611ce836600083612681565b60006110f6368280612681565b6060610b768383600084600080856001600160a01b03168486604051611e90919061275a565b60006040518083038185875af1925050503d8060008114611ecd576040519150601f19603f3d011682016040523d82523d6000602084013e611ed2565b606091505b5091509150611ee2868383611eec565b9695505050505050565b606082611f0157611efc82611f48565b610b76565b8151158015611f1857506001600160a01b0384163b155b15611f4157604051639996b31560e01b81526001600160a01b0385166004820152602401610f3c565b5080610b76565b805115611f585780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b508054611f8090612601565b6000825580601f10611f90575050565b601f016020900490600052602060002090810190611f7191905b80821115611fbe5760008155600101611faa565b5090565b80356001600160a01b0381168114611fd957600080fd5b919050565b60008083601f840112611ff057600080fd5b50813567ffffffffffffffff81111561200857600080fd5b6020830191508360208260051b850101111561202357600080fd5b9250929050565b60008060008060006080868803121561204257600080fd5b61204b86611fc2565b945061205960208701611fc2565b9350604086013567ffffffffffffffff81111561207557600080fd5b61208188828901611fde565b96999598509660600135949350505050565b81516001600160801b031681526020808301516102008301916120c0908401826001600160801b03169052565b5060408301516120db60408401826001600160801b03169052565b5060608301516120f660608401826001600160801b03169052565b50608083015161210d608084018262ffffff169052565b5060a083015161212860a08401826001600160801b03169052565b5060c083015161214360c08401826001600160801b03169052565b5060e083015161218960e084018262ffffff8082511683528060208301511660208401528060408301511660408401525064ffffffffff60608201511660608301525050565b50610100830151805160ff16610160840152602081015161ffff9081166101808501526040820151166101a0840152606081015164ffffffffff9081166101c08501526080820151166101e08401525092915050565b60008083601f8401126121f157600080fd5b50813567ffffffffffffffff81111561220957600080fd5b60208301915083602082850101111561202357600080fd5b60008060006040848603121561223657600080fd5b61223f84611fc2565b9250602084013567ffffffffffffffff81111561225b57600080fd5b612267868287016121df565b9497909650939450505050565b60008060006040848603121561228957600080fd5b83359250602084013567ffffffffffffffff81111561225b57600080fd5b6000806000606084860312156122bc57600080fd5b6122c584611fc2565b92506122d360208501611fc2565b9150604084013590509250925092565b600080600080608085870312156122f957600080fd5b61230285611fc2565b935061231060208601611fc2565b92506040850135801515811461232557600080fd5b9396929550929360600135925050565b60005b83811015612350578181015183820152602001612338565b50506000910152565b6020815260008251806020840152612378816040850160208701612335565b601f01601f19169190910160400192915050565b600080600080608085870312156123a257600080fd5b6123ab85611fc2565b93506123b960208601611fc2565b93969395505050506040820135916060013590565b600080600080600080600060a0888a0312156123e957600080fd5b6123f288611fc2565b965061240060208901611fc2565b955061240e60408901611fc2565b9450606088013567ffffffffffffffff8082111561242b57600080fd5b6124378b838c01611fde565b909650945060808a013591508082111561245057600080fd5b5061245d8a828b01611fde565b989b979a50959850939692959293505050565b60006020828403121561248257600080fd5b610b7682611fc2565b80516001600160801b0381168114611fd957600080fd5b600080604083850312156124b557600080fd5b6124be8361248b565b91506124cc6020840161248b565b90509250929050565b805162ffffff81168114611fd957600080fd5b6000602082840312156124fa57600080fd5b610b76826124d5565b805164ffffffffff81168114611fd957600080fd5b6000806000806080858703121561252e57600080fd5b612537856124d5565b9350612545602086016124d5565b9250612553604086016124d5565b915061256160608601612503565b905092959194509250565b805161ffff81168114611fd957600080fd5b600080600080600060a0868803121561259657600080fd5b855160ff811681146125a757600080fd5b94506125b56020870161256c565b93506125c36040870161256c565b92506125d160608701612503565b91506125df60808701612503565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061261557607f821691505b60208210810361263557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561144957600081815260208120601f850160051c810160208610156126625750805b601f850160051c820191505b81811015611ce85782815560010161266e565b67ffffffffffffffff831115612699576126996125eb565b6126ad836126a78354612601565b8361263b565b6000601f8411600181146126e157600085156126c95750838201355b600019600387901b1c1916600186901b1783556110f6565b600083815260209020601f19861690835b8281101561271257868501358255602094850194600190920191016126f2565b508682101561272f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60006020828403121561275357600080fd5b5051919050565b6000825161276c818460208701612335565b919091019291505056fea2646970667358221220cee6d0e049eeac61ed2f2cb95f43480f698198d7dd20004c81d4a46760cf42b364736f6c63430008140033608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212203676dca41fe70116d022466cee8163b666c31da9d26a6ab943091f2051f816da64736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea26469706673582212204baa56b0bfc1782b9bcd82e8fcd1181086fcb98288a997d94423795fd41ef93f64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea2646970667358221220f015b691ba74ea839179623d05ecb3712ba206b9d59193c1f36abb0a7dab1ec264736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613b4480620000e66000396000f3fe60806040523480156200001157600080fd5b5060043610620003315760003560e01c8063701ab8c111620001b1578063aabc4b3c11620000f5578063e203a31f11620000a3578063e92d0d5d116200007a578063e92d0d5d1462000757578063f2fde38b146200076e578063fd90c2be146200078557600080fd5b8063e203a31f146200071f578063e30c39781462000736578063e74b981b146200074057600080fd5b8063c1b931be11620000d8578063c1b931be14620006ca578063d547741f14620006f1578063ddbfd941146200070857600080fd5b8063aabc4b3c146200065e578063be20309414620006b357600080fd5b806380c5061e116200015f57806391d14854116200013657806391d14854146200062c578063a0a0ea391462000643578063a217fddf146200065557600080fd5b806380c5061e14620006095780638ce9aa1c14620006135780638da5cb5b146200062257600080fd5b8063715018a61162000194578063715018a614620005de57806379ba509714620005e85780637daf5d6614620005f257600080fd5b8063701ab8c114620005b0578063704037bd14620005b857600080fd5b80633a2f1a9111620002795780635a4409231162000227578063661d7ffb11620001fe578063661d7ffb146200054b5780636622e0d7146200057357806369d56ea3146200059957600080fd5b80635a44092314620005135780635b35875c146200052a578063659ac74b146200053457600080fd5b80634ccb20c0116200025c5780634ccb20c014620004e15780634cd161d314620004f35780634e937c3a146200050a57600080fd5b80633a2f1a9114620004b35780633c78a94114620004ca57600080fd5b8063248a9ca311620002e35780632f2ff15d11620002ba5780632f2ff15d146200046e57806336568abe1462000485578063379ee803146200049c57600080fd5b8063248a9ca314620003fb5780632772184214620004405780632cc06b8c146200045757600080fd5b80630752092b11620003185780630752092b146200037b578063093ff76914620003ab5780631af5bacc14620003c457600080fd5b806301ffc9a714620003365780630282c9c11462000362575b600080fd5b6200034d6200034736600462002c0f565b6200078e565b60405190151581526020015b60405180910390f35b6200036c620007c6565b60405162000359919062002c3b565b620003926200038c36600462002c81565b620008b6565b6040516001600160a01b03909116815260200162000359565b620003c2620003bc36600462002cd8565b620008c5565b005b620003ec7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000359565b620003ec6200040c36600462002c81565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b6200034d6200045136600462002dab565b620009d2565b620003c26200046836600462002dcb565b620009e1565b620003c26200047f36600462002e19565b62000a34565b620003c26200049636600462002e19565b62000a7c565b620003c2620004ad36600462002e5d565b62000ab7565b620003c2620004c436600462002f18565b62000bde565b620003c2620004db36600462002dab565b62000c96565b6000546001600160a01b031662000392565b620003c26200050436600462002fd4565b62000cf8565b600354620003ec565b620003c26200052436600462002dab565b62000dd0565b6200036c62000e48565b62000392620005453660046200300c565b62000e5b565b620003ec7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d81565b6200058a620005843660046200306d565b62001334565b604051620003599190620030a0565b620003c2620005aa36600462003117565b620014df565b6001620003ec565b620005cf620005c93660046200316d565b62001671565b604051620003599190620031b3565b620003c2620016aa565b620003c2620016c2565b620003926200060336600462002c81565b62001710565b620003ec62001743565b67016345785d8a0000620003ec565b6200039262001751565b6200034d6200063d36600462002e19565b62001786565b6002546001600160a01b031662000392565b620003ec600081565b620006756200066f36600462002c81565b62001801565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000359565b620003c2620006c4366004620031f0565b620018d6565b7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d620003ec565b620003c26200070236600462002e19565b62001aa6565b620003c26200071936600462002dab565b62001aee565b620003c2620007303660046200324a565b62001b66565b6200039262001bd8565b620003c26200075136600462002dab565b62001c02565b620003c26200076836600462002c81565b62001c17565b620003c26200077f36600462002dab565b62001cc8565b600154620003ec565b60006001600160e01b03198216637965db0b60e01b1480620007c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007d6600562001d51565b90508015620008b2578067ffffffffffffffff811115620007fb57620007fb62003268565b60405190808252806020026020018201604052801562000825578160200160208202803683370190505b5091506000805b82811015620008a2576000806200084560058462001d5e565b9092509050620008558162001d7c565b156200088c57818685815181106200087157620008716200327e565b6020908102919091010152836200088881620032aa565b9450505b5050806200089a90620032aa565b90506200082c565b5081811015620008b0578083525b505b5090565b6000620007c060088362001d89565b620008cf62001d97565b6000620008e28b8b8b61ffff1662001dcd565b6020015190506001600160a01b038116620009325760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009ac57600080fd5b505af1158015620009c1573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007c060088362001e79565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a0d8162001e9c565b6040805160008082526020820190925262000a2e9186918691869162001ea8565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a708162001e9c565b62000a2e838362001ffc565b6001600160a01b038116331462000aa65760405163334bd91960e11b815260040160405180910390fd5b62000ab2828262002029565b505050565b62000ac162001d97565b60018961ffff16101562000aef57604051634f958e7160e01b815261ffff8a16600482015260240162000929565b600062000b03818a8a8a8a8a8a8a620020c6565b9050811562000b1e5762000b1b81600160ff620021cb565b90505b62000b30600561ffff8c1683620021f5565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c0a8162001e9c565b6001600160a01b038416158062000c295750836001600160a01b031916155b1562000c485760405163d43a15d160e01b815260040160405180910390fd5b62000c8d8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062001ea892505050565b50505050505050565b62000ca062001d97565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cdc57600080fd5b505af115801562000cf1573d6000803e3d6000fd5b5050505050565b62000d0262001d97565b62000d13600561ffff841662002204565b62000d3857604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000d4b600561ffff851662002212565b905081151560ff82901c15150362000d76576040516311be38db60e11b815260040160405180910390fd5b62000d9761ffff841662000d8d838560ff620021cb565b60059190620021f5565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dda62001d97565b62000de760088262002220565b62000e11576040516303ce0ad960e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e56600562002237565b905090565b600062000e6e600561ffff841662002204565b62000e9357604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000ea6600561ffff851662002212565b9050600062000eb462001751565b6001600160a01b0316336001600160a01b031614905062000ed58262001d7c565b15801562000ee1575080155b1562000f0d576040516304fc2fe760e11b815233600482015261ffff8516602482015260440162000929565b62000f1a60088762001e79565b62000f4457604051638e888ef360e01b81526001600160a01b038716600482015260240162000929565b856001600160a01b0316876001600160a01b03160362000f8357604051632f9b185360e01b81526001600160a01b038816600482015260240162000929565b62000f8f858562002246565b5060008062000f9f89896200228c565b90925090506001600160a01b03821662000fcc57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010435760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff8716604482015260640162000929565b60006200105085620022b6565b6200105b86620022c3565b6200106687620022d4565b6200107188620022e5565b6200107c89620022f6565b620010878a62002308565b620010928b62002319565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e48201529089166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b17905260025490519192506001600160a01b0316908b908b908a908590620011439062002c01565b620011539594939291906200330e565b604051809103906000f08015801562001170573d6000803e3d6000fd5b506040805160808101825261ffff808b168083526001600160a01b0380861660208086018281528c15158789019081526000606089018181528e8716808352600486528b83208f89168085529087528c84208a855287528c84209b518c549651955193511515600160b81b0260ff60b81b19941515600160b01b02949094167fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff96909a1662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009097169b169a909a179490941792909216959095171790965560038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909217909155938152600a84528481209281529190925291909120919750620012b692506200232b565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff88600160038054905062001306919062003359565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200134585856200228c565b6001600160a01b038083166000908152600a6020908152604080832093851683529290529081209294509092506200137d8262002339565b90508015620014d5578067ffffffffffffffff811115620013a257620013a262003268565b604051908082528060200260200182016040528015620013f657816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181620013c15790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620014d2576000620014436200143d868462001d89565b62002344565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620014bd57620014bd6200327e565b60209081029190910101525060010162001422565b50505b5050505092915050565b620014e962001d97565b600080620014f886866200228c565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b9092049091161515606083015292945090925090620015b45760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff8616604482015260640162000929565b8315158160600151151503620015dc57604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b0260ff60b81b1990911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200166090871515815260200190565b60405180910390a250505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152620016a284848462001dcd565b949350505050565b620016b462001d97565b620016c060006200236f565b565b3380620016ce62001bd8565b6001600160a01b031614620017025760405163118cdaa760e01b81526001600160a01b038216600482015260240162000929565b6200170d816200236f565b50565b6000600382815481106200172857620017286200327e565b6000918252602090912001546001600160a01b031692915050565b600062000e56600862002339565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620017b4576200179862001751565b6001600160a01b0316826001600160a01b0316149050620007c0565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200181760058a62002204565b6200183957604051637d9160bf60e11b8152600481018a905260240162000929565b60006200184860058b62002212565b90506200185581620022b6565b61ffff1698506200186681620022c3565b61ffff1697506200187781620022d4565b61ffff1696506200188881620022e5565b61ffff1695506200189981620022f6565b62ffffff169450620018ab8162002308565b61ffff169350620018bc8162002319565b62ffffff16925060ff81901c915050919395975091939597565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015620019225750825b905060008267ffffffffffffffff166001148015620019405750303b155b9050811580156200194f575080155b156200196e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315620019a357845468ff00000000000000001916680100000000000000001785555b620019ae88620023ad565b67016345785d8a0000871115620019ea57604051635e8988c160e01b81526004810188905267016345785d8a0000602482015260440162000929565b620019f589620023c2565b6001879055600280546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001a9b57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001ae28162001e9c565b62000a2e838362002029565b62001af862001d97565b62001b0560088262002484565b62001b2f57604051638e888ef360e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001b7062001d97565b62001b81600561ffff83166200249b565b62001ba657604051637d9160bf60e11b815261ffff8216600482015260240162000929565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0062001776565b62001c0c62001d97565b6200170d81620023c2565b62001c2162001d97565b60015481810362001c4957604051631baa31e960e21b81526004810183905260240162000929565b67016345785d8a000082111562001c8557604051635e8988c160e01b81526004810183905267016345785d8a0000602482015260440162000929565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e5091015b60405180910390a15050565b62001cd262001d97565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001d1862001751565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007c082620024a9565b600080808062001d6f8686620024b6565b9097909650945050505050565b600060ff82901c620007c0565b6000620017fa8383620024e3565b3362001da262001751565b6001600160a01b031614620016c05760405163118cdaa760e01b815233600482015260240162000929565b60408051608081018252600080825260208201819052918101829052606081019190915262001dfd84846200228c565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620017fa565b6200170d813362002510565b600062001ebb86868661ffff1662001dcd565b6020015190506001600160a01b03811662001f075760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff8516604482015260640162000929565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001f47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f6d91906200336f565b0362001f905760405163b70cd0db60e01b81526004810184905260240162000929565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d9062001fc0908690869060040162003389565b600060405180830381600087803b15801562001fdb57600080fd5b505af115801562001ff0573d6000803e3d6000fd5b50505050505050505050565b6000826200201d57604051633e3253cf60e11b815260040160405180910390fd5b620017fa83836200254d565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b62680062002058848462001786565b15620020bb576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007c0565b6000915050620007c0565b60008561ffff168761ffff161180620020e45750610fff8661ffff16115b80620020f557506127108561ffff16115b806200210657506109c48361ffff16115b80620021195750620fffff8262ffffff16115b156200213857604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620016a28484620021e0576000620021e3565b60015b600180861b19929092169116841b1790565b6000620016a2848484620025ff565b6000620017fa83836200261e565b6000620017fa83836200262c565b6000620017fa836001600160a01b03841662002678565b60606000620017fa83620026ca565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620022838282620026d7565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620022ae579192915b509192909150565b600061ffff8216620007c0565b6000620007c08260101c610fff1690565b6000620007c082601c1c610fff1690565b6000620007c08260281c613fff1690565b6000620007c08260361c62ffffff1690565b6000620007c082604e1c613fff1690565b6000620007c082605c1c620fffff1690565b6000620017fa838362002678565b6000620007c0825490565b8061ffff811681146200236a576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620023a9826200295f565b5050565b620023b7620029d0565b6200170d8162002a1f565b6001600160a01b038116620023ea57604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200242b57600054604051634fcea97160e01b81526001600160a01b03909116600482015260240162000929565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001cbc565b6000620017fa836001600160a01b03841662002a55565b6000620017fa838362002b4e565b6000620007c08262002339565b60008080620024c6858562001d89565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620024fd57620024fd6200327e565b9060005260206000200154905092915050565b6200251c828262001786565b620023a95760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440162000929565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200257c848462001786565b620020bb576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620025b43390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007c0565b60008281526002840160205260408120829055620016a284846200232b565b6000620017fa838362002b6d565b6000818152600283016020526040812054801580156200265557506200265384846200261e565b155b15620017fa5760405163015ab34360e11b81526004810184905260240162000929565b6000818152600183016020526040812054620026c157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007c0565b506000620007c0565b6060620007c08262002b86565b600080600083600003620026f55750600160801b9150620007c09050565b5082600081121562002708579015906000035b621000008110156200291757600160801b9250846fffffffffffffffffffffffffffffffff8111156200273d57911591600019045b60018216156200274f5792830260801c925b800260801c6002821615620027665792830260801c925b800260801c60048216156200277d5792830260801c925b800260801c6008821615620027945792830260801c925b800260801c6010821615620027ab5792830260801c925b800260801c6020821615620027c25792830260801c925b800260801c6040821615620027d95792830260801c925b8002608090811c90821615620027f15792830260801c925b800260801c610100821615620028095792830260801c925b800260801c610200821615620028215792830260801c925b800260801c610400821615620028395792830260801c925b800260801c610800821615620028515792830260801c925b800260801c611000821615620028695792830260801c925b800260801c612000821615620028815792830260801c925b800260801c614000821615620028995792830260801c925b800260801c618000821615620028b15792830260801c925b800260801c62010000821615620028ca5792830260801c925b800260801c62020000821615620028e35792830260801c925b800260801c62040000821615620028fc5792830260801c925b800260801c62080000821615620029155792830260801c925b505b826000036200294457604051631dba598d60e11b8152600481018690526024810185905260440162000929565b8162002951578262002283565b6200228383600019620033a4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620016c057604051631afcd79f60e31b815260040160405180910390fd5b62002a29620029d0565b6001600160a01b0381166200170257604051631e4fbdf760e01b81526000600482015260240162000929565b60008181526001830160205260408120548015620020bb57600062002a7c60018362003359565b855490915060009062002a929060019062003359565b905080821462002afe57600086600001828154811062002ab65762002ab66200327e565b906000526020600020015490508087600001848154811062002adc5762002adc6200327e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002b125762002b12620033c7565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007c0565b60008181526002830160205260408120819055620017fa838362002b95565b60008181526001830160205260408120541515620017fa565b60606000620017fa8362002ba3565b6000620017fa838362002a55565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002bf557602002820191906000526020600020905b81548152602001906001019080831162002be0575b50505050509050919050565b61073180620033de83390190565b60006020828403121562002c2257600080fd5b81356001600160e01b031981168114620017fa57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002c755783518352928401929184019160010162002c57565b50909695505050505050565b60006020828403121562002c9457600080fd5b5035919050565b6001600160a01b03811681146200170d57600080fd5b803561ffff811681146200236a57600080fd5b803562ffffff811681146200236a57600080fd5b6000806000806000806000806000806101408b8d03121562002cf957600080fd5b8a3562002d068162002c9b565b995060208b013562002d188162002c9b565b985062002d2860408c0162002cb1565b975062002d3860608c0162002cb1565b965062002d4860808c0162002cb1565b955062002d5860a08c0162002cb1565b945062002d6860c08c0162002cb1565b935062002d7860e08c0162002cc4565b925062002d896101008c0162002cb1565b915062002d9a6101208c0162002cc4565b90509295989b9194979a5092959850565b60006020828403121562002dbe57600080fd5b8135620017fa8162002c9b565b60008060006060848603121562002de157600080fd5b833562002dee8162002c9b565b9250602084013562002e008162002c9b565b915062002e106040850162002cb1565b90509250925092565b6000806040838503121562002e2d57600080fd5b82359150602083013562002e418162002c9b565b809150509250929050565b803580151581146200236a57600080fd5b60008060008060008060008060006101208a8c03121562002e7d57600080fd5b62002e888a62002cb1565b985062002e9860208b0162002cb1565b975062002ea860408b0162002cb1565b965062002eb860608b0162002cb1565b955062002ec860808b0162002cb1565b945062002ed860a08b0162002cc4565b935062002ee860c08b0162002cb1565b925062002ef860e08b0162002cc4565b915062002f096101008b0162002e4c565b90509295985092959850929598565b60008060008060008060a0878903121562002f3257600080fd5b863562002f3f8162002c9b565b9550602087013562002f518162002c9b565b945062002f616040880162002cb1565b935060608701359250608087013567ffffffffffffffff8082111562002f8657600080fd5b818901915089601f83011262002f9b57600080fd5b81358181111562002fab57600080fd5b8a602082850101111562002fbe57600080fd5b6020830194508093505050509295509295509295565b6000806040838503121562002fe857600080fd5b62002ff38362002cb1565b9150620030036020840162002e4c565b90509250929050565b600080600080608085870312156200302357600080fd5b8435620030308162002c9b565b93506020850135620030428162002c9b565b9250620030526040860162002cc4565b9150620030626060860162002cb1565b905092959194509250565b600080604083850312156200308157600080fd5b82356200308e8162002c9b565b9150602083013562002e418162002c9b565b6020808252825182820181905260009190848201906040850190845b8181101562002c75576200310383855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620030bc565b600080600080608085870312156200312e57600080fd5b84356200313b8162002c9b565b935060208501356200314d8162002c9b565b92506200315d6040860162002cb1565b9150620030626060860162002e4c565b6000806000606084860312156200318357600080fd5b8335620031908162002c9b565b92506020840135620031a28162002c9b565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007c0565b600080600080608085870312156200320757600080fd5b8435620032148162002c9b565b93506020850135620032268162002c9b565b92506040850135915060608501356200323f8162002c9b565b939692955090935050565b6000602082840312156200325d57600080fd5b620017fa8262002cb1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620032bf57620032bf62003294565b5060010190565b6000815180845260005b81811015620032ee57602081850181015186830182015201620032d0565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200334e60a0830184620032c6565b979650505050505050565b81810381811115620007c057620007c062003294565b6000602082840312156200338257600080fd5b5051919050565b828152604060208201526000620016a26040830184620032c6565b600082620033c257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a060405260405161073138038061073183398101604081905261002291610416565b604080516020810190915260008152859061003d82826100cd565b506001600160a01b03166080527f3441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec318481557f7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582648481557fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427828481556100c088856100cd565b5050505050505050610548565b6100d68261018d565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156101815761017c826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610511565b826102a0565b505050565b610189610317565b5050565b806001600160a01b03163b6000036101c857604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610511565b9050806001600160a01b03163b60000361018957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016101bf565b6060600080846001600160a01b0316846040516102bd919061052c565b600060405180830381855af49150503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b50909250905061030e858383610338565b95945050505050565b34156103365760405163b398979f60e01b815260040160405180910390fd5b565b60608261034d5761034882610397565b610390565b815115801561036457506001600160a01b0384163b155b1561038d57604051639996b31560e01b81526001600160a01b03851660048201526024016101bf565b50805b9392505050565b8051156103a75780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146103d757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561040d5781810151838201526020016103f5565b50506000910152565b600080600080600060a0868803121561042e57600080fd5b610437866103c0565b9450610445602087016103c0565b9350610453604087016103c0565b9250606086015161ffff8116811461046a57600080fd5b60808701519092506001600160401b038082111561048757600080fd5b818801915088601f83011261049b57600080fd5b8151818111156104ad576104ad6103dc565b604051601f8201601f19908116603f011681019083821181831017156104d5576104d56103dc565b816040528281528b60208487010111156104ee57600080fd5b6104ff8360208301602088016103f2565b80955050505050509295509295909350565b60006020828403121561052357600080fd5b610390826103c0565b6000825161053e8184602087016103f2565b9190910192915050565b6080516101c9610568600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea2646970667358221220f0f37eb07b5c3cfec8f93a3926d8b9cc57e4663663fe0feb3212c78557ad130a64736f6c63430008140033a2646970667358221220440217821150de802aac920e0a7d0d0d30082ae791bf0e91dbdaac5d78def83164736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220007cf27b93d4d99a0e50a460fd5dd9899916fcdfcfaa03803d2c821c78b19ad564736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea264697066735822122009c44af5988384f46804759913ec6c7012105d278f0ccba385192cd92bf1dd6e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360a06040523480156200001157600080fd5b50604051620067e6380380620067e6833981016040819052620000349162000106565b6001600160a01b0381166080526200004b62000052565b5062000138565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011957600080fd5b81516001600160a01b03811681146200013157600080fd5b9392505050565b60805161667d620001696000396000818161048d0152818161158c015281816123d101526139b7015261667d6000f3fe608060405234801561001057600080fd5b506004361061025b5760003560e01c80638940a16a11610145578063d3b9fbe4116100bd578063e584b6541161008c578063e985e9c511610071578063e985e9c51461062a578063ea3446bf1461064d578063f5e293291461066057600080fd5b8063e584b65414610604578063e77366f81461061757600080fd5b8063d3b9fbe4146105e4578063d8dfcea0146105ec578063da10610c146105f4578063dbe65edc146105fc57600080fd5b8063a41a01fb11610114578063bd85b039116100f9578063bd85b0391461059e578063c7bd6586146105be578063c9939f5e146105d157600080fd5b8063a41a01fb1461053a578063abcd78301461056157600080fd5b80638940a16a146104b15780638d7024e5146104ef57806395d89b411461052a578063a1af5b9a1461053257600080fd5b806347973bff116101d857806355182894116101a7578063781a89151161018c578063781a89151461042f5780637ca0de301461043957806388cc58e41461048b57600080fd5b806355182894146103d75780636653851a1461041c57600080fd5b806347973bff1461037e5780634c7cffbd146103915780634e1273f4146103a457806353c059a0146103c457600080fd5b80630abe96881161022f57806317fad7fc1161021457806317fad7fc146103345780631b057f6d14610349578063383d15c51461035c57600080fd5b80630abe9688146102e357806317f11ecc1461031957600080fd5b8062fdd58e1461026057806305e8746d1461028657806306fdde03146102a65780630902f1ac146102bb575b600080fd5b61027361026e36600461587e565b610673565b6040519081526020015b60405180910390f35b61028e61069c565b6040516001600160a01b03909116815260200161027d565b6102ae6106b9565b60405161027d91906158ce565b6102c361074d565b604080516001600160801b0393841681529290911660208301520161027d565b6102c36102f1366004615914565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610321610787565b60405161ffff909116815260200161027d565b610347610342366004615974565b61079f565b005b610347610357366004615a4b565b6107fa565b61036f61036a366004615a97565b610919565b60405161027d93929190615b3a565b61034761038c366004615b6b565b610bbb565b61027361039f366004615914565b610ea6565b6103b76103b2366004615c02565b610ecd565b60405161027d9190615c6e565b6102736103d2366004615c91565b610fa3565b6103df6112e5565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a00161027d565b61034761042a366004615cc8565b61138f565b6201000954610273565b6104416113c8565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e00161027d565b7f000000000000000000000000000000000000000000000000000000000000000061028e565b6104c46104bf366004615d4e565b611430565b6040805167ffffffffffffffff9485168152928416602084015292169181019190915260600161027d565b6104f761152f565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff909116606082015260800161027d565b6102ae61156f565b610273611580565b61054d610548366004615d75565b611746565b60405162ffffff909116815260200161027d565b61057461056f366004615d9f565b611759565b604080516001600160801b039485168152928416602084015292169181019190915260600161027d565b6102736105ac366004615dd7565b60009081526001602052604090205490565b6103476105cc366004615df0565b6118f5565b6103b76105df366004615974565b61198b565b610347611cc3565b6102c3611d57565b61028e611d72565b61054d611d8a565b610347610612366004615e0b565b611d97565b610574610625366004615d9f565b611da6565b61063d610638366004615e29565b611ee3565b604051901515815260200161027d565b61034761065b366004615e47565b611eef565b61054d61066e366004615dd7565b6121ed565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006106b46000805160206166088339815191525490565b905090565b60606201000a80546106ca90615e97565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690615e97565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061077e61076a60055460045461220f90919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b60006106b46000805160206165e88339815191525490565b6107a7612249565b62010009546107bc8133898989898989612281565b6107ca878787878787612321565b6107e1600160008051602061662883398151915255565b6107f1813389898989898961237f565b50505050505050565b610802612249565b61080a6123c6565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108d35750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190615ecb565b6001600160a01b031614155b156108f157604051631b5de6eb60e01b815260040160405180910390fd5b6108fc84848461240f565b50610914600160008051602061662883398151915255565b505050565b60008060608661092881612436565b610930612249565b60008690036109525760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561097f5761097f615ee8565b6040519080825280602002602001820160405280156109a8578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109c7576109c7615ee8565b6040519080825280602002602001820160405280156109f0578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a0f57610a0f615ee8565b604051908082528060200260200182016040528015610a38578160200160208202803683370190505b509052600454909150610a72610a5a6000805160206166088339815191525490565b6000805160206165c883398151915254839190612472565b9650610a8283338d8d8d8c6124b2565b610a8f8a8a898e866124fc565b9550610aa5610a9e888861220f565b8290612628565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610af391908b90615efe565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b3f929190615efe565b60405180910390a38515610b7f57610b7f610b666000805160206166088339815191525490565b6000805160206165c8833981519152548891908b612662565b610b96600160008051602061662883398151915255565b610bad83338d8d8d610ba88d8d61220f565b6126c0565b505050509450945094915050565b610bc36123c6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c0e5750825b905060008267ffffffffffffffff166001148015610c2b5750303b155b905081158015610c39575080155b15610c575760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c8b57845468ff00000000000000001916680100000000000000001785555b610c93612702565b610cbf610cb3610cae8860035461271290919063ffffffff16565b612761565b8e8e8e8e8e8e8e6127b5565b6000610cd76000805160206166088339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3c9190810190615f23565b90506000610d566000805160206165c88339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dbb9190810190615f23565b90506000610ddd610dd86000805160206165e88339815191525490565b612933565b9050828282604051602001610df493929190615fc5565b6040516020818303038152906040526201000a9081610e13919061608e565b50828282604051602001610e299392919061614e565b6040516020818303038152906040526201000b9081610e48919061608e565b505050508315610e9757845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610696610ec16000805160206165e88339815191525490565b62ffffff841690612a60565b60608382610edb8282612a97565b8567ffffffffffffffff811115610ef457610ef4615ee8565b604051908082528060200260200182016040528015610f1d578160200160208202803683370190505b50925060005b86811015610f9857610f73888883818110610f4057610f406161b8565b9050602002016020810190610f5591906161ce565b878784818110610f6757610f676161b8565b90506020020135610673565b848281518110610f8557610f856161b8565b6020908102919091010152600101610f23565b505050949350505050565b6000610fad612249565b6201000954600454600554600086610fe457610fdf610fd86000805160206165c88339815191525490565b8490612ab7565b611004565b611004610ffd6000805160206166088339815191525490565b8490612aec565b9050600081900361102857604051637df801c760e01b815260040160405180910390fd5b866110368533898486612b1b565b6110408483612628565b600354909450600061105e6000805160206165e88339815191525490565b9050600061106b83612b7f565b90506110778342612b8b565b92505b62ffffff811660009081526006602052604090205461109a818615612c01565b6111be576110a88483612c30565b9350600080806110bc8488888b898e612cb8565b9194509250905082156111ba576110d3898461220f565b98506110df8d83612628565b9c5060006110fa6110ef89612ede565b839061ffff16612eee565b9050801561111b5761110c8b82612628565b9a50611118848261220f565b93505b61112f836111298787612628565b9061220f565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca7088878761117c8e612f64565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036111cd5750611217565b60006111d98684612f75565b905062ffffff811615806111f1575062ffffff818116145b1561120f57604051631a6d7fb160e31b815260040160405180910390fd5b91505061107a565b60008990036112395760405163439df85d60e11b815260040160405180910390fd5b611243878a61220f565b6004556005869055611257600a8483612f97565b92506112638382612712565b60035583156112925761128d6112856000805160206165c88339815191525490565b8a908c6130b2565b6112b3565b6112b36112ab6000805160206166088339815191525490565b8a908c6130f2565b6112ca600160008051602061662883398151915255565b6112d788338c878d613103565b505050505050505092915050565b600354607890600090819081908190816112fe82613160565b905061ffff811615611386576000611317600a83613170565b96509050611324816131ce565b965061132f816131da565b94508464ffffffffff1660000361134557600095505b61ffff861615611384576113768661ffff168361ffff1681611369576113696161eb565b600a9160019106016131fb565b9050611381816131da565b93505b505b50509091929394565b611397612249565b61139f6123c6565b6113b1600354888888888888886127b5565b6107f1600160008051602061662883398151915255565b60008060008060008060008060035490506113e2816131ce565b97506113ed8161322b565b96506113f88161323b565b95506114038161324b565b945061140e8161325b565b935061141981612ede565b92506114248161326c565b91505090919293949596565b6000806000806003549050600061144682613160565b905061ffff8116158061145f5750428664ffffffffff16115b156114765760008060009450945094505050611528565b6000611484600a838961327d565b91985096509450905064ffffffffff8088169082161015611524576114ba6114ab84612b7f565b849064ffffffffff8a166133a0565b925060006114c88289616217565b90508064ffffffffff166114db85612b7f565b62ffffff166114ea9190616235565b6114f49088616261565b96508064ffffffffff1661150785612f64565b62ffffff166115169190616235565b6115209087616261565b9550505b5050505b9193909250565b6000806000806000600354905061154581612f64565b9450611550816133b8565b935061155b816133c9565b9250611566816133da565b91505090919293565b60606201000b80546106ca90615e97565b600061158a612249565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190615ecb565b6001600160a01b0316336001600160a01b03161461163d57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c600061169882611660576000611663565b60015b60ff166000856001600160801b03161161167e576000611681565b60015b60ff169060801b6001600160801b03919091161790565b90506116a4848261220f565b945084156117285760058190556004546116be908661220f565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261172861170f6000805160206166088339815191525490565b6000805160206165c88339815191525487919033612662565b50505050611743600160008051602061662883398151915255565b90565b60006117528383612f75565b9392505050565b600354600090839082908161177a6000805160206165e88339815191525490565b9050600061178783612b7f565b90506117938342612b8b565b92505b62ffffff81166000908152600660205260408120546117b69089156133ed565b90506001600160801b0381161561189c5760006117d862ffffff841685612a60565b90506000876001600160801b0316836001600160801b0316116117fb57826117fd565b875b90506118098685612c30565b955060008a61182c576118276001600160801b03831684608061340d565b611841565b6118416001600160801b038316608085613443565b9050600061184f8888613479565b905060006118666001600160801b03841683613498565b90506118728184616282565b61187c908d616282565b9b50611888848c6162a2565b9a50611894818b616282565b995050505050505b856001600160801b03166000036118b357506118eb565b60006118bf8984612f75565b905062ffffff811615806118d7575062ffffff818116145b156118e35750506118eb565b915050611796565b5050509250925092565b6118fd612249565b600354600061190b82613160565b90508061ffff1660000361192a5750600161192682826134e1565b6003555b611936600a8285613530565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a25050611988600160008051602061662883398151915255565b50565b606086336119998282613619565b6119ce5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b6119d6612249565b8515806119e35750858414155b15611a0157604051633ab7870760e01b815260040160405180910390fd5b6201000954611a1681338c8c8c8c8c8c613665565b898767ffffffffffffffff811115611a3057611a30615ee8565b604051908082528060200260200182016040528015611a59578160200160208202803683370190505b5094506000805b89811015611bad576000611a8b8c8c84818110611a7f57611a7f6161b8565b905060200201356136ab565b905060008a8a84818110611aa157611aa16161b8565b90506020020135905080600003611ad257604051636996a92560e01b815262ffffff831660048201526024016119c5565b62ffffff82166000818152600660209081526040808320546001909252909120549091611b01908890856136d6565b6000611b0e838584613757565b90506000819003611b395760405163fd44792960e01b815262ffffff861660048201526024016119c5565b611b43838261220f565b9250838203611b5957611b576007866137cf565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611b8657611b866161b8565b6020908102919091010152611b9b8782612628565b96508560010195505050505050611a60565b50600454611bbb908261220f565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611c04908f908f908f908f9061630d565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611c5393929190616334565b60405180910390a3611c8d611c746000805160206166088339815191525490565b6000805160206165c8833981519152548391908e612662565b611ca4600160008051602061662883398151915255565b611cb48333848e8e8e8e8e613871565b50505050509695505050505050565b611ccb612249565b611cd36123c6565b600354611ce7611ce282612761565b6138b7565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611d15836133c9565b611d1e846133b8565b6040805162ffffff93841681529290911660208301520160405180910390a250611d55600160008051602061662883398151915255565b565b60055460009081906001600160801b0381169060801c61077e565b60006106b46000805160206165c88339815191525490565b60006106b4600354612b7f565b611da23383836138ec565b5050565b6000808080611dbe6001600160801b038716866139a1565b6003549091506000611ddc6000805160206165e88339815191525490565b90506000611de983612b7f565b9050611df58342612b8b565b92505b62ffffff8116600090815260066020526040902054611e18818a15612c01565b611e8557611e268483612c30565b935060008080611e3a8488888f898d612cb8565b919450925090508215611e8157611e51888461220f565b9750611e5e828d156133ed565b611e68908b616282565b9950611e74818d6133ed565b611e7e908a616282565b98505b5050505b6000859003611e945750611ecc565b6000611ea08a84612f75565b905062ffffff81161580611eb8575062ffffff818116145b15611ec4575050611ecc565b915050611df8565b611ed684896133ed565b9650505050509250925092565b60006117528383613619565b611ef7612249565b6000839003611f195760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611f2c866139b2565b9050611f3a83338989613aba565b611f6c611f536000805160206166088339815191525490565b6000805160206165c8833981519152548891908a612662565b6000806001600160a01b038916631faa6b8760e01b33611f986000805160206166088339815191525490565b6000805160206165c8833981519152548c888d8d604051602401611fc29796959493929190616383565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161201891906163c4565b6000604051808303816000865af19150503d8060008114612055576040519150601f19603f3d011682016040523d82523d6000602084013e61205a565b606091505b509150915081158061206e57508051602014155b806120ac57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2818060200190518101906120a991906163e0565b14155b156120ca57604051634a57011360e01b815260040160405180910390fd5b60006120fe6120e56000805160206166088339815191525490565b6000805160206165c88339815191525460009190612472565b905061211461210d8686612628565b8290613b0f565b1561213257604051630e3c717160e11b815260040160405180910390fd5b600061213e828761220f565b60048390556005549091506121539082612628565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d9061219190612b7f565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a36121d3600160008051602061662883398151915255565b6121e087338d8885613b53565b5050505050505050505050565b60006106966122086000805160206165e88339815191525490565b8390613baf565b8082038281118061222b57506001600160801b03808416908216115b156106965760405163e599af5560e01b815260040160405180910390fd5b60008051602061662883398151915280546001190161227b57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561231757612317886379c8ccf760e01b898989898989896040516024016122c897969594939291906163f9565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613bf4565b5050505050505050565b853361232d8282613619565b61235d5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044016119c5565b612317888888888888613c58565b600160008051602061662883398151915255565b750200000000000000000000000000000000000000000088161561231757612317886367ddb27860e01b898989898989896040516024016122c897969594939291906163f9565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d5557604051632486085360e01b815260040160405180910390fd5b82156109145761091483634e430b5a60e01b8585856040516024016122c89392919061644f565b6001600160a01b038116158061245457506001600160a01b03811630145b15611988576040516345c210e760e11b815260040160405180910390fd5b60006124aa8461112961248485613dbb565b61248d87613dbb565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156124f4576124f486630d4abdb360e01b87878787876040516024016122c8959493929190616469565b505050505050565b6000806125156000805160206165e88339815191525490565b600354909150600061252682612b7f565b905086935060005b8881101561261b576000806125648a8d8d8681811061254f5761254f6161b8565b90506020020135613e2a90919063ffffffff16565b91509150600080600061257a898886888c613e73565b9194509250905061258b8a8361220f565b99508362ffffff168b6000015187815181106125a9576125a96161b8565b602002602001018181525050808b6020015187815181106125cc576125cc6161b8565b602002602001018181525050828b6040015187815181106125ef576125ef6161b8565b60200260200101818152505061260b8c8562ffffff1685614081565b856001019550505050505061252e565b5050505095945050505050565b8181018281108061264457506001600160801b03808416908216105b15610696576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c8115612694576126946001600160a01b038616846001600160801b0385166140ce565b6001600160801b038116156124f4576124f46001600160a01b038516846001600160801b0384166140ce565b742000000000000000000000000000000000000000008616156124f4576124f486637a51a4c660e01b87878787876040516024016122c8959493929190616469565b61270a61411f565b611d5561416d565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611752565b60008061276d83612b7f565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611752565b61ffff87161580156127c9575061ffff8616155b80156127d7575061ffff8516155b80156127e5575061ffff8416155b80156127f4575062ffffff8316155b8015612802575061ffff8216155b8015612811575062ffffff8116155b1561282f576040516331375e0360e11b815260040160405180910390fd5b61283f8888888888888888614175565b975060006128596000805160206165e88339815191525490565b905060006128678a8461428e565b9050600061287582846142ec565b61287f838561432c565b61288991906164a8565b905067016345785d8a00008111156128b4576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b60608161ffff1660000361295e5750506040805180820190915260018152600360fc1b602082015290565b8160005b61ffff82161561298c5780612976816164bb565b91506129859050600a836164dc565b9150612962565b60008161ffff1667ffffffffffffffff8111156129ab576129ab615ee8565b6040519080825280601f01601f1916602001820160405280156129d5576020820181803683370190505b5090505b61ffff8516156124aa576129ee6001836164fd565b91506129fb600a86616518565b612a06906030616539565b60f81b818361ffff1681518110612a1f57612a1f6161b8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a59600a866164dc565b94506129d9565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff1901612a8e8282614350565b95945050505050565b808214611da2576040516340311ffd60e11b815260040160405180910390fd5b600080612ac48460801c90565b90506124aa81612ad385613dbb565b612add91906162a2565b6001600160801b031660801b90565b60006001600160801b0383166124aa81612b0585613dbb565b612b0f91906162a2565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b7890869063feee373560e01b9060a4016122c8565b5050505050565b600060e882901c610696565b600080612b97846133da565b612ba89064ffffffffff1684616554565b9050612bb38461322b565b61ffff168110612bf757612bc684612761565b9350612bd18461323b565b61ffff168110612beb57612be68460006145b0565b612bf4565b612bf4846138b7565b93505b6124aa848461461e565b600081612c2157612c128360801c90565b6001600160801b031615611752565b50506001600160801b03161590565b600080612c3c846133c9565b62ffffff169050600080828562ffffff1611612c5f578462ffffff168303612c68565b828562ffffff16035b91506127108202612c78876133b8565b62ffffff160190506000612c8b8761326c565b62ffffff169050808211612c9f5781612ca1565b805b9150612cad878361428e565b979650505050505050565b6000808080612ccc62ffffff871689612a60565b90506000612cdb8b89156133ed565b9050600088612d0657612d01612cfc6001600160801b03841685608061340d565b614677565b612d1e565b612d1e612cfc6001600160801b038416608086613443565b90506000612d2c8c8c613479565b90506000612d436001600160801b03841683613498565b9050612d4f8184616282565b92506000612d5d8a8d6133ed565b9050600080856001600160801b0316836001600160801b031610612d88575084915082905085612dfe565b612d9b6001600160801b038416866146a1565b91506000612da983856162a2565b6001600160801b031690508e612dcd57612dc8612cfc8260808c6146d8565b612ddc565b612ddc612cfc828b6080614702565b9150876001600160801b0316826001600160801b03161115612dfc578791505b505b8d612e3857612e16836001600160801b031660801b90565b6001600160801b038216612e33846001600160801b031660801b90565b612e60565b6001600160801b038316612e55826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612eb2612eac85611129888f61262890919063ffffffff16565b83614770565b1115612ed15760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061069682604e1c613fff1690565b6000816001600160801b0316600003612f0957506000610696565b6127106001600160801b038316811015612f3657604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006106968260701c620fffff1690565b600082612f8c57612f8760078361478c565b611752565b6117526007836148d8565b600080612fa384613160565b90508061ffff16600003612fba5783915050611752565b6000612fc686836131fb565b90506000612fd382614a08565b90506000612fe083614a14565b612fed9060ff1683616567565b90508064ffffffffff1661300042614a23565b64ffffffffff1611156130a65760008060006130458464ffffffffff1642036130288c612b7f565b6130318d612f64565b61303b8e8e614a4b565b8a93929190614a7b565b9250925092506000613056876131ce565b905064ffffffffff8616420360788111156130865750968790066001019642955060006130838c8a6134e1565b9b505b61309482868686858c614ae0565b975050505050506130a6888585614b84565b50949695505050505050565b60006130be8460801c90565b90506001600160801b038116156130ec576130ec6001600160a01b038416836001600160801b0384166140ce565b50505050565b60006001600160801b0384166130be565b74020000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b789086906353e8079b60e01b9060a4016122c8565b60006106968260d81c61ffff1690565b60008061317d84846131fb565b9150613188826131ce565b90508061ffff168361ffff16146131c7576131ab6131a685836131fb565b6131ce565b90508061ffff168361ffff16116131c257806131c4565b825b90505b9250929050565b600061ffff8216610696565b60006131e582614a14565b60ff166131f183614a08565b6106969190616567565b60008161320781614bb1565b8361ffff60001985018116908110613221576132216161b8565b0154949350505050565b60006106968260101c610fff1690565b600061069682601c1c610fff1690565b60006106968260281c613fff1690565b60006106968260361c62ffffff1690565b600061069682605c1c620fffff1690565b6000806000806000806132908989613170565b909250905064ffffffffff87166132c78a6132ab848c616518565b61ffff1661ffff81106132c0576132c06161b8565b01546131da565b64ffffffffff1611156132ed57604051631c4e7f9560e21b815260040160405180910390fd5b6132f6826131da565b95508664ffffffffff168664ffffffffff1611613338578561331783614bd6565b61332084614bec565b61332985614c02565b95509550955095505050613397565b86955060008061334a8b8b8b86614c18565b9150915060008961335a836131da565b6133649190616217565b90506000613371846131da565b61337b908c616217565b905061338984848484614d6a565b919a50985096505050505050505b93509350935093565b60006133ac8483612b8b565b93506124aa8484612c30565b60006106968260841c620fffff1690565b60006106968260981c62ffffff1690565b60006106968260b01c64ffffffffff1690565b6000816133fe57612f878360801c90565b6001600160801b038316611752565b600061341a848484614702565b9050600160ff83161b80613430576134306161eb565b83850915611752576124aa6001826164a8565b60006134508484846146d8565b90508180613460576134606161eb565b600160ff85161b850915611752576124aa6001826164a8565b600061175261348884846142ec565b613492858561432c565b01614677565b6000816134a481614ece565b6001600160801b03808416670de0b6b3a764000081900391829160001991881602820101816134d5576134d56161eb565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611752565b600061353c84846131fb565b90506000613549826131ce565b90508261ffff168161ffff161061357357604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146135a45761ffff82161561359d5761359886836131fb565b6135a6565b60006135a6565b825b905060006135b3826131ce565b61ffff169050808661ffff16116135ca57806135d0565b8561ffff165b905061ffff83165b8561ffff168110156136025781888261ffff81106135f8576135f86161b8565b01556001016135d8565b506107f1878761ffff868116881890891617614b84565b6000816001600160a01b0316836001600160a01b031614806117525750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b74400000000000000000000000000000000000000000881615612317576123178863ea9db9d360e01b898989898989896040516024016122c897969594939291906163f9565b8062ffffff811681146136d157604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561373357604051625b387760e31b81526001600160a01b038616600482015260248101859052604481018490526064016119c5565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c8280831561378a57613787612cfc886001600160801b03871689614f00565b91505b6001600160801b038316156137b3576137b0612cfc886001600160801b03861689614f00565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461386557600083815260028701602052604081208290558190036138595750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613857578654600160ff83161b191687555b505b60019350505050610696565b50600095945050505050565b74800000000000000000000000000000000000000000881615612317576123178863fdc2725760e01b898989898989896040516024016122c897969594939291906163f9565b6000806138c383612f64565b62ffffff16905060006138d58461324b565b61ffff16905061271082820204612a8e85826145b0565b826138f681612436565b826001600160a01b0316846001600160a01b0316036139335760405163782ee70760e01b81526001600160a01b03851660048201526024016119c5565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816133fe57612f878360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3791906163e0565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff90613a7090670de0b6b3a7640000908616850283015b04614677565b9250613aa2670de0b6b3a764000082866001600160801b0316856001600160801b0316020181613a6a57613a6a6161eb565b915050608081901b6001600160801b03831617612a8e565b740400000000000000000000000000000000000000008416156130ec576040516001600160a01b03808516602483015283166044820152606481018290526130ec90859063505d903360e01b906084016122c8565b60006001600160801b0383811690608085811c9185169085901c81841080612cad5750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612b78576040516001600160a01b038086166024830152841660448201526064810183905260848101829052612b789086906360bed5f360e01b9060a4016122c8565b600061271061ffff60801b608084901b1604600160801b0181613bd182614f20565b613bda86614f20565b613be49190616585565b9050612a8e8162800000016136ab565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613c28573d6000803e3d6000fd5b8060005160e01c14601f3d11168316925050816130ec57604051636c93cb9b60e01b815260040160405180910390fd5b8281613c648282612a97565b86613c6e81612436565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613d525760008a8a83818110613cad57613cad6161b8565b9050602002013590506000898984818110613cca57613cca6161b8565b600085815260208981526040909120549102929092013592505081811015613d27578e83836040516358b4690f60e01b81526004016119c5939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613c91565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613da6949392919061630d565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610696906001600160a01b038416906370a0823190602401602060405180830381865afa158015613e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfc91906163e0565b6000806000806000613e3b8761502d565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613e9a908b612a60565b90506000613eb98962ffffff1660009081526001602052604090205490565b9050613ec7838984846150d0565b909650945084935062ffffff808b16908a1603613fff57613ee9878a426133a0565b96506000613efb84898e89868c615256565b90508015613ff9576000613f1984613f13898561220f565b90614770565b90506000613f34613f298b612ede565b849061ffff16612eee565b90508015613f5a57613f46878261220f565b600554909750613f569082612628565b6005555b6000613f7486613f13613f6d878661220f565b8a90612628565b9050613f81838683614f00565b9950613f8f600a8c8f612f97565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613fed9392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b5061400a565b61400a858b8b61534b565b851580614015575083155b1561403a57604051634c98d35760e11b815262ffffff8a1660048201526024016119c5565b8060000361404f5761404d60078a6153b1565b505b6140598385612628565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b6000828152600160205260408120805483929061409f9084906164a8565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526130ec848261543e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611d5557604051631afcd79f60e31b815260040160405180910390fd5b61236b61411f565b60008561ffff168761ffff1611806141925750610fff8661ffff16115b806141a257506127108561ffff16115b806141b257506109c48361ffff16115b806141c45750620fffff8262ffffff16115b156141e257604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff1611156142b957604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611752565b6000806142f88461325b565b62ffffff16905080156134da5760008361ffff1661431586612f64565b62ffffff16029050606460638280028402016134d5565b60008161ffff1661433c846131ce565b61ffff16026402540be40002905092915050565b60008060008360000361436c5750600160801b91506106969050565b5082600081121561437e579015906000035b6210000081101561456e57600160801b9250846001600160801b038111156143a857911591600019045b60018216156143b95792830260801c925b800260801c60028216156143cf5792830260801c925b800260801c60048216156143e55792830260801c925b800260801c60088216156143fb5792830260801c925b800260801c60108216156144115792830260801c925b800260801c60208216156144275792830260801c925b800260801c604082161561443d5792830260801c925b8002608090811c908216156144545792830260801c925b800260801c61010082161561446b5792830260801c925b800260801c6102008216156144825792830260801c925b800260801c6104008216156144995792830260801c925b800260801c6108008216156144b05792830260801c925b800260801c6110008216156144c75792830260801c925b800260801c6120008216156144de5792830260801c925b800260801c6140008216156144f55792830260801c925b800260801c61800082161561450c5792830260801c925b800260801c620100008216156145245792830260801c925b800260801c6202000082161561453c5792830260801c925b800260801c620400008216156145545792830260801c925b800260801c6208000082161561456c5792830260801c925b505b8260000361459957604051631dba598d60e11b815260048101869052602481018590526044016119c5565b816145a45782612a8e565b612a8e836000196165b3565b6000620fffff8262ffffff1611156145db57604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611752565b60008061462a83614a23565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176124aa565b806001600160801b03811681146136d157604051632f45db3d60e21b815260040160405180910390fd5b6000816146ad81614ece565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612f5a9087906001901b8685856154ae565b6000806000614711868661555a565b9150915081600014614727578360ff1682901c92505b801561476757600160ff85161b811061475357604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c612a8e828286615579565b60008061ffff600884901c1660ff8085169081146147e157600082815260028701602052604081205493506147c184836155e4565b905060001981146147df5760089290921b9091179250610696915050565b505b5060ff80821690600883901c90821461485b576000818152600188016020526040812054945061481185846155e4565b9050600019811461485957600882901b8117600081815260028a01602052604090205495509350614841856155f3565b60ff1660088560001c901b1795505050505050610696565b505b60ff818116925082146148cb5786549350600061487885846155e4565b905060001981146148c957600081815260018901602052604090205494509050806148a2856155f3565b60ff16600883901b17600081815260028a01602052604090205495509350614841856155f3565b505b5060009695505050505050565b60008061ffff600884901c1660ff8416801561492b576000828152600287016020526040812054935061490b848361568f565b905060001981146149295760089290921b9091179250610696915050565b505b5060ff8116600882901c811561498a5760008181526001880160205260408120549450614958858461568f565b9050600019811461498857600882901b8117600081815260028a016020526040902054955093506148418561569f565b505b60ff8116915081156149f9578654935060006149a6858461568f565b905060001981146149f757600081815260018901602052604090205494509050806149d08561569f565b60ff16600883901b17600081815260028a016020526040902054955093506148418561569f565b505b5062ffffff9695505050505050565b600060d882901c610696565b60006106968260d01c60ff1690565b8064ffffffffff811681146136d1576040516350dbfc8760e11b815260040160405180910390fd5b600080614a5784612b7f565b90508062ffffff168362ffffff1611614a72578281036124aa565b90910392915050565b64ffffffffff841662ffffff848116820291848216810291841602614a9f88614bd6565b614aa99084616261565b9250614ab488614bec565b614abe9083616261565b9150614ac988614c02565b614ad39082616261565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612cad565b81614b8e81614bb1565b818461ffff60001986018116908110614ba957614ba96161b8565b015550505050565b8061ffff166000036119885760405163944e113960e01b815260040160405180910390fd5b60006106968260101c67ffffffffffffffff1690565b60006106968260501c67ffffffffffffffff1690565b60006106968260901c67ffffffffffffffff1690565b6000808080614c286001866164fd565b61ffff16905060008060008961ffff1690505b838511614ce65760006001614c5086886164a8565b901c9050888183089a508b61ffff808d16908110614c7057614c706161b8565b01549350614c7d846131da565b92508964ffffffffff168364ffffffffff161115614ca757614ca0600182616554565b9450614ce0565b8964ffffffffff168364ffffffffff161015614ccf57614cc88160016164a8565b9550614ce0565b838497509750505050505050614d61565b50614c3b565b8164ffffffffff168964ffffffffff161015614d37578961ffff16600003614d0c578799505b8a61ffff6000198c018116908110614d2657614d266161b8565b015483965096505050505050614d61565b8760018b089950828b61ffff808d16908110614d5557614d556161b8565b01549650965050505050505b94509492505050565b600080600080614d7988614bd6565b67ffffffffffffffff1690506000614d9089614bec565b67ffffffffffffffff1690506000614da78a614c02565b67ffffffffffffffff1690508664ffffffffff16600003614dce5791945092509050614ec4565b6000614dd98a614bd6565b67ffffffffffffffff1690506000614df08b614bec565b67ffffffffffffffff1690506000614e078c614c02565b67ffffffffffffffff1690508a64ffffffffff16600003614e325791975095509350614ec492505050565b6000614e4864ffffffffff808d16908e166164a8565b9050808b64ffffffffff1685028d64ffffffffff1689020181614e6d57614e6d6161eb565b049950808b64ffffffffff1684028d64ffffffffff1688020181614e9357614e936161eb565b049850808b64ffffffffff1683028d64ffffffffff1687020181614eb957614eb96161eb565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b0316111561198857604051638630bc6b60e01b815260040160405180910390fd5b6000806000614f0f868661555a565b91509150612f5a86868685856154ae565b600081600103614f335750607f19919050565b81600003614f545760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614f7c57506001614f97565b5060001982600160fe1b81614f9357614f936161eb565b0492505b6000614fa6607f85901c61569f565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114615022576f400000000000000000000000000000005b600081131561502057908002607f1c90600160801b8210615018579384019360019190911c905b60011d614ff1565b505b50500260011b919050565b600080806150458460581c67ffffffffffffffff1690565b925061505b8460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff8411806150965750670de0b6b3a76400008367ffffffffffffffff16115b806150b25750670de0b6b3a76400008267ffffffffffffffff16115b1561152857604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c826150ee838389615579565b905080600003615108575060009350839250614d61915050565b60006151148a89614770565b9050801580615121575086155b1561513d5761512f8261573a565b899550955050505050614d61565b615148828883614f00565b9550600061515787838a6157ac565b9050808311156151f657600061516d8285616554565b9050600160801b81106151ae57608081901c85811161518c578061518e565b855b905061519a8187616554565b95506151aa608082901b83616554565b9150505b8981106151e25760006151c18b836165b3565b90508681116151d057806151d2565b865b90506151de8188616554565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b6116152286152228d8d612628565b8b614770565b11156152475760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b60008160000361526857506000612f5a565b6001600160801b038416608085901c60008061529a61076a61528a8d8b612628565b88615295818c6164a8565b613757565b91509150836001600160801b0316826001600160801b031611156152fd5760006152e06152c78c8c613479565b6152d184876162a2565b6001600160801b0316906157c9565b90506152f5816001600160801b031660801b90565b95505061533d565b826001600160801b0316816001600160801b0316111561533d5760006153306153268c8c613479565b6152d185886162a2565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156153675750608083901b15155b8061538c57508162ffffff168162ffffff1611801561538c57506001600160801b0383115b156109145760405163227bd87160e21b815262ffffff821660048201526024016119c5565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b8117808214613865576000838152600287016020526040812082905582900361385957600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613857578654600160ff83161b1787555060019350505050610696565b600080600052602060008351602085016000875af1905080801561547f573d80156154725760016000511483169250615479565b843b151592505b5061548f565b3d1561548f573d6000803e3d6000fd5b50806109145760405163197138bd60e11b815260040160405180910390fd5b6000816000036154cf578383816154c7576154c76161eb565b049050612a8e565b8382106154ef576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156155b4575080830281848281615595576155956161eb565b04146155b4576040516363f1e01f60e01b815260040160405180910390fd5b82156117525760809290921b91820182811015611752576040516363f1e01f60e01b815260040160405180910390fd5b6000611752836001840161580a565b60008160801b801561560757608091508092505b8260401b9050801561561a579150604001815b8260201b9050801561562d579150602001815b8260101b90508015615640579150601001815b8260081b90508015615653579150600801815b8260041b90508015615666579150600401815b8260021b90508015615679579150600201815b508160011b15615687576001015b60ff03919050565b6000611752836000198401615838565b60006001600160801b038211156156b85750608090811c905b67ffffffffffffffff8211156156d057604091821c91015b63ffffffff8211156156e457602091821c91015b61ffff8211156156f657601091821c91015b60ff82111561570757600891821c91015b600f82111561571857600491821c91015b600382111561572957600291821c91015b60018211156136d157600101919050565b60008160000361574c57506000919050565b60006157578361569f565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106157a65782611752565b50919050565b60006157b9848484614f00565b90508180613430576134306161eb565b6000816157d581614ece565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a764000091909101026134d5565b60ff81169190911c906000821561582e5781615825846155f3565b0160ff16611752565b5060001992915050565b60ff8181031691821b91600090831561585e57806158558561569f565b60ff16036124aa565b506000199392505050565b6001600160a01b038116811461198857600080fd5b6000806040838503121561589157600080fd5b823561589c81615869565b946020939093013593505050565b60005b838110156158c55781810151838201526020016158ad565b50506000910152565b60208152600082518060208401526158ed8160408501602087016158aa565b601f01601f19169190910160400192915050565b803562ffffff811681146136d157600080fd5b60006020828403121561592657600080fd5b61175282615901565b60008083601f84011261594157600080fd5b50813567ffffffffffffffff81111561595957600080fd5b6020830191508360208260051b85010111156131c757600080fd5b6000806000806000806080878903121561598d57600080fd5b863561599881615869565b955060208701356159a881615869565b9450604087013567ffffffffffffffff808211156159c557600080fd5b6159d18a838b0161592f565b909650945060608901359150808211156159ea57600080fd5b506159f789828a0161592f565b979a9699509497509295939492505050565b60008083601f840112615a1b57600080fd5b50813567ffffffffffffffff811115615a3357600080fd5b6020830191508360208285010111156131c757600080fd5b600080600060408486031215615a6057600080fd5b83359250602084013567ffffffffffffffff811115615a7e57600080fd5b615a8a86828701615a09565b9497909650939450505050565b60008060008060608587031215615aad57600080fd5b8435615ab881615869565b9350602085013567ffffffffffffffff811115615ad457600080fd5b615ae08782880161592f565b9094509250506040850135615af481615869565b939692955090935050565b600081518084526020808501945080840160005b83811015615b2f57815187529582019590820190600101615b13565b509495945050505050565b838152826020820152606060408201526000612a8e6060830184615aff565b803561ffff811681146136d157600080fd5b600080600080600080600080610100898b031215615b8857600080fd5b615b9189615b59565b9750615b9f60208a01615b59565b9650615bad60408a01615b59565b9550615bbb60608a01615b59565b9450615bc960808a01615901565b9350615bd760a08a01615b59565b9250615be560c08a01615901565b9150615bf360e08a01615901565b90509295985092959890939650565b60008060008060408587031215615c1857600080fd5b843567ffffffffffffffff80821115615c3057600080fd5b615c3c8883890161592f565b90965094506020870135915080821115615c5557600080fd5b50615c628782880161592f565b95989497509550505050565b6020815260006117526020830184615aff565b803580151581146136d157600080fd5b60008060408385031215615ca457600080fd5b615cad83615c81565b91506020830135615cbd81615869565b809150509250929050565b600080600080600080600060e0888a031215615ce357600080fd5b615cec88615b59565b9650615cfa60208901615b59565b9550615d0860408901615b59565b9450615d1660608901615b59565b9350615d2460808901615901565b9250615d3260a08901615b59565b9150615d4060c08901615901565b905092959891949750929550565b600060208284031215615d6057600080fd5b813564ffffffffff8116811461175257600080fd5b60008060408385031215615d8857600080fd5b615d9183615c81565b91506131c460208401615901565b60008060408385031215615db257600080fd5b82356001600160801b0381168114615dc957600080fd5b91506131c460208401615c81565b600060208284031215615de957600080fd5b5035919050565b600060208284031215615e0257600080fd5b61175282615b59565b60008060408385031215615e1e57600080fd5b8235615dc981615869565b60008060408385031215615e3c57600080fd5b8235615cad81615869565b60008060008060608587031215615e5d57600080fd5b8435615e6881615869565b935060208501359250604085013567ffffffffffffffff811115615e8b57600080fd5b615c6287828801615a09565b600181811c90821680615eab57607f821691505b6020821081036157a657634e487b7160e01b600052602260045260246000fd5b600060208284031215615edd57600080fd5b815161175281615869565b634e487b7160e01b600052604160045260246000fd5b604081526000615f116040830185615aff565b8281036020840152612a8e8185615aff565b600060208284031215615f3557600080fd5b815167ffffffffffffffff80821115615f4d57600080fd5b818401915084601f830112615f6157600080fd5b815181811115615f7357615f73615ee8565b604051601f8201601f19908116603f01168101908382118183101715615f9b57615f9b615ee8565b81604052828152876020848701011115615fb457600080fd5b612cad8360208301602088016158aa565b7f4c697175696469747920426f6f6b20546f6b656e200000000000000000000000815260008451615ffd8160158501602089016158aa565b8083019050602f60f81b8060158301528551616020816016850160208a016158aa565b6016920191820152835161603b8160178401602088016158aa565b0160170195945050505050565b601f82111561091457600081815260208120601f850160051c8101602086101561606f5750805b601f850160051c820191505b818110156124f45782815560010161607b565b815167ffffffffffffffff8111156160a8576160a8615ee8565b6160bc816160b68454615e97565b84616048565b602080601f8311600181146160f157600084156160d95750858301515b600019600386901b1c1916600185901b1785556124f4565b600085815260208120601f198616915b8281101561612057888601518255948401946001909101908401616101565b508582101561613e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b81526000845161616d8160048501602089016158aa565b8083019050602f60f81b8060048301528551616190816005850160208a016158aa565b600592019182015283516161ab8160068401602088016158aa565b0160060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156161e057600080fd5b813561175281615869565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff8281168282160390808211156134da576134da616201565b67ffffffffffffffff81811683821602808216919082811461625957616259616201565b505092915050565b67ffffffffffffffff8181168382160190808211156134da576134da616201565b6001600160801b038181168382160190808211156134da576134da616201565b6001600160801b038281168282160390808211156134da576134da616201565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156162f457600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006163216040830186886162c2565b8281036020840152612cad8185876162c2565b6040815260006163486040830185876162c2565b8281036020840152612f5a8185615aff565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a083015261428160c08301848661635a565b600082516163d68184602087016158aa565b9190910192915050565b6000602082840312156163f257600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a0606083015261642e60a0830186886162c2565b82810360808401526164418185876162c2565b9a9950505050505050505050565b838152604060208201526000612a8e60408301848661635a565b60006001600160a01b038088168352808716602084015250608060408301526164966080830185876162c2565b90508260608301529695505050505050565b8082018082111561069657610696616201565b600061ffff8083168181036164d2576164d2616201565b6001019392505050565b600061ffff808416806164f1576164f16161eb565b92169190910492915050565b61ffff8281168282160390808211156134da576134da616201565b600061ffff8084168061652d5761652d6161eb565b92169190910692915050565b61ffff8181168382160190808211156134da576134da616201565b8181038181111561069657610696616201565b64ffffffffff8181168382160190808211156134da576134da616201565b600082616594576165946161eb565b600160ff1b8214600019841416156165ae576165ae616201565b500590565b6000826165c2576165c26161eb565b50049056fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa58264ff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427823441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212206076aa4d749410b596734f37ddf2e17219a4599a496e020148220c1b6532b2a064736f6c63430008140033608060405234801561001057600080fd5b506040516108ff3803806108ff83398101604081905261002f9161018a565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a8161009e565b50610074826100ee565b5050600380546001600160a01b0319166001600160a01b0392909216919091179055506101cd9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036101245760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461018557600080fd5b919050565b60008060006060848603121561019f57600080fd5b6101a88461016e565b92506101b66020850161016e565b91506101c46040850161016e565b90509250925092565b610723806101dc6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73e919920ae49d3027566025548f12cdab4e52b59581565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73e919920ae49d3027566025548f12cdab4e52b5956105b2565b600073e919920ae49d3027566025548f12cdab4e52b5956105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea264697066735822122017084a6a294c7c04d0d46769a1a24663539b83ae7dcec7f168ac0c3156b7598b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004e6b38038062004e6b83398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614c2a620002416000396000818161019f015281816102fe01528181610602015281816106e0015281816107bc015281816108ff01528181610c8c015281816113c20152818161145c015281816115c1015281816116440152818161198701528181611c1c01528181611f030152818161285c01528181612bfb0152612c790152600081816104b00152613b7a01526000818161037b0152818161104d015281816111fa015281816120fd01526134570152614c2a6000f3fe60806040526004361061018f5760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc14610514578063e9361c0814610527578063f96fe9251461054757600080fd5b8063bb558a9f146104a1578063c22159b6146104d4578063d0e380f2146104f457600080fd5b8063a0d376cf116100b0578063a0d376cf1461044e578063a3c7271a1461046e578063b066ea7c1461048e57600080fd5b806392fe8e70146103c4578063964f987c146103e45780639ab6156b1461042e57600080fd5b8063659ac74b1161013857806381c2fdfb1161011257806381c2fdfb1461033757806388cc58e41461036c5780638efc2b2c1461039f57600080fd5b8063659ac74b146102b75780636c9c0078146102ef5780638129fc1c1461032257600080fd5b80633dc8f8ec116101695780633dc8f8ec146102575780634b8018701461027757806362c067671461029757600080fd5b80631a24f9a9146101e45780632075ad22146102175780632a443fae1461023757600080fd5b366101df57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd57604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101f057600080fd5b506102046101ff36600461414d565b61057b565b6040519081526020015b60405180910390f35b61022a6102253660046141b8565b61087d565b60405161020e9190614254565b34801561024357600080fd5b5061020461025236600461414d565b610add565b34801561026357600080fd5b5061022a61027236600461414d565b610c0a565b34801561028357600080fd5b5061020461029236600461414d565b610e10565b3480156102a357600080fd5b506101dd6102b2366004614267565b61104b565b3480156102c357600080fd5b506102d76102d23660046142d4565b6111bb565b6040516001600160a01b03909116815260200161020e565b3480156102fb57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561032e57600080fd5b506101dd611272565b34801561034357600080fd5b50610357610352366004614330565b61138c565b6040805192835260208301919091520161020e565b34801561037857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b6103b26103ad3660046143eb565b6114e3565b60405161020e96959493929190614427565b3480156103d057600080fd5b5061022a6103df36600461414d565b611730565b3480156103f057600080fd5b506104046103ff366004614494565b611875565b604080516001600160801b039485168152928416602084015292169181019190915260600161020e565b34801561043a57600080fd5b5061020461044936600461414d565b611905565b34801561045a57600080fd5b50610404610469366004614494565b611a79565b34801561047a57600080fd5b506103b26104893660046143eb565b611abd565b61020461049c3660046141b8565b611b9a565b3480156104ad57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156104e057600080fd5b506103576104ef3660046144df565b611d14565b34801561050057600080fd5b5061020461050f3660046145a7565b611e08565b6102046105223660046141b8565b611e81565b34801561053357600080fd5b506101dd61054236600461462c565b6120fb565b34801561055357600080fd5b506105676105623660046146c1565b61221e565b60405162ffffff909116815260200161020e565b600081804211156105ad5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105c5575080515160208201515114155b806105e257506040810151518151516105df906001614703565b14155b156106005760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001518760000151518151811061064557610645614716565b60200260200101516001600160a01b0316146106a45760408601518651518151811061067357610673614716565b602002602001015160405163cfec0e0160e01b81526004016105a491906001600160a01b0391909116815260200190565b60006106bd87600001518860200151896040015161228a565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b919061472c565b9050610791886040015160008151811061076757610767614716565b6020026020010151338460008151811061078357610783614716565b60200260200101518d61239a565b6107a58289602001518a60400151306123bb565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f919061472c565b6108399190614745565b945084891115610866576040516313fab00360e21b8152600481018a9052602481018690526044016105a4565b610870878661283a565b5050505095945050505050565b606081804211156108aa5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b845151859015806108c2575080515160208201515114155b806108df57506040810151518151516108dc906001614703565b14155b156108fd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061093e5761093e614716565b60200260200101516001600160a01b03161461096b57856040015160008151811061067357610673614716565b600061098487600001518860200151896040015161228a565b905061099a87602001518289604001518b6128ce565b935034846000815181106109b0576109b0614716565b602002602001015111156109fe5734846000815181106109d2576109d2614716565b602002602001015160405163194ee21960e31b81526004016105a4929190918252602082015260400190565b610a3c81600081518110610a1457610a14614716565b602002602001015185600081518110610a2f57610a2f614716565b6020026020010151612bed565b6000610a538289602001518a60400151888b612ca4565b905088811015610a80576040516313fab00360e21b8152600481018a9052602481018290526044016105a4565b84600081518110610a9357610a93614716565b6020026020010151341115610ad157610ad13386600081518110610ab957610ab9614716565b602002602001015134610acc9190614745565b612fc1565b50505050949350505050565b60008180421115610b0a5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610b22575080515160208201515114155b80610b3f5750604081015151815151610b3c906001614703565b14155b15610b5d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b7687600001518860200151896040015161228a565b9050610bbc8760400151600081518110610b9257610b92614716565b60200260200101513383600081518110610bae57610bae614716565b60200260200101518c61239a565b610bd1898289602001518a604001518a613053565b935083881115610bfe576040516313fab00360e21b815260048101899052602481018590526044016105a4565b50505095945050505050565b60608180421115610c375760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610c4f575080515160208201515114155b80610c6c5750604081015151815151610c69906001614703565b14155b15610c8a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610ccf57610ccf614716565b60200260200101516001600160a01b031614610cfd5760408601518651518151811061067357610673614716565b6000610d1687600001518860200151896040015161228a565b9050610d2c87602001518289604001518c6128ce565b93508784600081518110610d4257610d42614716565b60200260200101511115610d645787846000815181106109d2576109d2614716565b610dc28760400151600081518110610d7e57610d7e614716565b60200260200101513383600081518110610d9a57610d9a614716565b602002602001015187600081518110610db557610db5614716565b602002602001015161239a565b6000610dd98289602001518a604001518830612ca4565b905089811015610e06576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b610870878261283a565b60008180421115610e3d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610e55575080515160208201515114155b80610e725750604081015151815151610e6f906001614703565b14155b15610e905760405163b91b4d4d60e01b815260040160405180910390fd5b6000610ea987600001518860200151896040015161228a565b905060008760400151825181518110610ec457610ec4614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f919061472c565b9050610f858960400151600081518110610f5b57610f5b614716565b60200260200101513385600081518110610f7757610f77614716565b60200260200101518e61239a565b610f99838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061472c565b6110109190614745565b9550858a111561103d576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd9190614758565b6001600160a01b0316336001600160a01b0316146110fe57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661112e57600019811461111b578061111d565b475b90506111298282612fc1565b505050565b600019811461113d57806111a5565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a5919061472c565b90506111296001600160a01b03841683836133c0565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190614758565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156112bd5750825b905060008267ffffffffffffffff1660011480156112da5750303b155b9050811580156112e8575080155b156113065760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561133a57845468ff00000000000000001916680100000000000000001785555b831561138557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60008082804211156113ba5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b60006113eb8c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff16613426565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190614758565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611490579899985b6000806114a1848e8e8e8e30613512565b91509150826114b15780826114b4565b81815b80975081985050505050506114ca8c8786613674565b6114d4868461283a565b50509850989650505050505050565b6000808080606080826115166114fc60208a018a614775565b61150c60408b0160208c01614775565b8a60400135613426565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190614758565b6001600160a01b031661159060208a018a614775565b6001600160a01b0316146115b75760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115ee60208a018a614775565b6001600160a01b03161480156116075750348860600135145b1561163a5761162b61161f60408a0160208b01614775565b33838b6080013561239a565b6116358134612bed565b611711565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661167460408a0160208b01614775565b6001600160a01b031614801561168d5750348860800135145b156116ae5761162b6116a260208a018a614775565b33838b6060013561239a565b6116bb6020890189614775565b6116cb60408a0160208b01614775565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a4016105a4565b61171b8882613695565b949d939c50919a509850965090945092505050565b6060818042111561175d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611775575080515160208201515114155b80611792575060408101515181515161178f906001614703565b14155b156117b05760405163b91b4d4d60e01b815260040160405180910390fd5b60006117c987600001518860200151896040015161228a565b90506117df87602001518289604001518c6128ce565b935087846000815181106117f5576117f5614716565b602002602001015111156118175787846000815181106109d2576109d2614716565b6118318760400151600081518110610d7e57610d7e614716565b60006118488289602001518a60400151888b612ca4565b905089811015610870576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa1580156118d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f69190614792565b91989097509095509350505050565b600081804211156119325760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b8451518590158061194a575080515160208201515114155b806119675750604081015151815151611964906001614703565b14155b156119855760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106119ca576119ca614716565b60200260200101516001600160a01b0316146119f85760408601518651518151811061067357610673614716565b6000611a1187600001518860200151896040015161228a565b9050611a2d8760400151600081518110610b9257610b92614716565b611a42898289602001518a6040015130613053565b935083881115611a6f576040516313fab00360e21b815260048101899052602481018590526044016105a4565b610bfe868561283a565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f8906044016118b5565b600080808060608082611ad66114fc60208a018a614775565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3a9190614758565b6001600160a01b0316611b5060208a018a614775565b6001600160a01b031614611b775760405163b33f8ab960e01b815260040160405180910390fd5b611b876116a260208a018a614775565b61171161161f60408a0160208b01614775565b60008180421115611bc75760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611bdf575080515160208201515114155b80611bfc5750604081015151815151611bf9906001614703565b14155b15611c1a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611c5b57611c5b614716565b60200260200101516001600160a01b031614611c8857856040015160008151811061067357610673614716565b6000611ca187600001518860200151896040015161228a565b9050611cc781600081518110611cb957611cb9614716565b602002602001015134612bed565b611cdc348289602001518a604001518a613053565b935083881115611d09576040516313fab00360e21b815260048101899052602481018590526044016105a4565b505050949350505050565b6000808280421115611d425760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6000611d538d8d8d61ffff16613426565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db99190614758565b6001600160a01b03168e6001600160a01b0316141590508015611dda579899985b611de8828c8c8c8c8c613512565b90955093508015611df7579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061472c565b90505b92915050565b60008180421115611eae5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611ec6575080515160208201515114155b80611ee35750604081015151815151611ee0906001614703565b14155b15611f015760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611f4257611f42614716565b60200260200101516001600160a01b031614611f6f57856040015160008151811061067357610673614716565b6000611f8887600001518860200151896040015161228a565b905060008760400151825181518110611fa357611fa3614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201e919061472c565b905061203683600081518110611cb957611cb9614716565b61204a838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015612093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b7919061472c565b6120c19190614745565b9550858a11156120ee576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217d9190614758565b6001600160a01b0316336001600160a01b0316146121ae57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906121e49030908990899089908990899060040161481f565b600060405180830381600087803b1580156121fe57600080fd5b505af1158015612212573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612266573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061485f565b6060835167ffffffffffffffff8111156122a6576122a6613ecb565b6040519080825280602002602001820160405280156122cf578160200160208202803683370190505b509050600080836000815181106122e8576122e8614716565b6020026020010151905060005b83518110156123905781925084816001018151811061231657612316614716565b6020026020010151915061235e838389848151811061233757612337614716565b602002602001015189858151811061235157612351614716565b6020026020010151613b39565b84828151811061237057612370614716565b6001600160a01b03909216602092830291909101909101526001016122f5565b5050509392505050565b80156123b5576123b56001600160a01b038516848484613c40565b50505050565b6000806000806000866000815181106123d6576123d6614716565b6020026020010151905060005b8951811015612212578981815181106123fe576123fe614716565b6020026020010151925088818151811061241a5761241a614716565b6020026020010151945081955087816001018151811061243c5761243c614716565b60200260200101519150895181600101146124735789816001018151811061246657612466614716565b6020026020010151612475565b865b9350600085600181111561248b5761248b61487c565b0361273157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156124d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f591906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561262a576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa158015612571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612595919061472c565b03905060006125a5828585613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561260b57600080fd5b505af115801561261f573d6000803e3d6000fd5b50505050505061272a565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612699919061472c565b03905060006126a9828486613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561270f57600080fd5b505af1158015612723573d6000803e3d6000fd5b5050505050505b5050612832565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a29190614758565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af115801561280c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612830919061472c565b505b6001016123e3565b80600003612846575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156128a857600080fd5b505af11580156128bc573d6000803e3d6000fd5b505050506128ca8282612fc1565b5050565b6060825167ffffffffffffffff8111156128ea576128ea613ecb565b604051908082528060200260200182016040528015612913578160200160208202803683370190505b509050818185518151811061292a5761292a614716565b602090810291909101015283515b8015612be45760008461294c600184614745565b8151811061295c5761295c614716565b602002602001015190506000876001846129769190614745565b8151811061298657612986614716565b602002602001015190506000876001856129a09190614745565b815181106129b0576129b0614716565b60200260200101519050600060018111156129cd576129cd61487c565b8260018111156129df576129df61487c565b03612b0157600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4991906148a9565b506001600160701b031691506001600160701b03169150888681518110612a7257612a72614716565b60200260200101516001600160a01b0316856001600160a01b03161115612a9557905b6000878781518110612aa957612aa9614716565b60200260200101519050612ac8838383613d489092919063ffffffff16565b6001600160801b031688612add60018a614745565b81518110612aed57612aed614716565b602002602001018181525050505050612bce565b612b9a81868681518110612b1757612b17614716565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8b9190614758565b6001600160a01b031614611875565b50506001600160801b031685612bb1600187614745565b81518110612bc157612bc1614716565b6020026020010181815250505b5050508080612bdc906148ee565b915050612938565b50949350505050565b80600003612bf9575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c5457600080fd5b505af1158015612c68573d6000803e3d6000fd5b506128ca9350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150849050836133c0565b60008060008060008088600081518110612cc057612cc0614716565b6020026020010151905060005b8b51811015612fb2578b8181518110612ce857612ce8614716565b602002602001015193508a8181518110612d0457612d04614716565b60200260200101519250819550898160010181518110612d2657612d26614716565b602002602001015191508b518160010114612d5d578b8160010181518110612d5057612d50614716565b6020026020010151612d5f565b875b94506000836001811115612d7557612d7561487c565b03612e8057888160010181518110612d8f57612d8f614716565b60200260200101519650816001600160a01b0316866001600160a01b03161015612e335760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612e1657600080fd5b505af1158015612e2a573d6000803e3d6000fd5b50505050612faa565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612dfc565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee49190614758565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612f7e918916906353c059a0906044015b6020604051808303816000875af1158015612f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f6a919061472c565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612fa257809950612fa6565b8199505b5050505b600101612ccd565b50505050505095945050505050565b80600003612fcd575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461301a576040519150601f19603f3d011682016040523d82523d6000602084013e61301f565b606091505b50509050806111295760405163047b96f760e41b81526001600160a01b0384166004820152602481018390526044016105a4565b6000806000806000808760008151811061306f5761306f614716565b602002602001015190508a955060005b8a51811015612fb2578a818151811061309a5761309a614716565b602002602001015192508981815181106130b6576130b6614716565b602002602001015194508195508881600101815181106130d8576130d8614716565b602002602001015191508a51816001011461310f578a816001018151811061310257613102614716565b6020026020010151613111565b875b935060008560018111156131275761312761487c565b036132e157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561316d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319191906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015613250576131cd898383613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561323357600080fd5b505af1158015613247573d6000803e3d6000fd5b505050506132da565b61325b898284613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156132c157600080fd5b505af11580156132d5573d6000803e3d6000fd5b505050505b50506133b8565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133459190614758565b60405163029e02cd60e51b81526001600160a01b03918216858316146004820181905287831660248301529250600091829161338c918816906353c059a090604401612f27565b6001600160801b031691506001600160801b0316915082156133b0578099506133b4565b8199505b5050505b60010161307f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123b58482613de7565b60405163704037bd60e01b81526001600160a01b0384811660048301528381166024830152604482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa1580156134a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c49190614905565b6020015190506001600160a01b03811661350b57604051636b2471d160e11b81526001600160a01b03808616600483015284166024820152604481018390526064016105a4565b9392505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613549949392919061498a565b6000604051808303816000875af1158015613568573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261359091908101906149c8565b905060005b8151811015613624576135c78282815181106135b3576135b3614716565b60200260200101516001600160801b031690565b6135da906001600160801b031685614703565b93506135ff8282815181106135f1576135f1614716565b602002602001015160801c90565b613612906001600160801b031684614703565b925061361d81614a4e565b9050613595565b508783108061363257508682105b15613668576040516318ccfb7760e11b8152600481018990526024810184905260448101889052606481018390526084016105a4565b50965096945050505050565b8060000361368157505050565b6111296001600160a01b03841683836133c0565b600080600080606080876101c00135804211156136ce5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6136dc6101408a018a614a67565b90506136ec6101208b018b614a67565b905014158061371957506137046101608a018a614a67565b90506137146101208b018b614a67565b905014155b156137375760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613753575062ffffff6101008a0135115b156137825760405163197a55c760e11b815260e08a013560048201526101008a013560248201526044016105a4565b60006137926101208b018b614a67565b905067ffffffffffffffff8111156137ac576137ac613ecb565b6040519080825280602002602001820160405280156137d5578160200160208202803683370190505b5090506137e66101208b018b614a67565b905067ffffffffffffffff81111561380057613800613ecb565b604051908082528060200260200182016040528015613829578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561386c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613890919061485f565b62ffffff169050808b61010001358c60e001350110806138ba57508a60e001358b61010001358201105b156138f057604051637d50edab60e11b815260e08c013560048201526101008c01356024820152604481018290526064016105a4565b60005b82518110156139f357600061390c6101208e018e614a67565b8381811061391c5761391c614716565b90506020020135830190506000811280613938575062ffffff81115b15613959576040516370a82e6160e11b8152600481018290526024016105a4565b8087838151811061396c5761396c614716565b60209081029190910101526139cd6139886101408f018f614a67565b8481811061399857613998614716565b905060200201358e8061016001906139b09190614a67565b858181106139c0576139c0614716565b9050602002013583613e57565b8483815181106139df576139df614716565b6020908102919091010152506001016138f3565b50506000808a6001600160a01b031663383d15c58d610180016020810190613a1b9190614775565b858f6101a0016020810190613a309190614775565b6040518463ffffffff1660e01b8152600401613a4e93929190614ab1565b6000604051808303816000875af1158015613a6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a959190810190614b15565b965090925090506000613aa88383613e91565b6001600160801b0381169b50608081901c9a50905060a08d01358b1080613ad257508c60c001358a105b15613b0e576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b90526084016105a4565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613b4e57613b4e61487c565b03613c2d5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613be59190614758565b90506001600160a01b038116613c2857604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b613c38565b611269858585613426565b949350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526113858582613de7565b600083600003613cd15760405163b937356b60e01b815260040160405180910390fd5b821580613cdc575081155b15613cfa57604051637b03555560e01b815260040160405180910390fd5b6000613d08856103e5614bbb565b90506000613d168483614bbb565b9050600082613d27876103e8614bbb565b613d319190614703565b9050613d3d8183614bd2565b979650505050505050565b600083600003613d6b5760405163b937356b60e01b815260040160405180910390fd5b821580613d76575081155b15613d9457604051637b03555560e01b815260040160405180910390fd5b6000613da08585614bbb565b613dac906103e8614bbb565b90506000613dba8685614745565b613dc6906103e5614bbb565b9050613dd28183614bd2565b613ddd906001614703565b9695505050505050565b600080600052602060008351602085016000875af19050808015613e28573d8015613e1b5760016000511483169250613e22565b843b151592505b50613e38565b3d15613e38573d6000803e3d6000fd5b50806111295760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff82168117613c38565b80820382811180613ead57506001600160801b03808416908216115b15611e7b5760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613f0457613f04613ecb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613f3357613f33613ecb565b604052919050565b600067ffffffffffffffff821115613f5557613f55613ecb565b5060051b60200190565b600082601f830112613f7057600080fd5b81356020613f85613f8083613f3b565b613f0a565b82815260059290921b84018101918181019086841115613fa457600080fd5b8286015b84811015613fbf5780358352918301918301613fa8565b509695505050505050565b6001600160a01b0381168114613fdf57600080fd5b50565b8035613fed81613fca565b919050565b600082601f83011261400357600080fd5b81356020614013613f8083613f3b565b82815260059290921b8401810191818101908684111561403257600080fd5b8286015b84811015613fbf57803561404981613fca565b8352918301918301614036565b60006060828403121561406857600080fd5b614070613ee1565b9050813567ffffffffffffffff8082111561408a57600080fd5b61409685838601613f5f565b83526020915081840135818111156140ad57600080fd5b8401601f810186136140be57600080fd5b80356140cc613f8082613f3b565b81815260059190911b820184019084810190888311156140eb57600080fd5b928501925b82841015614117578335600281106141085760008081fd5b825292850192908501906140f0565b808688015250505050604084013591508082111561413457600080fd5b5061414184828501613ff2565b60408301525092915050565b600080600080600060a0868803121561416557600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561418a57600080fd5b61419688828901614056565b93505060608601356141a781613fca565b949793965091946080013592915050565b600080600080608085870312156141ce57600080fd5b84359350602085013567ffffffffffffffff8111156141ec57600080fd5b6141f887828801614056565b935050604085013561420981613fca565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156142495781518752958201959082019060010161422d565b509495945050505050565b602081526000611e786020830184614219565b60008060006060848603121561427c57600080fd5b833561428781613fca565b9250602084013561429781613fca565b929592945050506040919091013590565b62ffffff81168114613fdf57600080fd5b61ffff81168114613fdf57600080fd5b8035613fed816142b9565b600080600080608085870312156142ea57600080fd5b84356142f581613fca565b9350602085013561430581613fca565b92506040850135614315816142a8565b91506060850135614325816142b9565b939692955090935050565b600080600080600080600080610100898b03121561434d57600080fd5b883561435881613fca565b97506020890135614368816142b9565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561439357600080fd5b61439f8c838d01613f5f565b955060a08b01359150808211156143b557600080fd5b506143c28b828c01613f5f565b93505060c08901356143d381613fca565b8092505060e089013590509295985092959890939650565b6000602082840312156143fd57600080fd5b813567ffffffffffffffff81111561441457600080fd5b82016101e0818503121561350b57600080fd5b86815285602082015284604082015283606082015260c06080820152600061445260c0830185614219565b82810360a08401526144648185614219565b9998505050505050505050565b6001600160801b0381168114613fdf57600080fd5b8015158114613fdf57600080fd5b6000806000606084860312156144a957600080fd5b83356144b481613fca565b925060208401356144c481614471565b915060408401356144d481614486565b809150509250925092565b60008060008060008060008060006101208a8c0312156144fe57600080fd5b893561450981613fca565b985060208a013561451981613fca565b975061452760408b016142c9565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561455257600080fd5b61455e8d838e01613f5f565b955060c08c013591508082111561457457600080fd5b506145818c828d01613f5f565b93505061459060e08b01613fe2565b91506101008a013590509295985092959850929598565b600080604083850312156145ba57600080fd5b82356145c581613fca565b915060208301356145d5816142a8565b809150509250929050565b60008083601f8401126145f257600080fd5b50813567ffffffffffffffff81111561460a57600080fd5b6020830191508360208260051b850101111561462557600080fd5b9250929050565b6000806000806000806080878903121561464557600080fd5b863561465081613fca565b9550602087013561466081613fca565b9450604087013567ffffffffffffffff8082111561467d57600080fd5b6146898a838b016145e0565b909650945060608901359150808211156146a257600080fd5b506146af89828a016145e0565b979a9699509497509295939492505050565b600080604083850312156146d457600080fd5b82356146df81613fca565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e7b57611e7b6146ed565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561473e57600080fd5b5051919050565b81810381811115611e7b57611e7b6146ed565b60006020828403121561476a57600080fd5b815161350b81613fca565b60006020828403121561478757600080fd5b813561350b81613fca565b6000806000606084860312156147a757600080fd5b83516147b281614471565b60208501519093506147c381614471565b60408501519092506144d481614471565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561480657600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b0380891683528088166020840152506080604083015261484c6080830186886147d4565b82810360608401526144648185876147d4565b60006020828403121561487157600080fd5b815161350b816142a8565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613fed57600080fd5b6000806000606084860312156148be57600080fd5b6148c784614892565b92506148d560208501614892565b9150604084015163ffffffff811681146144d457600080fd5b6000816148fd576148fd6146ed565b506000190190565b60006080828403121561491757600080fd5b6040516080810181811067ffffffffffffffff8211171561493a5761493a613ecb565b6040528251614948816142b9565b8152602083015161495881613fca565b6020820152604083015161496b81614486565b6040820152606083015161497e81614486565b60608201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526149b66080830185614219565b8281036060840152613d3d8185614219565b600060208083850312156149db57600080fd5b825167ffffffffffffffff8111156149f257600080fd5b8301601f81018513614a0357600080fd5b8051614a11613f8082613f3b565b81815260059190911b82018301908381019087831115614a3057600080fd5b928401925b82841015613d3d57835182529284019290840190614a35565b600060018201614a6057614a606146ed565b5060010190565b6000808335601e19843603018112614a7e57600080fd5b83018035915067ffffffffffffffff821115614a9957600080fd5b6020019150600581901b360382131561462557600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015614afc57855183529483019491830191600101614ae0565b5050809450505080851660408501525050949350505050565b600080600060608486031215614b2a57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614b5057600080fd5b8501601f81018713614b6157600080fd5b8051614b6f613f8082613f3b565b81815260059190911b82018301908381019089831115614b8e57600080fd5b928401925b82841015614bac57835182529284019290840190614b93565b80955050505050509250925092565b8082028115828204841417611e7b57611e7b6146ed565b600082614bef57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122031703d9b6019352fa237e87e1e6afd16841f62dde4538978d077f39402a1965b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220d4aa32d18c702b63dca8c26128a14e379148c534dea1c274c97ba208a69289c564736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a34746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a32746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a33746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a31746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a31746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a32746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a31746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a32a26469706673582212202850be9de38b6853f48e487148594df9b4b9dd5922cd2be71514aade0cf95e9a64736f6c63430008140033",
    "sourceMap": "755:21192:126:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12867:7;;12885:11;;12854:98;;-1:-1:-1;;;;;12867:7:126;;;;;;;12885:11;12941:10;883:6;12941:1;:10;:::i;:::-;12899:7;;12925:11;;12899:39;;-1:-1:-1;;;12899:39:126;;-1:-1:-1;;;;;12925:11:126;;;12899:39;;;571:74:147;-1:-1:-1;;;;;12899:52:126;;;;;:7;;;;;;:17;;544:18:147;;12899:39:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;12854:4;:98::i;:::-;12975:4;;12990:11;;12962:92;;-1:-1:-1;;;;;12975:4:126;;;;12990:11;13043:10;883:6;13043:1;:10;:::i;:::-;13004:4;;13027:11;;13004:36;;-1:-1:-1;;;13004:36:126;;-1:-1:-1;;;;;13027:11:126;;;13004:36;;;571:74:147;-1:-1:-1;;;;;13004:49:126;;;;;:4;;;:14;;544:18:147;;13004:36:126;425:226:147;12962:92:126;905:31:102;13065:24:126;13151:27;;;13201:2;;13191:13;6334:149:135;;;;;;:::i;:::-;-1:-1:-1;;;;;;6435:41:135;-1:-1:-1;;;6435:41:135;;6334:149;;;;1431:14:147;;1424:22;1406:41;;1394:2;1379:18;6334:149:135;;;;;;;;9454:1643:126;;;:::i;:::-;;896:952;;;:::i;17410:1703::-;;;:::i;2907:134:6:-;;;:::i;:::-;;;;;;;:::i;3823:151::-;;;:::i;:::-;;;;;;;:::i;20574:1371:126:-;;;:::i;14930:801::-;;;:::i;3684:133:6:-;;;:::i;2981:1642:126:-;;;:::i;3385:141:6:-;;;:::i;4629:1640:126:-;;;:::i;12754:168:135:-;;;;;;:::i;:::-;;:::i;:::-;;;5095:25:147;;;5083:2;5068:18;12754:168:135;4949:177:147;15737:1667:126;;;:::i;3193:186:6:-;;;:::i;:::-;;;;;;;:::i;19119:1449:126:-;;;:::i;3047:140:6:-;;;:::i;:::-;;;;;;;:::i;12928:205:135:-;;;;;;:::i;:::-;;:::i;:::-;;;8348:8:147;8336:21;;;8318:40;;8306:2;8291:18;12928:205:135;8174:190:147;1854:1121:126;;;:::i;3532:146:6:-;;;:::i;:::-;;;;;;;:::i;6275:1429:126:-;;;:::i;11103:1715::-;;;:::i;10779:1171:135:-;;;;;;:::i;:::-;;:::i;2754:147:6:-;;;:::i;2459:141::-;;;:::i;13139:134:135:-;;;;;;:::i;:::-;;:::i;7710:1738:126:-;;;:::i;1243:204:2:-;;;:::i;2606:142:6:-;;;:::i;1016:26:13:-;;;;;;;;;11956:792:135;;;;;;:::i;:::-;;:::i;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;9454:1643:126:-;9526:11;;:25;;;-1:-1:-1;;;9526:25:126;;;;9508:15;;-1:-1:-1;;;;;9526:11:126;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9598:16;;;9612:1;9598:16;;;;;;;;;9508:43;;-1:-1:-1;9562:33:126;;9598:16;;;;;;;;;;;;-1:-1:-1;9598:16:126;9562:52;;9646:58;9683:4;9689;9695:8;9646:36;:58::i;:::-;9624:16;9641:1;9624:19;;;;;;;;:::i;:::-;;;;;;;;;;:80;9728:7;;9715:37;;9728:7;;;-1:-1:-1;;;;;9728:7:126;9738:5;883:6;9715:4;:37::i;:::-;9775:4;;9762:34;;-1:-1:-1;;;;;9775:4:126;9782:5;883:6;9762:4;:34::i;:::-;9807:20;;-1:-1:-1;;;9807:20:126;;-1:-1:-1;;;;;9821:5:126;589:55:147;9807:20:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;9807:13:126;;;544:18:147;;9807:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9837:7:126;;9862:11;;9837:46;;-1:-1:-1;;;9837:46:126;;-1:-1:-1;;;;;9862:11:126;;;9837:46;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;9837:7:126;;;;;;-1:-1:-1;9837:16:126;;-1:-1:-1;13185:18:147;;9837:46:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9893:4:126;;9915:11;;9893:43;;-1:-1:-1;;;9893:43:126;;-1:-1:-1;;;;;9915:11:126;;;9893:43;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;9893:4:126;;;:13;;13185:18:147;;9893:43:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9946:11:126;;:48;;-1:-1:-1;;;9946:48:126;;-1:-1:-1;;;;;9946:11:126;;;;:16;;:48;;9963:5;;9970:16;;9963:5;;9946:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9946:48:126;;;;;;;;;;;;:::i;:::-;;;;10005:32;10040:5;;;;;;;;;-1:-1:-1;;;;;10040:5:126;-1:-1:-1;;;;;10040:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10090;;;10104:1;10090:16;;;;;;;;;10005:51;;-1:-1:-1;10067:20:126;;10090:16;;;;;;;;;;;;-1:-1:-1;10090:16:126;10067:39;;10125:8;10116:17;;:3;10120:1;10116:6;;;;;;;;:::i;:::-;;;;;;;;;;:17;10177:16;;;10191:1;10177:16;;;;;;;;;10144:30;;10177:16;;;;;;;;;;;;-1:-1:-1;10177:16:126;10144:49;;883:6;-1:-1:-1;;;;;10203:25:126;:13;10217:1;10203:16;;;;;;;;:::i;:::-;;;;;;;;;;:25;10239:11;;:50;;-1:-1:-1;;;10239:50:126;;-1:-1:-1;;;;;10239:11:126;;;;:16;;:50;;10256:5;;;;10270:3;;10275:13;;10239:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10239:50:126;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;10299:12:126;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10324:31;10358:5;;;;;;;;;-1:-1:-1;;;;;10358:5:126;-1:-1:-1;;;;;10358:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10324:50;;10385:223;10417:5;;;;;;;;;-1:-1:-1;;;;;10417:5:126;-1:-1:-1;;;;;10417:16:126;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10417:18:126;;;;;;;;;;;;:::i;:::-;10407:29;;;;;;10483:28;;;10513:5;10520;10527;10534:3;10539:13;10460:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10460:93:126;;;;;;;-1:-1:-1;;;;;10460:93:126;;;;;;;;;;;10450:104;;;;;;10385:223;;;;;;;;;;;;;;;;;:8;:223::i;:::-;10651:5;;:17;;;-1:-1:-1;;;10651:17:126;;;;10619:221;;-1:-1:-1;;;;;10651:5:126;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10651:17:126;;;;;;;;;;;;:::i;:::-;10641:28;;;;;;10716:27;;;10745:5;10752;10759;10766:3;10771:13;10693:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;10693:92:126;;;;;;;-1:-1:-1;;;;;10693:92:126;;;;;;;;;;;10683:103;;;;;;10619:221;;;;;;;;;;;;;;;;;:8;:221::i;:::-;10883:5;;:22;;;-1:-1:-1;;;10883:22:126;;;;10851:29;;-1:-1:-1;;;;;10883:5:126;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10851:54;;10915:28;10946:5;;;;;;;;;-1:-1:-1;;;;;10946:5:126;-1:-1:-1;;;;;10946:19:126;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10915:52;;10978;10992:16;11010:19;10978:13;:52::i;:::-;11040:50;11054:15;11071:18;11040:13;:50::i;:::-;9498:1599;;;;;;;;9454:1643::o;896:952::-;939:13;:11;:13::i;:::-;990:7;;999:4;;977:27;;-1:-1:-1;;;;;990:7:126;;;;;;;999:4;977:12;:27::i;:::-;963:11;:41;;-1:-1:-1;;;;;;963:41:126;-1:-1:-1;;;;;963:41:126;;;;;;;;;1015:63;;1028:3;;;;1185:7:135;1059:4:126;;1071:2;;1015:12;:63::i;:::-;1097:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1089:5:126;:25;;-1:-1:-1;;;;;;1089:25:126;-1:-1:-1;;;;;1089:25:126;;;;;;;;;1146:11;;1124:35;;-1:-1:-1;;;1124:35:126;;1146:11;;1124:35;;;571:74:147;1089:25:126;1124:13;;544:18:147;;1124:35:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1170:7:126;;1188:31;;;-1:-1:-1;;;1188:31:126;;;;-1:-1:-1;;;;;1170:7:126;;;;-1:-1:-1;1170:17:126;;-1:-1:-1;1170:7:126;;1188:29;;:31;;;;;;;;;;;;;;;1170:7;1188:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1170:65;;-1:-1:-1;;;;;;1170:65:126;;;;;;;;;;23390:25:147;;;;1229:4:126;23431:18:147;;;23424:83;23363:18;;1170:65:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1283:394:126;;;;;;;;1329:5;;-1:-1:-1;;;;;1329:5:126;;;1283:394;;1329:5;1283:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:5;1283:394;;;;;;;;;;;;;;;;;;;1688:7;;1723;;1732:4;;1283:394;;-1:-1:-1;1688:7:126;;;-1:-1:-1;1688:34:126;;1723:7;;;;1732:4;1340:2:135;1756:24:126;1283:394;1756:12;:24::i;:::-;1782:12;;;1792:1;1782:12;;;;;;;;;-1:-1:-1;;;;;;1688:107:126;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1806:11:126;;:35;;-1:-1:-1;;;1806:35:126;;:11;:35;;;24309:38:147;-1:-1:-1;;;;;1806:11:126;;;;-1:-1:-1;1806:32:126;;-1:-1:-1;24282:18:147;;1806:35:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:919;896:952::o;17410:1703::-;17494:16;;;17508:1;17494:16;;;;;;;;;17458:33;;17494:16;;;;;;;;;;;-1:-1:-1;17494:16:126;17458:52;;17542:61;17579:6;17587;17595:7;17542:36;:61::i;:::-;17520:16;17537:1;17520:19;;;;;;;;:::i;:::-;;;;;;;;;;:83;17614:5;;17651:11;;17665:77;;-1:-1:-1;;;;;17614:5:126;;;;:15;;17651:11;;-1:-1:-1;;;17688:21:126;17665:77;;17711:5;;17718:16;;17711:5;;17665:77;;;:::i;:::-;;;;-1:-1:-1;;17665:77:126;;;;;;;;;;;;;;-1:-1:-1;;;;;17665:77:126;-1:-1:-1;;;;;;17665:77:126;;;;;;17614:138;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17763:81:126;;-1:-1:-1;;;17763:81:126;;-1:-1:-1;;;17763:81:126;;;25364:52:147;-1:-1:-1;;;;;;;;;;;17763:15:126;-1:-1:-1;17763:15:126;;-1:-1:-1;25337:18:147;;17763:81:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17854:15:126;;-1:-1:-1;;;17854:15:126;;-1:-1:-1;;;;;17863:5:126;589:55:147;17854:15:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;17854:8:126;-1:-1:-1;17854:8:126;;-1:-1:-1;544:18:147;;17854:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17879:11:126;;:48;;-1:-1:-1;;;17879:48:126;;-1:-1:-1;;;;;17879:11:126;;;;-1:-1:-1;17879:16:126;;-1:-1:-1;17879:48:126;;17896:5;;17903:16;;17896:5;;17879:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17879:48:126;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;17938:5:126;;17966:12;;;17938:5;17966:12;;;;;;;;;;-1:-1:-1;;;17938:41:126;;;-1:-1:-1;;;;;17938:5:126;;;;-1:-1:-1;17938:15:126;;:41;;:5;:41;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17990:5:126;;18026:11;;18040:77;;-1:-1:-1;;;;;17990:5:126;;;;-1:-1:-1;17990:14:126;;-1:-1:-1;18026:11:126;;;-1:-1:-1;;;18063:21:126;18040:77;;18086:5;;18093:16;;18086:5;;18040:77;;;:::i;:::-;;;;-1:-1:-1;;18040:77:126;;;;;;;;;;;;;;-1:-1:-1;;;;;18040:77:126;-1:-1:-1;;;;;;18040:77:126;;;;;;17990:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18169:7:126;;18195:11;;18169:39;;-1:-1:-1;;;18169:39:126;;-1:-1:-1;;;;;18195:11:126;;;18169:39;;;571:74:147;18138:28:126;;-1:-1:-1;18169:7:126;;;;;;-1:-1:-1;18169:17:126;;544:18:147;;18169:39:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18246:4;;18269:11;;18246:36;;-1:-1:-1;;;18246:36:126;;-1:-1:-1;;;;;18269:11:126;;;18246:36;;;571:74:147;18138:70:126;;-1:-1:-1;18218:25:126;;18246:4;;;:14;;544:18:147;;18246:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18306:7;;18324:11;;18338:39;;-1:-1:-1;;;18338:39:126;;-1:-1:-1;;;;;18324:11:126;;;18338:39;;;571:74:147;;;18218:64:126;;-1:-1:-1;18293:94:126;;18306:7;;;;;;;;18324:11;883:6;;18306:7;;18338:17;;544:18:147;;18338:39:126;425:226:147;18293:94:126;18410:4;;18425:11;;18439:36;;-1:-1:-1;;;18439:36:126;;-1:-1:-1;;;;;18425:11:126;;;18439:36;;;571:74:147;;;18397:88:126;;18410:4;;;;;18425:11;883:6;;18410:4;;18439:14;;544:18:147;;18439:36:126;425:226:147;18397:88:126;18496:15;;-1:-1:-1;;;18496:15:126;;-1:-1:-1;;;;;18505:5:126;589:55:147;18496:15:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;18496:8:126;;;544:18:147;;18496:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18521:11:126;;:63;;-1:-1:-1;;;18521:63:126;;-1:-1:-1;;;;;18521:11:126;;;;-1:-1:-1;18521:16:126;;-1:-1:-1;18521:63:126;;18538:5;;18545:16;;18521:11;;:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18521:63:126;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;18692:7:126;;18718:11;;18692:39;;-1:-1:-1;;;18692:39:126;;-1:-1:-1;;;;;18718:11:126;;;18692:39;;;571:74:147;18670:139:126;;-1:-1:-1;18692:7:126;;;;;;:17;;544:18:147;;18692:39:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18770:3;18756:11;883:6;18756:2;:11;:::i;:::-;:17;;;;:::i;:::-;18733:40;;-1:-1:-1;;;;;18733:40:126;:20;:40;:::i;:::-;18670:139;;;;;;;;;;;;;;;;;:8;:139::i;:::-;18828:4;;18851:11;;18828:36;;-1:-1:-1;;;18828:36:126;;-1:-1:-1;;;;;18851:11:126;;;18828:36;;;571:74:147;18819:111:126;;18828:4;;;;;:14;;544:18:147;;18828:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18900:3;18886:11;883:6;18886:2;:11;:::i;:::-;:17;;;;:::i;:::-;18866:37;;-1:-1:-1;;;;;18866:37:126;:17;:37;:::i;:::-;18819:111;;;;;;;;;;;;;;;;;:8;:111::i;:::-;18950:7;;:24;;-1:-1:-1;;;18950:24:126;;-1:-1:-1;;;;;18968:5:126;589:55:147;;18950:24:126;;;571:74:147;18941:79:126;;18950:7;;;;;:17;;544:18:147;;18950:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18990:3;18976:11;883:6;18976:2;:11;:::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;18941:79:126;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;19039:4;;:21;;-1:-1:-1;;;19039:21:126;;-1:-1:-1;;;;;19054:5:126;589:55:147;;19039:21:126;;;571:74:147;19030:76:126;;19039:4;;:14;;544:18:147;;19039:21:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19076:3;19062:11;883:6;19062:2;:11;:::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;19030:76:126;;;;;;;;;;;;;;;;;;:8;:76::i;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;20574:1371:126:-;20658:16;;;20672:1;20658:16;;;;;;;;;20635:20;;20658:16;;;;;;;;;-1:-1:-1;;20693:11:126;;:25;;;-1:-1:-1;;;20693:25:126;;;;20635:39;;-1:-1:-1;;;;;;20693:11:126;;;;:23;;-1:-1:-1;20693:25:126;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20684:34;;:3;20688:1;20684:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;20756:16;;;20770:1;20756:16;;;;;;;;;20729:24;;20756:16;;;;;;;;;;-1:-1:-1;;20795:11:126;;20822:6;;20729:43;;-1:-1:-1;20832:1:126;;-1:-1:-1;;;;;20795:11:126;;;;-1:-1:-1;20795:21:126;;20817:3;;20822;;20795:11;;20822:6;;;;:::i;:::-;;;;;;;20795:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;20795:34:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;20782:7;20790:1;20782:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;20844:13;;-1:-1:-1;;;20844:13:126;;-1:-1:-1;;;;;20853:3:126;589:55:147;20844:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;20844:8:126;;;544:18:147;;20844:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20867:11:126;;20901:5;;20867:47;;-1:-1:-1;;;20867:47:126;;-1:-1:-1;;;;;20901:5:126;;;20867:47;;;27263:74:147;20867:11:126;27353:18:147;;;27346:50;20867:11:126;;;-1:-1:-1;20867:25:126;;-1:-1:-1;27236:18:147;;20867:47:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20925:5:126;;20962:11;;20976:85;;-1:-1:-1;;;;;20925:5:126;;;;-1:-1:-1;20925:15:126;;-1:-1:-1;20962:11:126;;;-1:-1:-1;;;20999:35:126;20976:85;;21036:3;;21041:5;;21048:3;;21053:7;;20976:85;;;:::i;:::-;;;;-1:-1:-1;;20976:85:126;;;;;;;;;;;;;;-1:-1:-1;;;;;20976:85:126;-1:-1:-1;;;;;;20976:85:126;;;;;;20925:146;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21082:81:126;;-1:-1:-1;;;21082:81:126;;-1:-1:-1;;;21082:81:126;;;25364:52:147;-1:-1:-1;;;;;;;;;;;21082:15:126;-1:-1:-1;21082:15:126;;-1:-1:-1;25337:18:147;;21082:81:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21173:13:126;;-1:-1:-1;;;21173:13:126;;-1:-1:-1;;;;;21182:3:126;589:55:147;21173:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;21173:8:126;-1:-1:-1;21173:8:126;;-1:-1:-1;544:18:147;;21173:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21196:11:126;;:55;;-1:-1:-1;;;21196:55:126;;-1:-1:-1;;;;;21196:11:126;;;;-1:-1:-1;21196:29:126;;-1:-1:-1;21196:55:126;;21226:3;;21231:5;;21238:3;;21243:7;;21196:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21262:5:126;;21290:12;;;21262:5;21290:12;;;;;;;;;;-1:-1:-1;;;21262:41:126;;;-1:-1:-1;;;;;21262:5:126;;;;-1:-1:-1;21262:15:126;;-1:-1:-1;21262:41:126;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21314:5:126;;21350:11;;21364:85;;-1:-1:-1;;;;;21314:5:126;;;;-1:-1:-1;21314:14:126;;-1:-1:-1;21350:11:126;;;-1:-1:-1;;;21387:35:126;21364:85;;21424:3;;21429:5;;21436:3;;21441:7;;21364:85;;;:::i;:::-;;;;-1:-1:-1;;21364:85:126;;;;;;;;;;;;;;-1:-1:-1;;;;;21364:85:126;-1:-1:-1;;;;;;21364:85:126;;;;;;21314:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21479:11:126;;21508:6;;21470:88;;-1:-1:-1;;;;;;21479:11:126;;;;-1:-1:-1;21479:21:126;;21501:5;;21508:3;;21479:11;;21508:6;;;;:::i;:::-;;;;;;;21479:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21479:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21517:1;21470:88;;;;;;;;;;;;;;;;;:8;:88::i;:::-;21577:11;;21604:6;;21568:86;;-1:-1:-1;;;;;21577:11:126;;:21;;21599:3;;21604;;21577:11;;21604:6;;;;:::i;:::-;;;;;;;21577:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21577:34:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21613:1;21568:86;;;;;;;;;;;;;;;;;:8;:86::i;:::-;21665:13;;-1:-1:-1;;;21665:13:126;;-1:-1:-1;;;;;21674:3:126;589:55:147;21665:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;21665:8:126;;;544:18:147;;21665:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21688:11:126;;:55;;-1:-1:-1;;;21688:55:126;;-1:-1:-1;;;;;21688:11:126;;;;-1:-1:-1;21688:29:126;;-1:-1:-1;21688:55:126;;21718:3;;21723:5;;21730:3;;21735:7;;21688:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21763:11:126;;21792:6;;21754:88;;-1:-1:-1;;;;;;21763:11:126;;;;-1:-1:-1;21763:21:126;;21785:5;;21792:3;;21763:11;;21792:6;;;;:::i;:::-;;;;;;;21763:36;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21763:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21801:1;21754:88;;;;;;;;;;;;;;;;;:8;:88::i;:::-;21861:11;;21888:6;;21852:86;;-1:-1:-1;;;;;21861:11:126;;:21;;21883:3;;21888;;21861:11;;21888:6;;;;:::i;:::-;;;;;;;21861:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;21861:34:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21897:1;21852:86;;;;;;;;;;;;;;;;;:8;:86::i;:::-;20625:1320;;20574:1371::o;14930:801::-;14991:7;;15009:11;;15023:39;;-1:-1:-1;;;15023:39:126;;-1:-1:-1;;;;;15009:11:126;;;15023:39;;;571:74:147;;;14978:94:126;;14991:7;;;;;;;15009:11;883:6;;14991:7;;15023:17;;544:18:147;;15023:39:126;425:226:147;14978:94:126;15083:5;;15107:11;;15121:58;;;15083:5;15121:58;;;28316:41:147;15173:5:126;-1:-1:-1;;;;;28393:55:147;;;28373:18;;;;28366:83;;;;15121:58:126;;;;;;;;;;28289:18:147;;;;15121:58:126;;;;;;;-1:-1:-1;;;;;15121:58:126;-1:-1:-1;;;15121:58:126;;;15083:97;;-1:-1:-1;;;15083:97:126;;:5;;;;:15;;:97;;15107:11;;15121:58;15083:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15191:81:126;;-1:-1:-1;;;15191:81:126;;-1:-1:-1;;;15191:81:126;;;25364:52:147;-1:-1:-1;;;;;;;;;;;15191:15:126;-1:-1:-1;15191:15:126;;-1:-1:-1;25337:18:147;;15191:81:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15282:15:126;;-1:-1:-1;;;15282:15:126;;-1:-1:-1;;;;;15291:5:126;589:55:147;15282:15:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;15282:8:126;-1:-1:-1;15282:8:126;;-1:-1:-1;544:18:147;;15282:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15307:11:126;;:29;;-1:-1:-1;;;15307:29:126;;:11;:29;;;28316:41:147;-1:-1:-1;;;;;15330:5:126;28393:55:147;;28373:18;;;28366:83;15307:11:126;;;;-1:-1:-1;15307:16:126;;-1:-1:-1;28289:18:147;;15307:29:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15347:5:126;;15375:12;;;15347:5;15375:12;;;;;;;;;;-1:-1:-1;;;15347:41:126;;;-1:-1:-1;;;;;15347:5:126;;;;:15;;:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15399:5:126;;15422:11;;15436:59;;;15399:5;15436:59;;;28316:41:147;15489:5:126;-1:-1:-1;;;;;28393:55:147;;;28373:18;;;;28366:83;;;;15436:59:126;;;;;;;;;;28289:18:147;;;;15436:59:126;;;;;;;-1:-1:-1;;;;;15436:59:126;-1:-1:-1;;;15436:59:126;;;15399:97;;-1:-1:-1;;;15399:97:126;;:5;;;;-1:-1:-1;15399:14:126;;-1:-1:-1;15399:97:126;;15422:11;;;;;15436:59;15399:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15516:7:126;;:24;;-1:-1:-1;;;15516:24:126;;-1:-1:-1;;;;;15534:5:126;589:55:147;;15516:24:126;;;571:74:147;15507:63:126;;-1:-1:-1;15516:7:126;;;;;;;;-1:-1:-1;15516:17:126;;544:18:147;;15516:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15542:1;15507:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;15581:15;;-1:-1:-1;;;15581:15:126;;-1:-1:-1;;;;;15590:5:126;589:55:147;15581:15:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;15581:8:126;;;544:18:147;;15581:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15606:11:126;;:44;;-1:-1:-1;;;15606:44:126;;:11;:44;;;28316:41:147;-1:-1:-1;;;;;15606:11:126;;;28373:18:147;;;28366:83;;;15606:11:126;-1:-1:-1;15606:16:126;;-1:-1:-1;28289:18:147;;15606:44:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15670:7:126;;:24;;-1:-1:-1;;;15670:24:126;;-1:-1:-1;;;;;15688:5:126;589:55:147;;15670:24:126;;;571:74:147;15661:63:126;;15670:7;;;;;:17;;544:18:147;;15670:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15696:1;15661:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;14930:801::o;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;2981:1642:126:-;3082:11;;:36;;-1:-1:-1;;;3082:36:126;;883:6;3082:36;;;29260:66:147;3082:11:126;29342:18:147;;;29335:50;3040:18:126;;;;-1:-1:-1;;;;;3082:11:126;;;;:22;;29233:18:147;;3082:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3129:24:126;;-1:-1:-1;;;3129:24:126;;-1:-1:-1;;;;;3139:13:126;;;;3129:24;;;1406:41:147;3039:79:126;;-1:-1:-1;3039:79:126;-1:-1:-1;;;;;;;;;;;;3129:9:126;;;1379:18:147;;3129:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:59;3173:10;-1:-1:-1;;;;;3164:59:126;3185:1;3164:59;;;;;;;;;;;;;;;;;:8;:59::i;:::-;3247:7;;3234:37;;3247:7;;;-1:-1:-1;;;;;3247:7:126;3257:5;883:6;3234:4;:37::i;:::-;3317:5;;:16;;;-1:-1:-1;;;3317:16:126;;;;3282:32;;-1:-1:-1;;;;;3317:5:126;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3344:20;;-1:-1:-1;;;3344:20:126;;-1:-1:-1;;;;;3358:5:126;589:55:147;3344:20:126;;;571:74:147;3282:51:126;;-1:-1:-1;;;;;;;;;;;;3344:13:126;;;544:18:147;;3344:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3374:7:126;;3399:11;;3374:46;;-1:-1:-1;;;3374:46:126;;-1:-1:-1;;;;;3399:11:126;;;3374:46;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;3374:7:126;;;;;;-1:-1:-1;3374:16:126;;-1:-1:-1;13185:18:147;;3374:46:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3430:11:126;;:29;;-1:-1:-1;;;3430:29:126;;:11;:29;;;28316:41:147;-1:-1:-1;;;;;3453:5:126;28393:55:147;;28373:18;;;28366:83;3430:11:126;;;;:16;;28289:18:147;;3430:29:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;3469:12:126;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3494:31;3528:5;;;;;;;;;-1:-1:-1;;;;;3528:5:126;-1:-1:-1;;;;;3528:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3564:7;;:24;;-1:-1:-1;;;3564:24:126;;-1:-1:-1;;;;;3582:5:126;589:55:147;;3564:24:126;;;571:74:147;3494:50:126;;-1:-1:-1;3555:73:126;;3564:7;;;;;;;;:17;;544:18:147;;3564:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3590:1;3555:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;3647:4;;:21;;-1:-1:-1;;;3647:21:126;;-1:-1:-1;;;;;3662:5:126;589:55:147;;3647:21:126;;;571:74:147;3638:78:126;;3647:4;;:14;;544:18:147;;3647:21:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3670:9;-1:-1:-1;;;;;3638:78:126;;;;;;;;;;;;;;;;;;:8;:78::i;:::-;3759:5;;:18;;;-1:-1:-1;;;3759:18:126;;;;3727:313;;-1:-1:-1;;;;;3759:5:126;;:16;;:18;;;;;:5;;:18;;;;;;;:5;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3759:18:126;;;;;;;;;;;;:::i;:::-;3749:29;;;;;;;3819:149;;;-1:-1:-1;;;;;3893:5:126;30115:15:147;3819:149:126;;;30097:34:147;;;30147:18;;;30140:43;3907:4:126;30199:18:147;;;30192:50;883:6:126;30258:18:147;;;;30251:34;;;;3819:149:126;;;;;;;;;;30008:19:147;;;;3819:149:126;;;;;;;-1:-1:-1;;;;;3819:149:126;-1:-1:-1;;;3819:149:126;;;3792:190;;;;3727:313;;;;;;;;;;;;;;;;;;;3749:29;;3792:190;3727:8;:313::i;:::-;4083:5;;:17;;;-1:-1:-1;;;4083:17:126;;;;4051:315;;-1:-1:-1;;;;;4083:5:126;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4083:17:126;;;;;;;;;;;;:::i;:::-;4073:28;;;;;;;-1:-1:-1;;;4215:5:126;;4229:4;4235:41;4266:9;1750:6:116;1746:15;;1640:137;4235:41:126;4142:152;;-1:-1:-1;;;;;30115:15:147;;;4142:152:126;;;30097:34:147;30167:15;;;;30147:18;;;30140:43;30226:14;30219:22;30199:18;;;30192:50;30258:18;;;30251:34;30008:19;;4142:152:126;;;;;;;;;;;;;-1:-1:-1;;;;;4142:152:126;;;;;;;-1:-1:-1;;;;;4142:152:126;;;;;;;;;;;4115:193;;;;;;4051:315;;;;;;;;;;;;;;;;;:8;:315::i;:::-;4409:5;;:22;;;-1:-1:-1;;;4409:22:126;;;;4377:29;;-1:-1:-1;;;;;4409:5:126;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4377:54;;4441:28;4472:5;;;;;;;;;-1:-1:-1;;;;;4472:5:126;-1:-1:-1;;;;;4472:19:126;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4441:52;;4504;4518:16;4536:19;4504:13;:52::i;:::-;4566:50;4580:15;4597:18;4566:13;:50::i;:::-;3029:1594;;;;;;2981:1642::o;3385:141:6:-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;4629:1640:126:-;4730:11;;:37;;-1:-1:-1;;;4730:37:126;;883:6;4730:37;;;29260:66:147;4688:18:126;29342::147;;;29335:50;;;4688:18:126;;;-1:-1:-1;;;;;4730:11:126;;;;:22;;29233:18:147;;4730:37:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4778:24:126;;-1:-1:-1;;;4778:24:126;;-1:-1:-1;;;;;4788:13:126;;;;4778:24;;;1406:41:147;4687:80:126;;-1:-1:-1;4687:80:126;-1:-1:-1;;;;;;;;;;;;4778:9:126;;;1379:18:147;;4778:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4813:59;4822:10;-1:-1:-1;;;;;4813:59:126;4834:1;4813:59;;;;;;;;;;;;;;;;;:8;:59::i;:::-;4896:4;;4883:34;;-1:-1:-1;;;;;4896:4:126;4903:5;883:6;4883:4;:34::i;:::-;4963:5;;:16;;;-1:-1:-1;;;4963:16:126;;;;4928:32;;-1:-1:-1;;;;;4963:5:126;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4990:20;;-1:-1:-1;;;4990:20:126;;-1:-1:-1;;;;;5004:5:126;589:55:147;4990:20:126;;;571:74:147;4928:51:126;;-1:-1:-1;;;;;;;;;;;;4990:13:126;;;544:18:147;;4990:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5020:4:126;;5042:11;;5020:43;;-1:-1:-1;;;5020:43:126;;-1:-1:-1;;;;;5042:11:126;;;5020:43;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;5020:4:126;;;-1:-1:-1;5020:13:126;;-1:-1:-1;13185:18:147;;5020:43:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5073:11:126;;:30;;-1:-1:-1;;;5073:30:126;;:11;:30;;;28316:41:147;-1:-1:-1;;;;;5097:5:126;28393:55:147;;28373:18;;;28366:83;5073:11:126;;;;:16;;28289:18:147;;5073:30:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;5113:12:126;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5138:31;5172:5;;;;;;;;;-1:-1:-1;;;;;5172:5:126;-1:-1:-1;;;;;5172:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5208:4;;:21;;-1:-1:-1;;;5208:21:126;;-1:-1:-1;;;;;5223:5:126;589:55:147;;5208:21:126;;;571:74:147;5138:50:126;;-1:-1:-1;5199:70:126;;5208:4;;;;:14;;544:18:147;;5208:21:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5231:1;5199:70;;;;;;;;;;;;;;;;;:8;:70::i;:::-;5288:7;;:24;;-1:-1:-1;;;5288:24:126;;-1:-1:-1;;;;;5306:5:126;589:55:147;;5288:24:126;;;571:74:147;5279:81:126;;5288:7;;;;;:17;;544:18:147;;5288:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5314:9;-1:-1:-1;;;;;5279:81:126;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;5403:5;;:18;;;-1:-1:-1;;;5403:18:126;;;;5371:315;;-1:-1:-1;;;;;5403:5:126;;:16;;:18;;;;;:5;;:18;;;;;;;:5;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5403:18:126;;;;;;;;;;;;:::i;:::-;5393:29;;;;;;;5463:151;;;-1:-1:-1;;;;;5537:5:126;30115:15:147;5463:151:126;;;30097:34:147;;;30147:18;;;30140:43;5551:5:126;30199:18:147;;;30192:50;1746:15:116;30258:18:147;;;;30251:34;;;;5463:151:126;;;;;;;;;;30008:19:147;;;;5463:151:126;;;;;;;-1:-1:-1;;;;;5463:151:126;-1:-1:-1;;;5463:151:126;;;5436:192;;;;5371:315;;;;;;;;;;;;;;;;;;;5393:29;;5436:192;5371:8;:315::i;:::-;5729:5;;:17;;;-1:-1:-1;;;5729:17:126;;;;5697:315;;-1:-1:-1;;;;;5729:5:126;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5729:17:126;;;;;;;;;;;;:::i;:::-;5719:28;;;;;;;5788:152;;;-1:-1:-1;;;;;5861:5:126;30115:15:147;5788:152:126;;;30097:34:147;;;30147:18;;;30140:43;5875:5:126;30199:18:147;;;30192:50;-1:-1:-1;;;;;1386:17:116;;30258:18:147;;;;30251:34;;;;5788:152:126;;;;;;;;;;30008:19:147;;;;5788:152:126;;;;;;;-1:-1:-1;;;;;5788:152:126;-1:-1:-1;;;5788:152:126;;;5761:193;;;;5697:315;;;;;;;;;;;;;;;;;;;5719:28;;5761:193;5697:8;:315::i;12754:168:135:-;12825:7;12860:1;12851:6;:10;;;:24;;;;;12874:1;12865:6;:10;;;12851:24;:64;;12900:15;12909:6;12900;:15;:::i;:::-;12851:64;;;12896:1;12878:15;12887:6;12878;:15;:::i;:::-;:19;;;;:::i;:::-;12844:71;;;;12754:168;;;;;:::o;15737:1667:126:-;15790:5;;15827:11;;15978:12;;;15988:1;15978:12;;;;;;;;-1:-1:-1;;;;;15790:5:126;;;;:15;;15827:11;;-1:-1:-1;;;15893:26:126;15853:151;;15929:4;;1007:38:116;;15853:151:126;;;;:::i;:::-;;;;-1:-1:-1;;15853:151:126;;;;;;;;;;;;;;-1:-1:-1;;;;;15853:151:126;-1:-1:-1;;;;;;15853:151:126;;;;;;15790:224;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16025:81:126;;-1:-1:-1;;;16025:81:126;;-1:-1:-1;;;16025:81:126;;;25364:52:147;-1:-1:-1;;;;;;;;;;;16025:15:126;-1:-1:-1;16025:15:126;;-1:-1:-1;25337:18:147;;16025:81:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16116:15:126;;-1:-1:-1;;;16116:15:126;;-1:-1:-1;;;;;16125:5:126;589:55:147;16116:15:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;16116:8:126;-1:-1:-1;16116:8:126;;-1:-1:-1;544:18:147;;16116:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16141:11:126;;16255:12;;;16265:1;16255:12;;;;;;;;;-1:-1:-1;;;16141:136:126;;;-1:-1:-1;;;;;16141:11:126;;;;-1:-1:-1;16141:21:126;;-1:-1:-1;16141:136:126;;16205:4;;1007:38:116;;16141:136:126;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16288:5:126;;16316:12;;;16288:5;16316:12;;;;;;;;;;-1:-1:-1;;;16288:41:126;;;-1:-1:-1;;;;;16288:5:126;;;;-1:-1:-1;16288:15:126;;-1:-1:-1;16288:41:126;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16340:5:126;;16376:11;;16527:12;;;16537:1;16527:12;;;;;;;;-1:-1:-1;;;;;16340:5:126;;;;-1:-1:-1;16340:14:126;;-1:-1:-1;16376:11:126;;;-1:-1:-1;;;16442:26:126;16402:151;;16478:4;;1007:38:116;;16402:151:126;;;;:::i;:::-;;;;-1:-1:-1;;16402:151:126;;;;;;;;;;;;;;-1:-1:-1;;;;;16402:151:126;-1:-1:-1;;;;;;16402:151:126;;;;;;16340:223;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16605:7:126;;16631:11;;16605:39;;-1:-1:-1;;;16605:39:126;;-1:-1:-1;;;;;16631:11:126;;;16605:39;;;571:74:147;16574:28:126;;-1:-1:-1;16605:7:126;;;;;;-1:-1:-1;16605:17:126;;544:18:147;;16605:39:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16682:4;;16705:11;;16682:36;;-1:-1:-1;;;16682:36:126;;-1:-1:-1;;;;;16705:11:126;;;16682:36;;;571:74:147;16574:70:126;;-1:-1:-1;16654:25:126;;16682:4;;;:14;;544:18:147;;16682:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16729:15;;-1:-1:-1;;;16729:15:126;;-1:-1:-1;;;;;16738:5:126;589:55:147;16729:15:126;;;571:74:147;16654:64:126;;-1:-1:-1;;;;;;;;;;;;16729:8:126;;;544:18:147;;16729:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16754:11:126;;16868:12;;;16878:1;16868:12;;;;;;;;;-1:-1:-1;;;16754:136:126;;;-1:-1:-1;;;;;16754:11:126;;;;-1:-1:-1;16754:21:126;;-1:-1:-1;16754:136:126;;16818:4;;1007:38:116;;16754:136:126;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16975:7:126;;17001:11;;16975:39;;-1:-1:-1;;;16975:39:126;;-1:-1:-1;;;;;17001:11:126;;;16975:39;;;571:74:147;16953:137:126;;-1:-1:-1;16975:7:126;;;;;;-1:-1:-1;16975:17:126;;544:18:147;;16975:39:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17039:10;883:6;17039:1;:10;:::i;:::-;17016:33;;-1:-1:-1;;;;;17016:33:126;:20;:33;:::i;:::-;16953:137;;;;;;;;;;;;;;;;;:8;:137::i;:::-;17109:4;;17132:11;;17109:36;;-1:-1:-1;;;17109:36:126;;-1:-1:-1;;;;;17132:11:126;;;17109:36;;;571:74:147;17100:109:126;;17109:4;;;;;:14;;544:18:147;;17109:36:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17167:10;883:6;17167:1;:10;:::i;:::-;17147:30;;-1:-1:-1;;;;;17147:30:126;:17;:30;:::i;:::-;17100:109;;;;;;;;;;;;;;;;;:8;:109::i;:::-;17229:7;;:32;;-1:-1:-1;;;17229:32:126;;17255:4;17229:32;;;571:74:147;17220:85:126;;17229:7;;;-1:-1:-1;;;;;17229:7:126;;:17;;544:18:147;;17229:32:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17263:10;883:6;17263:1;:10;:::i;:::-;-1:-1:-1;;;;;17220:85:126;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;17324:4;;:29;;-1:-1:-1;;;17324:29:126;;17347:4;17324:29;;;571:74:147;17315:82:126;;-1:-1:-1;;;;;17324:4:126;;:14;;544:18:147;;17324:29:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17355:10;883:6;17355:1;:10;:::i;:::-;-1:-1:-1;;;;;17315:82:126;;;;;;;;;;;;;;;;;;:8;:82::i;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19119:1449:126;19190:16;;;19204:1;19190:16;;;;;;;;;19167:20;;19190:16;;;;;;;;;-1:-1:-1;;19225:11:126;;:25;;;-1:-1:-1;;;19225:25:126;;;;19167:39;;-1:-1:-1;;;;;;19225:11:126;;;;:23;;-1:-1:-1;19225:25:126;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19216:34;;:3;19220:1;19216:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;19294:16;;;19308:1;19294:16;;;;;;;;;19261:30;;19294:16;;;;;;;;;;-1:-1:-1;;19339:11:126;;19366:6;;19261:49;;-1:-1:-1;19376:1:126;;-1:-1:-1;;;;;19339:11:126;;;;-1:-1:-1;19339:21:126;;19361:3;;19366;;19339:11;;19366:6;;;;:::i;:::-;;;;;;;19339:34;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;19339:34:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;19320:13;19334:1;19320:16;;;;;;;;:::i;:::-;;;;;;;;;;:57;19388:13;;-1:-1:-1;;;19388:13:126;;-1:-1:-1;;;;;19397:3:126;589:55:147;19388:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;19388:8:126;;;544:18:147;;19388:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19411:11:126;;19445:5;;19411:47;;-1:-1:-1;;;19411:47:126;;-1:-1:-1;;;;;19445:5:126;;;19411:47;;;27263:74:147;19411:11:126;27353:18:147;;;27346:50;19411:11:126;;;-1:-1:-1;19411:25:126;;-1:-1:-1;27236:18:147;;19411:47:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19469:5:126;;19506:11;;19520:77;;-1:-1:-1;;;;;19469:5:126;;;;-1:-1:-1;19469:15:126;;-1:-1:-1;19506:11:126;;;-1:-1:-1;;;19543:21:126;19520:77;;19566:3;;19571:5;;19578:3;;19583:13;;19520:77;;;:::i;:::-;;;;-1:-1:-1;;19520:77:126;;;;;;;;;;;;;;-1:-1:-1;;;;;19520:77:126;-1:-1:-1;;;;;;19520:77:126;;;;;;19469:138;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19618:81:126;;-1:-1:-1;;;19618:81:126;;-1:-1:-1;;;19618:81:126;;;25364:52:147;-1:-1:-1;;;;;;;;;;;19618:15:126;-1:-1:-1;19618:15:126;;-1:-1:-1;25337:18:147;;19618:81:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19709:13:126;;-1:-1:-1;;;19709:13:126;;-1:-1:-1;;;;;19718:3:126;589:55:147;19709:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;19709:8:126;-1:-1:-1;19709:8:126;;-1:-1:-1;544:18:147;;19709:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19732:11:126;;:48;;-1:-1:-1;;;19732:48:126;;-1:-1:-1;;;;;19732:11:126;;;;-1:-1:-1;19732:16:126;;-1:-1:-1;19732:48:126;;19749:3;;19754:5;;19761:3;;19766:13;;19732:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19732:48:126;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19791:5:126;;19819:12;;;19791:5;19819:12;;;;;;;;;;-1:-1:-1;;;19791:41:126;;;-1:-1:-1;;;;;19791:5:126;;;;:15;;:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19843:5:126;;19879:11;;19893:77;;-1:-1:-1;;;;;19843:5:126;;;;-1:-1:-1;19843:14:126;;-1:-1:-1;19879:11:126;;;-1:-1:-1;;;19916:21:126;19893:77;;19939:3;;19944:5;;19951:3;;19956:13;;19893:77;;;:::i;:::-;;;;-1:-1:-1;;19893:77:126;;;;;;;;;;;;;;-1:-1:-1;;;;;19893:77:126;-1:-1:-1;;;;;;19893:77:126;;;;;;19843:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20000:7:126;;:24;;-1:-1:-1;;;20000:24:126;;-1:-1:-1;;;;;20018:5:126;589:55:147;;20000:24:126;;;571:74:147;19991:63:126;;-1:-1:-1;20000:7:126;;;;;;;;-1:-1:-1;20000:17:126;;544:18:147;;20000:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20026:1;19991:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;20073:4;;:21;;-1:-1:-1;;;20073:21:126;;-1:-1:-1;;;;;20088:5:126;589:55:147;;20073:21:126;;;571:74:147;20064:60:126;;20073:4;;:14;;544:18:147;;20073:21:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20096:1;20064:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;20135:13;;-1:-1:-1;;;20135:13:126;;-1:-1:-1;;;;;20144:3:126;589:55:147;20135:13:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;20135:8:126;;;544:18:147;;20135:13:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20158:11:126;;:48;;-1:-1:-1;;;20158:48:126;;-1:-1:-1;;;;;20158:11:126;;;;-1:-1:-1;20158:16:126;;-1:-1:-1;20158:48:126;;20175:3;;20180:5;;20187:3;;20192:13;;20158:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20158:48:126;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20226:7:126;;:24;;-1:-1:-1;;;20226:24:126;;-1:-1:-1;;;;;20244:5:126;589:55:147;;20226:24:126;;;571:74:147;20217:63:126;;20226:7;;;;;:17;;544:18:147;;20226:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20252:1;20217:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;20299:4;;:21;;-1:-1:-1;;;20299:21:126;;-1:-1:-1;;;;;20314:5:126;589:55:147;;20299:21:126;;;571:74:147;20290:60:126;;20299:4;;:14;;544:18:147;;20299:21:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20322:1;20290:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;20406:11;;20432:6;;20362:19;;;;-1:-1:-1;;;;;20406:11:126;;;;:18;;20432:3;;20362:19;;20432:6;;;;:::i;:::-;;;;;;;20406:34;;;;;;;;;;;;;;8348:8:147;8336:21;;;;8318:40;;8306:2;8291:18;;8174:190;20406:34:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;20361:79:126;;;-1:-1:-1;;;;;20361:79:126;;;20451:50;20460:11;20473:1;20451:50;;;;;;;;;;;;;;;;;:8;:50::i;:::-;20511;20520:11;20533:1;20511:50;;;;;;;;;;;;;;;;;:8;:50::i;:::-;19157:1411;;;;19119:1449::o;3047:140:6:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12928:205:135;13006:6;;13037:12;13048:1;13037:12;;;;:::i;:::-;13024:25;;13073:1;13064:6;:10;;;:33;;13095:2;13064:33;;;13077:11;;;;:2;:11;:::i;:::-;:15;;13091:1;13077:15;:::i;:::-;13059:38;;13115:11;:2;:9;:11::i;:::-;13108:18;;;12928:205;;;;;;:::o;1854:1121:126:-;1934:11;;:34;;;-1:-1:-1;;;1934:34:126;;;;1913:18;;-1:-1:-1;;;;;1934:11:126;;:32;;:34;;;;;;;;;;;;;;:11;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;2877:44:104;;;;;;-1:-1:-1;;;2957:34:104;;2956:41;;-1:-1:-1;;;;2932:65:104;;;;-1:-1:-1;;;3031:33:104;;3030:40;;-1:-1:-1;;;3007:63:104;-1:-1:-1;;;3110:40:104;;3109:47;;-1:-1:-1;;;3080:76:104;-1:-1:-1;;;3195:39:104;;3194:46;;-1:-1:-1;;;3166:74:104;-1:-1:-1;;;3275:34:104;;3274:41;;-1:-1:-1;;;3250:65:104;-1:-1:-1;;;3349:33:104;;3348:40;;-1:-1:-1;;;3325:63:104;-1:-1:-1;;;3423:34:104;;3422:41;;-1:-1:-1;;;3398:65:104;-1:-1:-1;;;3497:33:104;;3496:40;;-1:-1:-1;;;3473:63:104;-1:-1:-1;;;3584:38:104;;3583:45;;-1:-1:-1;;;3546:82:104;-1:-1:-1;;;3675:37:104;;3674:44;;-1:-1:-1;;;3638:80:104;2096:5:126;;2056:79;;;;;;;;;;;;;;;;;;;2877:44:104;;-1:-1:-1;;;2056:79:126;;2096:5;;;2056:8;:79::i;:::-;2145:70;2156:15;:26;;;2145:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2225:69;2236:15;:25;;;2225:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2304:75;2315:15;:31;;;2304:75;;;;;;;;;;;;;;;;;:10;:75::i;:::-;2389:74;2400:15;:30;;;2389:74;;;;;;;;;;;;;;;;;:10;:74::i;:::-;2473:70;2484:15;:26;;;2473:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2553:69;2564:15;:25;;;2553:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2632:70;2643:15;:26;;;2632:70;;;;;;;;;;;;;;;;;:10;:70::i;:::-;2712:69;2723:15;:25;;;2712:69;;;;;;;;;;;;;;;;;:10;:69::i;:::-;2791:84;2802:15;:39;;;2791:84;;;;;;;;;;;;;;;;;:10;:84::i;:::-;2885:83;2896:15;:38;;;2885:83;;;;;;;;;;;;;;;;;:10;:83::i;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6275:1429:126;6369:5;;:16;;;-1:-1:-1;;;6369:16:126;;;;6334:32;;-1:-1:-1;;;;;6369:5:126;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6334:51;-1:-1:-1;6396:15:126;1007:38:116;6465:15:126;;-1:-1:-1;;;6465:15:126;;-1:-1:-1;;;;;6474:5:126;589:55:147;6465:15:126;;;571:74:147;6396:58:126;;-1:-1:-1;;;;;;;;;;;;6465:8:126;;;544:18:147;;6465:15:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6490:11:126;;6558:12;;;6490:11;6558:12;;;;;;;;;-1:-1:-1;;;6490:81:126;;;-1:-1:-1;;;;;6490:11:126;;;;-1:-1:-1;6490:21:126;;-1:-1:-1;6490:81:126;;6541:4;;6549:7;;6490:81;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6582:31;6616:5;;;;;;;;;-1:-1:-1;;;;;6616:5:126;-1:-1:-1;;;;;6616:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6582:50;;6643:223;6675:5;;;;;;;;;-1:-1:-1;;;;;6675:5:126;-1:-1:-1;;;;;6675:16:126;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6675:18:126;;;;;;;;;;;;:::i;:::-;6665:29;;;;;;;6718:88;;;6776:5;-1:-1:-1;;;;;32191:15:147;6718:88:126;;;32173:34:147;6791:4:126;32223:18:147;;;32216:43;32275:18;;;;32268:34;;;6718:88:126;;;;;;;;;;32085:18:147;;;;6718:88:126;;;;;;;-1:-1:-1;;;;;6718:88:126;-1:-1:-1;;;6718:88:126;;;6708:99;;;;6643:223;;;;;;;;;;;;6665:29;;6708:99;;6643:223;;;;;;:8;:223::i;:::-;6877:20;6945:4;883:6;-1:-1:-1;;;;;6908:34:126;:7;;;;;;;;;-1:-1:-1;;;;;6908:7:126;-1:-1:-1;;;;;6908:23:126;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;:41;;;;:::i;:::-;7071:5;;:17;;;-1:-1:-1;;;7071:17:126;;;;6877:73;;-1:-1:-1;;;;;;1010:17:116;;1033:6;1029:15;;;1007:38;;7039:408:126;;-1:-1:-1;;;;;7071:5:126;;:15;;:17;;;;;6961:12;;7071:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7071:17:126;;;;;;;;;;;;:::i;:::-;7061:28;;;;;;;7130:244;;;-1:-1:-1;;;;;7228:5:126;32812:15:147;7130:244:126;;;32794:34:147;7263:4:126;32844:18:147;;;32837:43;32896:18;;;32889:34;;;1007:38:116;32939:18:147;;;;32932:34;;;;7130:244:126;;;;;;;;;;32705:19:147;;;;7130:244:126;;;;;;;-1:-1:-1;;;;;7130:244:126;-1:-1:-1;;;7130:244:126;;;7103:285;;;;7039:408;;;;;;;;;;;;7061:28;;7103:285;;7039:408;;;;;;:8;:408::i;:::-;7490:5;;:22;;;-1:-1:-1;;;7490:22:126;;;;7458:29;;-1:-1:-1;;;;;7490:5:126;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7458:54;;7522:28;7553:5;;;;;;;;;-1:-1:-1;;;;;7553:5:126;-1:-1:-1;;;;;7553:19:126;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7522:52;;7585;7599:16;7617:19;7585:13;:52::i;:::-;7647:50;7661:15;7678:18;7647:13;:50::i;:::-;6324:1380;;;;;;;6275:1429::o;11103:1715::-;11188:11;;:25;;;-1:-1:-1;;;11188:25:126;;;;11170:15;;-1:-1:-1;;;;;11188:11:126;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11260:16;;;11274:1;11260:16;;;;;;;;;11170:43;;-1:-1:-1;11224:33:126;;11260:16;;;;;;;;;;;;-1:-1:-1;11260:16:126;11224:52;;11308:58;11345:4;11351;11357:8;11308:36;:58::i;:::-;11286:16;11303:1;11286:19;;;;;;;;:::i;:::-;;;;;;;;;;:80;11390:7;;11377:37;;11390:7;;;-1:-1:-1;;;;;11390:7:126;11400:5;883:6;11377:4;:37::i;:::-;11437:4;;11424:34;;-1:-1:-1;;;;;11437:4:126;11444:5;883:6;11424:4;:34::i;:::-;11469:20;;-1:-1:-1;;;11469:20:126;;-1:-1:-1;;;;;11483:5:126;589:55:147;11469:20:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;11469:13:126;;;544:18:147;;11469:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11499:7:126;;11524:11;;11499:46;;-1:-1:-1;;;11499:46:126;;-1:-1:-1;;;;;11524:11:126;;;11499:46;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;11499:7:126;;;;;;-1:-1:-1;11499:16:126;;-1:-1:-1;13185:18:147;;11499:46:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11555:4:126;;11577:11;;11555:43;;-1:-1:-1;;;11555:43:126;;-1:-1:-1;;;;;11577:11:126;;;11555:43;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;11555:4:126;;;:13;;13185:18:147;;11555:43:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11608:11:126;;:48;;-1:-1:-1;;;11608:48:126;;-1:-1:-1;;;;;11608:11:126;;;;:16;;:48;;11625:5;;11632:16;;11625:5;;11608:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11608:48:126;;;;;;;;;;;;:::i;:::-;;;;11667:32;11702:5;;;;;;;;;-1:-1:-1;;;;;11702:5:126;-1:-1:-1;;;;;11702:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11752;;;11766:1;11752:16;;;;;;;;;11667:51;;-1:-1:-1;11729:20:126;;11752:16;;;;;;;;;;;;-1:-1:-1;11752:16:126;11729:39;;11787:8;11778:17;;:3;11782:1;11778:6;;;;;;;;:::i;:::-;;;;;;;;;;:17;11833:16;;;11847:1;11833:16;;;;;;;;;11806:24;;11833:16;;;;;;;;;;;;-1:-1:-1;11833:16:126;11806:43;;883:6;-1:-1:-1;;;;;11859:19:126;:7;11867:1;11859:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;11889:11;;:55;;-1:-1:-1;;;11889:55:126;;-1:-1:-1;;;;;11889:11:126;;;;:29;;:55;;11919:5;;11926:3;;11931;;11936:7;;11889:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:0;309:37;;-1:-1:-1;;;;;11954:12:126;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11979:31;12013:5;;;;;;;;;-1:-1:-1;;;;;12013:5:126;-1:-1:-1;;;;;12013:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11979:50;;12040:271;12072:5;;;;;;;;;-1:-1:-1;;;;;12072:5:126;-1:-1:-1;;;;;12072:16:126;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12072:18:126;;;;;;;;;;;;:::i;:::-;12062:29;;;;;;12155:41;;;12198:5;12205;12212:3;12217;12222:7;12132:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;12132:98:126;;;;;;;-1:-1:-1;;;;;12132:98:126;;;;;;;;;;;12105:139;;;;;;12040:271;;;;;;;;;;;;;;;;;:8;:271::i;:::-;12354:5;;:17;;;-1:-1:-1;;;12354:17:126;;;;12322:239;;-1:-1:-1;;;;;12354:5:126;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12354:17:126;;;;;;;;;;;;:::i;:::-;12344:28;;;;;;12419:40;;;12461:5;12468;12475:3;12480;12485:7;12396:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;12396:97:126;;;;;;;-1:-1:-1;;;;;12396:97:126;;;;;;;;;;;12386:108;;;;;;12322:239;;;;;;;;;;;;;;;;;:8;:239::i;10779:1171:135:-;11008:13;11024:6;-1:-1:-1;;;;;11024:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11008:34;;11052:13;11068:6;-1:-1:-1;;;;;11068:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11052:34;;11097:36;11110:6;11119:4;11125:7;11097:4;:36::i;:::-;11143;11156:6;11165:4;11171:7;11143:4;:36::i;:::-;11190:13;11206:28;11219:6;11227;11206:12;:28::i;:::-;11190:44;;11245:40;11302:5;11288:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11288:20:135;;11245:63;;11324:9;11319:412;11339:5;11335:1;:9;11319:412;;;11365:9;11377:26;11383:8;11393:1;11396:6;11377:5;:26::i;:::-;11365:38;;11418:15;11442:8;11436:14;;:2;:14;;;;:28;;;;;11463:1;11454:6;:10;;;11436:28;:74;;11509:1;11436:74;;;11467:39;11468:28;;;;335:4:102;11468:28:135;:::i;:::-;11467:37;:39::i;:::-;11418:92;;11524:15;11548:8;11542:14;;:2;:14;;;;:28;;;;;11569:1;11560:6;:10;;;11542:28;:74;;11615:1;11542:74;;;11573:39;11574:28;;;;335:4:102;11574:28:135;:::i;11573:39::-;11524:92;;11660:60;11697:8;11707;11717:2;11660:36;:60::i;:::-;11631:23;11655:1;11631:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11351:380;;;11346:3;;;;:::i;:::-;;;11319:412;;;-1:-1:-1;11741:19:135;;-1:-1:-1;;;11741:19:135;;-1:-1:-1;;;;;589:55:147;;11741:19:135;;;571:74:147;-1:-1:-1;;;;;;;;;;;11741:13:135;;;544:18:147;;11741:19:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11770:41:135;;-1:-1:-1;;;11770:41:135;;-1:-1:-1;;;;;26860:55:147;;;11770:41:135;;;26842:74:147;26932:18;;;26925:34;;;11770:15:135;;;-1:-1:-1;11770:15:135;;-1:-1:-1;26815:18:147;;11770:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11821:41:135;;-1:-1:-1;;;11821:41:135;;-1:-1:-1;;;;;26860:55:147;;;11821:41:135;;;26842:74:147;26932:18;;;26925:34;;;11821:15:135;;;;;26815:18:147;;11821:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11872:12:135;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11897:6;-1:-1:-1;;;;;11897:11:135;;11909:2;11913:23;11938:4;11897:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11897:46:135;;;;;;;;;;;;:::i;:::-;;;;10998:952;;;;10779:1171;;;;;;;;:::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13139:134:135;13240:7;;:26;;-1:-1:-1;;;13240:26:135;;24339:6:147;24327:19;;13240:26:135;;;24309:38:147;13198:11:135;;-1:-1:-1;;;;;13240:7:135;;:17;;24282:18:147;;13240:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13221:45;13139:134;-1:-1:-1;;;;;;;;;13139:134:135:o;7710:1738:126:-;7799:5;;:16;;;-1:-1:-1;;;7799:16:126;;;;7764:32;;-1:-1:-1;;;;;7799:5:126;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7862;;;7876:1;7862:16;;;;;;;;;7764:51;;-1:-1:-1;7826:33:126;;7862:16;;;;;;;;;;;;-1:-1:-1;7862:16:126;7826:52;;7910:78;7947:4;7953;7959:19;:28;;;7910:36;:78::i;:::-;7888:16;7905:1;7888:19;;;;;;;;:::i;:::-;;;;;;;;;;:100;8012:7;;7999:37;;8012:7;;;-1:-1:-1;;;;;8012:7:126;8022:5;883:6;7999:4;:37::i;:::-;8059:4;;8046:34;;-1:-1:-1;;;;;8059:4:126;8066:5;883:6;8046:4;:34::i;:::-;8091:20;;-1:-1:-1;;;8091:20:126;;-1:-1:-1;;;;;8105:5:126;589:55:147;8091:20:126;;;571:74:147;-1:-1:-1;;;;;;;;;;;8091:13:126;;;544:18:147;;8091:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8121:7:126;;8146:11;;8121:46;;-1:-1:-1;;;8121:46:126;;-1:-1:-1;;;;;8146:11:126;;;8121:46;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;8121:7:126;;;;;;-1:-1:-1;8121:16:126;;-1:-1:-1;13185:18:147;;8121:46:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8177:4:126;;8199:11;;8177:43;;-1:-1:-1;;;8177:43:126;;-1:-1:-1;;;;;8199:11:126;;;8177:43;;;13212:74:147;883:6:126;13302:18:147;;;13295:75;8177:4:126;;;:13;;13185:18:147;;8177:43:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8230:11:126;;:48;;-1:-1:-1;;;8230:48:126;;-1:-1:-1;;;;;8230:11:126;;;;:16;;:48;;8247:5;;8254:16;;8247:5;;8230:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8230:48:126;;;;;;;;;;;;:::i;:::-;;;;317:28:0;309:37;;-1:-1:-1;;;;;8288:12:126;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8313:31;8347:5;;;;;;;;;-1:-1:-1;;;;;8347:5:126;-1:-1:-1;;;;;8347:14:126;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8313:50;;8374:404;8406:5;;;;;;;;;-1:-1:-1;;;;;8406:5:126;-1:-1:-1;;;;;8406:16:126;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8406:18:126;;;;;;;;;;;;:::i;:::-;8396:29;;;;;;;-1:-1:-1;;;8560:5:126;;8614:16;1007:38:116;8466:244:126;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8466:244:126;;;;;;;-1:-1:-1;;;;;8466:244:126;;;;;;;;;;;8439:285;;;;;;8374:404;;;;;;;;;;;;;;;;;:8;:404::i;:::-;8821:5;;:17;;;-1:-1:-1;;;8821:17:126;;;;8789:402;;-1:-1:-1;;;;;8821:5:126;;:15;;:17;;;;;:5;;:17;;;;;;;:5;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8821:17:126;;;;;;;;;;;;:::i;:::-;8811:28;;;;;;;-1:-1:-1;;;8973:5:126;;9027:16;1007:38:116;8880:243:126;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8880:243:126;;;;;;;-1:-1:-1;;;;;8880:243:126;;;;;;;;;;;8853:284;;;;;;8789:402;;;;;;;;;;;;;;;;;:8;:402::i;:::-;9234:5;;:22;;;-1:-1:-1;;;9234:22:126;;;;9202:29;;-1:-1:-1;;;;;9234:5:126;;:20;;:22;;;;;;;;;;;;;;:5;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9202:54;;9266:28;9297:5;;;;;;;;;-1:-1:-1;;;;;9297:5:126;-1:-1:-1;;;;;9297:19:126;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9266:52;;9329;9343:16;9361:19;9329:13;:52::i;:::-;9391:50;9405:15;9422:18;9391:13;:50::i;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;26842:74:147;;;1398:17:2;26932:18:147;;;26925:34;1428:1:2;;1377:7;;26815:18:147;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;11956:792:135:-;335:4:102;12177:13:135;:36;;12169:73;;;;-1:-1:-1;;;12169:73:135;;36107:2:147;12169:73:135;;;36089:21:147;36146:2;36126:18;;;36119:30;36185:26;36165:18;;;36158:54;36229:18;;12169:73:135;;;;;;;;;12253:13;12269:28;12282:6;12290;12269:12;:28::i;:::-;12253:44;;12308:20;12345:5;12331:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12331:20:135;;12308:43;;12361:24;12402:5;12388:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12388:20:135;;12361:47;;12424:9;12419:253;12439:5;12435:1;:9;12419:253;;;12465:9;12477:26;12483:8;12493:1;12496:6;12477:5;:26::i;:::-;12529;;-1:-1:-1;;;12529:26:135;;-1:-1:-1;;;;;36449:55:147;;;12529:26:135;;;36431:74:147;36553:8;36541:21;;36521:18;;;36514:49;12465:38:135;;-1:-1:-1;12517:9:135;;12529:16;;;;;36404:18:147;;12529:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12517:38;;12579:2;12570:11;;:3;12574:1;12570:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12608:53;:1;12626:13;335:4:102;12608:17:135;:53::i;:::-;12595:7;12603:1;12595:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12451:221;;12446:3;;;;:::i;:::-;;;12419:253;;;-1:-1:-1;12682:14:135;;-1:-1:-1;;;12682:14:135;;-1:-1:-1;;;;;589:55:147;;12682:14:135;;;571:74:147;-1:-1:-1;;;;;;;;;;;12682:8:135;;;544:18:147;;12682:14:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;-1:-1:-1;;;12706:35:135;;-1:-1:-1;;;;;12706:11:135;;;-1:-1:-1;12706:11:135;;-1:-1:-1;12706:35:135;;12718:4;;12724:2;;12728:3;;12733:7;;12706:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;;;;;;;;;;;:::i;:::-;;12159:589;;;11956:792;;;;;;;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;589:55:147;;;27501:38:4;;;;571:74:147;;;;27501:38:4;;;;;;;;;;544:18:147;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;1186:392:115:-;646:2;1370:29:114;;;;;703:2:115;1370:29:114;;;;;1355:45;1525:46:115;;;1355:45:114;;1525:46:115;1516:55;1186:392;-1:-1:-1;;;;1186:392:115:o;3826:134:2:-;3924:29;;-1:-1:-1;;;3924:29:2;;-1:-1:-1;;;;;;;;;;;3924:11:2;;;:29;;3936:4;;3942:5;;3949:3;;3924:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13226:1698:126;13326:73;13335:10;:19;;;-1:-1:-1;;;;;13326:73:126;13356:13;:22;;;-1:-1:-1;;;;;13326:73:126;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13409;13418:10;:19;;;-1:-1:-1;;;;;13409:73:126;13439:13;:22;;;-1:-1:-1;;;;;13409:73:126;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13492:81;13501:10;:23;;;-1:-1:-1;;;;;13492:81:126;13526:13;:26;;;-1:-1:-1;;;;;13492:81:126;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;13583;13592:10;:23;;;-1:-1:-1;;;;;13583:81:126;13617:13;:26;;;-1:-1:-1;;;;;13583:81:126;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;13674:73;13683:10;:19;;;13674:73;;13704:13;:22;;;13674:73;;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;13757:85;13766:10;:25;;;-1:-1:-1;;;;;13757:85:126;13793:13;:28;;;-1:-1:-1;;;;;13757:85:126;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;13852;13861:10;:25;;;-1:-1:-1;;;;;13852:85:126;13888:13;:28;;;-1:-1:-1;;;;;13852:85:126;;;;;;;;;;;;;;;;;;:8;:85::i;:::-;13981:31;;;;;14056:34;;;;14110:24;;14136:25;;14101:81;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:81::i;:::-;14192:77;14201:2;:22;;;14192:77;;14225:3;:23;;;14192:77;;;;;;;;;;;;;;;;;;;:8;:77::i;:::-;14279:62;14288:2;:14;;;14279:62;;14304:3;:15;;;14279:62;;;;;;;;;;;;;;;;;;;:8;:62::i;:::-;14351:72;14360:2;:19;;;14351:72;;14381:3;:20;;;14351:72;;;;;;;;;;;;;;;;;;;:8;:72::i;:::-;14463:27;;;;;14530:30;;;;14580:17;;14599:18;;14571:68;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:68::i;:::-;14649:48;14658:2;:7;;;14649:48;;14667:3;:8;;;14649:48;;;;;;;;;;;;;;;;;;;:8;:48::i;:::-;14707:60;14716:2;:13;;;14707:60;;14731:3;:14;;;14707:60;;;;;;;;;;;;;;;;;;;:8;:60::i;:::-;14777:62;14786:2;:14;;;14777:62;;14802:3;:15;;;14777:62;;;;;;;;;;;;;;;;;;;:8;:62::i;:::-;14849:68;14858:2;:17;;;14849:68;;14877:3;:18;;;14849:68;;;;;;;;;;;;;;;;;;;:8;:68::i;2821:3507:135:-;2863:7;:45;;;;;;;;;;-1:-1:-1;;;;;2863:45:135;2969:7;;;;2961:28;-1:-1:-1;2961:33:135;2957:118;;3026:7;;3044:13;;-1:-1:-1;;;;;;;;;;;3010:7:135;;;3026;;;;-1:-1:-1;;;;;3026:7:135;;3044:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3036:27:135;;;;;;;;;;;;;;;;;;;;;;;;3010:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:118;3130:1;3116:16;;;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3116:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3109:4:135;:23;;-1:-1:-1;;;;;;3109:23:135;-1:-1:-1;;;;;3109:23:135;;;;;;;;;;3149:16;;3163:1;;3149:16;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3149:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3142:4:135;:23;;-1:-1:-1;;;;;;3142:23:135;-1:-1:-1;;;;;3142:23:135;;;;;;;;;;3182:16;;3196:1;;3182:16;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3182:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:4:135;:23;;-1:-1:-1;;;;;;3175:23:135;-1:-1:-1;;;;;3175:23:135;;;;;;;;;;3215:17;;3229:2;;3215:17;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3215:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3208:4:135;:24;;-1:-1:-1;;;;;;3208:24:135;-1:-1:-1;;;;;3208:24:135;;;;;;;;;;3249:17;;3263:2;;3249:17;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3249:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3242:4:135;:24;;-1:-1:-1;;;;;;3242:24:135;-1:-1:-1;;;;;3242:24:135;;;;;;;;;;3282:17;;3296:2;;3282:17;;;:::i;:::-;38108:4:147;38096:17;;;38078:36;;38066:2;38051:18;3282:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3276:3:135;:23;;-1:-1:-1;;;;;;3276:23:135;-1:-1:-1;;;;;3276:23:135;;;;;;;;;;3320:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3309:8:135;:37;;-1:-1:-1;;;;;;3309:37:135;-1:-1:-1;;;;;3309:37:135;;;;;;3397:7;;3380:37;;;-1:-1:-1;;;3380:37:135;;3309;3397:7;;;;;;3380:37;;;38736:74:147;38826:18;;;38819:30;;;;38885:1;38865:18;;;38858:29;38923:9;38903:18;;;38896:37;-1:-1:-1;;;;;;;;;;;3380:8:135;;;38950:19:147;;3380:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3444:4:135;;3427:31;;;-1:-1:-1;;;3427:31:135;;-1:-1:-1;;;;;3444:4:135;;;3427:31;;;;39192:74:147;;;;39282:18;;;39275:30;;;;39321:18;;;39314:29;-1:-1:-1;;;39359:18:147;;;39352:34;-1:-1:-1;;;;;;;;;;;3427:8:135;-1:-1:-1;3427:8:135;;-1:-1:-1;39403:19:147;;3427:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3485:4:135;;3468:31;;;-1:-1:-1;;;3468:31:135;;-1:-1:-1;;;;;3485:4:135;;;3468:31;;;;39645:74:147;;;;39735:18;;;39728:30;;;;39774:18;;;39767:29;-1:-1:-1;;;39812:18:147;;;39805:34;-1:-1:-1;;;;;;;;;;;3468:8:135;-1:-1:-1;3468:8:135;;-1:-1:-1;39856:19:147;;3468:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3526:4:135;;3509:31;;;-1:-1:-1;;;3509:31:135;;-1:-1:-1;;;;;3526:4:135;;;3509:31;;;;40098:74:147;;;;40188:18;;;40181:30;;;;40227:18;;;40220:29;-1:-1:-1;;;40265:18:147;;;40258:34;-1:-1:-1;;;;;;;;;;;3509:8:135;-1:-1:-1;3509:8:135;;-1:-1:-1;40309:19:147;;3509:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3567:4:135;;3550:31;;;-1:-1:-1;;;3550:31:135;;-1:-1:-1;;;;;3567:4:135;;;3550:31;;;;40551:74:147;;;;40641:18;;;40634:30;;;;40680:18;;;40673:29;-1:-1:-1;;;40718:18:147;;;40711:34;-1:-1:-1;;;;;;;;;;;3550:8:135;-1:-1:-1;3550:8:135;;-1:-1:-1;40762:19:147;;3550:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3608:4:135;;3591:31;;;-1:-1:-1;;;3591:31:135;;-1:-1:-1;;;;;3608:4:135;;;3591:31;;;;41004:74:147;;;;41094:18;;;41087:30;;;;41133:18;;;41126:29;-1:-1:-1;;;41171:18:147;;;41164:34;-1:-1:-1;;;;;;;;;;;3591:8:135;-1:-1:-1;3591:8:135;;-1:-1:-1;41215:19:147;;3591:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3649:3:135;;;3632:29;;;-1:-1:-1;;;3632:29:135;;-1:-1:-1;;;;;3649:3:135;;;3632:29;;;41457:74:147;41547:18;;;41540:30;;;;41606:1;41586:18;;;41579:29;-1:-1:-1;;;41624:18:147;;;41617:33;-1:-1:-1;;;;;;;;;;;3632:8:135;-1:-1:-1;3632:8:135;;-1:-1:-1;41667:19:147;;3632:29:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3688:8:135;;3671:39;;;-1:-1:-1;;;3671:39:135;;-1:-1:-1;;;;;3688:8:135;;;3671:39;;;41909:74:147;41999:18;;;41992:30;42058:1;42038:18;;;42031:29;42096:10;42076:18;;;42069:38;-1:-1:-1;;;;;;;;;;;3671:8:135;-1:-1:-1;3671:8:135;;-1:-1:-1;42124:19:147;;3671:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3753:8:135;:67;;-1:-1:-1;;;;;;3753:67:135;;;335:42:137;3753:67:135;;;;3830:9;:70;;;;;240:42:137;3830:70:135;;;-1:-1:-1;;3961:15:135;;3753:8;;3961:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3937:39;;4054:11;4068:3;4014:62;;;;;:::i;:::-;-1:-1:-1;;;;;42480:15:147;;;42462:34;;42532:15;;42527:2;42512:18;;42505:43;42584:2;42579;42564:18;;42557:30;;;-1:-1:-1;42603:18:147;;;42596:29;42657:3;42642:19;4014:62:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3986:7:135;:92;;-1:-1:-1;;;;;;3986:92:135;-1:-1:-1;;;;;3986:92:135;;;;;;;;;4118:40;;-1:-1:-1;;3986:92:135;4118:40;;;:::i;:::-;-1:-1:-1;;;;;589:55:147;;;571:74;;559:2;544:18;4118:40:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4266:7:135;;4194:81;;4088:70;;-1:-1:-1;4088:70:135;;4253:3;;-1:-1:-1;;;;;4266:7:135;;4194:81;;;:::i;:::-;-1:-1:-1;;;;;43212:15:147;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4194:81:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4168:23:135;:107;;-1:-1:-1;;;;;;4168:107:135;-1:-1:-1;;;;;4168:107:135;;;;;;;;;4285:7;;:85;;-1:-1:-1;;;4285:85:135;;4304:3;43669:15:147;;4285:85:135;;;43651:34:147;;;43701:18;;;43694:43;1892:4:135;43753:18:147;;;43746:34;43796:18;;;43789:43;;;;4285:7:135;;;;:18;;43562:19:147;;4285:85:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4412:7:135;;4401:19;;-1:-1:-1;;;;;4412:7:135;;;;-1:-1:-1;4401:19:135;;-1:-1:-1;4401:19:135;:::i;:::-;-1:-1:-1;;;;;589:55:147;;;571:74;;559:2;544:18;4401:19:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4380:18:135;:40;;-1:-1:-1;;;;;;4380:40:135;-1:-1:-1;;;;;4380:40:135;;;;;;;;;;4456:30;:28;:30::i;:::-;4496:42;1340:2;4496:24;:42::i;:::-;4609:7;;4618:9;;4646:7;;4596:60;;4574:19;;-1:-1:-1;;;;;4609:7:135;;;;4618:9;;;4609:7;4646;;;;4596:60;;;:::i;:::-;-1:-1:-1;;;;;43212:15:147;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4596:60:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4758:39:135;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4758:39:135;-1:-1:-1;;;4758:39:135;;;4700:98;;4574:82;;-1:-1:-1;4574:82:135;;4753:3;;4758:39;4700:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4666:6:135;:135;;-1:-1:-1;;;;;;4666:135:135;-1:-1:-1;;;;;4666:135:135;;;;;;;;;4880:9;;4912:7;;4846:113;;4880:9;;;;4912:7;;4666:135;4846:113;;;:::i;:::-;-1:-1:-1;;;;;43212:15:147;;;43194:34;;43264:15;;;43259:2;43244:18;;43237:43;43316:15;;;43311:2;43296:18;;43289:43;43121:2;43106:18;4846:113:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4837:6:135;:122;;-1:-1:-1;;;;;;4837:122:135;-1:-1:-1;;;;;4837:122:135;;;;;;5023:6;;5006:35;;;-1:-1:-1;;;5006:35:135;;5023:6;;;;5006:35;;;45646:74:147;45736:18;;;45729:30;;;;45795:1;45775:18;;;45768:29;45833:8;45813:18;;;45806:36;-1:-1:-1;;;;;;;;;;;5006:8:135;;;45859:19:147;;5006:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5068:6:135;;5051:35;;;-1:-1:-1;;;5051:35:135;;-1:-1:-1;;;;;5068:6:135;;;5051:35;;;46101:74:147;46191:18;;;46184:30;46250:1;46230:18;;;46223:29;46288:8;46268:18;;;46261:36;-1:-1:-1;;;;;;;;;;;5051:8:135;-1:-1:-1;5051:8:135;;-1:-1:-1;46314:19:147;;5051:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5113:7:135;;5096:37;;;-1:-1:-1;;;5096:37:135;;-1:-1:-1;;;;;5113:7:135;;;5096:37;;;46556:74:147;46646:18;;;46639:30;46705:1;46685:18;;;46678:29;46743:9;46723:18;;;46716:37;-1:-1:-1;;;;;;;;;;;5096:8:135;-1:-1:-1;5096:8:135;;-1:-1:-1;46770:19:147;;5096:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5160:18:135;;5143:59;;;-1:-1:-1;;;5143:59:135;;-1:-1:-1;;;;;5160:18:135;;;5143:59;;;47012:74:147;47102:18;;;47095:30;47161:2;47141:18;;;47134:30;47200:20;47180:18;;;47173:48;-1:-1:-1;;;;;;;;;;;5143:8:135;-1:-1:-1;5143:8:135;;-1:-1:-1;47238:19:147;;5143:59:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5253:8:135;;5236:39;;;-1:-1:-1;;;5236:39:135;;-1:-1:-1;;;;;5253:8:135;;;5236:39;;;47480:74:147;47570:18;;;47563:30;47629:1;47609:18;;;47602:29;47667:10;47647:18;;;47640:38;-1:-1:-1;;;;;;;;;;;5236:8:135;-1:-1:-1;5236:8:135;;-1:-1:-1;47695:19:147;;5236:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5302:9:135;;5285:41;;;-1:-1:-1;;;5285:41:135;;-1:-1:-1;;;;;5302:9:135;;;5285:41;;;47937:74:147;48027:18;;;48020:30;48086:1;48066:18;;;48059:29;48124:11;48104:18;;;48097:39;-1:-1:-1;;;;;;;;;;;5285:8:135;-1:-1:-1;5285:8:135;;-1:-1:-1;48153:19:147;;5285:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5374:7:135;;5398:8;;5374:53;;-1:-1:-1;;;5374:53:135;;-1:-1:-1;;;;;5398:8:135;;;5374:53;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5374:7:135;;;;;;-1:-1:-1;5374:15:135;;-1:-1:-1;26815:18:147;;5374:53:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5437:4:135;;5458:8;;5437:50;;-1:-1:-1;;;5437:50:135;;-1:-1:-1;;;;;5458:8:135;;;5437:50;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5437:4:135;;;:12;;26815:18:147;;5437:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5497:4:135;;5518:8;;5497:50;;-1:-1:-1;;;5497:50:135;;-1:-1:-1;;;;;5518:8:135;;;5497:50;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5497:4:135;;;:12;;26815:18:147;;5497:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5557:4:135;;5578:8;;5557:50;;-1:-1:-1;;;5557:50:135;;-1:-1:-1;;;;;5578:8:135;;;5557:50;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5557:4:135;;;:12;;26815:18:147;;5557:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5617:4:135;;5638:8;;5617:50;;-1:-1:-1;;;5617:50:135;;-1:-1:-1;;;;;5638:8:135;;;5617:50;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5617:4:135;;;:12;;26815:18:147;;5617:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5677:4:135;;5698:8;;5677:50;;-1:-1:-1;;;5677:50:135;;-1:-1:-1;;;;;5698:8:135;;;5677:50;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5677:4:135;;;:12;;26815:18:147;;5677:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5737:3:135;;;5757:8;;5737:49;;-1:-1:-1;;;5737:49:135;;-1:-1:-1;;;;;5757:8:135;;;5737:49;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;;;;5737:3:135;;:11;;26815:18:147;;5737:49:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5796:8:135;;5821;;5796:54;;-1:-1:-1;;;5796:54:135;;-1:-1:-1;;;;;5821:8:135;;;5796:54;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5796:8:135;;;:16;;26815:18:147;;5796:54:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5861:7:135;;5885:6;;5861:51;;-1:-1:-1;;;5861:51:135;;-1:-1:-1;;;;;5885:6:135;;;5861:51;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5861:7:135;;;;;;:15;;26815:18:147;;5861:51:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5922:4:135;;5943:6;;5922:48;;-1:-1:-1;;;5922:48:135;;-1:-1:-1;;;;;5943:6:135;;;5922:48;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5922:4:135;;;:12;;26815:18:147;;5922:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5980:4:135;;6001:6;;5980:48;;-1:-1:-1;;;5980:48:135;;-1:-1:-1;;;;;6001:6:135;;;5980:48;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;5980:4:135;;;:12;;26815:18:147;;5980:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6038:4:135;;6059:6;;6038:48;;-1:-1:-1;;;6038:48:135;;-1:-1:-1;;;;;6059:6:135;;;6038:48;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;6038:4:135;;;:12;;26815:18:147;;6038:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6096:4:135;;6117:6;;6096:48;;-1:-1:-1;;;6096:48:135;;-1:-1:-1;;;;;6117:6:135;;;6096:48;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;6096:4:135;;;:12;;26815:18:147;;6096:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6154:4:135;;6175:6;;6154:48;;-1:-1:-1;;;6154:48:135;;-1:-1:-1;;;;;6175:6:135;;;6154:48;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;6154:4:135;;;:12;;26815:18:147;;6154:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6212:3:135;;;6232:6;;6212:47;;-1:-1:-1;;;6212:47:135;;-1:-1:-1;;;;;6232:6:135;;;6212:47;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;;;;6212:3:135;;:11;;26815:18:147;;6212:47:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6269:8:135;;6294:6;;6269:52;;-1:-1:-1;;;6269:52:135;;-1:-1:-1;;;;;6294:6:135;;;6269:52;;;26842:74:147;-1:-1:-1;;26932:18:147;;;26925:34;6269:8:135;;;:16;;26815:18:147;;6269:52:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7855:160::-;7925:14;7961:47;7985:6;7993;1185:7;7961:23;:47::i;1610:948:104:-;1764:16;;1799:21;;;;-1:-1:-1;;;;;1740:43:104;;;;1795:62;;;-1:-1:-1;;;1822:35:104;1795:62;1871:10;:20;;;1867:60;;;-1:-1:-1;;;1893:34:104;1867:60;1941:10;:26;;;1937:73;;;-1:-1:-1;;;1969:41:104;1937:73;2024:10;:25;;;2020:71;;;-1:-1:-1;;;2051:40:104;2020:71;2105:10;:21;;;2101:62;;;-1:-1:-1;;;2128:35:104;2101:62;2177:10;:20;;;2173:60;;;-1:-1:-1;;;2199:34:104;2173:60;2247:10;:21;;;2243:62;;;-1:-1:-1;;;2270:35:104;2243:62;2319:10;:20;;;2315:60;;;-1:-1:-1;;;2341:34:104;2315:60;2389:10;:34;;;2385:79;;;-1:-1:-1;;;2425:39:104;2385:79;2478:10;:33;;;2474:77;;;-1:-1:-1;;;2513:38:104;2474:77;1610:948;;;:::o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;13228:134::-;13326:29;;-1:-1:-1;;;13326:29:2;;-1:-1:-1;;;;;;;;;;;13326:11:2;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;10208:135:117:-;10301:1;10282:20;;;;;10278:58;;10311:25;;-1:-1:-1;;;10311:25:117;;;;;;;;;;;3570:134:2;3668:29;;-1:-1:-1;;;3668:29:2;;-1:-1:-1;;;;;;;;;;;3668:11:2;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;1689:113::-;1771:24;;-1:-1:-1;;;1771:24:2;;-1:-1:-1;;;;;;;;;;;1771:13:2;;;:24;;1785:4;;1791:3;;1771:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8683:135:117;8776:1;8757:20;;;;;8753:58;;8786:25;;-1:-1:-1;;;8786:25:117;;;;;;;;;;;928:247:121;1019:14;1046:13;1061;1078:18;1091:1;1094;1078:12;:18::i;:::-;1045:51;;;;1114:54;1136:1;1139;1142:11;1155:5;1162;1114:21;:54::i;:::-;1107:61;928:247;-1:-1:-1;;;;;;928:247:121:o;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;6748:156;13421:143;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;6793:628:135:-;6864:7;;;;;-1:-1:-1;;;;;6864:7:135;6856:30;6852:66;;6888:7;;6910;;6888:30;;-1:-1:-1;;;6888:30:135;;-1:-1:-1;;;;;6888:7:135;6910;;;;;6888:30;;;571:74:147;6888:7:135;;;:21;;544:18:147;;6888:30:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6852:66;6940:4;;-1:-1:-1;;;;;6940:4:135;6932:27;6928:60;;6961:7;;6983:4;;6961:27;;-1:-1:-1;;;6961:27:135;;-1:-1:-1;;;;;6983:4:135;;;6961:27;;;571:74:147;6961:7:135;;;:21;;544:18:147;;6961:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:60;7010:4;;-1:-1:-1;;;;;7010:4:135;7002:27;6998:60;;7031:7;;7053:4;;7031:27;;-1:-1:-1;;;7031:27:135;;-1:-1:-1;;;;;7053:4:135;;;7031:27;;;571:74:147;7031:7:135;;;:21;;544:18:147;;7031:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6998:60;7080:4;;-1:-1:-1;;;;;7080:4:135;7072:27;7068:60;;7101:7;;7123:4;;7101:27;;-1:-1:-1;;;7101:27:135;;-1:-1:-1;;;;;7123:4:135;;;7101:27;;;571:74:147;7101:7:135;;;:21;;544:18:147;;7101:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7068:60;7150:4;;-1:-1:-1;;;;;7150:4:135;7142:27;7138:60;;7171:7;;7193:4;;7171:27;;-1:-1:-1;;;7171:27:135;;-1:-1:-1;;;;;7193:4:135;;;7171:27;;;571:74:147;7171:7:135;;;:21;;544:18:147;;7171:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:60;7220:4;;-1:-1:-1;;;;;7220:4:135;7212:27;7208:60;;7241:7;;7263:4;;7241:27;;-1:-1:-1;;;7241:27:135;;-1:-1:-1;;;;;7263:4:135;;;7241:27;;;571:74:147;7241:7:135;;;:21;;544:18:147;;7241:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208:60;7290:3;;-1:-1:-1;;;;;7290:3:135;7282:26;7278:58;;7310:7;;7332:3;;;7310:26;;-1:-1:-1;;;7310:26:135;;-1:-1:-1;;;;;7332:3:135;;;7310:26;;;571:74:147;7310:7:135;;;:21;;544:18:147;7310:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7278:58;7358:8;;-1:-1:-1;;;;;7358:8:135;7350:31;7346:68;;7383:7;;7405:8;;7383:31;;-1:-1:-1;;;7383:31:135;;-1:-1:-1;;;;;7405:8:135;;;7383:31;;;571:74:147;7383:7:135;;;:21;;544:18:147;;7383:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:422;7496:7;;:346;;-1:-1:-1;;;7496:346:135;;50423:6:147;50456:15;;7496:346:135;;;50438:34:147;1395:5:135;50488:18:147;;;50481:43;;;1455:2:135;50540:18:147;;;50533:43;1511:3:135;50592:18:147;;;50585:43;50644:19;;;50637:44;1639:6:135;50724:19:147;;;50717:44;1701:5:135;50777:19:147;;;50770:44;1774:7:135;50830:19:147;;;50823:44;7496:7:135;50883:19:147;;;50876:51;-1:-1:-1;;;;;7496:7:135;;;;:17;;50385:19:147;;7496:346:135;50064:869:147;8021:216:135;8118:14;8154:76;8188:6;8196;8204:7;1340:2;8154:33;:76::i;6192:547:121:-;6258:13;;-1:-1:-1;;6626:1:121;6623;6616:20;6665:1;6662;6658:9;6649:18;;6716:5;6712:2;6709:13;6701:5;6697:2;6693:14;6689:34;6680:43;;;6192:547;;;;;:::o;7180:3395::-;7330:14;7422:5;7431:1;7422:10;7418:3151;;7493:11;7485:5;:19;;;;;:::i;:::-;;7476:28;;7418:3151;;;7649:11;7640:5;:20;7636:66;;7669:33;;-1:-1:-1;;;7669:33:121;;;;;;;;;;;7636:66;7801:17;7936:11;7933:1;7930;7923:25;8515:1;8500:12;;:16;;8485:32;;8635:25;;;;;8467:15;8916;;;8912:29;;;8908:37;;;8050:20;;;8039:32;;;9045:15;;;8097:21;;;;8747:19;;;;9036:24;;;;;-1:-1:-1;;9431:1:121;9412;:15;;9411:21;;9675;;;9671:25;;9660:36;9748:21;;;9744:25;;9733:36;9822:21;;;9818:25;;9807:36;9896:21;;;9892:25;;9881:36;9970:21;;;9966:25;;9955:36;10045:21;;;10041:25;;;10030:36;10529:15;;7418:3151;7180:3395;;;;;;;:::o;15439:1484:9:-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;5095:25:147;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;5068:18:147;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;26860:55:147;;16424:32:9;;;26842:74:147;26932:18;;;26925:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;26815:18:147;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;54183:55:147;;16587:43:9;;;54165:74:147;54255:18;;;54248:34;;;;54298:18;;;54291:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;54138:18:147;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;54183:55:147;;16769:41:9;;;54165:74:147;54255:18;;;54248:34;;;;54298:18;;;54291:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;54138:18:147;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;54538:2:147;16824:61:9;;;54520:21:147;54577:2;54557:18;;;54550:30;54616:34;54596:18;;;54589:62;54687:21;54667:18;;;54660:49;54726:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;54336:415:147;16720:176:9;16905:11;16911:4;16905:5;:11::i;8243:257:135:-;8437:7;;:54;;-1:-1:-1;;;8437:54:135;;-1:-1:-1;;;;;55094:15:147;;;8437:54:135;;;55076:34:147;55146:15;;;55126:18;;;55119:43;55210:8;55198:21;;55178:18;;;55171:49;55268:6;55256:19;;55236:18;;;55229:47;8382:14:135;;8437:7;;:20;;54987:19:147;;8437:54:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;953:236:9:-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;11187:393::-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;;-1:-1:-1;11567:6:9;11187:393;-1:-1:-1;;11187:393:9:o;4249:2493::-;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;589:55:147;;4911:25:9;;;571:74:147;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;544:18:147;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;56770:2:147;4984:74:9;;;56752:21:147;56789:18;;;56782:30;;;;56848:34;56828:18;;;56821:62;56919:34;56899:18;;;56892:62;56971:19;;4984:74:9;56568:428:147;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;26860:55:147;;;;26842:74;;26947:2;26932:18;;26925:34;26830:2;26815:18;;26660:305;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;26860:55:147;;;26842:74;;26932:18;;;26925:34;26815:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;57248:55:147;;;57230:74;;-1:-1:-1;;;;;;57340:33:147;;;57320:18;;;57313:61;;;;57390:18;;;57383:34;57448:2;57433:18;;57426:34;57217:3;57202:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;57673:2:147;6418:171:9;;;57655:21:147;57712:2;57692:18;;;57685:30;57751:34;57731:18;;;57724:62;57822:17;57802:18;;;57795:45;57857:19;;6418:171:9;57471:411:147;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;26842:74:147;;;;26932:18;;;26925:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;26815:18:147;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;54165:74:147;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;54138:18:147;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;54165:74:147;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;54138:18:147;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;26842:74:147;;;;26932:18;;;26925:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;26815:18:147;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;54165:74:147;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;54138:18:147;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;54165:74:147;;;;54255:18;;;54248:34;;;54298:18;;;54291:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;54138:18:147;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:147:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:274;-1:-1:-1;;;;;284:10:147;;;296;;;280:27;327:20;;;;218:34;366:24;;;356:58;;394:18;;:::i;:::-;356:58;;146:274;;;;:::o;656:184::-;726:6;779:2;767:9;758:7;754:23;750:32;747:52;;;795:1;792;785:12;747:52;-1:-1:-1;818:16:147;;656:184;-1:-1:-1;656:184:147:o;845:125::-;910:9;;;931:10;;;928:36;;;944:18;;:::i;975:286::-;1033:6;1086:2;1074:9;1065:7;1061:23;1057:32;1054:52;;;1102:1;1099;1092:12;1054:52;1128:23;;-1:-1:-1;;;;;;1180:32:147;;1170:43;;1160:71;;1227:1;1224;1217:12;1458:681;1629:2;1681:21;;;1751:13;;1654:18;;;1773:22;;;1600:4;;1629:2;1852:15;;;;1826:2;1811:18;;;1600:4;1895:218;1909:6;1906:1;1903:13;1895:218;;;1974:13;;-1:-1:-1;;;;;1970:62:147;1958:75;;2088:15;;;;2053:12;;;;1931:1;1924:9;1895:218;;;-1:-1:-1;2130:3:147;;1458:681;-1:-1:-1;;;;;;1458:681:147:o;2144:250::-;2229:1;2239:113;2253:6;2250:1;2247:13;2239:113;;;2329:11;;;2323:18;2310:11;;;2303:39;2275:2;2268:10;2239:113;;;-1:-1:-1;;2386:1:147;2368:16;;2361:27;2144:250::o;2399:271::-;2441:3;2479:5;2473:12;2506:6;2501:3;2494:19;2522:76;2591:6;2584:4;2579:3;2575:14;2568:4;2561:5;2557:16;2522:76;:::i;:::-;2652:2;2631:15;-1:-1:-1;;2627:29:147;2618:39;;;;2659:4;2614:50;;2399:271;-1:-1:-1;;2399:271:147:o;2675:1765::-;2908:2;2960:21;;;3030:13;;2933:18;;;3052:22;;;2879:4;;2908:2;3093;;3111:18;;;;3148:1;3191:15;;;3176:31;;3172:40;;3235:15;;;2879:4;;3299:1112;3315:6;3310:3;3307:15;3299:1112;;;-1:-1:-1;;3384:22:147;;;3380:36;3368:49;;3440:13;;3527:9;;-1:-1:-1;;;;;3523:58:147;3508:74;;3621:11;;3615:18;3653:15;;;3646:27;;;3734:19;;3480:15;;;3766:24;;;3947:21;;;;3813:2;3895:17;;;3883:30;;3879:39;;;3837:15;;;;3992:1;4006:296;4022:8;4017:3;4014:17;4006:296;;;4128:2;4124:7;4115:6;4107;4103:19;4099:33;4092:5;4085:48;4160:42;4195:6;4184:8;4178:15;4160:42;:::i;:::-;4231:17;;;;4150:52;-1:-1:-1;4274:14:147;;;;4050:1;4041:11;4006:296;;;-1:-1:-1;;;4389:12:147;;;;4325:6;-1:-1:-1;;4354:15:147;;;;3341:1;3332:11;3299:1112;;;-1:-1:-1;4428:6:147;;2675:1765;-1:-1:-1;;;;;;;;;;2675:1765:147:o;4445:114::-;4529:4;4522:5;4518:16;4511:5;4508:27;4498:55;;4549:1;4546;4539:12;4564:380;4628:6;4636;4689:2;4677:9;4668:7;4664:23;4660:32;4657:52;;;4705:1;4702;4695:12;4657:52;4744:9;4731:23;4763:29;4786:5;4763:29;:::i;:::-;4811:5;-1:-1:-1;4868:2:147;4853:18;;4840:32;4881:31;4840:32;4881:31;:::i;:::-;4931:7;4921:17;;;4564:380;;;;;:::o;5131:461::-;5183:3;5221:5;5215:12;5248:6;5243:3;5236:19;5274:4;5303:2;5298:3;5294:12;5287:19;;5340:2;5333:5;5329:14;5361:1;5371:196;5385:6;5382:1;5379:13;5371:196;;;5450:13;;-1:-1:-1;;;;;;5446:40:147;5434:53;;5507:12;;;;5542:15;;;;5407:1;5400:9;5371:196;;;-1:-1:-1;5583:3:147;;5131:461;-1:-1:-1;;;;;5131:461:147:o;5597:1185::-;5815:4;5844:2;5884;5873:9;5869:18;5914:2;5903:9;5896:21;5937:6;5972;5966:13;6003:6;5995;5988:22;6029:2;6019:12;;6062:2;6051:9;6047:18;6040:25;;6124:2;6114:6;6111:1;6107:14;6096:9;6092:30;6088:39;6162:2;6154:6;6150:15;6183:1;6193:560;6207:6;6204:1;6201:13;6193:560;;;6272:22;;;-1:-1:-1;;6268:36:147;6256:49;;6328:13;;6374:9;;6396:18;;;6441:48;6473:15;;;6374:9;6441:48;:::i;:::-;6530:11;;;6524:18;6579:19;;;6562:15;;;6555:44;6524:18;6427:62;-1:-1:-1;6622:51:147;6427:62;6524:18;6622:51;:::i;:::-;6731:12;;;;6612:61;-1:-1:-1;;;6696:15:147;;;;6229:1;6222:9;6193:560;;;-1:-1:-1;6770:6:147;;5597:1185;-1:-1:-1;;;;;;;;5597:1185:147:o;6787:803::-;6949:4;6978:2;7018;7007:9;7003:18;7048:2;7037:9;7030:21;7071:6;7106;7100:13;7137:6;7129;7122:22;7175:2;7164:9;7160:18;7153:25;;7237:2;7227:6;7224:1;7220:14;7209:9;7205:30;7201:39;7187:53;;7275:2;7267:6;7263:15;7296:1;7306:255;7320:6;7317:1;7314:13;7306:255;;;7413:2;7409:7;7397:9;7389:6;7385:22;7381:36;7376:3;7369:49;7441:40;7474:6;7465;7459:13;7441:40;:::i;:::-;7431:50;-1:-1:-1;7539:12:147;;;;7504:15;;;;7342:1;7335:9;7306:255;;;-1:-1:-1;7578:6:147;;6787:803;-1:-1:-1;;;;;;;6787:803:147:o;7595:119::-;7680:8;7673:5;7669:20;7662:5;7659:31;7649:59;;7704:1;7701;7694:12;7719:450;7793:6;7801;7809;7862:2;7850:9;7841:7;7837:23;7833:32;7830:52;;;7878:1;7875;7868:12;7830:52;7917:9;7904:23;7936:30;7960:5;7936:30;:::i;:::-;7985:5;-1:-1:-1;8037:2:147;8022:18;;8009:32;;-1:-1:-1;8093:2:147;8078:18;;8065:32;8106:31;8065:32;8106:31;:::i;:::-;8156:7;8146:17;;;7719:450;;;;;:::o;8369:1096::-;8571:4;8600:2;8640;8629:9;8625:18;8670:2;8659:9;8652:21;8693:6;8728;8722:13;8759:6;8751;8744:22;8785:2;8775:12;;8818:2;8807:9;8803:18;8796:25;;8880:2;8870:6;8867:1;8863:14;8852:9;8848:30;8844:39;8918:2;8910:6;8906:15;8939:1;8949:487;8963:6;8960:1;8957:13;8949:487;;;9028:22;;;-1:-1:-1;;9024:36:147;9012:49;;9084:13;;9129:9;;-1:-1:-1;;;;;9125:58:147;9110:74;;9223:11;;9217:18;9255:15;;;9248:27;;;9298:58;9340:15;;;9217:18;9298:58;:::i;:::-;9414:12;;;;9288:68;-1:-1:-1;;9379:15:147;;;;8985:1;8978:9;8949:487;;9470:154;-1:-1:-1;;;;;9549:5:147;9545:54;9538:5;9535:65;9525:93;;9614:1;9611;9604:12;9629:1099;9762:6;9770;9778;9786;9794;9802;9810;9818;9871:3;9859:9;9850:7;9846:23;9842:33;9839:53;;;9888:1;9885;9878:12;9839:53;9927:9;9914:23;9946:31;9971:5;9946:31;:::i;:::-;9996:5;-1:-1:-1;10053:2:147;10038:18;;10025:32;10066:33;10025:32;10066:33;:::i;:::-;10118:7;-1:-1:-1;10177:2:147;10162:18;;10149:32;10190:33;10149:32;10190:33;:::i;:::-;10242:7;-1:-1:-1;10301:2:147;10286:18;;10273:32;10314;10273;10314;:::i;:::-;10365:7;-1:-1:-1;10419:3:147;10404:19;;10391:33;;-1:-1:-1;10471:3:147;10456:19;;10443:33;;-1:-1:-1;10528:3:147;10513:19;;10500:33;10542:31;10500:33;10542:31;:::i;:::-;10592:7;-1:-1:-1;10651:3:147;10636:19;;10623:33;10665:31;10623:33;10665:31;:::i;:::-;10715:7;10705:17;;;9629:1099;;;;;;;;;;;:::o;10733:117::-;10818:6;10811:5;10807:18;10800:5;10797:29;10787:57;;10840:1;10837;10830:12;10855:245;10913:6;10966:2;10954:9;10945:7;10941:23;10937:32;10934:52;;;10982:1;10979;10972:12;10934:52;11021:9;11008:23;11040:30;11064:5;11040:30;:::i;11105:1030::-;11229:6;11237;11245;11253;11261;11269;11277;11330:3;11318:9;11309:7;11305:23;11301:33;11298:53;;;11347:1;11344;11337:12;11298:53;11386:9;11373:23;11405:31;11430:5;11405:31;:::i;:::-;11455:5;-1:-1:-1;11512:2:147;11497:18;;11484:32;11525:33;11484:32;11525:33;:::i;:::-;11577:7;-1:-1:-1;11636:2:147;11621:18;;11608:32;11649:33;11608:32;11649:33;:::i;:::-;11701:7;-1:-1:-1;11760:2:147;11745:18;;11732:32;11773;11732;11773;:::i;:::-;11824:7;-1:-1:-1;11878:3:147;11863:19;;11850:33;;-1:-1:-1;11935:3:147;11920:19;;11907:33;11949:31;11907:33;11949:31;:::i;:::-;11999:7;-1:-1:-1;12058:3:147;12043:19;;12030:33;12072:31;12030:33;12072:31;:::i;:::-;12122:7;12112:17;;;11105:1030;;;;;;;;;;:::o;12140:136::-;12218:13;;12240:30;12218:13;12240:30;:::i;12281:249::-;12350:6;12403:2;12391:9;12382:7;12378:23;12374:32;12371:52;;;12419:1;12416;12409:12;12371:52;12451:9;12445:16;12470:30;12494:5;12470:30;:::i;12535:127::-;12596:10;12591:3;12587:20;12584:1;12577:31;12627:4;12624:1;12617:15;12651:4;12648:1;12641:15;12667:127;12728:10;12723:3;12719:20;12716:1;12709:31;12759:4;12756:1;12749:15;12783:4;12780:1;12773:15;13381:164;13457:13;;13506;;13499:21;13489:32;;13479:60;;13535:1;13532;13525:12;13550:202;13617:6;13670:2;13658:9;13649:7;13645:23;13641:32;13638:52;;;13686:1;13683;13676:12;13638:52;13709:37;13736:9;13709:37;:::i;13757:435::-;13810:3;13848:5;13842:12;13875:6;13870:3;13863:19;13901:4;13930:2;13925:3;13921:12;13914:19;;13967:2;13960:5;13956:14;13988:1;13998:169;14012:6;14009:1;14006:13;13998:169;;;14073:13;;14061:26;;14107:12;;;;14142:15;;;;14034:1;14027:9;13998:169;;14197:498;14411:4;-1:-1:-1;;;;;14521:2:147;14513:6;14509:15;14498:9;14491:34;14561:2;14556;14545:9;14541:18;14534:30;14581:56;14633:2;14622:9;14618:18;14610:6;14581:56;:::i;:::-;14573:64;;14685:2;14677:6;14673:15;14668:2;14657:9;14653:18;14646:43;;14197:498;;;;;;:::o;14700:255::-;14772:2;14766:9;14814:6;14802:19;;14851:18;14836:34;;14872:22;;;14833:62;14830:88;;;14898:18;;:::i;:::-;14934:2;14927:22;14700:255;:::o;14960:275::-;15031:2;15025:9;15096:2;15077:13;;-1:-1:-1;;15073:27:147;15061:40;;15131:18;15116:34;;15152:22;;;15113:62;15110:88;;;15178:18;;:::i;:::-;15214:2;15207:22;14960:275;;-1:-1:-1;14960:275:147:o;15240:183::-;15300:4;15333:18;15325:6;15322:30;15319:56;;;15355:18;;:::i;:::-;-1:-1:-1;15400:1:147;15396:14;15412:4;15392:25;;15240:183::o;15428:1003::-;15541:6;15549;15557;15610:2;15598:9;15589:7;15585:23;15581:32;15578:52;;;15626:1;15623;15616:12;15578:52;15655:9;15649:16;15639:26;;15684:2;15726;15715:9;15711:18;15705:25;15695:35;;15774:2;15763:9;15759:18;15753:25;15801:18;15793:6;15790:30;15787:50;;;15833:1;15830;15823:12;15787:50;15856:22;;15909:4;15901:13;;15897:27;-1:-1:-1;15887:55:147;;15938:1;15935;15928:12;15887:55;15967:2;15961:9;15990:60;16006:43;16046:2;16006:43;:::i;:::-;15990:60;:::i;:::-;16084:15;;;16166:1;16162:10;;;;16154:19;;16150:28;;;16115:12;;;;16190:19;;;16187:39;;;16222:1;16219;16212:12;16187:39;16246:11;;;;16266:135;16282:6;16277:3;16274:15;16266:135;;;16348:10;;16336:23;;16299:12;;;;16379;;;;16266:135;;;16420:5;16410:15;;;;;;;15428:1003;;;;;:::o;16436:192::-;16515:13;;-1:-1:-1;;;;;16557:46:147;;16547:57;;16537:85;;16618:1;16615;16608:12;16633:169;16711:13;;16764:12;16753:24;;16743:35;;16733:63;;16792:1;16789;16782:12;16807:839;16885:5;16933:4;16921:9;16916:3;16912:19;16908:30;16905:50;;;16951:1;16948;16941:12;16905:50;16984:2;16978:9;17026:4;17018:6;17014:17;17097:6;17085:10;17082:22;17061:18;17049:10;17046:34;17043:62;17040:88;;;17108:18;;:::i;:::-;17148:10;17144:2;17137:22;;17177:6;17168:15;;17213:9;17207:16;17232:32;17256:7;17232:32;:::i;:::-;17273:23;;17341:2;17326:18;;17320:25;17354:32;17320:25;17354:32;:::i;:::-;17414:2;17402:15;;17395:32;17472:2;17457:18;;17451:25;17485:32;17451:25;17485:32;:::i;:::-;17545:2;17533:15;;17526:32;17591:48;17635:2;17620:18;;17591:48;:::i;:::-;17586:2;17578:6;17574:15;17567:73;;16807:839;;;;:::o;17651:918::-;17725:5;17773:4;17761:9;17756:3;17752:19;17748:30;17745:50;;;17791:1;17788;17781:12;17745:50;17824:2;17818:9;17866:4;17858:6;17854:17;17937:6;17925:10;17922:22;17901:18;17889:10;17886:34;17883:62;17880:88;;;17948:18;;:::i;:::-;17988:10;17984:2;17977:22;;18017:6;18008:15;;18053:9;18047:16;18072:31;18095:7;18072:31;:::i;:::-;18112:23;;18180:2;18165:18;;18159:25;18193:32;18159:25;18193:32;:::i;:::-;18253:2;18241:15;;18234:32;18311:2;18296:18;;18290:25;18324:32;18290:25;18324:32;:::i;:::-;18384:2;18372:15;;18365:32;18430:48;18474:2;18459:18;;18430:48;:::i;:::-;18425:2;18417:6;18413:15;18406:73;18513:49;18557:3;18546:9;18542:19;18513:49;:::i;:::-;18507:3;18499:6;18495:16;18488:75;;17651:918;;;;:::o;18574:1028::-;18668:6;18721:3;18709:9;18700:7;18696:23;18692:33;18689:53;;;18738:1;18735;18728:12;18689:53;18764:22;;:::i;:::-;18809:40;18839:9;18809:40;:::i;:::-;18802:5;18795:55;18882:49;18927:2;18916:9;18912:18;18882:49;:::i;:::-;18877:2;18870:5;18866:14;18859:73;18964:49;19009:2;18998:9;18994:18;18964:49;:::i;:::-;18959:2;18952:5;18948:14;18941:73;19046:49;19091:2;19080:9;19076:18;19046:49;:::i;:::-;19041:2;19034:5;19030:14;19023:73;19129:49;19173:3;19162:9;19158:19;19129:49;:::i;:::-;19123:3;19116:5;19112:15;19105:74;19212:50;19257:3;19246:9;19242:19;19212:50;:::i;:::-;19206:3;19199:5;19195:15;19188:75;19296:50;19341:3;19330:9;19326:19;19296:50;:::i;:::-;19290:3;19283:5;19279:15;19272:75;19380:79;19451:7;19445:3;19434:9;19430:19;19380:79;:::i;:::-;19374:3;19367:5;19363:15;19356:104;19496:75;19563:7;19557:3;19546:9;19542:19;19496:75;:::i;:::-;19487:6;19476:18;;19469:103;19480:5;18574:1028;-1:-1:-1;;;18574:1028:147:o;19607:704::-;19899:4;-1:-1:-1;;;;;20009:2:147;20001:6;19997:15;19986:9;19979:34;20061:2;20053:6;20049:15;20044:2;20033:9;20029:18;20022:43;;20101:3;20096:2;20085:9;20081:18;20074:31;20128:57;20180:3;20169:9;20165:19;20157:6;20128:57;:::i;:::-;20233:9;20225:6;20221:22;20216:2;20205:9;20201:18;20194:50;20261:44;20298:6;20290;20261:44;:::i;:::-;20253:52;19607:704;-1:-1:-1;;;;;;;19607:704:147:o;20316:659::-;20381:5;20434:3;20427:4;20419:6;20415:17;20411:27;20401:55;;20452:1;20449;20442:12;20401:55;20481:6;20475:13;20507:4;20531:60;20547:43;20587:2;20547:43;:::i;20531:60::-;20625:15;;;20711:1;20707:10;;;;20695:23;;20691:32;;;20656:12;;;;20735:15;;;20732:35;;;20763:1;20760;20753:12;20732:35;20799:2;20791:6;20787:15;20811:135;20827:6;20822:3;20819:15;20811:135;;;20893:10;;20881:23;;20924:12;;;;20844;;20811:135;;;-1:-1:-1;20964:5:147;20316:659;-1:-1:-1;;;;;;20316:659:147:o;20980:363::-;21075:6;21128:2;21116:9;21107:7;21103:23;21099:32;21096:52;;;21144:1;21141;21134:12;21096:52;21177:9;21171:16;21210:18;21202:6;21199:30;21196:50;;;21242:1;21239;21232:12;21196:50;21265:72;21329:7;21320:6;21309:9;21305:22;21265:72;:::i;21348:390::-;21423:5;21457:18;21449:6;21446:30;21443:56;;;21479:18;;:::i;:::-;21517:57;21562:2;21541:15;;-1:-1:-1;;21537:29:147;21568:4;21533:40;21517:57;:::i;:::-;21508:66;;21597:6;21590:5;21583:21;21637:3;21628:6;21623:3;21619:16;21616:25;21613:45;;;21654:1;21651;21644:12;21613:45;21667:65;21725:6;21718:4;21711:5;21707:16;21702:3;21667:65;:::i;21743:457::-;21822:6;21875:2;21863:9;21854:7;21850:23;21846:32;21843:52;;;21891:1;21888;21881:12;21843:52;21924:9;21918:16;21957:18;21949:6;21946:30;21943:50;;;21989:1;21986;21979:12;21943:50;22012:22;;22065:4;22057:13;;22053:27;-1:-1:-1;22043:55:147;;22094:1;22091;22084:12;22043:55;22117:77;22186:7;22181:2;22175:9;22170:2;22166;22162:11;22117:77;:::i;22205:817::-;22557:4;-1:-1:-1;;;;;22667:2:147;22659:6;22655:15;22644:9;22637:34;22719:2;22711:6;22707:15;22702:2;22691:9;22687:18;22680:43;22771:2;22763:6;22759:15;22754:2;22743:9;22739:18;22732:43;;22811:3;22806:2;22795:9;22791:18;22784:31;22838:57;22890:3;22879:9;22875:19;22867:6;22838:57;:::i;:::-;22944:9;22936:6;22932:22;22926:3;22915:9;22911:19;22904:51;22972:44;23009:6;23001;22972:44;:::i;23518:633::-;23776:4;-1:-1:-1;;;;;23886:2:147;23878:6;23874:15;23863:9;23856:34;23938:2;23930:6;23926:15;23921:2;23910:9;23906:18;23899:43;;23990:6;23982;23978:19;23973:2;23962:9;23958:18;23951:47;24034:6;24029:2;24018:9;24014:18;24007:34;24078:3;24072;24061:9;24057:19;24050:32;24099:46;24140:3;24129:9;24125:19;24117:6;24099:46;:::i;24877:338::-;-1:-1:-1;;;;;25056:6:147;25052:55;25041:9;25034:74;25144:2;25139;25128:9;25124:18;25117:30;25015:4;25164:45;25205:2;25194:9;25190:18;25182:6;25164:45;:::i;25922:127::-;25983:10;25978:3;25974:20;25971:1;25964:31;26014:4;26011:1;26004:15;26038:4;26035:1;26028:15;26054:216;26094:1;-1:-1:-1;;;;;26181:2:147;26178:1;26174:10;26203:3;26193:37;;26210:18;;:::i;:::-;26248:10;;26244:20;;;;;26054:216;-1:-1:-1;;26054:216:147:o;26275:380::-;26354:1;26350:12;;;;26397;;;26418:61;;26472:4;26464:6;26460:17;26450:27;;26418:61;26525:2;26517:6;26514:14;26494:18;26491:38;26488:161;;26571:10;26566:3;26562:20;26559:1;26552:31;26606:4;26603:1;26596:15;26634:4;26631:1;26624:15;26488:161;;26275:380;;;:::o;26970:120::-;27010:1;27036;27026:35;;27041:18;;:::i;:::-;-1:-1:-1;27075:9:147;;26970:120::o;29396:378::-;29484:6;29492;29500;29553:2;29541:9;29532:7;29528:23;29524:32;29521:52;;;29569:1;29566;29559:12;29521:52;29592:40;29622:9;29592:40;:::i;:::-;29582:50;;29651:49;29696:2;29685:9;29681:18;29651:49;:::i;:::-;29641:59;;29719:49;29764:2;29753:9;29749:18;29719:49;:::i;:::-;29709:59;;29396:378;;;;;:::o;30296:148::-;30384:4;30363:12;;;30377;;;30359:31;;30402:13;;30399:39;;;30418:18;;:::i;30449:151::-;30539:4;30532:12;;;30518;;;30514:31;;30557:14;;30554:40;;;30574:18;;:::i;30605:409::-;-1:-1:-1;;;;;30812:6:147;30808:55;30797:9;30790:74;30900:6;30895:2;30884:9;30880:18;30873:34;30943:2;30938;30927:9;30923:18;30916:30;30771:4;30963:45;31004:2;30993:9;30989:18;30981:6;30963:45;:::i;31463:293::-;31542:6;31550;31603:2;31591:9;31582:7;31578:23;31574:32;31571:52;;;31619:1;31616;31609:12;31571:52;31642:40;31672:9;31642:40;:::i;:::-;31632:50;;31701:49;31746:2;31735:9;31731:18;31701:49;:::i;:::-;31691:59;;31463:293;;;;;:::o;31761:128::-;31828:9;;;31849:11;;;31846:37;;;31863:18;;:::i;32313:168::-;32386:9;;;32417;;32434:15;;;32428:22;;32414:37;32404:71;;32455:18;;:::i;32977:267::-;33063:6;33116:2;33104:9;33095:7;33091:23;33087:32;33084:52;;;33132:1;33129;33122:12;33084:52;33164:9;33158:16;33183:31;33208:5;33183:31;:::i;33249:135::-;33288:3;33309:17;;;33306:43;;33329:18;;:::i;:::-;-1:-1:-1;33376:1:147;33365:13;;33249:135::o;34372:634::-;34502:6;34510;34518;34526;34534;34542;34550;34558;34611:3;34599:9;34590:7;34586:23;34582:33;34579:53;;;34628:1;34625;34618:12;34579:53;34657:9;34651:16;34641:26;;34707:2;34696:9;34692:18;34686:25;34676:35;;34751:2;34740:9;34736:18;34730:25;34720:35;;34795:2;34784:9;34780:18;34774:25;34764:35;;34839:3;34828:9;34824:19;34818:26;34808:36;;34884:3;34873:9;34869:19;34863:26;34853:36;;34929:3;34918:9;34914:19;34908:26;34898:36;;34953:47;34995:3;34984:9;34980:19;34953:47;:::i;:::-;34943:57;;34372:634;;;;;;;;;;;:::o;35011:587::-;35269:4;-1:-1:-1;;;;;35379:2:147;35371:6;35367:15;35356:9;35349:34;35431:2;35423:6;35419:15;35414:2;35403:9;35399:18;35392:43;;35471:3;35466:2;35455:9;35451:18;35444:31;35492:57;35544:3;35533:9;35529:19;35521:6;35492:57;:::i;:::-;35484:65;;35585:6;35580:2;35569:9;35565:18;35558:34;35011:587;;;;;;;:::o;37267:287::-;37396:3;37434:6;37428:13;37450:66;37509:6;37504:3;37497:4;37489:6;37485:17;37450:66;:::i;:::-;37532:16;;;;;37267:287;-1:-1:-1;;37267:287:147:o;37559:362::-;37764:6;37753:9;37746:25;37807:6;37802:2;37791:9;37787:18;37780:34;37850:2;37845;37834:9;37830:18;37823:30;37727:4;37870:45;37911:2;37900:9;37896:18;37888:6;37870:45;:::i;44570:447::-;44744:4;-1:-1:-1;;;;;44854:2:147;44846:6;44842:15;44831:9;44824:34;44906:2;44898:6;44894:15;44889:2;44878:9;44874:18;44867:43;;44946:2;44941;44930:9;44926:18;44919:30;44966:45;45007:2;44996:9;44992:18;44984:6;44966:45;:::i;48996:301::-;49181:6;49174:14;49167:22;49156:9;49149:41;49226:2;49221;49210:9;49206:18;49199:30;49130:4;49246:45;49287:2;49276:9;49272:18;49264:6;49246:45;:::i;50938:383::-;51095:3;51133:6;51127:13;51149:66;51208:6;51203:3;51196:4;51188:6;51184:17;51149:66;:::i;:::-;51237:16;;;;51262:21;;;-1:-1:-1;51310:4:147;51299:16;;50938:383;-1:-1:-1;50938:383:147:o;51326:422::-;51415:1;51458:5;51415:1;51472:270;51493:7;51483:8;51480:21;51472:270;;;51552:4;51548:1;51544:6;51540:17;51534:4;51531:27;51528:53;;;51561:18;;:::i;:::-;51611:7;51601:8;51597:22;51594:55;;;51631:16;;;;51594:55;51710:22;;;;51670:15;;;;51472:270;;;51476:3;51326:422;;;;;:::o;51753:806::-;51802:5;51832:8;51822:80;;-1:-1:-1;51873:1:147;51887:5;;51822:80;51921:4;51911:76;;-1:-1:-1;51958:1:147;51972:5;;51911:76;52003:4;52021:1;52016:59;;;;52089:1;52084:130;;;;51996:218;;52016:59;52046:1;52037:10;;52060:5;;;52084:130;52121:3;52111:8;52108:17;52105:43;;;52128:18;;:::i;:::-;-1:-1:-1;;52184:1:147;52170:16;;52199:5;;51996:218;;52298:2;52288:8;52285:16;52279:3;52273:4;52270:13;52266:36;52260:2;52250:8;52247:16;52242:2;52236:4;52233:12;52229:35;52226:77;52223:159;;;-1:-1:-1;52335:19:147;;;52367:5;;52223:159;52414:34;52439:8;52433:4;52414:34;:::i;:::-;52484:6;52480:1;52476:6;52472:19;52463:7;52460:32;52457:58;;;52495:18;;:::i;:::-;52533:20;;51753:806;-1:-1:-1;;;51753:806:147:o;52564:131::-;52624:5;52653:36;52680:8;52674:4;52653:36;:::i;53163:570::-;53425:34;53420:3;53413:47;53490:34;53485:2;53480:3;53476:12;53469:56;53555:12;53550:2;53545:3;53541:12;53534:34;53395:3;53597:6;53591:13;53613:73;53679:6;53674:2;53669:3;53665:12;53660:2;53652:6;53648:15;53613:73;:::i;:::-;53706:16;;;;53724:2;53702:25;;53163:570;-1:-1:-1;;53163:570:147:o;53738:220::-;53887:2;53876:9;53869:21;53850:4;53907:45;53948:2;53937:9;53933:18;53925:6;53907:45;:::i;55560:384::-;-1:-1:-1;;;;;;55745:33:147;;55733:46;;55802:13;;55715:3;;55824:74;55802:13;55887:1;55878:11;;55871:4;55859:17;;55824:74;:::i;:::-;55918:16;;;;55936:1;55914:24;;55560:384;-1:-1:-1;;;55560:384:147:o;55949:614::-;56078:6;56086;56139:2;56127:9;56118:7;56114:23;56110:32;56107:52;;;56155:1;56152;56145:12;56107:52;56188:9;56182:16;56217:18;56258:2;56250:6;56247:14;56244:34;;;56274:1;56271;56264:12;56244:34;56297:72;56361:7;56352:6;56341:9;56337:22;56297:72;:::i;:::-;56287:82;;56415:2;56404:9;56400:18;56394:25;56378:41;;56444:2;56434:8;56431:16;56428:36;;;56460:1;56457;56450:12;56428:36;;56483:74;56549:7;56538:8;56527:9;56523:24;56483:74;:::i;:::-;56473:84;;;55949:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "99509": [
        {
          "start": 4180,
          "length": 32
        },
        {
          "start": 8367,
          "length": 32
        },
        {
          "start": 8613,
          "length": 32
        },
        {
          "start": 8880,
          "length": 32
        },
        {
          "start": 9208,
          "length": 32
        },
        {
          "start": 9366,
          "length": 32
        },
        {
          "start": 9659,
          "length": 32
        },
        {
          "start": 10130,
          "length": 32
        },
        {
          "start": 10365,
          "length": 32
        },
        {
          "start": 10521,
          "length": 32
        },
        {
          "start": 10920,
          "length": 32
        },
        {
          "start": 20879,
          "length": 32
        },
        {
          "start": 21125,
          "length": 32
        },
        {
          "start": 21392,
          "length": 32
        },
        {
          "start": 21720,
          "length": 32
        },
        {
          "start": 21878,
          "length": 32
        },
        {
          "start": 22194,
          "length": 32
        },
        {
          "start": 22848,
          "length": 32
        },
        {
          "start": 23004,
          "length": 32
        },
        {
          "start": 38612,
          "length": 32
        },
        {
          "start": 38833,
          "length": 32
        },
        {
          "start": 38997,
          "length": 32
        },
        {
          "start": 39416,
          "length": 32
        }
      ],
      "99517": [
        {
          "start": 1679,
          "length": 32
        },
        {
          "start": 1744,
          "length": 32
        },
        {
          "start": 1813,
          "length": 32
        },
        {
          "start": 2238,
          "length": 32
        },
        {
          "start": 2690,
          "length": 32
        },
        {
          "start": 3206,
          "length": 32
        },
        {
          "start": 3239,
          "length": 32
        },
        {
          "start": 3272,
          "length": 32
        },
        {
          "start": 3581,
          "length": 32
        },
        {
          "start": 3614,
          "length": 32
        },
        {
          "start": 3647,
          "length": 32
        },
        {
          "start": 5089,
          "length": 32
        },
        {
          "start": 5383,
          "length": 32
        },
        {
          "start": 5541,
          "length": 32
        },
        {
          "start": 5826,
          "length": 32
        },
        {
          "start": 6420,
          "length": 32
        },
        {
          "start": 6576,
          "length": 32
        },
        {
          "start": 7203,
          "length": 32
        },
        {
          "start": 7460,
          "length": 32
        },
        {
          "start": 8914,
          "length": 32
        },
        {
          "start": 9400,
          "length": 32
        },
        {
          "start": 9693,
          "length": 32
        },
        {
          "start": 9891,
          "length": 32
        },
        {
          "start": 10555,
          "length": 32
        },
        {
          "start": 10681,
          "length": 32
        },
        {
          "start": 11234,
          "length": 32
        },
        {
          "start": 11544,
          "length": 32
        },
        {
          "start": 11692,
          "length": 32
        },
        {
          "start": 11949,
          "length": 32
        },
        {
          "start": 12163,
          "length": 32
        },
        {
          "start": 12380,
          "length": 32
        },
        {
          "start": 12643,
          "length": 32
        },
        {
          "start": 13275,
          "length": 32
        },
        {
          "start": 13458,
          "length": 32
        },
        {
          "start": 13746,
          "length": 32
        },
        {
          "start": 14139,
          "length": 32
        },
        {
          "start": 14360,
          "length": 32
        },
        {
          "start": 14693,
          "length": 32
        },
        {
          "start": 15005,
          "length": 32
        },
        {
          "start": 15922,
          "length": 32
        },
        {
          "start": 16105,
          "length": 32
        },
        {
          "start": 16388,
          "length": 32
        },
        {
          "start": 16781,
          "length": 32
        },
        {
          "start": 16996,
          "length": 32
        },
        {
          "start": 17334,
          "length": 32
        },
        {
          "start": 17666,
          "length": 32
        },
        {
          "start": 18269,
          "length": 32
        },
        {
          "start": 19130,
          "length": 32
        },
        {
          "start": 21426,
          "length": 32
        },
        {
          "start": 21912,
          "length": 32
        },
        {
          "start": 22228,
          "length": 32
        },
        {
          "start": 22421,
          "length": 32
        },
        {
          "start": 22641,
          "length": 32
        },
        {
          "start": 23038,
          "length": 32
        },
        {
          "start": 23184,
          "length": 32
        },
        {
          "start": 23399,
          "length": 32
        },
        {
          "start": 25669,
          "length": 32
        },
        {
          "start": 26177,
          "length": 32
        },
        {
          "start": 26651,
          "length": 32
        },
        {
          "start": 27319,
          "length": 32
        },
        {
          "start": 27384,
          "length": 32
        },
        {
          "start": 27453,
          "length": 32
        },
        {
          "start": 27878,
          "length": 32
        },
        {
          "start": 28330,
          "length": 32
        },
        {
          "start": 28855,
          "length": 32
        },
        {
          "start": 28888,
          "length": 32
        },
        {
          "start": 29202,
          "length": 32
        },
        {
          "start": 29235,
          "length": 32
        },
        {
          "start": 31414,
          "length": 32
        },
        {
          "start": 31479,
          "length": 32
        },
        {
          "start": 31548,
          "length": 32
        },
        {
          "start": 31973,
          "length": 32
        },
        {
          "start": 32490,
          "length": 32
        },
        {
          "start": 32824,
          "length": 32
        }
      ],
      "99525": [
        {
          "start": 28364,
          "length": 32
        },
        {
          "start": 28921,
          "length": 32
        },
        {
          "start": 29268,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_BatchTransferFromReentrancy()": "2cb279c6",
    "test_BeforeAfterBatchTransferFromHooks()": "a42b6139",
    "test_BeforeAfterBurnHooks()": "06fb3530",
    "test_BeforeAfterFlashLoanHooks()": "93a5870c",
    "test_BeforeAfterMintHooks()": "b8c238fd",
    "test_BeforeAfterSwapHooksXtoY()": "3f71aea7",
    "test_BeforeAfterSwapHooksYtoX()": "45bf2c09",
    "test_BurnReentrancy()": "7626ddcc",
    "test_FlashLoanReentrancy()": "4f3e1504",
    "test_GetLBHooksParameters()": "8e78d4e3",
    "test_MintReentrancy()": "16c1fcdd",
    "test_SwapReentrancy()": "314bf908"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BatchTransferFromReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterBatchTransferFromHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterBurnHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterFlashLoanHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterMintHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterSwapHooksXtoY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BeforeAfterSwapHooksYtoX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_BurnReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_FlashLoanReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_GetLBHooksParameters\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_MintReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapReentrancy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBPairHooks.t.sol\":\"LBPairHooksTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4\",\"dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415\",\"dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX\"]},\"src/LBBaseHooks.sol\":{\"keccak256\":\"0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1\",\"dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97\",\"dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044\",\"dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a\",\"dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e\",\"dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4\",\"dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2\",\"dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof\"]},\"src/LBToken.sol\":{\"keccak256\":\"0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8\",\"dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e\",\"dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a\",\"dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490\",\"dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262\",\"dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0\",\"dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f\",\"dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3\",\"dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6\",\"dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12\",\"dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65\",\"dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a\",\"dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a\",\"dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8\",\"dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b\",\"dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f\",\"dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea\",\"dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ\"]},\"src/libraries/StringUtils.sol\":{\"keccak256\":\"0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f\",\"dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a\",\"dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d\",\"dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1\",\"dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f\",\"dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0\",\"dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e\",\"dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97\",\"dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126\",\"dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94\",\"dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea\",\"dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M\"]},\"test/LBPairHooks.t.sol\":{\"keccak256\":\"0x8ee9e72828981a5d24d3f61ccd3f63c4ed1f2385405de3768edbf2b854168d93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9322d62668e6ba562af2477422746448f8245ee58dae8bf073d7ed0480e817b6\",\"dweb:/ipfs/Qmcb4m8szBS4E9usVkd8LsKwfuGTJfHjj8GcEvsW1TfBU7\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a\",\"dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12\",\"dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211\",\"dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/MockHooks.sol\":{\"keccak256\":\"0x4daf8f583d9393a3131a87bd2affdcc16b518b0e71b4f6e898fa2b1f464752d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6ea4ea16f5c587a25f12b4cfdcae46dcf965bcb8bf754034ff7eb9616f6fe0\",\"dweb:/ipfs/QmTDz1S7RmgzCRxUNPLM4qFi1fJc1fsadYAhkCjeWezTrV\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BatchTransferFromReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterBatchTransferFromHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterBurnHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterFlashLoanHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterMintHooks"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterSwapHooksXtoY"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BeforeAfterSwapHooksYtoX"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_BurnReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_FlashLoanReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_GetLBHooksParameters"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MintReentrancy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapReentrancy"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBPairHooks.t.sol": "LBPairHooksTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2",
        "urls": [
          "bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4",
          "dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd",
        "urls": [
          "bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415",
          "dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX"
        ],
        "license": "MIT"
      },
      "src/LBBaseHooks.sol": {
        "keccak256": "0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778",
        "urls": [
          "bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1",
          "dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520",
        "urls": [
          "bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97",
          "dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f",
        "urls": [
          "bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044",
          "dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310",
        "urls": [
          "bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a",
          "dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22",
        "urls": [
          "bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e",
          "dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94",
        "urls": [
          "bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4",
          "dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae",
        "urls": [
          "bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2",
          "dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434",
        "urls": [
          "bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8",
          "dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53",
        "urls": [
          "bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e",
          "dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b",
        "urls": [
          "bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a",
          "dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388",
        "urls": [
          "bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490",
          "dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4",
        "urls": [
          "bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262",
          "dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e",
        "urls": [
          "bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0",
          "dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f",
        "urls": [
          "bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f",
          "dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da",
        "urls": [
          "bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3",
          "dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7",
        "urls": [
          "bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6",
          "dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1",
        "urls": [
          "bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12",
          "dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401",
        "urls": [
          "bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65",
          "dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365",
        "urls": [
          "bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a",
          "dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd",
        "urls": [
          "bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a",
          "dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42",
        "urls": [
          "bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8",
          "dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71",
        "urls": [
          "bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b",
          "dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6",
        "urls": [
          "bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f",
          "dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0",
        "urls": [
          "bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea",
          "dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/StringUtils.sol": {
        "keccak256": "0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4",
        "urls": [
          "bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f",
          "dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89",
        "urls": [
          "bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a",
          "dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546",
        "urls": [
          "bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d",
          "dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee",
        "urls": [
          "bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1",
          "dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f",
        "urls": [
          "bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f",
          "dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a",
        "urls": [
          "bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0",
          "dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257",
        "urls": [
          "bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e",
          "dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9",
        "urls": [
          "bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97",
          "dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a",
        "urls": [
          "bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126",
          "dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a",
        "urls": [
          "bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94",
          "dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f",
        "urls": [
          "bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea",
          "dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M"
        ],
        "license": "MIT"
      },
      "test/LBPairHooks.t.sol": {
        "keccak256": "0x8ee9e72828981a5d24d3f61ccd3f63c4ed1f2385405de3768edbf2b854168d93",
        "urls": [
          "bzz-raw://9322d62668e6ba562af2477422746448f8245ee58dae8bf073d7ed0480e817b6",
          "dweb:/ipfs/Qmcb4m8szBS4E9usVkd8LsKwfuGTJfHjj8GcEvsW1TfBU7"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72",
        "urls": [
          "bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a",
          "dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8",
        "urls": [
          "bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12",
          "dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894",
        "urls": [
          "bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211",
          "dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/MockHooks.sol": {
        "keccak256": "0x4daf8f583d9393a3131a87bd2affdcc16b518b0e71b4f6e898fa2b1f464752d3",
        "urls": [
          "bzz-raw://5c6ea4ea16f5c587a25f12b4cfdcae46dcf965bcb8bf754034ff7eb9616f6fe0",
          "dweb:/ipfs/QmTDz1S7RmgzCRxUNPLM4qFi1fJc1fsadYAhkCjeWezTrV"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBPairHooks.t.sol",
    "id": 89544,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39201
      ],
      "Address": [
        42913
      ],
      "AvalancheAddresses": [
        101265
      ],
      "BinHelper": [
        71915
      ],
      "BitMath": [
        75382
      ],
      "Constants": [
        71953
      ],
      "ERC20": [
        42133
      ],
      "ERC20Mock": [
        106636
      ],
      "ERC20TransferTaxMock": [
        106690
      ],
      "Encoded": [
        75589
      ],
      "EnumerableMap": [
        48749
      ],
      "EnumerableSet": [
        49362
      ],
      "FeeHelper": [
        72146
      ],
      "FlashBorrower": [
        106857
      ],
      "Hooks": [
        73020
      ],
      "IERC20": [
        42211
      ],
      "IERC20Metadata": [
        42237
      ],
      "ILBFactory": [
        67618
      ],
      "ILBFlashLoanCallback": [
        67643
      ],
      "ILBHooks": [
        67816
      ],
      "ILBLegacyFactory": [
        68182
      ],
      "ILBLegacyPair": [
        68598
      ],
      "ILBLegacyRouter": [
        69007
      ],
      "ILBPair": [
        69569
      ],
      "ILBRouter": [
        70101
      ],
      "ILBToken": [
        70224
      ],
      "ISovrynLBFactoryV1": [
        70298
      ],
      "ISovrynLBPairV1": [
        70541
      ],
      "ISovrynLBRouter01": [
        70850
      ],
      "ISovrynLBRouter02": [
        70940
      ],
      "IWNATIVE": [
        70956
      ],
      "ImmutableClone": [
        73098
      ],
      "Initializable": [
        41618
      ],
      "LBBaseHooks": [
        57322
      ],
      "LBFactory": [
        58932
      ],
      "LBPair": [
        61826
      ],
      "LBPairBeaconProxy": [
        61890
      ],
      "LBPairHooksTest": [
        88889
      ],
      "LBPairUpgradeableBeacon": [
        62082
      ],
      "LBQuoter": [
        63370
      ],
      "LBRouter": [
        66608
      ],
      "LBToken": [
        67127
      ],
      "LiquidityConfigurations": [
        75759
      ],
      "MockHooks": [
        107111
      ],
      "MockLBHooks": [
        89543
      ],
      "OracleHelper": [
        73755
      ],
      "OracleParameters": [
        86374
      ],
      "Ownable": [
        40400
      ],
      "Ownable2StepUpgradeable": [
        39338
      ],
      "OwnableUpgradeable": [
        39533
      ],
      "PackedUint128Math": [
        76113
      ],
      "PairParameterHelper": [
        74612
      ],
      "PriceHelper": [
        74786
      ],
      "ReentrancyGuardUpgradeable": [
        74915
      ],
      "SafeCast": [
        76861
      ],
      "SafeERC20": [
        42660
      ],
      "SampleMath": [
        77286
      ],
      "SovrynLBLibrary": [
        75121
      ],
      "State": [
        86395
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3570
      ],
      "StdCheats": [
        6423
      ],
      "StdInvariant": [
        6783
      ],
      "StdStorage": [
        7555
      ],
      "StdStyle": [
        10725
      ],
      "StdUtils": [
        12103
      ],
      "StringUtils": [
        75202
      ],
      "Test": [
        12155
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        101064
      ],
      "TokenHelper": [
        75288
      ],
      "TransparentUpgradeableProxy": [
        41364
      ],
      "TreeMath": [
        78218
      ],
      "Uint256x256Math": [
        78854
      ],
      "UpgradeableBeacon": [
        41181
      ],
      "Utils": [
        101232
      ],
      "Vm": [
        15998
      ],
      "VolatilityParameters": [
        86363
      ],
      "WNATIVE": [
        107167
      ],
      "console": [
        24122
      ],
      "console2": [
        24122
      ],
      "safeconsole": [
        38838
      ],
      "stdError": [
        6489
      ],
      "stdJson": [
        7375
      ],
      "stdMath": [
        7517
      ],
      "stdStorage": [
        9514
      ],
      "stdToml": [
        11317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:27466:126",
    "nodes": [
      {
        "id": 86351,
        "nodeType": "PragmaDirective",
        "src": "33:24:126",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 86352,
        "nodeType": "ImportDirective",
        "src": "59:51:126",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89544,
        "sourceUnit": 42914,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86353,
        "nodeType": "ImportDirective",
        "src": "112:34:126",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "./helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89544,
        "sourceUnit": 101065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86354,
        "nodeType": "ImportDirective",
        "src": "147:31:126",
        "nodes": [],
        "absolutePath": "test/mocks/MockHooks.sol",
        "file": "./mocks/MockHooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89544,
        "sourceUnit": 107112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86363,
        "nodeType": "StructDefinition",
        "src": "180:150:126",
        "nodes": [],
        "canonicalName": "VolatilityParameters",
        "members": [
          {
            "constant": false,
            "id": 86356,
            "mutability": "mutable",
            "name": "volatilityAccumulator",
            "nameLocation": "221:21:126",
            "nodeType": "VariableDeclaration",
            "scope": 86363,
            "src": "214:28:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 86355,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "214:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86358,
            "mutability": "mutable",
            "name": "volatilityReference",
            "nameLocation": "255:19:126",
            "nodeType": "VariableDeclaration",
            "scope": 86363,
            "src": "248:26:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 86357,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "248:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86360,
            "mutability": "mutable",
            "name": "idReference",
            "nameLocation": "287:11:126",
            "nodeType": "VariableDeclaration",
            "scope": 86363,
            "src": "280:18:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 86359,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "280:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86362,
            "mutability": "mutable",
            "name": "timeOfLastUpdate",
            "nameLocation": "311:16:126",
            "nodeType": "VariableDeclaration",
            "scope": 86363,
            "src": "304:23:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 86361,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "304:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "VolatilityParameters",
        "nameLocation": "187:20:126",
        "scope": 89544,
        "visibility": "public"
      },
      {
        "id": 86374,
        "nodeType": "StructDefinition",
        "src": "332:144:126",
        "nodes": [],
        "canonicalName": "OracleParameters",
        "members": [
          {
            "constant": false,
            "id": 86365,
            "mutability": "mutable",
            "name": "sampleLifetime",
            "nameLocation": "368:14:126",
            "nodeType": "VariableDeclaration",
            "scope": 86374,
            "src": "362:20:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 86364,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "362:5:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86367,
            "mutability": "mutable",
            "name": "size",
            "nameLocation": "395:4:126",
            "nodeType": "VariableDeclaration",
            "scope": 86374,
            "src": "388:11:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 86366,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "388:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86369,
            "mutability": "mutable",
            "name": "activeSize",
            "nameLocation": "412:10:126",
            "nodeType": "VariableDeclaration",
            "scope": 86374,
            "src": "405:17:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 86368,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "405:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86371,
            "mutability": "mutable",
            "name": "lastUpdated",
            "nameLocation": "435:11:126",
            "nodeType": "VariableDeclaration",
            "scope": 86374,
            "src": "428:18:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 86370,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "428:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86373,
            "mutability": "mutable",
            "name": "firstTimestamp",
            "nameLocation": "459:14:126",
            "nodeType": "VariableDeclaration",
            "scope": 86374,
            "src": "452:21:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint40",
              "typeString": "uint40"
            },
            "typeName": {
              "id": 86372,
              "name": "uint40",
              "nodeType": "ElementaryTypeName",
              "src": "452:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint40",
                "typeString": "uint40"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "OracleParameters",
        "nameLocation": "339:16:126",
        "scope": 89544,
        "visibility": "public"
      },
      {
        "id": 86395,
        "nodeType": "StructDefinition",
        "src": "478:275:126",
        "nodes": [],
        "canonicalName": "State",
        "members": [
          {
            "constant": false,
            "id": 86376,
            "mutability": "mutable",
            "name": "reserveX",
            "nameLocation": "505:8:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "497:16:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86375,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86378,
            "mutability": "mutable",
            "name": "reserveY",
            "nameLocation": "527:8:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "519:16:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86377,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "519:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86380,
            "mutability": "mutable",
            "name": "protocolFeeX",
            "nameLocation": "549:12:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "541:20:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86379,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86382,
            "mutability": "mutable",
            "name": "protocolFeeY",
            "nameLocation": "575:12:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "567:20:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86381,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "567:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86384,
            "mutability": "mutable",
            "name": "activeId",
            "nameLocation": "600:8:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "593:15:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 86383,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "593:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86386,
            "mutability": "mutable",
            "name": "activeReserveX",
            "nameLocation": "622:14:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "614:22:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86385,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86388,
            "mutability": "mutable",
            "name": "activeReserveY",
            "nameLocation": "650:14:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "642:22:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86387,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "642:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86391,
            "mutability": "mutable",
            "name": "volatilityParameters",
            "nameLocation": "691:20:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "670:41:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_VolatilityParameters_$86363_storage_ptr",
              "typeString": "struct VolatilityParameters"
            },
            "typeName": {
              "id": 86390,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86389,
                "name": "VolatilityParameters",
                "nameLocations": [
                  "670:20:126"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 86363,
                "src": "670:20:126"
              },
              "referencedDeclaration": 86363,
              "src": "670:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_VolatilityParameters_$86363_storage_ptr",
                "typeString": "struct VolatilityParameters"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86394,
            "mutability": "mutable",
            "name": "oracleParameters",
            "nameLocation": "734:16:126",
            "nodeType": "VariableDeclaration",
            "scope": 86395,
            "src": "717:33:126",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_OracleParameters_$86374_storage_ptr",
              "typeString": "struct OracleParameters"
            },
            "typeName": {
              "id": 86393,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86392,
                "name": "OracleParameters",
                "nameLocations": [
                  "717:16:126"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 86374,
                "src": "717:16:126"
              },
              "referencedDeclaration": 86374,
              "src": "717:16:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_OracleParameters_$86374_storage_ptr",
                "typeString": "struct OracleParameters"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "State",
        "nameLocation": "485:5:126",
        "scope": 89544,
        "visibility": "public"
      },
      {
        "id": 88889,
        "nodeType": "ContractDefinition",
        "src": "755:21192:126",
        "nodes": [
          {
            "id": 86400,
            "nodeType": "UsingForDirective",
            "src": "800:27:126",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86398,
              "name": "SafeCast",
              "nameLocations": [
                "806:8:126"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76861,
              "src": "806:8:126"
            },
            "typeName": {
              "id": 86399,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "819:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 86403,
            "nodeType": "VariableDeclaration",
            "src": "833:17:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "hooks",
            "nameLocation": "845:5:126",
            "scope": 88889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
              "typeString": "contract MockLBHooks"
            },
            "typeName": {
              "id": 86402,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86401,
                "name": "MockLBHooks",
                "nameLocations": [
                  "833:11:126"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 89543,
                "src": "833:11:126"
              },
              "referencedDeclaration": 89543,
              "src": "833:11:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                "typeString": "contract MockLBHooks"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86406,
            "nodeType": "VariableDeclaration",
            "src": "857:32:126",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "amount",
            "nameLocation": "874:6:126",
            "scope": 88889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 86404,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "857:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "value": {
              "hexValue": "302e31653138",
              "id": 86405,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:6:126",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 86507,
            "nodeType": "FunctionDefinition",
            "src": "896:952:126",
            "nodes": [],
            "body": {
              "id": 86506,
              "nodeType": "Block",
              "src": "929:919:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86410,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "939:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LBPairHooksTest_$88889_$",
                          "typeString": "type(contract super LBPairHooksTest)"
                        }
                      },
                      "id": 86412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "945:5:126",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100191,
                      "src": "939:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86414,
                  "nodeType": "ExpressionStatement",
                  "src": "939:13:126"
                },
                {
                  "expression": {
                    "id": 86420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86415,
                      "name": "pairWnative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99561,
                      "src": "963:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$61826",
                        "typeString": "contract LBPair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86417,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "990:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 86418,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "999:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 86416,
                        "name": "createLBPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100411,
                        "src": "977:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_contract$_LBPair_$61826_$",
                          "typeString": "function (contract IERC20,contract IERC20) returns (contract LBPair)"
                        }
                      },
                      "id": 86419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:27:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$61826",
                        "typeString": "contract LBPair"
                      }
                    },
                    "src": "963:41:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPair_$61826",
                      "typeString": "contract LBPair"
                    }
                  },
                  "id": 86421,
                  "nodeType": "ExpressionStatement",
                  "src": "963:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86423,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "1028:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86424,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "1033:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86425,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "1038:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86426,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "1051:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1059:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1065:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3530",
                        "id": 86429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1071:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      {
                        "hexValue": "3530",
                        "id": 86430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1075:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        }
                      ],
                      "id": 86422,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100870,
                      "src": "1015:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$61826_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86432,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:63:126"
                },
                {
                  "expression": {
                    "id": 86438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86433,
                      "name": "hooks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86403,
                      "src": "1089:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                        "typeString": "contract MockLBHooks"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 86436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1097:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockLBHooks_$89543_$",
                          "typeString": "function () returns (contract MockLBHooks)"
                        },
                        "typeName": {
                          "id": 86435,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 86434,
                            "name": "MockLBHooks",
                            "nameLocations": [
                              "1101:11:126"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 89543,
                            "src": "1101:11:126"
                          },
                          "referencedDeclaration": 89543,
                          "src": "1101:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      },
                      "id": 86437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1097:17:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                        "typeString": "contract MockLBHooks"
                      }
                    },
                    "src": "1089:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                      "typeString": "contract MockLBHooks"
                    }
                  },
                  "id": 86439,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:25:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86445,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "1146:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1138:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1138:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1138:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 86440,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "1124:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1130:7:126",
                      "memberName": "setPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106878,
                      "src": "1124:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:35:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86448,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:35:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 86452,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99552,
                            "src": "1188:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$58932",
                              "typeString": "contract LBFactory"
                            }
                          },
                          "id": 86453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1196:21:126",
                          "memberName": "LB_HOOKS_MANAGER_ROLE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57390,
                          "src": "1188:29:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 86454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:31:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 86457,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1229:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                              "typeString": "contract LBPairHooksTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                              "typeString": "contract LBPairHooksTest"
                            }
                          ],
                          "id": 86456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1221:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86455,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1221:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1221:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 86449,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "1170:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 86451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1178:9:126",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39029,
                      "src": "1170:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 86459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:65:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86460,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:65:126"
                },
                {
                  "assignments": [
                    86465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86465,
                      "mutability": "mutable",
                      "name": "parameters",
                      "nameLocation": "1270:10:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86506,
                      "src": "1246:34:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                        "typeString": "struct Hooks.Parameters"
                      },
                      "typeName": {
                        "id": 86464,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86463,
                          "name": "Hooks.Parameters",
                          "nameLocations": [
                            "1246:5:126",
                            "1252:10:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72286,
                          "src": "1246:16:126"
                        },
                        "referencedDeclaration": 72286,
                        "src": "1246:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Parameters_$72286_storage_ptr",
                          "typeString": "struct Hooks.Parameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86483,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86470,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86403,
                            "src": "1329:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 86469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1321:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1321:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1321:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1361:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1425:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1489:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1518:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1577:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1662:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86466,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73020,
                        "src": "1283:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$73020_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 86467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1289:10:126",
                      "memberName": "Parameters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72286,
                      "src": "1283:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Parameters_$72286_storage_ptr_$",
                        "typeString": "type(struct Hooks.Parameters storage pointer)"
                      }
                    },
                    "id": 86482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1314:5:126",
                      "1349:10:126",
                      "1379:9:126",
                      "1408:15:126",
                      "1443:14:126",
                      "1477:10:126",
                      "1507:9:126",
                      "1536:10:126",
                      "1566:9:126",
                      "1595:23:126",
                      "1638:22:126"
                    ],
                    "names": [
                      "hooks",
                      "beforeSwap",
                      "afterSwap",
                      "beforeFlashLoan",
                      "afterFlashLoan",
                      "beforeMint",
                      "afterMint",
                      "beforeBurn",
                      "afterBurn",
                      "beforeBatchTransferFrom",
                      "afterBatchTransferFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1283:394:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                      "typeString": "struct Hooks.Parameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1246:431:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86487,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "1723:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 86488,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "1732:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 86489,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "1738:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 86492,
                            "name": "parameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86465,
                            "src": "1769:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                              "typeString": "struct Hooks.Parameters memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                              "typeString": "struct Hooks.Parameters memory"
                            }
                          ],
                          "expression": {
                            "id": 86490,
                            "name": "Hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73020,
                            "src": "1756:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Hooks_$73020_$",
                              "typeString": "type(library Hooks)"
                            }
                          },
                          "id": 86491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1762:6:126",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72383,
                          "src": "1756:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Parameters_$72286_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct Hooks.Parameters memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1756:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1792:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1782:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 86494,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1786:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 86497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 86484,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "1688:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 86486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1696:26:126",
                      "memberName": "setLBHooksParametersOnPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58547,
                      "src": "1688:34:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint16_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint16,bytes32,bytes memory) external"
                      }
                    },
                    "id": 86498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:107:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86499,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:107:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 86503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1839:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 86500,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "1806:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1818:20:126",
                      "memberName": "increaseOracleLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61042,
                      "src": "1806:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16) external"
                      }
                    },
                    "id": 86504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:35:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86505,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:35:126"
                }
              ]
            },
            "baseFunctions": [
              100191
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "905:5:126",
            "overrides": {
              "id": 86408,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "920:8:126"
            },
            "parameters": {
              "id": 86407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:126"
            },
            "returnParameters": {
              "id": 86409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86597,
            "nodeType": "FunctionDefinition",
            "src": "1854:1121:126",
            "nodes": [],
            "body": {
              "id": 86596,
              "nodeType": "Block",
              "src": "1903:1072:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86511,
                      "mutability": "mutable",
                      "name": "parameters",
                      "nameLocation": "1921:10:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86596,
                      "src": "1913:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 86510,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1913:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86515,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86512,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "1934:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1946:20:126",
                      "memberName": "getLBHooksParameters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59434,
                      "src": "1934:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 86514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1934:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1913:55:126"
                },
                {
                  "assignments": [
                    86520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86520,
                      "mutability": "mutable",
                      "name": "hooksParameters",
                      "nameLocation": "2003:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86596,
                      "src": "1979:39:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                        "typeString": "struct Hooks.Parameters"
                      },
                      "typeName": {
                        "id": 86519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86518,
                          "name": "Hooks.Parameters",
                          "nameLocations": [
                            "1979:5:126",
                            "1985:10:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72286,
                          "src": "1979:16:126"
                        },
                        "referencedDeclaration": 72286,
                        "src": "1979:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Parameters_$72286_storage_ptr",
                          "typeString": "struct Hooks.Parameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86525,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86523,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86511,
                        "src": "2034:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 86521,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73020,
                        "src": "2021:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$73020_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 86522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2027:6:126",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72511,
                      "src": "2021:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Parameters_$72286_memory_ptr_$",
                        "typeString": "function (bytes32) pure returns (struct Hooks.Parameters memory)"
                      }
                    },
                    "id": 86524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                      "typeString": "struct Hooks.Parameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1979:66:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86527,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2065:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2081:5:126",
                        "memberName": "hooks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72265,
                        "src": "2065:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 86531,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86403,
                            "src": "2096:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 86530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2088:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2088:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2088:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a31",
                        "id": 86533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2104:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc55b4b023e5fb67be80e8800fe5ef5a14e5e1e5a8f8aa3c5522117633ce4d87",
                          "typeString": "literal_string \"test_GetLBHooksParameters::1\""
                        },
                        "value": "test_GetLBHooksParameters::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc55b4b023e5fb67be80e8800fe5ef5a14e5e1e5a8f8aa3c5522117633ce4d87",
                          "typeString": "literal_string \"test_GetLBHooksParameters::1\""
                        }
                      ],
                      "id": 86526,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "2056:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 86534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:79:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86535,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:79:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86537,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2156:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2172:10:126",
                        "memberName": "beforeSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72267,
                        "src": "2156:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a32",
                        "id": 86539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45d184504260b8b56426904259d9fbcdb412f25e7a3d0da32373df1d8bcdf8e1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::2\""
                        },
                        "value": "test_GetLBHooksParameters::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45d184504260b8b56426904259d9fbcdb412f25e7a3d0da32373df1d8bcdf8e1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::2\""
                        }
                      ],
                      "id": 86536,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2145:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2145:70:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86541,
                  "nodeType": "ExpressionStatement",
                  "src": "2145:70:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86543,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2236:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86544,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2252:9:126",
                        "memberName": "afterSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72269,
                        "src": "2236:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a33",
                        "id": 86545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2263:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c2ed9f7f2dbba0235cc63a0f44024a9d270e83e50333ab715f7263acecf4449",
                          "typeString": "literal_string \"test_GetLBHooksParameters::3\""
                        },
                        "value": "test_GetLBHooksParameters::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c2ed9f7f2dbba0235cc63a0f44024a9d270e83e50333ab715f7263acecf4449",
                          "typeString": "literal_string \"test_GetLBHooksParameters::3\""
                        }
                      ],
                      "id": 86542,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2225:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:69:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86547,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:69:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86549,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2315:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2331:15:126",
                        "memberName": "beforeFlashLoan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72271,
                        "src": "2315:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a34",
                        "id": 86551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2348:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefe02058398d2e6ad04aad75fa2f4b827d1b243743e5f1d34060d43380d8f9b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::4\""
                        },
                        "value": "test_GetLBHooksParameters::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eefe02058398d2e6ad04aad75fa2f4b827d1b243743e5f1d34060d43380d8f9b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::4\""
                        }
                      ],
                      "id": 86548,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2304:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:75:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86553,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:75:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86555,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2400:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2416:14:126",
                        "memberName": "afterFlashLoan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72273,
                        "src": "2400:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a35",
                        "id": 86557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2432:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f3ed4cb392cad2b2f98bafe4c39b3af5045cb9b57765b064b2ff44608bd05a",
                          "typeString": "literal_string \"test_GetLBHooksParameters::5\""
                        },
                        "value": "test_GetLBHooksParameters::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f3ed4cb392cad2b2f98bafe4c39b3af5045cb9b57765b064b2ff44608bd05a",
                          "typeString": "literal_string \"test_GetLBHooksParameters::5\""
                        }
                      ],
                      "id": 86554,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2389:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:74:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86559,
                  "nodeType": "ExpressionStatement",
                  "src": "2389:74:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86561,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2484:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86562,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2500:10:126",
                        "memberName": "beforeMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72275,
                        "src": "2484:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a36",
                        "id": 86563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2512:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afeff83e7018ed49b308a4d6a9ed9499c4602cb161cab0c870b4dfe206444ca7",
                          "typeString": "literal_string \"test_GetLBHooksParameters::6\""
                        },
                        "value": "test_GetLBHooksParameters::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afeff83e7018ed49b308a4d6a9ed9499c4602cb161cab0c870b4dfe206444ca7",
                          "typeString": "literal_string \"test_GetLBHooksParameters::6\""
                        }
                      ],
                      "id": 86560,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2473:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:70:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86565,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:70:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86567,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2564:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2580:9:126",
                        "memberName": "afterMint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72277,
                        "src": "2564:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a37",
                        "id": 86569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2591:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a38a2a29361913f4262fce346519808c8661f22d0c5afaad4d8ca8bdeb4bfde9",
                          "typeString": "literal_string \"test_GetLBHooksParameters::7\""
                        },
                        "value": "test_GetLBHooksParameters::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a38a2a29361913f4262fce346519808c8661f22d0c5afaad4d8ca8bdeb4bfde9",
                          "typeString": "literal_string \"test_GetLBHooksParameters::7\""
                        }
                      ],
                      "id": 86566,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2553:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:69:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86571,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:69:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86573,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2643:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86574,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2659:10:126",
                        "memberName": "beforeBurn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72279,
                        "src": "2643:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a38",
                        "id": 86575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68617b5893d73284e9e794f3c2c53b32bc5aa1dcba4341f15b41db5c8d4502d1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::8\""
                        },
                        "value": "test_GetLBHooksParameters::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68617b5893d73284e9e794f3c2c53b32bc5aa1dcba4341f15b41db5c8d4502d1",
                          "typeString": "literal_string \"test_GetLBHooksParameters::8\""
                        }
                      ],
                      "id": 86572,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2632:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:70:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86577,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:70:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86579,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2723:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86580,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2739:9:126",
                        "memberName": "afterBurn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72281,
                        "src": "2723:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a39",
                        "id": 86581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2750:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20d066172f80582f69c0fd5d56d5823b628862e9e30e526ef474dae874d8547c",
                          "typeString": "literal_string \"test_GetLBHooksParameters::9\""
                        },
                        "value": "test_GetLBHooksParameters::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20d066172f80582f69c0fd5d56d5823b628862e9e30e526ef474dae874d8547c",
                          "typeString": "literal_string \"test_GetLBHooksParameters::9\""
                        }
                      ],
                      "id": 86578,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2712:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:69:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86583,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:69:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86585,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2802:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2818:23:126",
                        "memberName": "beforeBatchTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72283,
                        "src": "2802:39:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a3130",
                        "id": 86587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2843:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e196990d7265e470560c03370ab6f6d4049e82b55c1a8ad455618bf9c002224e",
                          "typeString": "literal_string \"test_GetLBHooksParameters::10\""
                        },
                        "value": "test_GetLBHooksParameters::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e196990d7265e470560c03370ab6f6d4049e82b55c1a8ad455618bf9c002224e",
                          "typeString": "literal_string \"test_GetLBHooksParameters::10\""
                        }
                      ],
                      "id": 86584,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2791:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2791:84:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86589,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:84:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86591,
                          "name": "hooksParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86520,
                          "src": "2896:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Parameters_$72286_memory_ptr",
                            "typeString": "struct Hooks.Parameters memory"
                          }
                        },
                        "id": 86592,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2912:22:126",
                        "memberName": "afterBatchTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72285,
                        "src": "2896:38:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746573745f4765744c42486f6f6b73506172616d65746572733a3a3131",
                        "id": 86593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b3a3b2a31992b2b52a661b1e32bb5e26333c68b54f05b96fdfaee9290b774b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::11\""
                        },
                        "value": "test_GetLBHooksParameters::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b3a3b2a31992b2b52a661b1e32bb5e26333c68b54f05b96fdfaee9290b774b",
                          "typeString": "literal_string \"test_GetLBHooksParameters::11\""
                        }
                      ],
                      "id": 86590,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        326,
                        341
                      ],
                      "referencedDeclaration": 341,
                      "src": "2885:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:83:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86595,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:83:126"
                }
              ]
            },
            "functionSelector": "8e78d4e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_GetLBHooksParameters",
            "nameLocation": "1863:25:126",
            "parameters": {
              "id": 86508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:2:126"
            },
            "returnParameters": {
              "id": 86509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1903:0:126"
            },
            "scope": 88889,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86766,
            "nodeType": "FunctionDefinition",
            "src": "2981:1642:126",
            "nodes": [],
            "body": {
              "id": 86765,
              "nodeType": "Block",
              "src": "3029:1594:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86601,
                    86603,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86601,
                      "mutability": "mutable",
                      "name": "amountLeft",
                      "nameLocation": "3048:10:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "3040:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86600,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3040:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86603,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3068:9:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "3060:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86602,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86609,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86606,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "3105:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3113:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86604,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "3082:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3094:10:126",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60022,
                      "src": "3082:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:36:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3039:79:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 86615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86613,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86603,
                          "src": "3139:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 86614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3151:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3139:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86610,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3129:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3132:6:126",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14928,
                      "src": "3129:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3129:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86617,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:24:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86619,
                        "name": "amountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86601,
                        "src": "3173:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a31",
                        "id": 86621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3188:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6543dd5325d0b8d02645d92e7f9ae9d7476c328dac1c3d6c3abf7f1e0b2dd6e4",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::1\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6543dd5325d0b8d02645d92e7f9ae9d7476c328dac1c3d6c3abf7f1e0b2dd6e4",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::1\""
                        }
                      ],
                      "id": 86618,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3164:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:59:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86623,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:59:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86627,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "3247:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 86626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3239:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86625,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3239:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3239:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86629,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "3257:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86630,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "3264:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86624,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "3234:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3234:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86632,
                  "nodeType": "ExpressionStatement",
                  "src": "3234:37:126"
                },
                {
                  "assignments": [
                    86635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86635,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "3295:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "3282:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86634,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86633,
                          "name": "State",
                          "nameLocations": [
                            "3282:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "3282:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "3282:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86639,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86636,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "3317:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3323:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "3317:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3282:51:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86643,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "3358:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86640,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3344:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3347:10:126",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15779,
                      "src": "3344:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3344:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86645,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86651,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "3399:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3391:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3391:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3391:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86653,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "3413:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86646,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "3374:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3382:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "3374:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3374:46:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86655,
                  "nodeType": "ExpressionStatement",
                  "src": "3374:46:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 86659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3447:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 86660,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "3453:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86656,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "3430:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3442:4:126",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60328,
                      "src": "3430:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:29:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86662,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:29:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86663,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3469:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3472:9:126",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15791,
                      "src": "3469:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 86666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:14:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86667,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:14:126"
                },
                {
                  "assignments": [
                    86670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86670,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "3507:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "3494:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86669,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86668,
                          "name": "State",
                          "nameLocations": [
                            "3494:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "3494:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "3494:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86674,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86671,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "3528:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3534:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "3528:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3494:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86678,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "3582:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86676,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "3564:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3572:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "3564:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3564:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3590:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a32",
                        "id": 86681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_846c27ff1e4d595b3c68f72c25c7e18b0f9101e9315ce20a685eefa46f415a7f",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::2\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_846c27ff1e4d595b3c68f72c25c7e18b0f9101e9315ce20a685eefa46f415a7f",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::2\""
                        }
                      ],
                      "id": 86675,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3555:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:73:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86683,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:73:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86687,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "3662:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86685,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "3647:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3652:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "3647:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3647:21:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86689,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86603,
                        "src": "3670:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a33",
                        "id": 86690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3681:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8da8be1a6ad7168cc0d3e0f325133e07693cfa8f800f32af8db4fd10586729ba",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::3\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8da8be1a6ad7168cc0d3e0f325133e07693cfa8f800f32af8db4fd10586729ba",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::3\""
                        }
                      ],
                      "id": 86684,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3638:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3638:78:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86692,
                  "nodeType": "ExpressionStatement",
                  "src": "3638:78:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86695,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "3759:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 86696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3765:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "3759:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 86697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3759:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86694,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3749:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3749:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 86702,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "3863:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 86703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3872:10:126",
                                  "memberName": "beforeSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67682,
                                  "src": "3863:19:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 86704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3883:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "3863:28:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 86705,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "3893:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 86706,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "3900:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 86707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3907:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 86710,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "3943:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 86708,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "3913:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 86709,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3931:11:126",
                                  "memberName": "encodeFirst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75803,
                                  "src": "3913:29:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 86711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3913:37:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 86700,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3819:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 86701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3823:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "3819:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 86712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3819:149:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86699,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3792:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:190:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a34",
                        "id": 86714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3996:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dd9ae348ccdb3293bc966baee75c2f2d7d9c958150407612c34498eb6d002e6",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::4\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2dd9ae348ccdb3293bc966baee75c2f2d7d9c958150407612c34498eb6d002e6",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::4\""
                        }
                      ],
                      "id": 86693,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "3727:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 86715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:313:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86716,
                  "nodeType": "ExpressionStatement",
                  "src": "3727:313:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86719,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "4083:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 86720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4089:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "4083:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 86721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4083:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86718,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4073:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 86726,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "4186:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 86727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4195:9:126",
                                  "memberName": "afterSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67695,
                                  "src": "4186:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 86728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4205:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4186:27:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 86729,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "4215:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 86730,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "4222:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 86731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4229:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 86734,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86603,
                                    "src": "4266:9:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 86732,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "4235:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 86733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4253:12:126",
                                  "memberName": "encodeSecond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75813,
                                  "src": "4235:30:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 86735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4235:41:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 86724,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4142:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 86725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4146:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "4142:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 86736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4142:152:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86723,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4115:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4115:193:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7358746f593a3a35",
                        "id": 86738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4322:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90cd05f08cf63af14b8263a3c20934707fd9bfe3a1837991a6e1d5c096d5d2c8",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::5\""
                        },
                        "value": "test_BeforeAfterSwapHooksXtoY::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90cd05f08cf63af14b8263a3c20934707fd9bfe3a1837991a6e1d5c096d5d2c8",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksXtoY::5\""
                        }
                      ],
                      "id": 86717,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "4051:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 86739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4051:315:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86740,
                  "nodeType": "ExpressionStatement",
                  "src": "4051:315:126"
                },
                {
                  "assignments": [
                    86743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86743,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "4390:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "4377:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86742,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86741,
                          "name": "State",
                          "nameLocations": [
                            "4377:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "4377:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "4377:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86747,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86744,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "4409:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4415:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "4409:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4377:54:126"
                },
                {
                  "assignments": [
                    86750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86750,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "4454:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86765,
                      "src": "4441:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86749,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86748,
                          "name": "State",
                          "nameLocations": [
                            "4441:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "4441:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "4441:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86754,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86751,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "4472:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4478:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "4472:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86756,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86743,
                        "src": "4518:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 86757,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86635,
                        "src": "4536:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 86755,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "4504:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 86758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86759,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86761,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86750,
                        "src": "4580:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 86762,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86670,
                        "src": "4597:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 86760,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "4566:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 86763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86764,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:50:126"
                }
              ]
            },
            "functionSelector": "3f71aea7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterSwapHooksXtoY",
            "nameLocation": "2990:29:126",
            "parameters": {
              "id": 86598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3019:2:126"
            },
            "returnParameters": {
              "id": 86599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3029:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86935,
            "nodeType": "FunctionDefinition",
            "src": "4629:1640:126",
            "nodes": [],
            "body": {
              "id": 86934,
              "nodeType": "Block",
              "src": "4677:1592:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86770,
                    86772,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86770,
                      "mutability": "mutable",
                      "name": "amountLeft",
                      "nameLocation": "4696:10:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "4688:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86769,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4688:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86772,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4716:9:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "4708:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86771,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4708:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86775,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "4753:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 86776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4761:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86773,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "4730:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4742:10:126",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60022,
                      "src": "4730:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4687:80:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 86784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86782,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86772,
                          "src": "4788:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 86783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4800:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4788:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4778:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4781:6:126",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14928,
                      "src": "4778:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86786,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:24:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86788,
                        "name": "amountLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86770,
                        "src": "4822:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4834:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a31",
                        "id": 86790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4837:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca72f426095c8f63c96c7ff3a4921e9012a44873778f0cd3d19e7e6e23dd227c",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::1\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca72f426095c8f63c96c7ff3a4921e9012a44873778f0cd3d19e7e6e23dd227c",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::1\""
                        }
                      ],
                      "id": 86787,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4813:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4813:59:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86792,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:59:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86796,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "4896:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 86795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4888:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4888:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4888:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86798,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "4903:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86799,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "4910:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86793,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "4883:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4883:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86801,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:34:126"
                },
                {
                  "assignments": [
                    86804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86804,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "4941:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "4928:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86803,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86802,
                          "name": "State",
                          "nameLocations": [
                            "4928:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "4928:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "4928:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86808,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86805,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "4963:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4969:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "4963:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4928:51:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86812,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "5004:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86809,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4990:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4993:10:126",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15779,
                      "src": "4990:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86814,
                  "nodeType": "ExpressionStatement",
                  "src": "4990:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86820,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "5042:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5034:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5034:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5034:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86822,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "5056:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86815,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "5020:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5025:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "5020:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5020:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86824,
                  "nodeType": "ExpressionStatement",
                  "src": "5020:43:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 86828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 86829,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "5097:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86825,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "5073:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5085:4:126",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60328,
                      "src": "5073:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:30:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86831,
                  "nodeType": "ExpressionStatement",
                  "src": "5073:30:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86832,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5113:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5116:9:126",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15791,
                      "src": "5113:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 86835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:14:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86836,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:14:126"
                },
                {
                  "assignments": [
                    86839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86839,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "5151:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "5138:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86838,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86837,
                          "name": "State",
                          "nameLocations": [
                            "5138:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "5138:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "5138:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86843,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86840,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "5172:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5178:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "5172:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5172:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5138:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86847,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "5223:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86845,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "5208:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5213:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "5208:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5208:21:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5231:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a32",
                        "id": 86850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5234:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3aea0e8d83fc227f7ff3554739d32656ed7703cc632608b764365d0d24c943a",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::2\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3aea0e8d83fc227f7ff3554739d32656ed7703cc632608b764365d0d24c943a",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::2\""
                        }
                      ],
                      "id": 86844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5199:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5199:70:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86852,
                  "nodeType": "ExpressionStatement",
                  "src": "5199:70:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86856,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "5306:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86854,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "5288:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5296:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "5288:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5288:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86858,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86772,
                        "src": "5314:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a33",
                        "id": 86859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a5b1e82816fe78f4e2401651eabd850ac0557df065fbe5fa0742a1269a2b144",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::3\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a5b1e82816fe78f4e2401651eabd850ac0557df065fbe5fa0742a1269a2b144",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::3\""
                        }
                      ],
                      "id": 86853,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5279:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86861,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86864,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "5403:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 86865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5409:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "5403:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 86866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5403:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86863,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5393:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5393:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 86871,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "5507:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 86872,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5516:10:126",
                                  "memberName": "beforeSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67682,
                                  "src": "5507:19:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 86873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5527:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5507:28:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 86874,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "5537:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 86875,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "5544:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 86876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5551:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 86879,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "5589:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 86877,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "5558:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 86878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5576:12:126",
                                  "memberName": "encodeSecond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75813,
                                  "src": "5558:30:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 86880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5558:38:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 86869,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5463:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 86870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5467:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "5463:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 86881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5463:151:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86868,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5436:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5436:192:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a34",
                        "id": 86883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27d3eacfa9662e8022d66fbd56925d726a2e8240aaa3ba210dcad44762eab64d",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::4\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27d3eacfa9662e8022d66fbd56925d726a2e8240aaa3ba210dcad44762eab64d",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::4\""
                        }
                      ],
                      "id": 86862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "5371:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 86884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5371:315:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86885,
                  "nodeType": "ExpressionStatement",
                  "src": "5371:315:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86888,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "5729:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 86889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5735:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "5729:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 86890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5729:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86887,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5719:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5719:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 86895,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "5832:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 86896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5841:9:126",
                                  "memberName": "afterSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67695,
                                  "src": "5832:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterSwap(address,address,bool,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 86897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5851:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5832:27:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 86898,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "5861:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 86899,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "5868:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 86900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5875:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 86903,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86772,
                                    "src": "5912:9:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 86901,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "5882:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 86902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5900:11:126",
                                  "memberName": "encodeFirst",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75803,
                                  "src": "5882:29:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 86904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5882:40:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 86893,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5788:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 86894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5792:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "5788:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 86905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5788:152:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86892,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5761:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5761:193:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657253776170486f6f6b7359746f583a3a35",
                        "id": 86907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5968:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27dcf73e1f4500c7acb401d36f3d457d73fcdfbeb9857c548d140c0b5cdb74c5",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::5\""
                        },
                        "value": "test_BeforeAfterSwapHooksYtoX::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27dcf73e1f4500c7acb401d36f3d457d73fcdfbeb9857c548d140c0b5cdb74c5",
                          "typeString": "literal_string \"test_BeforeAfterSwapHooksYtoX::5\""
                        }
                      ],
                      "id": 86886,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "5697:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 86908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5697:315:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86909,
                  "nodeType": "ExpressionStatement",
                  "src": "5697:315:126"
                },
                {
                  "assignments": [
                    86912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86912,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "6036:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "6023:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86911,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86910,
                          "name": "State",
                          "nameLocations": [
                            "6023:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "6023:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "6023:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86916,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86913,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "6055:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6061:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "6055:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6055:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6023:54:126"
                },
                {
                  "assignments": [
                    86919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86919,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "6100:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 86934,
                      "src": "6087:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86918,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86917,
                          "name": "State",
                          "nameLocations": [
                            "6087:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "6087:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "6087:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86923,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86920,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "6118:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6124:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "6118:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6118:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6087:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86925,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86912,
                        "src": "6164:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 86926,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86804,
                        "src": "6182:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 86924,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "6150:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 86927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6150:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86928,
                  "nodeType": "ExpressionStatement",
                  "src": "6150:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86930,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86919,
                        "src": "6226:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 86931,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86839,
                        "src": "6243:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 86929,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "6212:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 86932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6212:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86933,
                  "nodeType": "ExpressionStatement",
                  "src": "6212:50:126"
                }
              ]
            },
            "functionSelector": "45bf2c09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterSwapHooksYtoX",
            "nameLocation": "4638:29:126",
            "parameters": {
              "id": 86767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:2:126"
            },
            "returnParameters": {
              "id": 86768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4677:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87079,
            "nodeType": "FunctionDefinition",
            "src": "6275:1429:126",
            "nodes": [],
            "body": {
              "id": 87078,
              "nodeType": "Block",
              "src": "6324:1380:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86940,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "6347:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "6334:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86939,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86938,
                          "name": "State",
                          "nameLocations": [
                            "6334:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "6334:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "6334:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86944,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86941,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "6369:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6375:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "6369:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6334:51:126"
                },
                {
                  "assignments": [
                    86946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86946,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "6404:7:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "6396:15:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 86945,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6396:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86952,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86949,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "6439:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 86950,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "6447:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86947,
                        "name": "PackedUint128Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76113,
                        "src": "6414:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                          "typeString": "type(library PackedUint128Math)"
                        }
                      },
                      "id": 86948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6432:6:126",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75793,
                      "src": "6414:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                        "typeString": "function (uint128,uint128) pure returns (bytes32)"
                      }
                    },
                    "id": 86951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:40:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6396:58:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86956,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "6474:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86953,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6465:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6468:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "6465:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6465:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86958,
                  "nodeType": "ExpressionStatement",
                  "src": "6465:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 86965,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6541:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 86964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6533:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86963,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6533:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6533:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86962,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67643,
                          "src": "6512:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$67643_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 86967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:35:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "id": 86968,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86946,
                        "src": "6549:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6568:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6558:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 86969,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6562:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 86972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6558:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 86959,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "6490:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6502:9:126",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60511,
                      "src": "6490:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$67643_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 86973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6490:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86974,
                  "nodeType": "ExpressionStatement",
                  "src": "6490:81:126"
                },
                {
                  "assignments": [
                    86977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86977,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "6595:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "6582:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 86976,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86975,
                          "name": "State",
                          "nameLocations": [
                            "6582:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "6582:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "6582:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86981,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86978,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "6616:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 86979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6622:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "6616:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 86980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6616:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6582:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86984,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "6675:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 86985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6681:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "6675:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 86986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6675:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86983,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6665:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6665:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 86991,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "6741:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 86992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6750:15:126",
                                  "memberName": "beforeFlashLoan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67706,
                                  "src": "6741:24:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeFlashLoan(address,address,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 86993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6766:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6741:33:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 86994,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "6776:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 86997,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6791:4:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  ],
                                  "id": 86996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6783:7:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 86995,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6783:7:126",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 86998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6783:13:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 86999,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86946,
                                "src": "6798:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 86989,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6718:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 86990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6722:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "6718:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6718:88:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 86988,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6708:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6708:99:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a31",
                        "id": 87002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6821:35:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7d5638f5e8305530b8462ce2167303c0e93d80e5028c41fdf7106d36af042bd",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::1\""
                        },
                        "value": "test_BeforeAfterFlashLoanHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7d5638f5e8305530b8462ce2167303c0e93d80e5028c41fdf7106d36af042bd",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::1\""
                        }
                      ],
                      "id": 86982,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "6643:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6643:223:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87004,
                  "nodeType": "ExpressionStatement",
                  "src": "6643:223:126"
                },
                {
                  "assignments": [
                    87006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87006,
                      "mutability": "mutable",
                      "name": "flashloanFee",
                      "nameLocation": "6885:12:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "6877:20:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87005,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6877:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87017,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87009,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99552,
                                "src": "6908:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBFactory_$58932",
                                  "typeString": "contract LBFactory"
                                }
                              },
                              "id": 87010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6916:15:126",
                              "memberName": "getFlashLoanFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57534,
                              "src": "6908:23:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 87011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6908:25:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 87012,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "6936:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "6908:34:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 87014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6945:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "6908:41:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6900:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 87007,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6900:7:126",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6877:73:126"
                },
                {
                  "assignments": [
                    87019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87019,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "6969:4:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "6961:12:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 87018,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6961:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87025,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87022,
                        "name": "flashloanFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87006,
                        "src": "7001:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 87023,
                        "name": "flashloanFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87006,
                        "src": "7015:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87020,
                        "name": "PackedUint128Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76113,
                        "src": "6976:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                          "typeString": "type(library PackedUint128Math)"
                        }
                      },
                      "id": 87021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6994:6:126",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75793,
                      "src": "6976:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                        "typeString": "function (uint128,uint128) pure returns (bytes32)"
                      }
                    },
                    "id": 87024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6976:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6961:67:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87028,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "7071:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7077:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "7071:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7071:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87027,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7061:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7061:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87035,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "7174:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7183:14:126",
                                  "memberName": "afterFlashLoan",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67719,
                                  "src": "7174:23:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterFlashLoan(address,address,bytes32,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 87037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7198:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "7174:32:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87038,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "7228:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 87041,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7263:4:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                      "typeString": "contract LBPairHooksTest"
                                    }
                                  ],
                                  "id": 87040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7255:7:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 87039,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7255:7:126",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 87042,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7255:13:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 87043,
                                "name": "fees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87019,
                                "src": "7290:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 87046,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "7341:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 87047,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "7349:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 87044,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "7316:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 87045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7334:6:126",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75793,
                                  "src": "7316:24:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 87048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7316:40:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 87033,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7130:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7134:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "7130:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7130:244:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87032,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7103:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7103:285:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f72654166746572466c6173684c6f616e486f6f6b733a3a32",
                        "id": 87051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7402:35:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8e80f7f08a78b39beadadad7814914ea0bfaae0781431461af9ef350eabd70c",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::2\""
                        },
                        "value": "test_BeforeAfterFlashLoanHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8e80f7f08a78b39beadadad7814914ea0bfaae0781431461af9ef350eabd70c",
                          "typeString": "literal_string \"test_BeforeAfterFlashLoanHooks::2\""
                        }
                      ],
                      "id": 87026,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "7039:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7039:408:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87053,
                  "nodeType": "ExpressionStatement",
                  "src": "7039:408:126"
                },
                {
                  "assignments": [
                    87056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87056,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "7471:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "7458:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87055,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87054,
                          "name": "State",
                          "nameLocations": [
                            "7458:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "7458:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "7458:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87060,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87057,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "7490:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7496:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "7490:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7490:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7458:54:126"
                },
                {
                  "assignments": [
                    87063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87063,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "7535:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87078,
                      "src": "7522:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87061,
                          "name": "State",
                          "nameLocations": [
                            "7522:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "7522:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "7522:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87067,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87064,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "7553:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7559:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "7553:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7553:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7522:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87069,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87056,
                        "src": "7599:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87070,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86940,
                        "src": "7617:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87068,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "7585:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87072,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87074,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87063,
                        "src": "7661:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87075,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86977,
                        "src": "7678:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87073,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "7647:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7647:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87077,
                  "nodeType": "ExpressionStatement",
                  "src": "7647:50:126"
                }
              ]
            },
            "functionSelector": "93a5870c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterFlashLoanHooks",
            "nameLocation": "6284:30:126",
            "parameters": {
              "id": 86936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6314:2:126"
            },
            "returnParameters": {
              "id": 86937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6324:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87251,
            "nodeType": "FunctionDefinition",
            "src": "7710:1738:126",
            "nodes": [],
            "body": {
              "id": 87250,
              "nodeType": "Block",
              "src": "7754:1694:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87084,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "7777:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87250,
                      "src": "7764:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87083,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87082,
                          "name": "State",
                          "nameLocations": [
                            "7764:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "7764:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "7764:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87088,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87085,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "7799:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7805:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "7799:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7799:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7764:51:126"
                },
                {
                  "assignments": [
                    87093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87093,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "7843:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87250,
                      "src": "7826:33:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87091,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7826:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87092,
                        "nodeType": "ArrayTypeName",
                        "src": "7826:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87099,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7876:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7862:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87094,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7866:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87095,
                        "nodeType": "ArrayTypeName",
                        "src": "7866:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 87098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7862:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7826:52:126"
                },
                {
                  "expression": {
                    "id": 87110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87100,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87093,
                        "src": "7888:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 87102,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7905:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7888:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 87105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7947:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 87106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7953:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "expression": {
                            "id": 87107,
                            "name": "expectedBeforeState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87084,
                            "src": "7959:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 87108,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7979:8:126",
                          "memberName": "activeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86384,
                          "src": "7959:28:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 87103,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75759,
                          "src": "7910:23:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$75759_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 87104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7934:12:126",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75662,
                        "src": "7910:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 87109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7910:78:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7888:100:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87111,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:100:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87115,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "8012:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8004:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8004:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8004:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87117,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "8022:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87118,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "8029:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87112,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "7999:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7999:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87120,
                  "nodeType": "ExpressionStatement",
                  "src": "7999:37:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87124,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "8059:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8051:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8051:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8051:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87126,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "8066:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "8073:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87121,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "8046:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8046:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87129,
                  "nodeType": "ExpressionStatement",
                  "src": "8046:34:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87133,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "8105:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87130,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8091:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8094:10:126",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15779,
                      "src": "8091:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87135,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87141,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "8146:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8138:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8138:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8138:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87143,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "8160:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87136,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "8121:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8129:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "8121:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8121:46:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87145,
                  "nodeType": "ExpressionStatement",
                  "src": "8121:46:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87151,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "8199:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8191:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8191:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8191:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87153,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "8213:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87146,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "8177:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8182:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "8177:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8177:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87155,
                  "nodeType": "ExpressionStatement",
                  "src": "8177:43:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87159,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "8247:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87160,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87093,
                        "src": "8254:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 87161,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "8272:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87156,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "8230:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8242:4:126",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60676,
                      "src": "8230:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 87162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8230:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 87163,
                  "nodeType": "ExpressionStatement",
                  "src": "8230:48:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87164,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8288:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8291:9:126",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15791,
                      "src": "8288:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:14:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87168,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:14:126"
                },
                {
                  "assignments": [
                    87171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87171,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "8326:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87250,
                      "src": "8313:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87169,
                          "name": "State",
                          "nameLocations": [
                            "8313:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "8313:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "8313:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87175,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87172,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "8347:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8353:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "8347:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8347:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8313:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87178,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "8406:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8412:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "8406:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8406:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87177,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8396:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8396:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87185,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "8510:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8519:10:126",
                                  "memberName": "beforeMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67733,
                                  "src": "8510:19:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeMint(address,address,bytes32[] calldata,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 87187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8530:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8510:28:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87188,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "8560:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87189,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "8587:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87190,
                                "name": "liquidityConfigs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87093,
                                "src": "8614:16:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 87193,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "8677:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 87194,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "8685:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 87191,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "8652:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 87192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8670:6:126",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75793,
                                  "src": "8652:24:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 87195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8652:40:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 87183,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8466:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8470:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "8466:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8466:244:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87182,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8439:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8439:285:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724d696e74486f6f6b733a3a31",
                        "id": 87198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8738:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0db1c8b109928dfbe7e9ef89db6635e2bc29c2e2de039db9764f40894a69e43",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::1\""
                        },
                        "value": "test_BeforeAfterMintHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0db1c8b109928dfbe7e9ef89db6635e2bc29c2e2de039db9764f40894a69e43",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::1\""
                        }
                      ],
                      "id": 87176,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "8374:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8374:404:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87200,
                  "nodeType": "ExpressionStatement",
                  "src": "8374:404:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87203,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "8821:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8827:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "8821:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8821:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87202,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8811:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8811:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87210,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "8924:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8933:9:126",
                                  "memberName": "afterMint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67747,
                                  "src": "8924:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterMint(address,address,bytes32[] calldata,bytes32) returns (bytes4)"
                                  }
                                },
                                "id": 87212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8943:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8924:27:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87213,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "8973:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87214,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "9000:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87215,
                                "name": "liquidityConfigs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87093,
                                "src": "9027:16:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 87218,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "9090:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "id": 87219,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86406,
                                    "src": "9098:6:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "id": 87216,
                                    "name": "PackedUint128Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76113,
                                    "src": "9065:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                      "typeString": "type(library PackedUint128Math)"
                                    }
                                  },
                                  "id": 87217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9083:6:126",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75793,
                                  "src": "9065:24:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                    "typeString": "function (uint128,uint128) pure returns (bytes32)"
                                  }
                                },
                                "id": 87220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9065:40:126",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 87208,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8880:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8884:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "8880:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8880:243:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87207,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8853:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8853:284:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724d696e74486f6f6b733a3a32",
                        "id": 87223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9151:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ec8a95b59e81203b05e64a63405a9f6105362d7be87d6f898e651f5d4bf12e",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::2\""
                        },
                        "value": "test_BeforeAfterMintHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ec8a95b59e81203b05e64a63405a9f6105362d7be87d6f898e651f5d4bf12e",
                          "typeString": "literal_string \"test_BeforeAfterMintHooks::2\""
                        }
                      ],
                      "id": 87201,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "8789:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8789:402:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87225,
                  "nodeType": "ExpressionStatement",
                  "src": "8789:402:126"
                },
                {
                  "assignments": [
                    87228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87228,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "9215:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87250,
                      "src": "9202:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87227,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87226,
                          "name": "State",
                          "nameLocations": [
                            "9202:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "9202:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "9202:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87232,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87229,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "9234:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9240:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "9234:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9202:54:126"
                },
                {
                  "assignments": [
                    87235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87235,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "9279:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87250,
                      "src": "9266:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87233,
                          "name": "State",
                          "nameLocations": [
                            "9266:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "9266:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "9266:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87239,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87236,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "9297:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9303:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "9297:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9297:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9266:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87241,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87228,
                        "src": "9343:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87242,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87084,
                        "src": "9361:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87240,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "9329:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9329:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87244,
                  "nodeType": "ExpressionStatement",
                  "src": "9329:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87246,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87235,
                        "src": "9405:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87247,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87171,
                        "src": "9422:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87245,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "9391:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9391:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87249,
                  "nodeType": "ExpressionStatement",
                  "src": "9391:50:126"
                }
              ]
            },
            "functionSelector": "b8c238fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterMintHooks",
            "nameLocation": "7719:25:126",
            "parameters": {
              "id": 87080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7744:2:126"
            },
            "returnParameters": {
              "id": 87081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7754:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87465,
            "nodeType": "FunctionDefinition",
            "src": "9454:1643:126",
            "nodes": [],
            "body": {
              "id": 87464,
              "nodeType": "Block",
              "src": "9498:1599:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87255,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "9515:8:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "9508:15:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 87254,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9508:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87259,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87256,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "9526:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9538:11:126",
                      "memberName": "getActiveId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59299,
                      "src": "9526:23:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                        "typeString": "function () view external returns (uint24)"
                      }
                    },
                    "id": 87258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9526:25:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9508:43:126"
                },
                {
                  "assignments": [
                    87264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87264,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "9579:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "9562:33:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87262,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9562:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87263,
                        "nodeType": "ArrayTypeName",
                        "src": "9562:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87270,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9612:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9598:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87265,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9602:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87266,
                        "nodeType": "ArrayTypeName",
                        "src": "9602:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 87269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9598:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9562:52:126"
                },
                {
                  "expression": {
                    "id": 87280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87271,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87264,
                        "src": "9624:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 87273,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9641:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9624:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 87276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9683:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 87277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9689:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "id": 87278,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87255,
                          "src": "9695:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 87274,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75759,
                          "src": "9646:23:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$75759_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 87275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9670:12:126",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75662,
                        "src": "9646:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 87279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9646:58:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9624:80:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87281,
                  "nodeType": "ExpressionStatement",
                  "src": "9624:80:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87285,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "9728:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9720:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9720:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9720:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87287,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "9738:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87288,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "9745:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87282,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "9715:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9715:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87290,
                  "nodeType": "ExpressionStatement",
                  "src": "9715:37:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87294,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "9775:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9767:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87292,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9767:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9767:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87296,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "9782:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87297,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "9789:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87291,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "9762:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9762:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87299,
                  "nodeType": "ExpressionStatement",
                  "src": "9762:34:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87303,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "9821:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87300,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9807:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9810:10:126",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15779,
                      "src": "9807:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9807:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87305,
                  "nodeType": "ExpressionStatement",
                  "src": "9807:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87311,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "9862:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9854:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9854:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9854:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87313,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "9876:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87306,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "9837:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9845:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "9837:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:46:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87315,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:46:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87321,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "9915:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9907:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87319,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9907:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9907:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87323,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "9929:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87316,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "9893:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9898:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "9893:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9893:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87325,
                  "nodeType": "ExpressionStatement",
                  "src": "9893:43:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87329,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "9963:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87330,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87264,
                        "src": "9970:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 87331,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "9988:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87326,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "9946:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9958:4:126",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60676,
                      "src": "9946:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 87332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9946:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 87333,
                  "nodeType": "ExpressionStatement",
                  "src": "9946:48:126"
                },
                {
                  "assignments": [
                    87336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87336,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "10018:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10005:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87335,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87334,
                          "name": "State",
                          "nameLocations": [
                            "10005:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "10005:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "10005:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87340,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87337,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "10040:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10046:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "10040:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10040:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10005:51:126"
                },
                {
                  "assignments": [
                    87345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87345,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "10084:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10067:20:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10067:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87344,
                        "nodeType": "ArrayTypeName",
                        "src": "10067:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87351,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10104:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10090:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10094:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87347,
                        "nodeType": "ArrayTypeName",
                        "src": "10094:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 87350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10090:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10067:39:126"
                },
                {
                  "expression": {
                    "id": 87356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87352,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87345,
                        "src": "10116:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 87354,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10120:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10116:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87355,
                      "name": "activeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87255,
                      "src": "10125:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "10116:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87357,
                  "nodeType": "ExpressionStatement",
                  "src": "10116:17:126"
                },
                {
                  "assignments": [
                    87362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87362,
                      "mutability": "mutable",
                      "name": "amountsToBurn",
                      "nameLocation": "10161:13:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10144:30:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10144:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87361,
                        "nodeType": "ArrayTypeName",
                        "src": "10144:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87368,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10191:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10177:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87363,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10181:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87364,
                        "nodeType": "ArrayTypeName",
                        "src": "10181:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 87367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10177:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10144:49:126"
                },
                {
                  "expression": {
                    "id": 87373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87369,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87362,
                        "src": "10203:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 87371,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10203:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87372,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86406,
                      "src": "10222:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "10203:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87374,
                  "nodeType": "ExpressionStatement",
                  "src": "10203:25:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87378,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "10256:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87379,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "10263:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87380,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87345,
                        "src": "10270:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 87381,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87362,
                        "src": "10275:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 87375,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "10239:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10251:4:126",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60906,
                      "src": "10239:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 87382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10239:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 87383,
                  "nodeType": "ExpressionStatement",
                  "src": "10239:50:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87384,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10299:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10302:9:126",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15791,
                      "src": "10299:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10299:14:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87388,
                  "nodeType": "ExpressionStatement",
                  "src": "10299:14:126"
                },
                {
                  "assignments": [
                    87391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87391,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "10337:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10324:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87390,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87389,
                          "name": "State",
                          "nameLocations": [
                            "10324:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "10324:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "10324:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87395,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87392,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "10358:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10364:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "10358:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10358:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10324:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87398,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "10417:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10423:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "10417:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10417:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87397,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10407:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10407:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87405,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "10483:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10492:10:126",
                                  "memberName": "beforeBurn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67764,
                                  "src": "10483:19:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeBurn(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 87407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10503:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "10483:28:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87408,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10513:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87409,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10520:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87410,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10527:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87411,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87345,
                                "src": "10534:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 87412,
                                "name": "amountsToBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87362,
                                "src": "10539:13:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 87403,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10460:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10464:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "10460:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10460:93:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87402,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10450:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10450:104:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724275726e486f6f6b733a3a31",
                        "id": 87415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10568:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464273b8aa9ba87e0ef16287084e41c5229075cb4d21e2ca097b5dd53c8ccbfd",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::1\""
                        },
                        "value": "test_BeforeAfterBurnHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464273b8aa9ba87e0ef16287084e41c5229075cb4d21e2ca097b5dd53c8ccbfd",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::1\""
                        }
                      ],
                      "id": 87396,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "10385:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10385:223:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87417,
                  "nodeType": "ExpressionStatement",
                  "src": "10385:223:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87420,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "10651:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10657:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "10651:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10651:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87419,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10641:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10641:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87427,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "10716:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10725:9:126",
                                  "memberName": "afterBurn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67781,
                                  "src": "10716:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterBurn(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 87429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10735:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "10716:27:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87430,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10745:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87431,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10752:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87432,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "10759:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87433,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87345,
                                "src": "10766:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 87434,
                                "name": "amountsToBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87362,
                                "src": "10771:13:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 87425,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "10693:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10697:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "10693:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10693:92:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87424,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "10683:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10683:103:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f726541667465724275726e486f6f6b733a3a32",
                        "id": 87437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10800:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd025da3a00b12073ef75f79a44168964ca72097198c872d05dc77b33d81e0d3",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::2\""
                        },
                        "value": "test_BeforeAfterBurnHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd025da3a00b12073ef75f79a44168964ca72097198c872d05dc77b33d81e0d3",
                          "typeString": "literal_string \"test_BeforeAfterBurnHooks::2\""
                        }
                      ],
                      "id": 87418,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "10619:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:221:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87439,
                  "nodeType": "ExpressionStatement",
                  "src": "10619:221:126"
                },
                {
                  "assignments": [
                    87442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87442,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "10864:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10851:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87441,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87440,
                          "name": "State",
                          "nameLocations": [
                            "10851:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "10851:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "10851:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87446,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87443,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "10883:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10889:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "10883:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10883:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10851:54:126"
                },
                {
                  "assignments": [
                    87449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87449,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "10928:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87464,
                      "src": "10915:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87448,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87447,
                          "name": "State",
                          "nameLocations": [
                            "10915:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "10915:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "10915:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87453,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87450,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "10946:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10952:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "10946:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10946:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10915:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87455,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87442,
                        "src": "10992:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87456,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87336,
                        "src": "11010:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87454,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "10978:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10978:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87458,
                  "nodeType": "ExpressionStatement",
                  "src": "10978:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87460,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87449,
                        "src": "11054:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87461,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87391,
                        "src": "11071:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87459,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "11040:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11040:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87463,
                  "nodeType": "ExpressionStatement",
                  "src": "11040:50:126"
                }
              ]
            },
            "functionSelector": "06fb3530",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterBurnHooks",
            "nameLocation": "9463:25:126",
            "parameters": {
              "id": 87252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:2:126"
            },
            "returnParameters": {
              "id": 87253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9498:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87679,
            "nodeType": "FunctionDefinition",
            "src": "11103:1715:126",
            "nodes": [],
            "body": {
              "id": 87678,
              "nodeType": "Block",
              "src": "11160:1658:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87469,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "11177:8:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11170:15:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 87468,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "11170:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87473,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87470,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "11188:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11200:11:126",
                      "memberName": "getActiveId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59299,
                      "src": "11188:23:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                        "typeString": "function () view external returns (uint24)"
                      }
                    },
                    "id": 87472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11188:25:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11170:43:126"
                },
                {
                  "assignments": [
                    87478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87478,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "11241:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11224:33:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87476,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11224:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87477,
                        "nodeType": "ArrayTypeName",
                        "src": "11224:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87484,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11274:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11260:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87479,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11264:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 87480,
                        "nodeType": "ArrayTypeName",
                        "src": "11264:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 87483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11224:52:126"
                },
                {
                  "expression": {
                    "id": 87494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87485,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87478,
                        "src": "11286:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 87487,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11303:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11286:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31653138",
                          "id": 87490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11345:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "hexValue": "31653138",
                          "id": 87491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11351:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        {
                          "id": 87492,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87469,
                          "src": "11357:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 87488,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75759,
                          "src": "11308:23:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$75759_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 87489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11332:12:126",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75662,
                        "src": "11308:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 87493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11308:58:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11286:80:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87495,
                  "nodeType": "ExpressionStatement",
                  "src": "11286:80:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87499,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "11390:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11382:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11382:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11382:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87501,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11400:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87502,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "11407:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87496,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "11377:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11377:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87504,
                  "nodeType": "ExpressionStatement",
                  "src": "11377:37:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87508,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "11437:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11429:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87506,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11429:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11429:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87510,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11444:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87511,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "11451:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87505,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "11424:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11424:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87513,
                  "nodeType": "ExpressionStatement",
                  "src": "11424:34:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87517,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11483:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87514,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11469:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11472:10:126",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15779,
                      "src": "11469:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11469:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87519,
                  "nodeType": "ExpressionStatement",
                  "src": "11469:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87525,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "11524:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11516:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11516:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11516:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87527,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "11538:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87520,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "11499:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11507:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "11499:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11499:46:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87529,
                  "nodeType": "ExpressionStatement",
                  "src": "11499:46:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87535,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "11577:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11569:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87533,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11569:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11569:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87537,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "11591:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87530,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "11555:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11560:8:126",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "11555:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11555:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87539,
                  "nodeType": "ExpressionStatement",
                  "src": "11555:43:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87543,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11625:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87544,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87478,
                        "src": "11632:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 87545,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11650:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87540,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "11608:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11620:4:126",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60676,
                      "src": "11608:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 87546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11608:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 87547,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:48:126"
                },
                {
                  "assignments": [
                    87550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87550,
                      "mutability": "mutable",
                      "name": "expectedBeforeState",
                      "nameLocation": "11680:19:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11667:32:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87549,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87548,
                          "name": "State",
                          "nameLocations": [
                            "11667:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "11667:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "11667:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87554,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87551,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "11702:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11708:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "11702:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11702:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11667:51:126"
                },
                {
                  "assignments": [
                    87559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87559,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "11746:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11729:20:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11729:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87558,
                        "nodeType": "ArrayTypeName",
                        "src": "11729:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87565,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11766:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11752:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87560,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11756:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87561,
                        "nodeType": "ArrayTypeName",
                        "src": "11756:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 87564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11752:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11729:39:126"
                },
                {
                  "expression": {
                    "id": 87570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87566,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87559,
                        "src": "11778:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 87568,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11782:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11778:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87569,
                      "name": "activeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87469,
                      "src": "11787:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "11778:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87571,
                  "nodeType": "ExpressionStatement",
                  "src": "11778:17:126"
                },
                {
                  "assignments": [
                    87576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87576,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11823:7:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11806:24:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87574,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11806:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87575,
                        "nodeType": "ArrayTypeName",
                        "src": "11806:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87582,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 87580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11847:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 87579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11833:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 87577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11837:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87578,
                        "nodeType": "ArrayTypeName",
                        "src": "11837:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 87581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11833:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11806:43:126"
                },
                {
                  "expression": {
                    "id": 87587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87583,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87576,
                        "src": "11859:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 87585,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 87584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11867:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11859:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87586,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86406,
                      "src": "11872:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "11859:19:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87588,
                  "nodeType": "ExpressionStatement",
                  "src": "11859:19:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87592,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "11919:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87593,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99525,
                        "src": "11926:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87594,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87559,
                        "src": "11931:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 87595,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87576,
                        "src": "11936:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 87589,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "11889:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11901:17:126",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61231,
                      "src": "11889:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 87596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11889:55:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87597,
                  "nodeType": "ExpressionStatement",
                  "src": "11889:55:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87598,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11954:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11957:9:126",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15791,
                      "src": "11954:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11954:14:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87602,
                  "nodeType": "ExpressionStatement",
                  "src": "11954:14:126"
                },
                {
                  "assignments": [
                    87605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87605,
                      "mutability": "mutable",
                      "name": "expectedAfterState",
                      "nameLocation": "11992:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "11979:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87604,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87603,
                          "name": "State",
                          "nameLocations": [
                            "11979:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "11979:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "11979:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87609,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87606,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "12013:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12019:8:126",
                      "memberName": "getState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89492,
                      "src": "12013:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12013:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11979:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87612,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "12072:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12078:10:126",
                              "memberName": "beforeData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106864,
                              "src": "12072:16:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12072:18:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87611,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12062:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12062:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87619,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "12155:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12164:23:126",
                                  "memberName": "beforeBatchTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67798,
                                  "src": "12155:32:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.beforeBatchTransferFrom(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 87621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12188:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "12155:41:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87622,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "12198:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87623,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "12205:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87624,
                                "name": "BOB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99525,
                                "src": "12212:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87625,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87559,
                                "src": "12217:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 87626,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87576,
                                "src": "12222:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 87617,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12132:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12136:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "12132:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12132:98:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87616,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12105:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12105:139:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a31",
                        "id": 87629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12258:43:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bba10984d0b8ce672d4d312555d8fa02d821de8c2e095f128a6cd18b075c066",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::1\""
                        },
                        "value": "test_BeforeAfterBatchTransferFromHooks::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bba10984d0b8ce672d4d312555d8fa02d821de8c2e095f128a6cd18b075c066",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::1\""
                        }
                      ],
                      "id": 87610,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "12040:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12040:271:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87631,
                  "nodeType": "ExpressionStatement",
                  "src": "12040:271:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87634,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86403,
                                "src": "12354:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                                  "typeString": "contract MockLBHooks"
                                }
                              },
                              "id": 87635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12360:9:126",
                              "memberName": "afterData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 106866,
                              "src": "12354:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () view external returns (bytes memory)"
                              }
                            },
                            "id": 87636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12354:17:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87633,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12344:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12344:28:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 87641,
                                    "name": "ILBHooks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67816,
                                    "src": "12419:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ILBHooks_$67816_$",
                                      "typeString": "type(contract ILBHooks)"
                                    }
                                  },
                                  "id": 87642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12428:22:126",
                                  "memberName": "afterBatchTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67815,
                                  "src": "12419:31:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function ILBHooks.afterBatchTransferFrom(address,address,address,uint256[] calldata,uint256[] calldata) returns (bytes4)"
                                  }
                                },
                                "id": 87643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12451:8:126",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "12419:40:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "id": 87644,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "12461:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87645,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99517,
                                "src": "12468:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87646,
                                "name": "BOB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99525,
                                "src": "12475:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 87647,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87559,
                                "src": "12480:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 87648,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87576,
                                "src": "12485:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "expression": {
                                "id": 87639,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12396:3:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 87640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12400:18:126",
                              "memberName": "encodeWithSelector",
                              "nodeType": "MemberAccess",
                              "src": "12396:22:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes4) pure returns (bytes memory)"
                              }
                            },
                            "id": 87649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12396:97:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 87638,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "12386:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 87650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12386:108:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "746573745f4265666f7265416674657242617463685472616e7366657246726f6d486f6f6b733a3a32",
                        "id": 87651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12508:43:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_399e107c8394fda667492ef92718b8d74aabf2375add65ed42ef93cff40b2d30",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::2\""
                        },
                        "value": "test_BeforeAfterBatchTransferFromHooks::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_399e107c8394fda667492ef92718b8d74aabf2375add65ed42ef93cff40b2d30",
                          "typeString": "literal_string \"test_BeforeAfterBatchTransferFromHooks::2\""
                        }
                      ],
                      "id": 87632,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 611,
                      "src": "12322:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes32,string memory) pure"
                      }
                    },
                    "id": 87652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12322:239:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87653,
                  "nodeType": "ExpressionStatement",
                  "src": "12322:239:126"
                },
                {
                  "assignments": [
                    87656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87656,
                      "mutability": "mutable",
                      "name": "hooksBeforeState",
                      "nameLocation": "12585:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "12572:29:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87655,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87654,
                          "name": "State",
                          "nameLocations": [
                            "12572:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "12572:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "12572:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87660,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87657,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "12604:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12610:14:126",
                      "memberName": "getBeforeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88914,
                      "src": "12604:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12604:22:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12572:54:126"
                },
                {
                  "assignments": [
                    87663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87663,
                      "mutability": "mutable",
                      "name": "hooksAfterState",
                      "nameLocation": "12649:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87678,
                      "src": "12636:28:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State"
                      },
                      "typeName": {
                        "id": 87662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87661,
                          "name": "State",
                          "nameLocations": [
                            "12636:5:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86395,
                          "src": "12636:5:126"
                        },
                        "referencedDeclaration": 86395,
                        "src": "12636:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                          "typeString": "struct State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87667,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87664,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "12667:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12673:13:126",
                      "memberName": "getAfterState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88923,
                      "src": "12667:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                        "typeString": "function () view external returns (struct State memory)"
                      }
                    },
                    "id": 87666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12667:21:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                      "typeString": "struct State memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12636:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87669,
                        "name": "hooksBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87656,
                        "src": "12713:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87670,
                        "name": "expectedBeforeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87550,
                        "src": "12731:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87668,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "12699:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12699:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87672,
                  "nodeType": "ExpressionStatement",
                  "src": "12699:52:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87674,
                        "name": "hooksAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87663,
                        "src": "12775:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      },
                      {
                        "id": 87675,
                        "name": "expectedAfterState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87605,
                        "src": "12792:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                          "typeString": "struct State memory"
                        }
                      ],
                      "id": 87673,
                      "name": "_verifyStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87895,
                      "src": "12761:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_State_$86395_memory_ptr_$_t_struct$_State_$86395_memory_ptr_$returns$__$",
                        "typeString": "function (struct State memory,struct State memory) pure"
                      }
                    },
                    "id": 87676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12761:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87677,
                  "nodeType": "ExpressionStatement",
                  "src": "12761:50:126"
                }
              ]
            },
            "functionSelector": "a42b6139",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BeforeAfterBatchTransferFromHooks",
            "nameLocation": "11112:38:126",
            "parameters": {
              "id": 87466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11150:2:126"
            },
            "returnParameters": {
              "id": 87467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11160:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87733,
            "nodeType": "FunctionDefinition",
            "src": "12824:396:126",
            "nodes": [],
            "body": {
              "id": 87732,
              "nodeType": "Block",
              "src": "12844:376:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87685,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "12867:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12859:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87683,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12859:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12859:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 87689,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "12885:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12877:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12877:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12877:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87695,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99561,
                                  "src": "12925:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 87694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12917:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87693,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12917:7:126",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12917:20:126",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 87691,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99528,
                              "src": "12899:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$107167",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 87692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12907:9:126",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41719,
                            "src": "12899:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 87697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12899:39:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 87698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12941:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 87699,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "12945:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "12941:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12899:52:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87682,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "12854:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12854:98:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87703,
                  "nodeType": "ExpressionStatement",
                  "src": "12854:98:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87707,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "12975:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12967:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87705,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12967:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12967:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 87711,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "12990:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12982:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87709,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12982:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12982:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87717,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99561,
                                  "src": "13027:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 87716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13019:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87715,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13019:7:126",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13019:20:126",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 87713,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99531,
                              "src": "13004:4:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                "typeString": "contract ERC20Mock"
                              }
                            },
                            "id": 87714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13009:9:126",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41719,
                            "src": "13004:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 87719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13004:36:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 87720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13043:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 87721,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "13047:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "13043:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13004:49:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87704,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "12962:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12962:92:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87725,
                  "nodeType": "ExpressionStatement",
                  "src": "12962:92:126"
                },
                {
                  "assignments": [
                    87727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87727,
                      "mutability": "mutable",
                      "name": "callback_success",
                      "nameLocation": "13073:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87732,
                      "src": "13065:24:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 87726,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13065:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87730,
                  "initialValue": {
                    "expression": {
                      "id": 87728,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71953,
                      "src": "13092:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$71953_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 87729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "13102:16:126",
                    "memberName": "CALLBACK_SUCCESS",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 71952,
                    "src": "13092:26:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13065:53:126"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13137:77:126",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13158:1:126",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "callback_success",
                              "nodeType": "YulIdentifier",
                              "src": "13161:16:126"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13151:6:126"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13151:27:126"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13151:27:126"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13198:1:126",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13201:2:126",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13191:6:126"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13191:13:126"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13191:13:126"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 87727,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13161:16:126",
                      "valueSize": 1
                    }
                  ],
                  "id": 87731,
                  "nodeType": "InlineAssembly",
                  "src": "13128:86:126"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12832:2:126"
            },
            "returnParameters": {
              "id": 87681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12844:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87895,
            "nodeType": "FunctionDefinition",
            "src": "13226:1698:126",
            "nodes": [],
            "body": {
              "id": 87894,
              "nodeType": "Block",
              "src": "13316:1608:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87743,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13335:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13346:8:126",
                        "memberName": "reserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86376,
                        "src": "13335:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87745,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13356:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13370:8:126",
                        "memberName": "reserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86376,
                        "src": "13356:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a31",
                        "id": 87747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13380:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5025449c4b3be533e83464e775f34d1e999cb011c9f0dc1c7a6d1edd110a107a",
                          "typeString": "literal_string \"_verifyStates::1\""
                        },
                        "value": "_verifyStates::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5025449c4b3be533e83464e775f34d1e999cb011c9f0dc1c7a6d1edd110a107a",
                          "typeString": "literal_string \"_verifyStates::1\""
                        }
                      ],
                      "id": 87742,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13326:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13326:73:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87749,
                  "nodeType": "ExpressionStatement",
                  "src": "13326:73:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87751,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13418:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87752,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13429:8:126",
                        "memberName": "reserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86378,
                        "src": "13418:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87753,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13439:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87754,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13453:8:126",
                        "memberName": "reserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86378,
                        "src": "13439:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a32",
                        "id": 87755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13463:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46ec804b743e1ccf51e0b5934e9d0659d5a1c9e9a018ba9786d95d74e48861c4",
                          "typeString": "literal_string \"_verifyStates::2\""
                        },
                        "value": "_verifyStates::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46ec804b743e1ccf51e0b5934e9d0659d5a1c9e9a018ba9786d95d74e48861c4",
                          "typeString": "literal_string \"_verifyStates::2\""
                        }
                      ],
                      "id": 87750,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13409:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13409:73:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87757,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:73:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87759,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13501:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13512:12:126",
                        "memberName": "protocolFeeX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86380,
                        "src": "13501:23:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87761,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13526:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13540:12:126",
                        "memberName": "protocolFeeX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86380,
                        "src": "13526:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a33",
                        "id": 87763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13554:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ad897216e87ed47e81cd812ae3f2cb556b2d841facb5639181a5db489ed521c",
                          "typeString": "literal_string \"_verifyStates::3\""
                        },
                        "value": "_verifyStates::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ad897216e87ed47e81cd812ae3f2cb556b2d841facb5639181a5db489ed521c",
                          "typeString": "literal_string \"_verifyStates::3\""
                        }
                      ],
                      "id": 87758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13492:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13492:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87765,
                  "nodeType": "ExpressionStatement",
                  "src": "13492:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87767,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13592:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87768,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13603:12:126",
                        "memberName": "protocolFeeY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86382,
                        "src": "13592:23:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87769,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13617:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87770,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13631:12:126",
                        "memberName": "protocolFeeY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86382,
                        "src": "13617:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a34",
                        "id": 87771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13645:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_492ffbfb215a064365c205d7df6d2ec7ae4cd9c2c402c7c9c8801afa6c545dee",
                          "typeString": "literal_string \"_verifyStates::4\""
                        },
                        "value": "_verifyStates::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_492ffbfb215a064365c205d7df6d2ec7ae4cd9c2c402c7c9c8801afa6c545dee",
                          "typeString": "literal_string \"_verifyStates::4\""
                        }
                      ],
                      "id": 87766,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13583:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13583:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87773,
                  "nodeType": "ExpressionStatement",
                  "src": "13583:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87775,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13683:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87776,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13694:8:126",
                        "memberName": "activeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86384,
                        "src": "13683:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 87777,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13704:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87778,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13718:8:126",
                        "memberName": "activeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86384,
                        "src": "13704:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a35",
                        "id": 87779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13728:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70453dfd608c63567c90adbf8eb48d3774d30e923475e5776171eba80e19c8cd",
                          "typeString": "literal_string \"_verifyStates::5\""
                        },
                        "value": "_verifyStates::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70453dfd608c63567c90adbf8eb48d3774d30e923475e5776171eba80e19c8cd",
                          "typeString": "literal_string \"_verifyStates::5\""
                        }
                      ],
                      "id": 87774,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13674:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13674:73:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87781,
                  "nodeType": "ExpressionStatement",
                  "src": "13674:73:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87783,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13766:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87784,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13777:14:126",
                        "memberName": "activeReserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86386,
                        "src": "13766:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87785,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13793:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13807:14:126",
                        "memberName": "activeReserveX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86386,
                        "src": "13793:28:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a36",
                        "id": 87787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13823:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc7a5ea0948d0e764b45ed596d3c96a7d91e71a838039124495e79b8c2956bf",
                          "typeString": "literal_string \"_verifyStates::6\""
                        },
                        "value": "_verifyStates::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc7a5ea0948d0e764b45ed596d3c96a7d91e71a838039124495e79b8c2956bf",
                          "typeString": "literal_string \"_verifyStates::6\""
                        }
                      ],
                      "id": 87782,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13757:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13757:85:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87789,
                  "nodeType": "ExpressionStatement",
                  "src": "13757:85:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87791,
                          "name": "hooksState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87736,
                          "src": "13861:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13872:14:126",
                        "memberName": "activeReserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86388,
                        "src": "13861:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 87793,
                          "name": "expectedState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87739,
                          "src": "13888:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                            "typeString": "struct State memory"
                          }
                        },
                        "id": 87794,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13902:14:126",
                        "memberName": "activeReserveY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86388,
                        "src": "13888:28:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a37",
                        "id": 87795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13918:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d27d92b73ef5485386a7a7c3479cfc5bf6f1ff01a3b14bbb73126caf7accb41",
                          "typeString": "literal_string \"_verifyStates::7\""
                        },
                        "value": "_verifyStates::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d27d92b73ef5485386a7a7c3479cfc5bf6f1ff01a3b14bbb73126caf7accb41",
                          "typeString": "literal_string \"_verifyStates::7\""
                        }
                      ],
                      "id": 87790,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13852:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13852:85:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87797,
                  "nodeType": "ExpressionStatement",
                  "src": "13852:85:126"
                },
                {
                  "assignments": [
                    87800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87800,
                      "mutability": "mutable",
                      "name": "vp",
                      "nameLocation": "13976:2:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87894,
                      "src": "13948:30:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 87799,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87798,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "13948:20:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86363,
                          "src": "13948:20:126"
                        },
                        "referencedDeclaration": 86363,
                        "src": "13948:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$86363_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87803,
                  "initialValue": {
                    "expression": {
                      "id": 87801,
                      "name": "hooksState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87736,
                      "src": "13981:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 87802,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13992:20:126",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86391,
                    "src": "13981:31:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13948:64:126"
                },
                {
                  "assignments": [
                    87806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87806,
                      "mutability": "mutable",
                      "name": "evp",
                      "nameLocation": "14050:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87894,
                      "src": "14022:31:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 87805,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87804,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "14022:20:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86363,
                          "src": "14022:20:126"
                        },
                        "referencedDeclaration": 86363,
                        "src": "14022:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$86363_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87809,
                  "initialValue": {
                    "expression": {
                      "id": 87807,
                      "name": "expectedState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87739,
                      "src": "14056:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 87808,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14070:20:126",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86391,
                    "src": "14056:34:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14022:68:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87811,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87800,
                          "src": "14110:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14113:21:126",
                        "memberName": "volatilityAccumulator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86356,
                        "src": "14110:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 87813,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87806,
                          "src": "14136:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14140:21:126",
                        "memberName": "volatilityAccumulator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86356,
                        "src": "14136:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a38",
                        "id": 87815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14163:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01b0e3419f254c8189d653fa1ad6e77522c675194b3c013560e67480da7d7100",
                          "typeString": "literal_string \"_verifyStates::8\""
                        },
                        "value": "_verifyStates::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01b0e3419f254c8189d653fa1ad6e77522c675194b3c013560e67480da7d7100",
                          "typeString": "literal_string \"_verifyStates::8\""
                        }
                      ],
                      "id": 87810,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14101:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14101:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87817,
                  "nodeType": "ExpressionStatement",
                  "src": "14101:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87819,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87800,
                          "src": "14201:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87820,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14204:19:126",
                        "memberName": "volatilityReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86358,
                        "src": "14201:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 87821,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87806,
                          "src": "14225:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87822,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14229:19:126",
                        "memberName": "volatilityReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86358,
                        "src": "14225:23:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a39",
                        "id": 87823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14250:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cefe8918b96176c4e62a27f305e5a50df5186542947f329853450fdc0c4d3b",
                          "typeString": "literal_string \"_verifyStates::9\""
                        },
                        "value": "_verifyStates::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cefe8918b96176c4e62a27f305e5a50df5186542947f329853450fdc0c4d3b",
                          "typeString": "literal_string \"_verifyStates::9\""
                        }
                      ],
                      "id": 87818,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14192:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14192:77:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87825,
                  "nodeType": "ExpressionStatement",
                  "src": "14192:77:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87827,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87800,
                          "src": "14288:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87828,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14291:11:126",
                        "memberName": "idReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86360,
                        "src": "14288:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 87829,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87806,
                          "src": "14304:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87830,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14308:11:126",
                        "memberName": "idReference",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86360,
                        "src": "14304:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3130",
                        "id": 87831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14321:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25e5e11ec4ae33843a704b93489f88310fb98a3fdeb344ba00f1313d6dde13e3",
                          "typeString": "literal_string \"_verifyStates::10\""
                        },
                        "value": "_verifyStates::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25e5e11ec4ae33843a704b93489f88310fb98a3fdeb344ba00f1313d6dde13e3",
                          "typeString": "literal_string \"_verifyStates::10\""
                        }
                      ],
                      "id": 87826,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14279:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14279:62:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87833,
                  "nodeType": "ExpressionStatement",
                  "src": "14279:62:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87835,
                          "name": "vp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87800,
                          "src": "14360:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87836,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14363:16:126",
                        "memberName": "timeOfLastUpdate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86362,
                        "src": "14360:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 87837,
                          "name": "evp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87806,
                          "src": "14381:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                            "typeString": "struct VolatilityParameters memory"
                          }
                        },
                        "id": 87838,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14385:16:126",
                        "memberName": "timeOfLastUpdate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86362,
                        "src": "14381:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3131",
                        "id": 87839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14403:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf4532b9b4d89e14429ae86c0104796aae934ecf2b000730c1c6215bf2dd9a2e",
                          "typeString": "literal_string \"_verifyStates::11\""
                        },
                        "value": "_verifyStates::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf4532b9b4d89e14429ae86c0104796aae934ecf2b000730c1c6215bf2dd9a2e",
                          "typeString": "literal_string \"_verifyStates::11\""
                        }
                      ],
                      "id": 87834,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14351:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14351:72:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87841,
                  "nodeType": "ExpressionStatement",
                  "src": "14351:72:126"
                },
                {
                  "assignments": [
                    87844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87844,
                      "mutability": "mutable",
                      "name": "op",
                      "nameLocation": "14458:2:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87894,
                      "src": "14434:26:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 87843,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87842,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "14434:16:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86374,
                          "src": "14434:16:126"
                        },
                        "referencedDeclaration": 86374,
                        "src": "14434:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$86374_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87847,
                  "initialValue": {
                    "expression": {
                      "id": 87845,
                      "name": "hooksState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87736,
                      "src": "14463:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 87846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14474:16:126",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86394,
                    "src": "14463:27:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14434:56:126"
                },
                {
                  "assignments": [
                    87850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87850,
                      "mutability": "mutable",
                      "name": "eop",
                      "nameLocation": "14524:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 87894,
                      "src": "14500:27:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 87849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87848,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "14500:16:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86374,
                          "src": "14500:16:126"
                        },
                        "referencedDeclaration": 86374,
                        "src": "14500:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$86374_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87853,
                  "initialValue": {
                    "expression": {
                      "id": 87851,
                      "name": "expectedState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87739,
                      "src": "14530:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 87852,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14544:16:126",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86394,
                    "src": "14530:30:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14500:60:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87855,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87844,
                          "src": "14580:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87856,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14583:14:126",
                        "memberName": "sampleLifetime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86365,
                        "src": "14580:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 87857,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87850,
                          "src": "14599:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14603:14:126",
                        "memberName": "sampleLifetime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86365,
                        "src": "14599:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3132",
                        "id": 87859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14619:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a1ce6f263406ea0179c667e41daaabf74f3fe69c577522f7019a6a4c5d7453d",
                          "typeString": "literal_string \"_verifyStates::12\""
                        },
                        "value": "_verifyStates::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a1ce6f263406ea0179c667e41daaabf74f3fe69c577522f7019a6a4c5d7453d",
                          "typeString": "literal_string \"_verifyStates::12\""
                        }
                      ],
                      "id": 87854,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14571:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14571:68:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87861,
                  "nodeType": "ExpressionStatement",
                  "src": "14571:68:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87863,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87844,
                          "src": "14658:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14661:4:126",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86367,
                        "src": "14658:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 87865,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87850,
                          "src": "14667:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87866,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14671:4:126",
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86367,
                        "src": "14667:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3133",
                        "id": 87867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14677:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d5ea2767b7544e759b180386e10c3d69bbe44d021464d966b41796d8d3ea2a7",
                          "typeString": "literal_string \"_verifyStates::13\""
                        },
                        "value": "_verifyStates::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d5ea2767b7544e759b180386e10c3d69bbe44d021464d966b41796d8d3ea2a7",
                          "typeString": "literal_string \"_verifyStates::13\""
                        }
                      ],
                      "id": 87862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14649:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14649:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87869,
                  "nodeType": "ExpressionStatement",
                  "src": "14649:48:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87871,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87844,
                          "src": "14716:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87872,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14719:10:126",
                        "memberName": "activeSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86369,
                        "src": "14716:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 87873,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87850,
                          "src": "14731:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87874,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14735:10:126",
                        "memberName": "activeSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86369,
                        "src": "14731:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3134",
                        "id": 87875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14747:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d8b8810a8dd52f0b497fb48e9ec30299dfa7cb4347c36c23956bc556ac28e74",
                          "typeString": "literal_string \"_verifyStates::14\""
                        },
                        "value": "_verifyStates::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d8b8810a8dd52f0b497fb48e9ec30299dfa7cb4347c36c23956bc556ac28e74",
                          "typeString": "literal_string \"_verifyStates::14\""
                        }
                      ],
                      "id": 87870,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14707:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14707:60:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87877,
                  "nodeType": "ExpressionStatement",
                  "src": "14707:60:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87879,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87844,
                          "src": "14786:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87880,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14789:11:126",
                        "memberName": "lastUpdated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86371,
                        "src": "14786:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 87881,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87850,
                          "src": "14802:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87882,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14806:11:126",
                        "memberName": "lastUpdated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86371,
                        "src": "14802:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3135",
                        "id": 87883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14819:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395a6bcb36ff2a9bf7a39653d3b8c532839390f347e463cdb4c38387804e1b8",
                          "typeString": "literal_string \"_verifyStates::15\""
                        },
                        "value": "_verifyStates::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395a6bcb36ff2a9bf7a39653d3b8c532839390f347e463cdb4c38387804e1b8",
                          "typeString": "literal_string \"_verifyStates::15\""
                        }
                      ],
                      "id": 87878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14777:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14777:62:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87885,
                  "nodeType": "ExpressionStatement",
                  "src": "14777:62:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87887,
                          "name": "op",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87844,
                          "src": "14858:2:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14861:14:126",
                        "memberName": "firstTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86373,
                        "src": "14858:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "expression": {
                          "id": 87889,
                          "name": "eop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87850,
                          "src": "14877:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                            "typeString": "struct OracleParameters memory"
                          }
                        },
                        "id": 87890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14881:14:126",
                        "memberName": "firstTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86373,
                        "src": "14877:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "5f7665726966795374617465733a3a3136",
                        "id": 87891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14897:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7095ef122d0024a60520a7eee7c52fcb30c1a3e6d5f5f0e6b3b38817d5582fc6",
                          "typeString": "literal_string \"_verifyStates::16\""
                        },
                        "value": "_verifyStates::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7095ef122d0024a60520a7eee7c52fcb30c1a3e6d5f5f0e6b3b38817d5582fc6",
                          "typeString": "literal_string \"_verifyStates::16\""
                        }
                      ],
                      "id": 87886,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "14849:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14849:68:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87893,
                  "nodeType": "ExpressionStatement",
                  "src": "14849:68:126"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyStates",
            "nameLocation": "13235:13:126",
            "parameters": {
              "id": 87740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87736,
                  "mutability": "mutable",
                  "name": "hooksState",
                  "nameLocation": "13262:10:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 87895,
                  "src": "13249:23:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 87735,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87734,
                      "name": "State",
                      "nameLocations": [
                        "13249:5:126"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86395,
                      "src": "13249:5:126"
                    },
                    "referencedDeclaration": 86395,
                    "src": "13249:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87739,
                  "mutability": "mutable",
                  "name": "expectedState",
                  "nameLocation": "13287:13:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 87895,
                  "src": "13274:26:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 87738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87737,
                      "name": "State",
                      "nameLocations": [
                        "13274:5:126"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86395,
                      "src": "13274:5:126"
                    },
                    "referencedDeclaration": 86395,
                    "src": "13274:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13248:53:126"
            },
            "returnParameters": {
              "id": 87741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13316:0:126"
            },
            "scope": 88889,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88021,
            "nodeType": "FunctionDefinition",
            "src": "14930:801:126",
            "nodes": [],
            "body": {
              "id": 88020,
              "nodeType": "Block",
              "src": "14968:763:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87901,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "14991:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14983:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87899,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14983:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14983:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 87905,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "15009:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15001:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15001:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15001:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87911,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99561,
                                  "src": "15049:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 87910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15041:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87909,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15041:7:126",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15041:20:126",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 87907,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99528,
                              "src": "15023:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$107167",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 87908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15031:9:126",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41719,
                            "src": "15023:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 87913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15023:39:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 87914,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86406,
                          "src": "15065:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "15023:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87898,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "14978:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14978:94:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87917,
                  "nodeType": "ExpressionStatement",
                  "src": "14978:94:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87923,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "15107:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15099:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87921,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15099:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15099:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 87927,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "15144:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 87928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15152:4:126",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69488,
                              "src": "15144:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function ILBPair.swap(bool,address) returns (bytes32)"
                              }
                            },
                            "id": 87929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15157:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15144:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 87930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15167:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "id": 87931,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "15173:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87925,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15121:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 87926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15125:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15121:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 87932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15121:58:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87918,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "15083:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15089:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "15083:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 87933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15083:97:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87934,
                  "nodeType": "ExpressionStatement",
                  "src": "15083:97:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 87938,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74915,
                            "src": "15207:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$74915_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 87939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15234:28:126",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74817,
                          "src": "15207:55:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 87940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15263:8:126",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "15207:64:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 87935,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15191:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15194:12:126",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "15191:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 87941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15191:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87942,
                  "nodeType": "ExpressionStatement",
                  "src": "15191:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87946,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "15291:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87943,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15282:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15285:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "15282:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15282:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87948,
                  "nodeType": "ExpressionStatement",
                  "src": "15282:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 87952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15324:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 87953,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "15330:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87949,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "15307:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15319:4:126",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60328,
                      "src": "15307:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15307:29:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87955,
                  "nodeType": "ExpressionStatement",
                  "src": "15307:29:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15371:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15363:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15363:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15363:10:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15385:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "15375:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87963,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "15379:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15375:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87956,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "15347:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15353:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "15347:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 87967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15347:41:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87968,
                  "nodeType": "ExpressionStatement",
                  "src": "15347:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87974,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "15422:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15414:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15414:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15414:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 87978,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "15459:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 87979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15467:4:126",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69488,
                              "src": "15459:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function ILBPair.swap(bool,address) returns (bytes32)"
                              }
                            },
                            "id": 87980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15472:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15459:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 87981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15482:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 87982,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "15489:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87976,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15436:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 87977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15440:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15436:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 87983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15436:59:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87969,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "15399:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 87971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15405:8:126",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88971,
                      "src": "15399:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 87984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15399:97:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87985,
                  "nodeType": "ExpressionStatement",
                  "src": "15399:97:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87989,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "15534:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87987,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "15516:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15524:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "15516:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15516:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 87991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15542:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f537761705265656e7472616e63793a3a31",
                        "id": 87992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15545:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_349b2f7e98ca099c2c26467e4f4ebc6cb45265b54886d1b59310b80602406d09",
                          "typeString": "literal_string \"test_SwapReentrancy::1\""
                        },
                        "value": "test_SwapReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_349b2f7e98ca099c2c26467e4f4ebc6cb45265b54886d1b59310b80602406d09",
                          "typeString": "literal_string \"test_SwapReentrancy::1\""
                        }
                      ],
                      "id": 87986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15507:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15507:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87994,
                  "nodeType": "ExpressionStatement",
                  "src": "15507:63:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87998,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "15590:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87995,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15581:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15584:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "15581:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15581:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88000,
                  "nodeType": "ExpressionStatement",
                  "src": "15581:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 88004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15623:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 88007,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "15637:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15629:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88005,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15629:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15629:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88001,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "15606:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15618:4:126",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60328,
                      "src": "15606:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 88009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15606:44:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88010,
                  "nodeType": "ExpressionStatement",
                  "src": "15606:44:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88014,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "15688:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88012,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "15670:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15678:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "15670:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15670:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15696:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f537761705265656e7472616e63793a3a32",
                        "id": 88017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15699:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8272ed657c34aa3b1c78af7fe993f7cfcd655994393750cda7dae7eecc3ff866",
                          "typeString": "literal_string \"test_SwapReentrancy::2\""
                        },
                        "value": "test_SwapReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8272ed657c34aa3b1c78af7fe993f7cfcd655994393750cda7dae7eecc3ff866",
                          "typeString": "literal_string \"test_SwapReentrancy::2\""
                        }
                      ],
                      "id": 88011,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "15661:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15661:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88019,
                  "nodeType": "ExpressionStatement",
                  "src": "15661:63:126"
                }
              ]
            },
            "functionSelector": "314bf908",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapReentrancy",
            "nameLocation": "14939:19:126",
            "parameters": {
              "id": 87896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14958:2:126"
            },
            "returnParameters": {
              "id": 87897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14968:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88234,
            "nodeType": "FunctionDefinition",
            "src": "15737:1667:126",
            "nodes": [],
            "body": {
              "id": 88233,
              "nodeType": "Block",
              "src": "15780:1624:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88029,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "15827:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15819:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15819:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15819:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88033,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "15893:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15901:9:126",
                              "memberName": "flashLoan",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69498,
                              "src": "15893:17:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILBFlashLoanCallback_$67643_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                                "typeString": "function ILBPair.flashLoan(contract ILBFlashLoanCallback,bytes32,bytes calldata)"
                              }
                            },
                            "id": 88035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15911:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15893:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88038,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15929:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15921:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88036,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15921:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15921:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88042,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86406,
                                "src": "15961:6:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 88043,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86406,
                                "src": "15969:6:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 88040,
                                "name": "PackedUint128Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76113,
                                "src": "15936:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                  "typeString": "type(library PackedUint128Math)"
                                }
                              },
                              "id": 88041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15954:6:126",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75793,
                              "src": "15936:24:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                "typeString": "function (uint128,uint128) pure returns (bytes32)"
                              }
                            },
                            "id": 88044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15936:40:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 88047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15988:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 88046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "15978:9:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 88045,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "15982:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 88048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15978:12:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 88031,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15853:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15857:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15853:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15853:151:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88024,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "15790:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15796:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "15790:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:224:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88051,
                  "nodeType": "ExpressionStatement",
                  "src": "15790:224:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 88055,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74915,
                            "src": "16041:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$74915_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 88056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16068:28:126",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74817,
                          "src": "16041:55:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 88057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16097:8:126",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "16041:64:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 88052,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16025:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16028:12:126",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "16025:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 88058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16025:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88059,
                  "nodeType": "ExpressionStatement",
                  "src": "16025:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88063,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "16125:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88060,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16116:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16119:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "16116:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16116:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88065,
                  "nodeType": "ExpressionStatement",
                  "src": "16116:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88072,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16205:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16197:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88070,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16197:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16197:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88069,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67643,
                          "src": "16176:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$67643_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 88074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16176:35:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88077,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "16238:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 88078,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "16246:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 88075,
                            "name": "PackedUint128Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76113,
                            "src": "16213:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                              "typeString": "type(library PackedUint128Math)"
                            }
                          },
                          "id": 88076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16231:6:126",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75793,
                          "src": "16213:24:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 88079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16213:40:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16265:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16255:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88080,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16259:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16255:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88066,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "16141:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16153:9:126",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60511,
                      "src": "16141:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$67643_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16141:136:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88085,
                  "nodeType": "ExpressionStatement",
                  "src": "16141:136:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16312:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16304:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16304:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16304:10:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16326:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16316:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88093,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16320:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16316:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88086,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "16288:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16294:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "16288:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16288:41:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88098,
                  "nodeType": "ExpressionStatement",
                  "src": "16288:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88104,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "16376:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16368:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16368:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16368:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88108,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "16442:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "16450:9:126",
                              "memberName": "flashLoan",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69498,
                              "src": "16442:17:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILBFlashLoanCallback_$67643_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                                "typeString": "function ILBPair.flashLoan(contract ILBFlashLoanCallback,bytes32,bytes calldata)"
                              }
                            },
                            "id": 88110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16460:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16442:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88113,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16478:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16470:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88111,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16470:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16470:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 88117,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86406,
                                "src": "16510:6:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 88118,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86406,
                                "src": "16518:6:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 88115,
                                "name": "PackedUint128Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76113,
                                "src": "16485:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                                  "typeString": "type(library PackedUint128Math)"
                                }
                              },
                              "id": 88116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16503:6:126",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75793,
                              "src": "16485:24:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                                "typeString": "function (uint128,uint128) pure returns (bytes32)"
                              }
                            },
                            "id": 88119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16485:40:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 88122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16537:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 88121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "16527:9:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes memory)"
                              },
                              "typeName": {
                                "id": 88120,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "16531:5:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              }
                            },
                            "id": 88123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16527:12:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 88106,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16402:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16406:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16402:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16402:151:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88099,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "16340:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16346:8:126",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88971,
                      "src": "16340:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16340:223:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88126,
                  "nodeType": "ExpressionStatement",
                  "src": "16340:223:126"
                },
                {
                  "assignments": [
                    88128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88128,
                      "mutability": "mutable",
                      "name": "beforeBalanceWnative",
                      "nameLocation": "16582:20:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88233,
                      "src": "16574:28:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16574:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88136,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88133,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "16631:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16623:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16623:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16623:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88129,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "16605:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 88130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16613:9:126",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "16605:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16605:39:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16574:70:126"
                },
                {
                  "assignments": [
                    88138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88138,
                      "mutability": "mutable",
                      "name": "beforeBalanceUsdc",
                      "nameLocation": "16662:17:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88233,
                      "src": "16654:25:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16654:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88143,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "16705:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16697:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16697:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16697:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88139,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "16682:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 88140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16687:9:126",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "16682:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16682:36:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16654:64:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88150,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "16738:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88147,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16729:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16732:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "16729:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16729:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88152,
                  "nodeType": "ExpressionStatement",
                  "src": "16729:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88159,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16818:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16810:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88157,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16810:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16810:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88156,
                          "name": "ILBFlashLoanCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67643,
                          "src": "16789:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFlashLoanCallback_$67643_$",
                            "typeString": "type(contract ILBFlashLoanCallback)"
                          }
                        },
                        "id": 88161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16789:35:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88164,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "16851:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 88165,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "16859:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 88162,
                            "name": "PackedUint128Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76113,
                            "src": "16826:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PackedUint128Math_$76113_$",
                              "typeString": "type(library PackedUint128Math)"
                            }
                          },
                          "id": 88163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16844:6:126",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75793,
                          "src": "16826:24:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 88166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16826:40:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16878:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "16868:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88167,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "16872:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16868:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFlashLoanCallback_$67643",
                          "typeString": "contract ILBFlashLoanCallback"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88153,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "16754:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16766:9:126",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60511,
                      "src": "16754:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$67643_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:136:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88172,
                  "nodeType": "ExpressionStatement",
                  "src": "16754:136:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88178,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99561,
                                "src": "17001:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 88177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16993:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88176,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16993:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16993:20:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88174,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "16975:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16983:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "16975:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16975:39:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88181,
                          "name": "beforeBalanceWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88128,
                          "src": "17016:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 88182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17039:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88183,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "17043:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17039:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17016:33:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a31",
                        "id": 88186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17051:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_519107eba47119411abd674a05b7e9b8b2e22bd26e2a7c14bac62bdbaa488672",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::1\""
                        },
                        "value": "test_FlashLoanReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_519107eba47119411abd674a05b7e9b8b2e22bd26e2a7c14bac62bdbaa488672",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::1\""
                        }
                      ],
                      "id": 88173,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16953:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16953:137:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88188,
                  "nodeType": "ExpressionStatement",
                  "src": "16953:137:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88194,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99561,
                                "src": "17132:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 88193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17124:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88192,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17124:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17124:20:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88190,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "17109:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17114:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "17109:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17109:36:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88197,
                          "name": "beforeBalanceUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88138,
                          "src": "17147:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 88198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17167:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88199,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "17171:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "17167:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17147:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a32",
                        "id": 88202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17179:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_722449d81d5adf77b94c2ec8aac6e221d76be233c2fdaf9b990604f594800ef6",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::2\""
                        },
                        "value": "test_FlashLoanReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_722449d81d5adf77b94c2ec8aac6e221d76be233c2fdaf9b990604f594800ef6",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::2\""
                        }
                      ],
                      "id": 88189,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17100:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17100:109:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88204,
                  "nodeType": "ExpressionStatement",
                  "src": "17100:109:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88210,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17255:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17247:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88208,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17247:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17247:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88206,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "17229:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17237:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "17229:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17229:32:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 88213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17263:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 88214,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86406,
                          "src": "17267:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17263:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a33",
                        "id": 88216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17275:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc418b42398a9a51fd29fd6e9348e91518d0eecbf83ab3b1026d2f856f407149",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::3\""
                        },
                        "value": "test_FlashLoanReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc418b42398a9a51fd29fd6e9348e91518d0eecbf83ab3b1026d2f856f407149",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::3\""
                        }
                      ],
                      "id": 88205,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17220:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17220:85:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88218,
                  "nodeType": "ExpressionStatement",
                  "src": "17220:85:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88224,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17347:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPairHooksTest_$88889",
                                  "typeString": "contract LBPairHooksTest"
                                }
                              ],
                              "id": 88223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17339:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88222,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17339:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17339:13:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88220,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "17324:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17329:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "17324:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17324:29:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 88227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17355:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 88228,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86406,
                          "src": "17359:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17355:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f466c6173684c6f616e5265656e7472616e63793a3a34",
                        "id": 88230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17367:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ec6c7e4acccb2447481eb79cc484d2f89d5f7ba943e6f7d1f390cac1fe935fd",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::4\""
                        },
                        "value": "test_FlashLoanReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ec6c7e4acccb2447481eb79cc484d2f89d5f7ba943e6f7d1f390cac1fe935fd",
                          "typeString": "literal_string \"test_FlashLoanReentrancy::4\""
                        }
                      ],
                      "id": 88219,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17315:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17315:82:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88232,
                  "nodeType": "ExpressionStatement",
                  "src": "17315:82:126"
                }
              ]
            },
            "functionSelector": "4f3e1504",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_FlashLoanReentrancy",
            "nameLocation": "15746:24:126",
            "parameters": {
              "id": 88022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15770:2:126"
            },
            "returnParameters": {
              "id": 88023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15780:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88472,
            "nodeType": "FunctionDefinition",
            "src": "17410:1703:126",
            "nodes": [],
            "body": {
              "id": 88471,
              "nodeType": "Block",
              "src": "17448:1665:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88241,
                      "mutability": "mutable",
                      "name": "liquidityConfigs",
                      "nameLocation": "17475:16:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88471,
                      "src": "17458:33:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88239,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17458:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 88240,
                        "nodeType": "ArrayTypeName",
                        "src": "17458:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88247,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 88245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17508:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17494:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88242,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17498:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 88243,
                        "nodeType": "ArrayTypeName",
                        "src": "17498:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 88246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17494:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17458:52:126"
                },
                {
                  "expression": {
                    "id": 88259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88248,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88241,
                        "src": "17520:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 88250,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 88249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17537:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17520:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "302e35653138",
                          "id": 88253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17579:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        {
                          "hexValue": "302e35653138",
                          "id": 88254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17587:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          },
                          "id": 88257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 88255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17595:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3233",
                            "id": 88256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17600:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_23_by_1",
                              "typeString": "int_const 23"
                            },
                            "value": "23"
                          },
                          "src": "17595:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_8388608_by_1",
                            "typeString": "int_const 8388608"
                          }
                        ],
                        "expression": {
                          "id": 88251,
                          "name": "LiquidityConfigurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75759,
                          "src": "17542:23:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityConfigurations_$75759_$",
                            "typeString": "type(library LiquidityConfigurations)"
                          }
                        },
                        "id": 88252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17566:12:126",
                        "memberName": "encodeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75662,
                        "src": "17542:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint64_$_t_uint24_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,uint64,uint24) pure returns (bytes32)"
                        }
                      },
                      "id": 88258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17542:61:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "17520:83:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88260,
                  "nodeType": "ExpressionStatement",
                  "src": "17520:83:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88266,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "17651:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17643:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17643:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17643:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88270,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "17688:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "17696:4:126",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69515,
                              "src": "17688:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.mint(address,bytes32[] calldata,address) returns (bytes32,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 88272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17701:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17688:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88273,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "17711:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88274,
                            "name": "liquidityConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88241,
                            "src": "17718:16:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 88275,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "17736:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88268,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17665:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17669:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17665:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17665:77:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88261,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "17614:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17620:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "17614:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17614:138:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88278,
                  "nodeType": "ExpressionStatement",
                  "src": "17614:138:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 88282,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74915,
                            "src": "17779:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$74915_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 88283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17806:28:126",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74817,
                          "src": "17779:55:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 88284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17835:8:126",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "17779:64:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 88279,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17763:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17766:12:126",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "17763:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 88285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17763:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88286,
                  "nodeType": "ExpressionStatement",
                  "src": "17763:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88290,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "17863:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88287,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17854:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17857:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "17854:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17854:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88292,
                  "nodeType": "ExpressionStatement",
                  "src": "17854:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88296,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "17896:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88297,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88241,
                        "src": "17903:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 88298,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "17921:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88293,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "17879:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17891:4:126",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60676,
                      "src": "17879:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 88299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17879:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 88300,
                  "nodeType": "ExpressionStatement",
                  "src": "17879:48:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17962:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17954:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88304,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17954:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17954:10:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17976:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "17966:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88308,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "17970:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17966:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88301,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "17938:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17944:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "17938:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17938:41:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88313,
                  "nodeType": "ExpressionStatement",
                  "src": "17938:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88319,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18026:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18018:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18018:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18018:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88323,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "18063:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "18071:4:126",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69515,
                              "src": "18063:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.mint(address,bytes32[] calldata,address) returns (bytes32,bytes32,uint256[] memory)"
                              }
                            },
                            "id": 88325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18076:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18063:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88326,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "18086:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88327,
                            "name": "liquidityConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88241,
                            "src": "18093:16:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 88328,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "18111:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88321,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18040:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18044:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18040:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18040:77:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88314,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "17990:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17996:8:126",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88971,
                      "src": "17990:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17990:137:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88331,
                  "nodeType": "ExpressionStatement",
                  "src": "17990:137:126"
                },
                {
                  "assignments": [
                    88333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88333,
                      "mutability": "mutable",
                      "name": "beforeBalanceWnative",
                      "nameLocation": "18146:20:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88471,
                      "src": "18138:28:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88332,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18138:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88341,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88338,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18195:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18187:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18187:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18187:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88334,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "18169:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 88335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18177:9:126",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "18169:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18169:39:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18138:70:126"
                },
                {
                  "assignments": [
                    88343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88343,
                      "mutability": "mutable",
                      "name": "beforeBalanceUsdc",
                      "nameLocation": "18226:17:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88471,
                      "src": "18218:25:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18218:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88351,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88348,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18269:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18261:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88346,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18261:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18261:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88344,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "18246:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 88345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18251:9:126",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "18246:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18246:36:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18218:64:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88355,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "18306:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18298:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18298:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18298:16:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88359,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18324:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18316:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18316:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18316:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88365,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99561,
                                  "src": "18364:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 88364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18356:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 88363,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18356:7:126",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18356:20:126",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 88361,
                              "name": "wnative",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99528,
                              "src": "18338:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WNATIVE_$107167",
                                "typeString": "contract WNATIVE"
                              }
                            },
                            "id": 88362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18346:9:126",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41719,
                            "src": "18338:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 88367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18338:39:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88368,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86406,
                          "src": "18380:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18338:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88352,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "18293:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18293:94:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88371,
                  "nodeType": "ExpressionStatement",
                  "src": "18293:94:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88375,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "18410:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18402:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18402:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18402:13:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88379,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18425:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18417:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88377,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18417:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18417:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88385,
                                  "name": "pairWnative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99561,
                                  "src": "18462:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LBPair_$61826",
                                    "typeString": "contract LBPair"
                                  }
                                ],
                                "id": 88384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18454:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 88383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18454:7:126",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18454:20:126",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 88381,
                              "name": "usdc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99531,
                              "src": "18439:4:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                "typeString": "contract ERC20Mock"
                              }
                            },
                            "id": 88382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18444:9:126",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41719,
                            "src": "18439:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 88387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18439:36:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 88388,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86406,
                          "src": "18478:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18439:45:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88372,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "18397:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18397:88:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88391,
                  "nodeType": "ExpressionStatement",
                  "src": "18397:88:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88395,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "18505:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88392,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18496:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18499:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "18496:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18496:15:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88397,
                  "nodeType": "ExpressionStatement",
                  "src": "18496:15:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88401,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "18538:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88402,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88241,
                        "src": "18545:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88405,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "18571:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18563:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18563:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18563:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88398,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "18521:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18533:4:126",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60676,
                      "src": "18521:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes32[] memory,address) external returns (bytes32,bytes32,uint256[] memory)"
                      }
                    },
                    "id": 88407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18521:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes32,uint256[] memory)"
                    }
                  },
                  "id": 88408,
                  "nodeType": "ExpressionStatement",
                  "src": "18521:63:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88414,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99561,
                                "src": "18718:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 88413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18710:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88412,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18710:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18710:20:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88410,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "18692:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18700:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "18692:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18692:39:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88417,
                          "name": "beforeBalanceWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88333,
                          "src": "18733:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 88420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3735",
                              "id": 88418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18756:2:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75_by_1",
                                "typeString": "int_const 75"
                              },
                              "value": "75"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88419,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86406,
                              "src": "18761:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "18756:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 88421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18770:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "18756:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18733:40:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a31",
                        "id": 88424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18775:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4bc6757f239ee41519ad587a62ab6c77f239342684367250ccfa5b15c28508f",
                          "typeString": "literal_string \"test_MintReentrancy::1\""
                        },
                        "value": "test_MintReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4bc6757f239ee41519ad587a62ab6c77f239342684367250ccfa5b15c28508f",
                          "typeString": "literal_string \"test_MintReentrancy::1\""
                        }
                      ],
                      "id": 88409,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18670:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18670:139:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88426,
                  "nodeType": "ExpressionStatement",
                  "src": "18670:139:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88432,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99561,
                                "src": "18851:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$61826",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 88431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18843:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88430,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18843:7:126",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18843:20:126",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88428,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "18828:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18833:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "18828:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18828:36:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88435,
                          "name": "beforeBalanceUsdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88343,
                          "src": "18866:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 88438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3735",
                              "id": 88436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18886:2:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75_by_1",
                                "typeString": "int_const 75"
                              },
                              "value": "75"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88437,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86406,
                              "src": "18891:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "18886:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 88439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18900:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "18886:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18866:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a32",
                        "id": 88442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18905:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a50c2c0d2d532f4dc0b41e33fe97e86dd5054234b1de196c7c2d558fb935c57",
                          "typeString": "literal_string \"test_MintReentrancy::2\""
                        },
                        "value": "test_MintReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a50c2c0d2d532f4dc0b41e33fe97e86dd5054234b1de196c7c2d558fb935c57",
                          "typeString": "literal_string \"test_MintReentrancy::2\""
                        }
                      ],
                      "id": 88427,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18819:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18819:111:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88444,
                  "nodeType": "ExpressionStatement",
                  "src": "18819:111:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88448,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "18968:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88446,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "18950:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18958:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "18950:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18950:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3235",
                            "id": 88450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18976:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88451,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "18981:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "18976:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 88453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18990:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "18976:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a33",
                        "id": 88455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18995:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f83993d063da94d5e6bbb9b30be7fda651726e6628a037db0bf7a63dfbad8270",
                          "typeString": "literal_string \"test_MintReentrancy::3\""
                        },
                        "value": "test_MintReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f83993d063da94d5e6bbb9b30be7fda651726e6628a037db0bf7a63dfbad8270",
                          "typeString": "literal_string \"test_MintReentrancy::3\""
                        }
                      ],
                      "id": 88445,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18941:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18941:79:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88457,
                  "nodeType": "ExpressionStatement",
                  "src": "18941:79:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88461,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "19054:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88459,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "19039:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19044:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "19039:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19039:21:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3235",
                            "id": 88463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19062:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88464,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "19067:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "19062:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 88466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19076:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "19062:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f4d696e745265656e7472616e63793a3a34",
                        "id": 88468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19081:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce5e63d31a483a6fc355e54c8f7e5776264016c28d7c5384b093a3f07eb1f214",
                          "typeString": "literal_string \"test_MintReentrancy::4\""
                        },
                        "value": "test_MintReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce5e63d31a483a6fc355e54c8f7e5776264016c28d7c5384b093a3f07eb1f214",
                          "typeString": "literal_string \"test_MintReentrancy::4\""
                        }
                      ],
                      "id": 88458,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19030:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19030:76:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88470,
                  "nodeType": "ExpressionStatement",
                  "src": "19030:76:126"
                }
              ]
            },
            "functionSelector": "16c1fcdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MintReentrancy",
            "nameLocation": "17419:19:126",
            "parameters": {
              "id": 88235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17438:2:126"
            },
            "returnParameters": {
              "id": 88236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17448:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88687,
            "nodeType": "FunctionDefinition",
            "src": "19119:1449:126",
            "nodes": [],
            "body": {
              "id": 88686,
              "nodeType": "Block",
              "src": "19157:1411:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88479,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "19184:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88686,
                      "src": "19167:20:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19167:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88478,
                        "nodeType": "ArrayTypeName",
                        "src": "19167:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88485,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 88483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19204:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19190:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19194:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88481,
                        "nodeType": "ArrayTypeName",
                        "src": "19194:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 88484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19190:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19167:39:126"
                },
                {
                  "expression": {
                    "id": 88492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88486,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88479,
                        "src": "19216:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 88488,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 88487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19220:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19216:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88489,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99561,
                          "src": "19225:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$61826",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19237:11:126",
                        "memberName": "getActiveId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59299,
                        "src": "19225:23:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                          "typeString": "function () view external returns (uint24)"
                        }
                      },
                      "id": 88491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19225:25:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "19216:34:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88493,
                  "nodeType": "ExpressionStatement",
                  "src": "19216:34:126"
                },
                {
                  "assignments": [
                    88498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88498,
                      "mutability": "mutable",
                      "name": "amountsToBurn",
                      "nameLocation": "19278:13:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88686,
                      "src": "19261:30:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19261:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88497,
                        "nodeType": "ArrayTypeName",
                        "src": "19261:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88504,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 88502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19308:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "19294:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88499,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19298:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88500,
                        "nodeType": "ArrayTypeName",
                        "src": "19298:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 88503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19294:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19261:49:126"
                },
                {
                  "expression": {
                    "id": 88517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88505,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88498,
                        "src": "19320:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 88507,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 88506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19334:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19320:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 88516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 88510,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "19361:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88511,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88479,
                              "src": "19366:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88513,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19370:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19366:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88508,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "19339:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19351:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "19339:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19339:34:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 88515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19376:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "19339:38:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19320:57:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88518,
                  "nodeType": "ExpressionStatement",
                  "src": "19320:57:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88522,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "19397:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88519,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19388:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19391:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "19388:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19388:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88524,
                  "nodeType": "ExpressionStatement",
                  "src": "19388:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88530,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86403,
                            "src": "19445:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 88529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19437:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88528,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19437:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19437:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19453:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88525,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "19411:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19423:13:126",
                      "memberName": "approveForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66821,
                      "src": "19411:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 88533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19411:47:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88534,
                  "nodeType": "ExpressionStatement",
                  "src": "19411:47:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88540,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "19506:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19498:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88538,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19498:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19498:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88544,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "19543:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "19551:4:126",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69531,
                              "src": "19543:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.burn(address,address,uint256[] calldata,uint256[] calldata) returns (bytes32[] memory)"
                              }
                            },
                            "id": 88546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "19556:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19543:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88547,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "19566:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88548,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "19571:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88549,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88479,
                            "src": "19578:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 88550,
                            "name": "amountsToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88498,
                            "src": "19583:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 88542,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19520:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19524:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19520:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19520:77:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88535,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "19469:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19475:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "19469:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19469:138:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88553,
                  "nodeType": "ExpressionStatement",
                  "src": "19469:138:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 88557,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74915,
                            "src": "19634:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$74915_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 88558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19661:28:126",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74817,
                          "src": "19634:55:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 88559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19690:8:126",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "19634:64:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 88554,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19618:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19621:12:126",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "19618:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 88560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19618:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88561,
                  "nodeType": "ExpressionStatement",
                  "src": "19618:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88565,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "19718:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88562,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19709:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19712:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "19709:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19709:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88567,
                  "nodeType": "ExpressionStatement",
                  "src": "19709:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88571,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "19749:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88572,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "19754:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88573,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88479,
                        "src": "19761:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 88574,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88498,
                        "src": "19766:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 88568,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "19732:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19744:4:126",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60906,
                      "src": "19732:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 88575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19732:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 88576,
                  "nodeType": "ExpressionStatement",
                  "src": "19732:48:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19815:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19807:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88580,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19807:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19807:10:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19829:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "19819:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88584,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "19823:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19819:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88577,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "19791:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19797:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "19791:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19791:41:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88589,
                  "nodeType": "ExpressionStatement",
                  "src": "19791:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88595,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "19879:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19871:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19871:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19871:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88599,
                                "name": "ILBPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69569,
                                "src": "19916:7:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBPair_$69569_$",
                                  "typeString": "type(contract ILBPair)"
                                }
                              },
                              "id": 88600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "19924:4:126",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69531,
                              "src": "19916:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function ILBPair.burn(address,address,uint256[] calldata,uint256[] calldata) returns (bytes32[] memory)"
                              }
                            },
                            "id": 88601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "19929:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19916:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88602,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "19939:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88603,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "19944:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88604,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88479,
                            "src": "19951:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 88605,
                            "name": "amountsToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88498,
                            "src": "19956:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 88597,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19893:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19897:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19893:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19893:77:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88590,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "19843:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19849:8:126",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88971,
                      "src": "19843:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19843:137:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88608,
                  "nodeType": "ExpressionStatement",
                  "src": "19843:137:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88612,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "20018:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88610,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "20000:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20008:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "20000:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20000:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20026:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a31",
                        "id": 88615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20029:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c877a9423dcc79b8034fd4976a4691802808e9472390e31ae221a9c886aff448",
                          "typeString": "literal_string \"test_BurnReentrancy::1\""
                        },
                        "value": "test_BurnReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c877a9423dcc79b8034fd4976a4691802808e9472390e31ae221a9c886aff448",
                          "typeString": "literal_string \"test_BurnReentrancy::1\""
                        }
                      ],
                      "id": 88609,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19991:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19991:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88617,
                  "nodeType": "ExpressionStatement",
                  "src": "19991:63:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88621,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "20088:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88619,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "20073:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20078:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "20073:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20073:21:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20096:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a32",
                        "id": 88624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20099:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e9bf08050d2b0370c3215fbf58f040d4597b9d26375d5eeb8417e7a98b541a",
                          "typeString": "literal_string \"test_BurnReentrancy::2\""
                        },
                        "value": "test_BurnReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e9bf08050d2b0370c3215fbf58f040d4597b9d26375d5eeb8417e7a98b541a",
                          "typeString": "literal_string \"test_BurnReentrancy::2\""
                        }
                      ],
                      "id": 88618,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20064:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20064:60:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88626,
                  "nodeType": "ExpressionStatement",
                  "src": "20064:60:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88630,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "20144:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88627,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "20135:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20138:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "20135:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20135:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88632,
                  "nodeType": "ExpressionStatement",
                  "src": "20135:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88636,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "20175:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88637,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "20180:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88638,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88479,
                        "src": "20187:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 88639,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88498,
                        "src": "20192:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 88633,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "20158:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20170:4:126",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60906,
                      "src": "20158:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external returns (bytes32[] memory)"
                      }
                    },
                    "id": 88640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20158:48:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "id": 88641,
                  "nodeType": "ExpressionStatement",
                  "src": "20158:48:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88645,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "20244:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88643,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "20226:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20234:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "20226:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20226:24:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20252:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a33",
                        "id": 88648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20255:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a721926be5492e529a1e0327a1d85c6ff9a9d551121f4b4739fe3b3529bf973c",
                          "typeString": "literal_string \"test_BurnReentrancy::3\""
                        },
                        "value": "test_BurnReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a721926be5492e529a1e0327a1d85c6ff9a9d551121f4b4739fe3b3529bf973c",
                          "typeString": "literal_string \"test_BurnReentrancy::3\""
                        }
                      ],
                      "id": 88642,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "20217:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20217:63:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88650,
                  "nodeType": "ExpressionStatement",
                  "src": "20217:63:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88654,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "20314:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 88652,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "20299:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20304:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "20299:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20299:21:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20322:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a34",
                        "id": 88657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20325:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc3144b3bbd88beea6ce6ce8b9e11a6dd8d56545c443726fef6f7d0755d64b24",
                          "typeString": "literal_string \"test_BurnReentrancy::4\""
                        },
                        "value": "test_BurnReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc3144b3bbd88beea6ce6ce8b9e11a6dd8d56545c443726fef6f7d0755d64b24",
                          "typeString": "literal_string \"test_BurnReentrancy::4\""
                        }
                      ],
                      "id": 88651,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "20290:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20290:60:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88659,
                  "nodeType": "ExpressionStatement",
                  "src": "20290:60:126"
                },
                {
                  "assignments": [
                    88661,
                    88663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88661,
                      "mutability": "mutable",
                      "name": "binReserveX",
                      "nameLocation": "20370:11:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88686,
                      "src": "20362:19:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88660,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20362:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88663,
                      "mutability": "mutable",
                      "name": "binReserveY",
                      "nameLocation": "20391:11:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88686,
                      "src": "20383:19:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20383:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 88668,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88479,
                              "src": "20432:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88670,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20436:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20432:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20425:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint24_$",
                            "typeString": "type(uint24)"
                          },
                          "typeName": {
                            "id": 88666,
                            "name": "uint24",
                            "nodeType": "ElementaryTypeName",
                            "src": "20425:6:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20425:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 88664,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "20406:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20418:6:126",
                      "memberName": "getBin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59321,
                      "src": "20406:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint24) view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20406:34:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20361:79:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88675,
                        "name": "binReserveX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88661,
                        "src": "20460:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20473:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a35",
                        "id": 88677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20476:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b484c8b7ed72878e6259f6752b17b1ebb7cb8147d7bd775fc036ce6340a55390",
                          "typeString": "literal_string \"test_BurnReentrancy::5\""
                        },
                        "value": "test_BurnReentrancy::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b484c8b7ed72878e6259f6752b17b1ebb7cb8147d7bd775fc036ce6340a55390",
                          "typeString": "literal_string \"test_BurnReentrancy::5\""
                        }
                      ],
                      "id": 88674,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20451:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20451:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88679,
                  "nodeType": "ExpressionStatement",
                  "src": "20451:50:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88681,
                        "name": "binReserveY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88663,
                        "src": "20520:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20533:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f4275726e5265656e7472616e63793a3a36",
                        "id": 88683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20536:24:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_732ddc01ba4da8d8acf726b7cadd14b316f556547d0ac14814cea63257de6dde",
                          "typeString": "literal_string \"test_BurnReentrancy::6\""
                        },
                        "value": "test_BurnReentrancy::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_732ddc01ba4da8d8acf726b7cadd14b316f556547d0ac14814cea63257de6dde",
                          "typeString": "literal_string \"test_BurnReentrancy::6\""
                        }
                      ],
                      "id": 88680,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20511:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20511:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88685,
                  "nodeType": "ExpressionStatement",
                  "src": "20511:50:126"
                }
              ]
            },
            "functionSelector": "7626ddcc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BurnReentrancy",
            "nameLocation": "19128:19:126",
            "parameters": {
              "id": 88473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19147:2:126"
            },
            "returnParameters": {
              "id": 88474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19157:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88888,
            "nodeType": "FunctionDefinition",
            "src": "20574:1371:126",
            "nodes": [],
            "body": {
              "id": 88887,
              "nodeType": "Block",
              "src": "20625:1320:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88694,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "20652:3:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88887,
                      "src": "20635:20:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88692,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20635:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88693,
                        "nodeType": "ArrayTypeName",
                        "src": "20635:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88700,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 88698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20672:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20658:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88695,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20662:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88696,
                        "nodeType": "ArrayTypeName",
                        "src": "20662:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 88699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20658:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20635:39:126"
                },
                {
                  "expression": {
                    "id": 88707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88701,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88694,
                        "src": "20684:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 88703,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 88702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20688:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20684:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88704,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99561,
                          "src": "20693:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$61826",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20705:11:126",
                        "memberName": "getActiveId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59299,
                        "src": "20693:23:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                          "typeString": "function () view external returns (uint24)"
                        }
                      },
                      "id": 88706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20693:25:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "20684:34:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88708,
                  "nodeType": "ExpressionStatement",
                  "src": "20684:34:126"
                },
                {
                  "assignments": [
                    88713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88713,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "20746:7:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 88887,
                      "src": "20729:24:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20729:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88712,
                        "nodeType": "ArrayTypeName",
                        "src": "20729:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88719,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 88717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20770:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20756:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 88714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20760:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88715,
                        "nodeType": "ArrayTypeName",
                        "src": "20760:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 88718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20756:16:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20729:43:126"
                },
                {
                  "expression": {
                    "id": 88732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88720,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88713,
                        "src": "20782:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 88722,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 88721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20790:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20782:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 88731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 88725,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "20817:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88726,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88694,
                              "src": "20822:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88728,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20826:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20822:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88723,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "20795:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20807:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "20795:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20795:34:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 88730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20832:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "20795:38:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20782:51:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88733,
                  "nodeType": "ExpressionStatement",
                  "src": "20782:51:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88737,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "20853:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88734,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "20844:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20847:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "20844:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20844:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88739,
                  "nodeType": "ExpressionStatement",
                  "src": "20844:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88745,
                            "name": "hooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86403,
                            "src": "20901:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                              "typeString": "contract MockLBHooks"
                            }
                          ],
                          "id": 88744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20893:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88743,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20893:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20893:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 88747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20909:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88740,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "20867:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20879:13:126",
                      "memberName": "approveForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66821,
                      "src": "20867:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 88748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20867:47:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88749,
                  "nodeType": "ExpressionStatement",
                  "src": "20867:47:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88755,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "20962:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20954:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20954:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20954:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88759,
                                "name": "ILBToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70224,
                                "src": "20999:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBToken_$70224_$",
                                  "typeString": "type(contract ILBToken)"
                                }
                              },
                              "id": 88760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "21008:17:126",
                              "memberName": "batchTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70223,
                              "src": "20999:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function ILBToken.batchTransferFrom(address,address,uint256[] calldata,uint256[] calldata)"
                              }
                            },
                            "id": 88761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21026:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "20999:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88762,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "21036:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88763,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "21041:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88764,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88694,
                            "src": "21048:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 88765,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88713,
                            "src": "21053:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 88757,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20976:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20980:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "20976:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20976:85:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88750,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "20925:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20931:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "20925:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20925:146:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88768,
                  "nodeType": "ExpressionStatement",
                  "src": "20925:146:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 88772,
                            "name": "ReentrancyGuardUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74915,
                            "src": "21098:26:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$74915_$",
                              "typeString": "type(contract ReentrancyGuardUpgradeable)"
                            }
                          },
                          "id": 88773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21125:28:126",
                          "memberName": "ReentrancyGuardReentrantCall",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74817,
                          "src": "21098:55:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 88774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21154:8:126",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "21098:64:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 88769,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21082:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21085:12:126",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "21082:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 88775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21082:81:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88776,
                  "nodeType": "ExpressionStatement",
                  "src": "21082:81:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88780,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "21182:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88777,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21173:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21176:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "21173:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21173:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88782,
                  "nodeType": "ExpressionStatement",
                  "src": "21173:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88786,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "21226:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88787,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "21231:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88788,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88694,
                        "src": "21238:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 88789,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88713,
                        "src": "21243:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 88783,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "21196:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21208:17:126",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61231,
                      "src": "21196:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 88790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21196:55:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88791,
                  "nodeType": "ExpressionStatement",
                  "src": "21196:55:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21286:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21278:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21278:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21278:10:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21300:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 88800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "21290:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 88799,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21294:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 88802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21290:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88792,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "21262:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21268:9:126",
                      "memberName": "setBefore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88955,
                      "src": "21262:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21262:41:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88804,
                  "nodeType": "ExpressionStatement",
                  "src": "21262:41:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88810,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "21350:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21342:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21342:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21342:20:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 88814,
                                "name": "ILBToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70224,
                                "src": "21387:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBToken_$70224_$",
                                  "typeString": "type(contract ILBToken)"
                                }
                              },
                              "id": 88815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "21396:17:126",
                              "memberName": "batchTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70223,
                              "src": "21387:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function ILBToken.batchTransferFrom(address,address,uint256[] calldata,uint256[] calldata)"
                              }
                            },
                            "id": 88816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21414:8:126",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "21387:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 88817,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "21424:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88818,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "21429:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 88819,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88694,
                            "src": "21436:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 88820,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88713,
                            "src": "21441:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 88812,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21364:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "21368:18:126",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "21364:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 88821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21364:85:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88805,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86403,
                        "src": "21314:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                          "typeString": "contract MockLBHooks"
                        }
                      },
                      "id": 88807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21320:8:126",
                      "memberName": "setAfter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88971,
                      "src": "21314:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 88822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21314:145:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88823,
                  "nodeType": "ExpressionStatement",
                  "src": "21314:145:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88827,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "21501:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88828,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88694,
                              "src": "21508:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88830,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21512:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21508:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88825,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "21479:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21491:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "21479:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21479:36:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21517:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a31",
                        "id": 88833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21520:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e8a469e7afd66e6d8fe4581d22c75b6ee572a2945b5b465e50d1038c7339eb3",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::1\""
                        },
                        "value": "test_BatchTransferFromReentrancy::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e8a469e7afd66e6d8fe4581d22c75b6ee572a2945b5b465e50d1038c7339eb3",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::1\""
                        }
                      ],
                      "id": 88824,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21470:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21470:88:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88835,
                  "nodeType": "ExpressionStatement",
                  "src": "21470:88:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88839,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "21599:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88840,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88694,
                              "src": "21604:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88842,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21608:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21604:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88837,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "21577:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21589:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "21577:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21577:34:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21613:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a32",
                        "id": 88845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21616:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbca1f74d8accb0b09f890d0e02e68955a96e8db84a5193b07d743e183722f7f",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::2\""
                        },
                        "value": "test_BatchTransferFromReentrancy::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbca1f74d8accb0b09f890d0e02e68955a96e8db84a5193b07d743e183722f7f",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::2\""
                        }
                      ],
                      "id": 88836,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "21568:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21568:86:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88847,
                  "nodeType": "ExpressionStatement",
                  "src": "21568:86:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88851,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "21674:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88848,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21665:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21668:5:126",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15645,
                      "src": "21665:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21665:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88853,
                  "nodeType": "ExpressionStatement",
                  "src": "21665:13:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88857,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99509,
                        "src": "21718:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88858,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99517,
                        "src": "21723:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88859,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88694,
                        "src": "21730:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 88860,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88713,
                        "src": "21735:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 88854,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99561,
                        "src": "21688:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$61826",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21700:17:126",
                      "memberName": "batchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61231,
                      "src": "21688:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 88861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21688:55:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88862,
                  "nodeType": "ExpressionStatement",
                  "src": "21688:55:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88866,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99517,
                            "src": "21785:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88867,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88694,
                              "src": "21792:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88869,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21796:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21792:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88864,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "21763:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21775:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "21763:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21763:36:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21801:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a33",
                        "id": 88872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21804:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7506d4545ec779af78fb73bdcad46af1b348e6815212ff4e26dda8cc8ecb85ac",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::3\""
                        },
                        "value": "test_BatchTransferFromReentrancy::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7506d4545ec779af78fb73bdcad46af1b348e6815212ff4e26dda8cc8ecb85ac",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::3\""
                        }
                      ],
                      "id": 88863,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "21754:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21754:88:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88874,
                  "nodeType": "ExpressionStatement",
                  "src": "21754:88:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88878,
                            "name": "DEV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99509,
                            "src": "21883:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 88879,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88694,
                              "src": "21888:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 88881,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 88880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21892:1:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21888:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 88876,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99561,
                            "src": "21861:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$61826",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21873:9:126",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66731,
                          "src": "21861:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21861:34:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21897:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f42617463685472616e7366657246726f6d5265656e7472616e63793a3a34",
                        "id": 88884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21900:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ae74d5a8b40e8fcc5754ed81286056e40f36feb51cf290ff1970c1f5833c0de",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::4\""
                        },
                        "value": "test_BatchTransferFromReentrancy::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ae74d5a8b40e8fcc5754ed81286056e40f36feb51cf290ff1970c1f5833c0de",
                          "typeString": "literal_string \"test_BatchTransferFromReentrancy::4\""
                        }
                      ],
                      "id": 88875,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21852:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21852:86:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88886,
                  "nodeType": "ExpressionStatement",
                  "src": "21852:86:126"
                }
              ]
            },
            "functionSelector": "2cb279c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BatchTransferFromReentrancy",
            "nameLocation": "20583:32:126",
            "parameters": {
              "id": 88688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20615:2:126"
            },
            "returnParameters": {
              "id": 88689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20625:0:126"
            },
            "scope": 88889,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86396,
              "name": "TestHelper",
              "nameLocations": [
                "783:10:126"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 101064,
              "src": "783:10:126"
            },
            "id": 86397,
            "nodeType": "InheritanceSpecifier",
            "src": "783:10:126"
          }
        ],
        "canonicalName": "LBPairHooksTest",
        "contractDependencies": [
          41364,
          58932,
          61826,
          62082,
          63370,
          66608,
          89543,
          106636,
          106690,
          107167
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88889,
          101064,
          12155,
          12103,
          6783,
          6423,
          5630,
          3570,
          2734,
          65,
          62
        ],
        "name": "LBPairHooksTest",
        "nameLocation": "764:15:126",
        "scope": 89544,
        "usedErrors": [
          76164,
          76174,
          78453
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7565,
          7571
        ]
      },
      {
        "id": 89543,
        "nodeType": "ContractDefinition",
        "src": "21949:5549:126",
        "nodes": [
          {
            "id": 88894,
            "nodeType": "VariableDeclaration",
            "src": "21989:26:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_beforeState",
            "nameLocation": "22003:12:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_State_$86395_storage",
              "typeString": "struct State"
            },
            "typeName": {
              "id": 88893,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88892,
                "name": "State",
                "nameLocations": [
                  "21989:5:126"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 86395,
                "src": "21989:5:126"
              },
              "referencedDeclaration": 86395,
              "src": "21989:5:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                "typeString": "struct State"
              }
            },
            "visibility": "private"
          },
          {
            "id": 88897,
            "nodeType": "VariableDeclaration",
            "src": "22021:25:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_afterState",
            "nameLocation": "22035:11:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_State_$86395_storage",
              "typeString": "struct State"
            },
            "typeName": {
              "id": 88896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88895,
                "name": "State",
                "nameLocations": [
                  "22021:5:126"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 86395,
                "src": "22021:5:126"
              },
              "referencedDeclaration": 86395,
              "src": "22021:5:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                "typeString": "struct State"
              }
            },
            "visibility": "private"
          },
          {
            "id": 88899,
            "nodeType": "VariableDeclaration",
            "src": "22053:27:126",
            "nodes": [],
            "constant": false,
            "functionSelector": "0f146a3e",
            "mutability": "mutable",
            "name": "beforeTarget",
            "nameLocation": "22068:12:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88898,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "22053:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88901,
            "nodeType": "VariableDeclaration",
            "src": "22086:29:126",
            "nodes": [],
            "constant": false,
            "functionSelector": "df0ccc48",
            "mutability": "mutable",
            "name": "beforeTargetData",
            "nameLocation": "22099:16:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 88900,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "22086:5:126",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88903,
            "nodeType": "VariableDeclaration",
            "src": "22122:26:126",
            "nodes": [],
            "constant": false,
            "functionSelector": "2aac3e12",
            "mutability": "mutable",
            "name": "afterTarget",
            "nameLocation": "22137:11:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88902,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "22122:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88905,
            "nodeType": "VariableDeclaration",
            "src": "22154:28:126",
            "nodes": [],
            "constant": false,
            "functionSelector": "c153f4cd",
            "mutability": "mutable",
            "name": "afterTargetData",
            "nameLocation": "22167:15:126",
            "scope": 89543,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 88904,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "22154:5:126",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88914,
            "nodeType": "FunctionDefinition",
            "src": "22189:97:126",
            "nodes": [],
            "body": {
              "id": 88913,
              "nodeType": "Block",
              "src": "22250:36:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88911,
                    "name": "_beforeState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88894,
                    "src": "22267:12:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "functionReturnParameters": 88910,
                  "id": 88912,
                  "nodeType": "Return",
                  "src": "22260:19:126"
                }
              ]
            },
            "functionSelector": "78b253c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeforeState",
            "nameLocation": "22198:14:126",
            "parameters": {
              "id": 88906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22212:2:126"
            },
            "returnParameters": {
              "id": 88910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88914,
                  "src": "22236:12:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 88908,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88907,
                      "name": "State",
                      "nameLocations": [
                        "22236:5:126"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86395,
                      "src": "22236:5:126"
                    },
                    "referencedDeclaration": 86395,
                    "src": "22236:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22235:14:126"
            },
            "scope": 89543,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88923,
            "nodeType": "FunctionDefinition",
            "src": "22292:95:126",
            "nodes": [],
            "body": {
              "id": 88922,
              "nodeType": "Block",
              "src": "22352:35:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88920,
                    "name": "_afterState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88897,
                    "src": "22369:11:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "functionReturnParameters": 88919,
                  "id": 88921,
                  "nodeType": "Return",
                  "src": "22362:18:126"
                }
              ]
            },
            "functionSelector": "f08e95c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAfterState",
            "nameLocation": "22301:13:126",
            "parameters": {
              "id": 88915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22314:2:126"
            },
            "returnParameters": {
              "id": 88919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88923,
                  "src": "22338:12:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 88917,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88916,
                      "name": "State",
                      "nameLocations": [
                        "22338:5:126"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86395,
                      "src": "22338:5:126"
                    },
                    "referencedDeclaration": 86395,
                    "src": "22338:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22337:14:126"
            },
            "scope": 89543,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88939,
            "nodeType": "FunctionDefinition",
            "src": "22393:121:126",
            "nodes": [],
            "body": {
              "id": 88938,
              "nodeType": "Block",
              "src": "22426:88:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88927,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22436:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 88929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22442:5:126",
                      "memberName": "reset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106888,
                      "src": "22436:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 88930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22436:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88931,
                  "nodeType": "ExpressionStatement",
                  "src": "22436:13:126"
                },
                {
                  "expression": {
                    "id": 88933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "22460:19:126",
                    "subExpression": {
                      "id": 88932,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "22467:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88934,
                  "nodeType": "ExpressionStatement",
                  "src": "22460:19:126"
                },
                {
                  "expression": {
                    "id": 88936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "22489:18:126",
                    "subExpression": {
                      "id": 88935,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "22496:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88937,
                  "nodeType": "ExpressionStatement",
                  "src": "22489:18:126"
                }
              ]
            },
            "baseFunctions": [
              106888
            ],
            "functionSelector": "d826f88f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "22402:5:126",
            "overrides": {
              "id": 88925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22417:8:126"
            },
            "parameters": {
              "id": 88924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22407:2:126"
            },
            "returnParameters": {
              "id": 88926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22426:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88955,
            "nodeType": "FunctionDefinition",
            "src": "22520:134:126",
            "nodes": [],
            "body": {
              "id": 88954,
              "nodeType": "Block",
              "src": "22583:71:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88946,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88899,
                      "src": "22593:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88947,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88941,
                      "src": "22608:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22593:21:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88949,
                  "nodeType": "ExpressionStatement",
                  "src": "22593:21:126"
                },
                {
                  "expression": {
                    "id": 88952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88950,
                      "name": "beforeTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88901,
                      "src": "22624:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88951,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88943,
                      "src": "22643:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "22624:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 88953,
                  "nodeType": "ExpressionStatement",
                  "src": "22624:23:126"
                }
              ]
            },
            "functionSelector": "33ad78d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBefore",
            "nameLocation": "22529:9:126",
            "parameters": {
              "id": 88944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88941,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "22547:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88955,
                  "src": "22539:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22539:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88943,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "22570:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88955,
                  "src": "22555:19:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22555:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22538:37:126"
            },
            "returnParameters": {
              "id": 88945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22583:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88971,
            "nodeType": "FunctionDefinition",
            "src": "22660:131:126",
            "nodes": [],
            "body": {
              "id": 88970,
              "nodeType": "Block",
              "src": "22722:69:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88962,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88903,
                      "src": "22732:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88963,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88957,
                      "src": "22746:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22732:20:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88965,
                  "nodeType": "ExpressionStatement",
                  "src": "22732:20:126"
                },
                {
                  "expression": {
                    "id": 88968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88966,
                      "name": "afterTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88905,
                      "src": "22762:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88967,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88959,
                      "src": "22780:4:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "22762:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 88969,
                  "nodeType": "ExpressionStatement",
                  "src": "22762:22:126"
                }
              ]
            },
            "functionSelector": "c70e8bd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAfter",
            "nameLocation": "22669:8:126",
            "parameters": {
              "id": 88960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88957,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "22686:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88971,
                  "src": "22678:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22678:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88959,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "22709:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88971,
                  "src": "22694:19:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88958,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22694:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22677:37:126"
            },
            "returnParameters": {
              "id": 88961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22722:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88992,
            "nodeType": "FunctionDefinition",
            "src": "22797:198:126",
            "nodes": [],
            "body": {
              "id": 88991,
              "nodeType": "Block",
              "src": "22892:103:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88982,
                        "name": "hooksParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88973,
                        "src": "22920:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 88983,
                        "name": "onHooksSetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88975,
                        "src": "22937:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 88979,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22902:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 88981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22908:11:126",
                      "memberName": "_onHooksSet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106914,
                      "src": "22902:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes calldata)"
                      }
                    },
                    "id": 88984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22902:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88985,
                  "nodeType": "ExpressionStatement",
                  "src": "22902:50:126"
                },
                {
                  "expression": {
                    "id": 88989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88986,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "22963:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 88987,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "22978:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 88988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22978:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "22963:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 88990,
                  "nodeType": "ExpressionStatement",
                  "src": "22963:25:126"
                }
              ]
            },
            "baseFunctions": [
              106914
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onHooksSet",
            "nameLocation": "22806:11:126",
            "overrides": {
              "id": 88977,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22883:8:126"
            },
            "parameters": {
              "id": 88976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88973,
                  "mutability": "mutable",
                  "name": "hooksParameters",
                  "nameLocation": "22826:15:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88992,
                  "src": "22818:23:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88972,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22818:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88975,
                  "mutability": "mutable",
                  "name": "onHooksSetData",
                  "nameLocation": "22858:14:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 88992,
                  "src": "22843:29:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 88974,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22843:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22817:56:126"
            },
            "returnParameters": {
              "id": 88978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22892:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89030,
            "nodeType": "FunctionDefinition",
            "src": "23001:274:126",
            "nodes": [],
            "body": {
              "id": 89029,
              "nodeType": "Block",
              "src": "23102:173:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89004,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88994,
                      "src": "23116:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89007,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23134:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23126:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89005,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23126:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23126:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23116:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89011,
                  "nodeType": "IfStatement",
                  "src": "23112:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89003,
                    "id": 89010,
                    "nodeType": "Return",
                    "src": "23141:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89015,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88994,
                        "src": "23176:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89016,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88996,
                        "src": "23184:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89017,
                        "name": "swapForY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88998,
                        "src": "23188:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 89018,
                        "name": "amountsIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89000,
                        "src": "23198:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89012,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23158:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23164:11:126",
                      "memberName": "_beforeSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106932,
                      "src": "23158:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bool,bytes32)"
                      }
                    },
                    "id": 89019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23158:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89020,
                  "nodeType": "ExpressionStatement",
                  "src": "23158:50:126"
                },
                {
                  "expression": {
                    "id": 89024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89021,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "23219:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89022,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "23234:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23234:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23219:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89025,
                  "nodeType": "ExpressionStatement",
                  "src": "23219:25:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89026,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "23255:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23255:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89028,
                  "nodeType": "ExpressionStatement",
                  "src": "23255:13:126"
                }
              ]
            },
            "baseFunctions": [
              106932
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeSwap",
            "nameLocation": "23010:11:126",
            "overrides": {
              "id": 89002,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23093:8:126"
            },
            "parameters": {
              "id": 89001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88994,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23030:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89030,
                  "src": "23022:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23022:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88996,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23046:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89030,
                  "src": "23038:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23038:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88998,
                  "mutability": "mutable",
                  "name": "swapForY",
                  "nameLocation": "23055:8:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89030,
                  "src": "23050:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88997,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23050:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89000,
                  "mutability": "mutable",
                  "name": "amountsIn",
                  "nameLocation": "23073:9:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89030,
                  "src": "23065:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88999,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23065:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23021:62:126"
            },
            "returnParameters": {
              "id": 89003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23102:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89068,
            "nodeType": "FunctionDefinition",
            "src": "23281:272:126",
            "nodes": [],
            "body": {
              "id": 89067,
              "nodeType": "Block",
              "src": "23382:171:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89042,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89032,
                      "src": "23396:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89045,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23414:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23406:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23406:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23406:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23396:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89049,
                  "nodeType": "IfStatement",
                  "src": "23392:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89041,
                    "id": 89048,
                    "nodeType": "Return",
                    "src": "23421:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89053,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89032,
                        "src": "23455:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89054,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89034,
                        "src": "23463:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89055,
                        "name": "swapForY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89036,
                        "src": "23467:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 89056,
                        "name": "amountsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89038,
                        "src": "23477:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89050,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23438:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23444:10:126",
                      "memberName": "_afterSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106950,
                      "src": "23438:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bool,bytes32)"
                      }
                    },
                    "id": 89057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23438:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89058,
                  "nodeType": "ExpressionStatement",
                  "src": "23438:50:126"
                },
                {
                  "expression": {
                    "id": 89062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89059,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "23499:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89060,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "23513:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23513:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23499:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89063,
                  "nodeType": "ExpressionStatement",
                  "src": "23499:24:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89064,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89542,
                      "src": "23534:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23534:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89066,
                  "nodeType": "ExpressionStatement",
                  "src": "23534:12:126"
                }
              ]
            },
            "baseFunctions": [
              106950
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterSwap",
            "nameLocation": "23290:10:126",
            "overrides": {
              "id": 89040,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23373:8:126"
            },
            "parameters": {
              "id": 89039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89032,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23309:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89068,
                  "src": "23301:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23301:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89034,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23325:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89068,
                  "src": "23317:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23317:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89036,
                  "mutability": "mutable",
                  "name": "swapForY",
                  "nameLocation": "23334:8:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89068,
                  "src": "23329:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23329:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89038,
                  "mutability": "mutable",
                  "name": "amountsOut",
                  "nameLocation": "23352:10:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89068,
                  "src": "23344:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89037,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23344:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23300:63:126"
            },
            "returnParameters": {
              "id": 89041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23382:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89103,
            "nodeType": "FunctionDefinition",
            "src": "23559:255:126",
            "nodes": [],
            "body": {
              "id": 89102,
              "nodeType": "Block",
              "src": "23648:166:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89078,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89070,
                      "src": "23662:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89081,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23680:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23672:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23672:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23672:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23662:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89085,
                  "nodeType": "IfStatement",
                  "src": "23658:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89077,
                    "id": 89084,
                    "nodeType": "Return",
                    "src": "23687:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89089,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89070,
                        "src": "23727:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89090,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89072,
                        "src": "23735:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89091,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89074,
                        "src": "23739:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89086,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23704:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23710:16:126",
                      "memberName": "_beforeFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106966,
                      "src": "23704:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32)"
                      }
                    },
                    "id": 89092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23704:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89093,
                  "nodeType": "ExpressionStatement",
                  "src": "23704:43:126"
                },
                {
                  "expression": {
                    "id": 89097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89094,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "23758:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89095,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "23773:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23773:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "23758:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89098,
                  "nodeType": "ExpressionStatement",
                  "src": "23758:25:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89099,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "23794:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23794:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89101,
                  "nodeType": "ExpressionStatement",
                  "src": "23794:13:126"
                }
              ]
            },
            "baseFunctions": [
              106966
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFlashLoan",
            "nameLocation": "23568:16:126",
            "overrides": {
              "id": 89076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23639:8:126"
            },
            "parameters": {
              "id": 89075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89070,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23593:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89103,
                  "src": "23585:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23585:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89072,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23609:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89103,
                  "src": "23601:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23601:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89074,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "23621:7:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89103,
                  "src": "23613:15:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89073,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23613:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23584:45:126"
            },
            "returnParameters": {
              "id": 89077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23648:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89141,
            "nodeType": "FunctionDefinition",
            "src": "23820:281:126",
            "nodes": [],
            "body": {
              "id": 89140,
              "nodeType": "Block",
              "src": "23927:174:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89115,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89105,
                      "src": "23941:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89118,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "23959:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23951:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23951:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23951:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23941:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89122,
                  "nodeType": "IfStatement",
                  "src": "23937:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89114,
                    "id": 89121,
                    "nodeType": "Return",
                    "src": "23966:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89126,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89105,
                        "src": "24005:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89127,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89107,
                        "src": "24013:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89128,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89109,
                        "src": "24017:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89129,
                        "name": "feesReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89111,
                        "src": "24023:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89123,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "23983:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23989:15:126",
                      "memberName": "_afterFlashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 106984,
                      "src": "23983:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes32)"
                      }
                    },
                    "id": 89130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23983:53:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89131,
                  "nodeType": "ExpressionStatement",
                  "src": "23983:53:126"
                },
                {
                  "expression": {
                    "id": 89135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89132,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "24047:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89133,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "24061:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24061:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24047:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89136,
                  "nodeType": "ExpressionStatement",
                  "src": "24047:24:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89137,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89542,
                      "src": "24082:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24082:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89139,
                  "nodeType": "ExpressionStatement",
                  "src": "24082:12:126"
                }
              ]
            },
            "baseFunctions": [
              106984
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterFlashLoan",
            "nameLocation": "23829:15:126",
            "overrides": {
              "id": 89113,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23918:8:126"
            },
            "parameters": {
              "id": 89112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89105,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "23853:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89141,
                  "src": "23845:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23845:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89107,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23869:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89141,
                  "src": "23861:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23861:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89109,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "23881:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89141,
                  "src": "23873:12:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89108,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23873:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89111,
                  "mutability": "mutable",
                  "name": "feesReceived",
                  "nameLocation": "23895:12:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89141,
                  "src": "23887:20:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23887:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23844:64:126"
            },
            "returnParameters": {
              "id": 89114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23927:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89180,
            "nodeType": "FunctionDefinition",
            "src": "24107:336:126",
            "nodes": [],
            "body": {
              "id": 89179,
              "nodeType": "Block",
              "src": "24256:187:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89154,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89143,
                      "src": "24270:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89157,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24288:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24280:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24280:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24280:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24270:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89161,
                  "nodeType": "IfStatement",
                  "src": "24266:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89153,
                    "id": 89160,
                    "nodeType": "Return",
                    "src": "24295:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89165,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89143,
                        "src": "24330:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89166,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89145,
                        "src": "24338:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89167,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89148,
                        "src": "24342:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 89168,
                        "name": "amountsReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89150,
                        "src": "24360:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89162,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "24312:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24318:11:126",
                      "memberName": "_beforeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107003,
                      "src": "24312:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32[] calldata,bytes32)"
                      }
                    },
                    "id": 89169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24312:64:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89170,
                  "nodeType": "ExpressionStatement",
                  "src": "24312:64:126"
                },
                {
                  "expression": {
                    "id": 89174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89171,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "24387:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89172,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "24402:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24402:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24387:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89175,
                  "nodeType": "ExpressionStatement",
                  "src": "24387:25:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89176,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "24423:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24423:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89178,
                  "nodeType": "ExpressionStatement",
                  "src": "24423:13:126"
                }
              ]
            },
            "baseFunctions": [
              107003
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeMint",
            "nameLocation": "24116:11:126",
            "overrides": {
              "id": 89152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24243:8:126"
            },
            "parameters": {
              "id": 89151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89143,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24136:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89180,
                  "src": "24128:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24128:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89145,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24152:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89180,
                  "src": "24144:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24144:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89148,
                  "mutability": "mutable",
                  "name": "liquidityConfigs",
                  "nameLocation": "24175:16:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89180,
                  "src": "24156:35:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89146,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "24156:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 89147,
                    "nodeType": "ArrayTypeName",
                    "src": "24156:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89150,
                  "mutability": "mutable",
                  "name": "amountsReceived",
                  "nameLocation": "24201:15:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89180,
                  "src": "24193:23:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24193:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24127:90:126"
            },
            "returnParameters": {
              "id": 89153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24256:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89219,
            "nodeType": "FunctionDefinition",
            "src": "24449:320:126",
            "nodes": [],
            "body": {
              "id": 89218,
              "nodeType": "Block",
              "src": "24591:178:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89193,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89182,
                      "src": "24605:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89196,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24623:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24615:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24615:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24615:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24605:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89200,
                  "nodeType": "IfStatement",
                  "src": "24601:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89192,
                    "id": 89199,
                    "nodeType": "Return",
                    "src": "24630:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89204,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89182,
                        "src": "24664:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89205,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89184,
                        "src": "24672:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89206,
                        "name": "liquidityConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89187,
                        "src": "24676:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 89207,
                        "name": "amountsIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89189,
                        "src": "24694:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89201,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "24647:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24653:10:126",
                      "memberName": "_afterMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107022,
                      "src": "24647:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32[] calldata,bytes32)"
                      }
                    },
                    "id": 89208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24647:57:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89209,
                  "nodeType": "ExpressionStatement",
                  "src": "24647:57:126"
                },
                {
                  "expression": {
                    "id": 89213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89210,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "24715:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89211,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "24729:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24729:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "24715:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89214,
                  "nodeType": "ExpressionStatement",
                  "src": "24715:24:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89215,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89542,
                      "src": "24750:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24750:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89217,
                  "nodeType": "ExpressionStatement",
                  "src": "24750:12:126"
                }
              ]
            },
            "baseFunctions": [
              107022
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterMint",
            "nameLocation": "24458:10:126",
            "overrides": {
              "id": 89191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24578:8:126"
            },
            "parameters": {
              "id": 89190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89182,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24477:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89219,
                  "src": "24469:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24469:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89184,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24493:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89219,
                  "src": "24485:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24485:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89187,
                  "mutability": "mutable",
                  "name": "liquidityConfigs",
                  "nameLocation": "24516:16:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89219,
                  "src": "24497:35:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89185,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "24497:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 89186,
                    "nodeType": "ArrayTypeName",
                    "src": "24497:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89189,
                  "mutability": "mutable",
                  "name": "amountsIn",
                  "nameLocation": "24542:9:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89219,
                  "src": "24534:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24534:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24468:84:126"
            },
            "returnParameters": {
              "id": 89192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24591:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89262,
            "nodeType": "FunctionDefinition",
            "src": "24775:363:126",
            "nodes": [],
            "body": {
              "id": 89261,
              "nodeType": "Block",
              "src": "24960:178:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89235,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89221,
                      "src": "24974:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89238,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "24992:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24984:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24984:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24984:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24974:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89242,
                  "nodeType": "IfStatement",
                  "src": "24970:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89234,
                    "id": 89241,
                    "nodeType": "Return",
                    "src": "24999:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89246,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89221,
                        "src": "25034:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89247,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89223,
                        "src": "25042:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89248,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89225,
                        "src": "25048:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89249,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89228,
                        "src": "25052:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 89250,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89231,
                        "src": "25057:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 89243,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25016:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25022:11:126",
                      "memberName": "_beforeBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107044,
                      "src": "25016:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 89251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25016:55:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89252,
                  "nodeType": "ExpressionStatement",
                  "src": "25016:55:126"
                },
                {
                  "expression": {
                    "id": 89256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89253,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "25082:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89254,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "25097:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25097:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25082:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89257,
                  "nodeType": "ExpressionStatement",
                  "src": "25082:25:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89258,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "25118:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25118:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89260,
                  "nodeType": "ExpressionStatement",
                  "src": "25118:13:126"
                }
              ]
            },
            "baseFunctions": [
              107044
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeBurn",
            "nameLocation": "24784:11:126",
            "overrides": {
              "id": 89233,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24951:8:126"
            },
            "parameters": {
              "id": 89232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89221,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "24813:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89262,
                  "src": "24805:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24805:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89223,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "24837:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89262,
                  "src": "24829:12:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24829:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89225,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24859:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89262,
                  "src": "24851:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24851:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89228,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "24890:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89262,
                  "src": "24871:22:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89226,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "24871:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89227,
                    "nodeType": "ArrayTypeName",
                    "src": "24871:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89231,
                  "mutability": "mutable",
                  "name": "amountsToBurn",
                  "nameLocation": "24922:13:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89262,
                  "src": "24903:32:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89229,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "24903:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89230,
                    "nodeType": "ArrayTypeName",
                    "src": "24903:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24795:146:126"
            },
            "returnParameters": {
              "id": 89234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24960:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89305,
            "nodeType": "FunctionDefinition",
            "src": "25144:359:126",
            "nodes": [],
            "body": {
              "id": 89304,
              "nodeType": "Block",
              "src": "25328:175:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89278,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89264,
                      "src": "25342:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89281,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "25360:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25352:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25352:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25352:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25342:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89285,
                  "nodeType": "IfStatement",
                  "src": "25338:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89277,
                    "id": 89284,
                    "nodeType": "Return",
                    "src": "25367:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89289,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89264,
                        "src": "25401:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89290,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89266,
                        "src": "25409:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89291,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89268,
                        "src": "25415:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89292,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89271,
                        "src": "25419:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 89293,
                        "name": "amountsToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89274,
                        "src": "25424:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 89286,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25384:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25390:10:126",
                      "memberName": "_afterBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107066,
                      "src": "25384:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 89294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25384:54:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89295,
                  "nodeType": "ExpressionStatement",
                  "src": "25384:54:126"
                },
                {
                  "expression": {
                    "id": 89299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89296,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "25449:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89297,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "25463:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25463:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25449:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89300,
                  "nodeType": "ExpressionStatement",
                  "src": "25449:24:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89301,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89542,
                      "src": "25484:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25484:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89303,
                  "nodeType": "ExpressionStatement",
                  "src": "25484:12:126"
                }
              ]
            },
            "baseFunctions": [
              107066
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterBurn",
            "nameLocation": "25153:10:126",
            "overrides": {
              "id": 89276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25319:8:126"
            },
            "parameters": {
              "id": 89275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89264,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25181:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89305,
                  "src": "25173:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25173:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89266,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25205:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89305,
                  "src": "25197:12:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25197:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89268,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25227:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89305,
                  "src": "25219:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25219:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89271,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "25258:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89305,
                  "src": "25239:22:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89269,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25239:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89270,
                    "nodeType": "ArrayTypeName",
                    "src": "25239:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89274,
                  "mutability": "mutable",
                  "name": "amountsToBurn",
                  "nameLocation": "25290:13:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89305,
                  "src": "25271:32:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89272,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25271:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89273,
                    "nodeType": "ArrayTypeName",
                    "src": "25271:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25163:146:126"
            },
            "returnParameters": {
              "id": 89277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25328:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89348,
            "nodeType": "FunctionDefinition",
            "src": "25509:377:126",
            "nodes": [],
            "body": {
              "id": 89347,
              "nodeType": "Block",
              "src": "25701:185:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89321,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89307,
                      "src": "25715:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89324,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "25733:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25725:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25725:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25725:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25715:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89328,
                  "nodeType": "IfStatement",
                  "src": "25711:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89320,
                    "id": 89327,
                    "nodeType": "Return",
                    "src": "25740:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89332,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89307,
                        "src": "25788:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89333,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89309,
                        "src": "25796:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89334,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89311,
                        "src": "25802:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89335,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89314,
                        "src": "25806:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 89336,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89317,
                        "src": "25811:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 89329,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "25757:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25763:24:126",
                      "memberName": "_beforeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107088,
                      "src": "25757:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 89337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25757:62:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89338,
                  "nodeType": "ExpressionStatement",
                  "src": "25757:62:126"
                },
                {
                  "expression": {
                    "id": 89342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89339,
                      "name": "_beforeState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88894,
                      "src": "25830:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89340,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "25845:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25845:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "25830:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89343,
                  "nodeType": "ExpressionStatement",
                  "src": "25830:25:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89344,
                      "name": "_beforeCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89517,
                      "src": "25866:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25866:13:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89346,
                  "nodeType": "ExpressionStatement",
                  "src": "25866:13:126"
                }
              ]
            },
            "baseFunctions": [
              107088
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeBatchTransferFrom",
            "nameLocation": "25518:24:126",
            "overrides": {
              "id": 89319,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25692:8:126"
            },
            "parameters": {
              "id": 89318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89307,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25560:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89348,
                  "src": "25552:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25552:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89309,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25584:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89348,
                  "src": "25576:12:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25576:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89311,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25606:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89348,
                  "src": "25598:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25598:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89314,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "25637:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89348,
                  "src": "25618:22:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89312,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25618:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89313,
                    "nodeType": "ArrayTypeName",
                    "src": "25618:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89317,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "25669:7:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89348,
                  "src": "25650:26:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89315,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25650:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89316,
                    "nodeType": "ArrayTypeName",
                    "src": "25650:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25542:140:126"
            },
            "returnParameters": {
              "id": 89320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25701:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89391,
            "nodeType": "FunctionDefinition",
            "src": "25892:373:126",
            "nodes": [],
            "body": {
              "id": 89390,
              "nodeType": "Block",
              "src": "26083:182:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89364,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89350,
                      "src": "26097:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 89367,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "26115:4:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockLBHooks_$89543",
                            "typeString": "contract MockLBHooks"
                          }
                        ],
                        "id": 89366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26107:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26107:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26107:13:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26097:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89371,
                  "nodeType": "IfStatement",
                  "src": "26093:36:126",
                  "trueBody": {
                    "functionReturnParameters": 89363,
                    "id": 89370,
                    "nodeType": "Return",
                    "src": "26122:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89375,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89350,
                        "src": "26169:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89376,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89352,
                        "src": "26177:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89377,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89354,
                        "src": "26183:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89378,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89357,
                        "src": "26187:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 89379,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89360,
                        "src": "26192:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 89372,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "26139:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MockLBHooks_$89543_$",
                          "typeString": "type(contract super MockLBHooks)"
                        }
                      },
                      "id": 89374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26145:23:126",
                      "memberName": "_afterBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 107110,
                      "src": "26139:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] calldata,uint256[] calldata)"
                      }
                    },
                    "id": 89380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26139:61:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89381,
                  "nodeType": "ExpressionStatement",
                  "src": "26139:61:126"
                },
                {
                  "expression": {
                    "id": 89385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89382,
                      "name": "_afterState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "26211:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_storage",
                        "typeString": "struct State storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89383,
                        "name": "getState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89492,
                        "src": "26225:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_State_$86395_memory_ptr_$",
                          "typeString": "function () view returns (struct State memory)"
                        }
                      },
                      "id": 89384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26225:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "src": "26211:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage",
                      "typeString": "struct State storage ref"
                    }
                  },
                  "id": 89386,
                  "nodeType": "ExpressionStatement",
                  "src": "26211:24:126"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89387,
                      "name": "_afterCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89542,
                      "src": "26246:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26246:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89389,
                  "nodeType": "ExpressionStatement",
                  "src": "26246:12:126"
                }
              ]
            },
            "baseFunctions": [
              107110
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterBatchTransferFrom",
            "nameLocation": "25901:23:126",
            "overrides": {
              "id": 89362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26074:8:126"
            },
            "parameters": {
              "id": 89361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89350,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "25942:6:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89391,
                  "src": "25934:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25934:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89352,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25966:4:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89391,
                  "src": "25958:12:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25958:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89354,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25988:2:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89391,
                  "src": "25980:10:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25980:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89357,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "26019:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89391,
                  "src": "26000:22:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89355,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26000:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89356,
                    "nodeType": "ArrayTypeName",
                    "src": "26000:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89360,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "26051:7:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89391,
                  "src": "26032:26:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89358,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "26032:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89359,
                    "nodeType": "ArrayTypeName",
                    "src": "26032:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25924:140:126"
            },
            "returnParameters": {
              "id": 89363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26083:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89492,
            "nodeType": "FunctionDefinition",
            "src": "26271:793:126",
            "nodes": [],
            "body": {
              "id": 89491,
              "nodeType": "Block",
              "src": "26332:732:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89399,
                      "mutability": "mutable",
                      "name": "lbPair",
                      "nameLocation": "26350:6:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 89491,
                      "src": "26342:14:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 89398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89397,
                          "name": "ILBPair",
                          "nameLocations": [
                            "26342:7:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "26342:7:126"
                        },
                        "referencedDeclaration": 69569,
                        "src": "26342:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89402,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89400,
                      "name": "_getLBPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        106900
                      ],
                      "referencedDeclaration": 106900,
                      "src": "26359:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function () view returns (contract ILBPair)"
                      }
                    },
                    "id": 89401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26359:12:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26342:29:126"
                },
                {
                  "expression": {
                    "id": 89412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 89403,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26383:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26389:8:126",
                          "memberName": "reserveX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86376,
                          "src": "26383:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 89406,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26399:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89407,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26405:8:126",
                          "memberName": "reserveY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86378,
                          "src": "26399:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 89408,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26382:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89409,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89399,
                          "src": "26417:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 89410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26424:11:126",
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69352,
                        "src": "26417:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26417:20:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26382:55:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89413,
                  "nodeType": "ExpressionStatement",
                  "src": "26382:55:126"
                },
                {
                  "expression": {
                    "id": 89423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 89414,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26448:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89416,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26454:12:126",
                          "memberName": "protocolFeeX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86380,
                          "src": "26448:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 89417,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26468:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26474:12:126",
                          "memberName": "protocolFeeY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86382,
                          "src": "26468:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 89419,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26447:40:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89420,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89399,
                          "src": "26490:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 89421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26497:15:126",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69382,
                        "src": "26490:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26490:24:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26447:67:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89424,
                  "nodeType": "ExpressionStatement",
                  "src": "26447:67:126"
                },
                {
                  "assignments": [
                    89426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89426,
                      "mutability": "mutable",
                      "name": "activeId",
                      "nameLocation": "26531:8:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 89491,
                      "src": "26524:15:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 89425,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "26524:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89434,
                  "initialValue": {
                    "components": [
                      {
                        "id": 89432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 89427,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26543:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26549:8:126",
                          "memberName": "activeId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86384,
                          "src": "26543:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89429,
                              "name": "lbPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89399,
                              "src": "26560:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILBPair_$69569",
                                "typeString": "contract ILBPair"
                              }
                            },
                            "id": 89430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "26567:11:126",
                            "memberName": "getActiveId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69357,
                            "src": "26560:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                              "typeString": "function () view external returns (uint24)"
                            }
                          },
                          "id": 89431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26560:20:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "src": "26543:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "id": 89433,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "26542:39:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26524:57:126"
                },
                {
                  "expression": {
                    "id": 89445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 89435,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26592:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89437,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26598:14:126",
                          "memberName": "activeReserveX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86386,
                          "src": "26592:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 89438,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89395,
                            "src": "26614:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                              "typeString": "struct State memory"
                            }
                          },
                          "id": 89439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26620:14:126",
                          "memberName": "activeReserveY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86388,
                          "src": "26614:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 89440,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26591:44:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89443,
                          "name": "activeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89426,
                          "src": "26652:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        ],
                        "expression": {
                          "id": 89441,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89399,
                          "src": "26638:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 89442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26645:6:126",
                        "memberName": "getBin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69366,
                        "src": "26638:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint24_$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function (uint24) view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26638:23:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "26591:70:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89446,
                  "nodeType": "ExpressionStatement",
                  "src": "26591:70:126"
                },
                {
                  "assignments": [
                    89449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89449,
                      "mutability": "mutable",
                      "name": "vp",
                      "nameLocation": "26700:2:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 89491,
                      "src": "26672:30:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                        "typeString": "struct VolatilityParameters"
                      },
                      "typeName": {
                        "id": 89448,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89447,
                          "name": "VolatilityParameters",
                          "nameLocations": [
                            "26672:20:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86363,
                          "src": "26672:20:126"
                        },
                        "referencedDeclaration": 86363,
                        "src": "26672:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VolatilityParameters_$86363_storage_ptr",
                          "typeString": "struct VolatilityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89452,
                  "initialValue": {
                    "expression": {
                      "id": 89450,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89395,
                      "src": "26705:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 89451,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26711:20:126",
                    "memberName": "volatilityParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86391,
                    "src": "26705:26:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                      "typeString": "struct VolatilityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26672:59:126"
                },
                {
                  "expression": {
                    "id": 89466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 89453,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89449,
                            "src": "26742:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 89455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26745:21:126",
                          "memberName": "volatilityAccumulator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86356,
                          "src": "26742:24:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 89456,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89449,
                            "src": "26768:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 89457,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26771:19:126",
                          "memberName": "volatilityReference",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86358,
                          "src": "26768:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 89458,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89449,
                            "src": "26792:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 89459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26795:11:126",
                          "memberName": "idReference",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86360,
                          "src": "26792:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 89460,
                            "name": "vp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89449,
                            "src": "26808:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VolatilityParameters_$86363_memory_ptr",
                              "typeString": "struct VolatilityParameters memory"
                            }
                          },
                          "id": 89461,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26811:16:126",
                          "memberName": "timeOfLastUpdate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86362,
                          "src": "26808:19:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        }
                      ],
                      "id": 89462,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26741:87:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                        "typeString": "tuple(uint24,uint24,uint24,uint40)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89463,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89399,
                          "src": "26843:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 89464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26850:24:126",
                        "memberName": "getVariableFeeParameters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69415,
                        "src": "26843:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                          "typeString": "function () view external returns (uint24,uint24,uint24,uint40)"
                        }
                      },
                      "id": 89465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26843:33:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint40_$",
                        "typeString": "tuple(uint24,uint24,uint24,uint40)"
                      }
                    },
                    "src": "26741:135:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89467,
                  "nodeType": "ExpressionStatement",
                  "src": "26741:135:126"
                },
                {
                  "assignments": [
                    89470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89470,
                      "mutability": "mutable",
                      "name": "op",
                      "nameLocation": "26911:2:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 89491,
                      "src": "26887:26:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                        "typeString": "struct OracleParameters"
                      },
                      "typeName": {
                        "id": 89469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89468,
                          "name": "OracleParameters",
                          "nameLocations": [
                            "26887:16:126"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86374,
                          "src": "26887:16:126"
                        },
                        "referencedDeclaration": 86374,
                        "src": "26887:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OracleParameters_$86374_storage_ptr",
                          "typeString": "struct OracleParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89473,
                  "initialValue": {
                    "expression": {
                      "id": 89471,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89395,
                      "src": "26916:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                        "typeString": "struct State memory"
                      }
                    },
                    "id": 89472,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26922:16:126",
                    "memberName": "oracleParameters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86394,
                    "src": "26916:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                      "typeString": "struct OracleParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26887:51:126"
                },
                {
                  "expression": {
                    "id": 89489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 89474,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89470,
                            "src": "26949:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 89476,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26952:14:126",
                          "memberName": "sampleLifetime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86365,
                          "src": "26949:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "expression": {
                            "id": 89477,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89470,
                            "src": "26968:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 89478,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26971:4:126",
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86367,
                          "src": "26968:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 89479,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89470,
                            "src": "26977:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 89480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26980:10:126",
                          "memberName": "activeSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86369,
                          "src": "26977:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 89481,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89470,
                            "src": "26992:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 89482,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "26995:11:126",
                          "memberName": "lastUpdated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86371,
                          "src": "26992:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        {
                          "expression": {
                            "id": 89483,
                            "name": "op",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89470,
                            "src": "27008:2:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OracleParameters_$86374_memory_ptr",
                              "typeString": "struct OracleParameters memory"
                            }
                          },
                          "id": 89484,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "27011:14:126",
                          "memberName": "firstTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86373,
                          "src": "27008:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        }
                      ],
                      "id": 89485,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "26948:78:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                        "typeString": "tuple(uint8,uint16,uint16,uint40,uint40)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89486,
                          "name": "lbPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89399,
                          "src": "27029:6:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        "id": 89487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "27036:19:126",
                        "memberName": "getOracleParameters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69428,
                        "src": "27029:26:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                          "typeString": "function () view external returns (uint8,uint16,uint16,uint40,uint40)"
                        }
                      },
                      "id": 89488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27029:28:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                        "typeString": "tuple(uint8,uint16,uint16,uint40,uint40)"
                      }
                    },
                    "src": "26948:109:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89490,
                  "nodeType": "ExpressionStatement",
                  "src": "26948:109:126"
                }
              ]
            },
            "functionSelector": "1865c57d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getState",
            "nameLocation": "26280:8:126",
            "parameters": {
              "id": 89392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26288:2:126"
            },
            "returnParameters": {
              "id": 89396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89395,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "26325:5:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 89492,
                  "src": "26312:18:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_State_$86395_memory_ptr",
                    "typeString": "struct State"
                  },
                  "typeName": {
                    "id": 89394,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89393,
                      "name": "State",
                      "nameLocations": [
                        "26312:5:126"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86395,
                      "src": "26312:5:126"
                    },
                    "referencedDeclaration": 86395,
                    "src": "26312:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_State_$86395_storage_ptr",
                      "typeString": "struct State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26311:20:126"
            },
            "scope": 89543,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89517,
            "nodeType": "FunctionDefinition",
            "src": "27070:213:126",
            "nodes": [],
            "body": {
              "id": 89516,
              "nodeType": "Block",
              "src": "27102:181:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89495,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88899,
                      "src": "27116:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 89498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27140:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27132:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89496,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27132:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27132:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27116:26:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89502,
                  "nodeType": "IfStatement",
                  "src": "27112:39:126",
                  "trueBody": {
                    "functionReturnParameters": 89494,
                    "id": 89501,
                    "nodeType": "Return",
                    "src": "27144:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89506,
                        "name": "beforeTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88899,
                        "src": "27182:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89507,
                        "name": "beforeTargetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88901,
                        "src": "27196:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 89503,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42913,
                        "src": "27161:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42913_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 89505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27169:12:126",
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42734,
                      "src": "27161:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 89508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27161:52:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 89509,
                  "nodeType": "ExpressionStatement",
                  "src": "27161:52:126"
                },
                {
                  "expression": {
                    "id": 89511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27224:19:126",
                    "subExpression": {
                      "id": 89510,
                      "name": "beforeTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88899,
                      "src": "27231:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89512,
                  "nodeType": "ExpressionStatement",
                  "src": "27224:19:126"
                },
                {
                  "expression": {
                    "id": 89514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27253:23:126",
                    "subExpression": {
                      "id": 89513,
                      "name": "beforeTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88901,
                      "src": "27260:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89515,
                  "nodeType": "ExpressionStatement",
                  "src": "27253:23:126"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeCall",
            "nameLocation": "27079:11:126",
            "parameters": {
              "id": 89493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27090:2:126"
            },
            "returnParameters": {
              "id": 89494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27102:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89542,
            "nodeType": "FunctionDefinition",
            "src": "27289:207:126",
            "nodes": [],
            "body": {
              "id": 89541,
              "nodeType": "Block",
              "src": "27320:176:126",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 89525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89520,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88903,
                      "src": "27334:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 89523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27357:1:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "27349:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 89521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27349:7:126",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27349:10:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27334:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89527,
                  "nodeType": "IfStatement",
                  "src": "27330:38:126",
                  "trueBody": {
                    "functionReturnParameters": 89519,
                    "id": 89526,
                    "nodeType": "Return",
                    "src": "27361:7:126"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89531,
                        "name": "afterTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88903,
                        "src": "27399:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89532,
                        "name": "afterTargetData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88905,
                        "src": "27412:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 89528,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42913,
                        "src": "27378:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42913_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 89530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27386:12:126",
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42734,
                      "src": "27378:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 89533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27378:50:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 89534,
                  "nodeType": "ExpressionStatement",
                  "src": "27378:50:126"
                },
                {
                  "expression": {
                    "id": 89536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27439:18:126",
                    "subExpression": {
                      "id": 89535,
                      "name": "afterTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88903,
                      "src": "27446:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89537,
                  "nodeType": "ExpressionStatement",
                  "src": "27439:18:126"
                },
                {
                  "expression": {
                    "id": 89539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "27467:22:126",
                    "subExpression": {
                      "id": 89538,
                      "name": "afterTargetData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88905,
                      "src": "27474:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89540,
                  "nodeType": "ExpressionStatement",
                  "src": "27467:22:126"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterCall",
            "nameLocation": "27298:10:126",
            "parameters": {
              "id": 89518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27308:2:126"
            },
            "returnParameters": {
              "id": 89519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27320:0:126"
            },
            "scope": 89543,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88890,
              "name": "MockHooks",
              "nameLocations": [
                "21973:9:126"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 107111,
              "src": "21973:9:126"
            },
            "id": 88891,
            "nodeType": "InheritanceSpecifier",
            "src": "21973:9:126"
          }
        ],
        "canonicalName": "MockLBHooks",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89543,
          107111,
          57322,
          67816
        ],
        "name": "MockLBHooks",
        "nameLocation": "21958:11:126",
        "scope": 89544,
        "usedErrors": [
          42668,
          42673,
          42676,
          56744,
          56746
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 126
}