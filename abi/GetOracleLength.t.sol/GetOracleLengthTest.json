{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryArbitrum",
      "outputs": [
        {
          "internalType": "contract LBFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryAvax",
      "outputs": [
        {
          "internalType": "contract LBFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryBsc",
      "outputs": [
        {
          "internalType": "contract LBFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryEth",
      "outputs": [
        {
          "internalType": "contract LBFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "forks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "chain",
          "type": "string"
        }
      ],
      "name": "get_size",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;1016:26:13;;;;;;;;;803:77:125;3126:44:3;803:77:125;;;-1:-1:-1;;;803:77:125;;361:3288;803:77;;;;;;;-1:-1:-1;;;803:77:125;;-1:-1:-1;803:77:125;;;;;;;;;-1:-1:-1;;;803:77:125;;-1:-1:-1;803:77:125;;-1:-1:-1;803:77:125;;;;;;-1:-1:-1;;;803:77:125;;-1:-1:-1;803:77:125;;;-1:-1:-1;;803:77:125;;:::i;:::-;;361:3288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;361:3288:125;;;-1:-1:-1;361:3288:125;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:127:169;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:169;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:169;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:169;;;2580:26;2531:89;-1:-1:-1;;1335:1:169;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:169;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:169;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:169;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:169:o;:::-;361:3288:125;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "361:3288:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:199;;;:::i;:::-;;2907:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:92:125;;753:42;704:92;;;;;-1:-1:-1;;;;;883:55:169;;;865:74;;853:2;838:18;704:92:125;700:245:169;3823:151:6;;;:::i;:::-;;;;;;;:::i;1495:688:125:-;;;;;;:::i;:::-;;:::i;404:93::-;;454:42;404:93;;3684:133:6;;;:::i;3385:141::-;;;:::i;3193:186::-;;;:::i;:::-;;;;;;;:::i;3047:140::-;;;:::i;:::-;;;;;;;:::i;3532:146::-;;;:::i;:::-;;;;;;;:::i;886:39:125:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8244:25:169;;;8232:2;8217:18;886:39:125;8098:177:169;2754:147:6;;;:::i;2459:141::-;;;:::i;1243:204:2:-;;;:::i;:::-;;;8445:14:169;;8438:22;8420:41;;8408:2;8393:18;1243:204:2;8280:187:169;2606:142:6;;;:::i;1016:26:13:-;;;;;;;;;932:199:125;971:9;966:159;990:6;:13;986:17;;966:159;;;1024:19;1046:6;1053:1;1046:9;;;;;;;;:::i;:::-;;;;;;;;1024:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:0;309:37;;-1:-1:-1;;;;;1085:13:125;;1099:14;1107:5;1099:7;:14::i;:::-;1085:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1070:5;1076;1070:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:44;-1:-1:-1;1005:3:125;;;;:::i;:::-;;;;966:159;;;;932:199::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;1495:688:125:-;1565:12;;1551:13;;;;1565:5;;:12;;1571:5;;1565:12;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1551:27:125;;;;;;;;;;;8244:25:169;;;8232:2;8217:18;;8098:177;1551:27:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1589:17;1609:22;1625:5;1609:15;:22::i;:::-;1589:42;;1642:22;1667:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1755:31:125;;-1:-1:-1;;;1755:31:125;;-1:-1:-1;;;;;883:55:169;;;1755:31:125;;;865:74:169;1642:51:125;;-1:-1:-1;1705:22:125;;;;1755;;;;;;838:18:169;;1755:31:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1755:31:125;;;;;;;;;;;;:::i;:::-;1704:82;;;;1797:14;1831:9;1826:261;1850:5;:12;1846:1;:16;1826:261;;;1883:12;1898:5;1904:1;1898:8;;;;;;;;:::i;:::-;;;;;;;1883:23;;1920:12;1935:5;1941:1;1935:8;;;;;;;;:::i;:::-;;;;;;;1920:23;;1969:1;1962:4;:8;1958:119;;;1990:8;;;;:::i;:::-;;;;2016:46;;;;;;;;;;;;;;;;;;2051:4;2057;2016:11;:46::i;:::-;1869:218;;1864:3;;;;;:::i;:::-;;;;1826:261;;;;2097:79;;;;;;;;;;;;;;;;;;2148:6;2156:5;:12;2170:5;2097:11;:79::i;:::-;1541:642;;;;;1495:688;:::o;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:2;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;:7;:39;;;12341:74:169;;;1398:17:2;12431:18:169;;;12424:34;1428:1:2;;1377:7;;12314:18:169;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;2189:767:125:-;2245:13;2917:25;2936:5;2917:18;:25::i;:::-;:32;;;;2189:767;-1:-1:-1;;2189:767:125:o;2962:685::-;3104:29;;-1:-1:-1;;;3104:29:125;;;12860:24:169;3031:9:125;;12900:11:169;;3104:29:125;;;;;;;;;;;;3094:40;;;;;;3083:5;3066:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3056:34;;;;;;:78;3052:589;;-1:-1:-1;454:42:125;;2962:685;-1:-1:-1;2962:685:125:o;3052:589::-;3237:32;;-1:-1:-1;;;3237:32:125;;;13124:27:169;13167:12;;3237:32:125;;;;;;;;;;;;3227:43;;;;;;3216:5;3199:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3189:34;;;;;;:81;3185:456;;-1:-1:-1;557:42:125;;2962:685;-1:-1:-1;2962:685:125:o;3185:456::-;3377:35;;-1:-1:-1;;;3377:35:125;;;13392:30:169;13438:12;;3377:35:125;;;;;;;;;;;;3367:46;;;;;;3356:5;3339:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3329:34;;;;;;:84;3325:316;;-1:-1:-1;655:42:125;;2962:685;-1:-1:-1;2962:685:125:o;3325:316::-;3515:27;;-1:-1:-1;;;3515:27:125;;;13663:22:169;13701:11;;3515:27:125;;;;;;;;;;;;3505:38;;;;;;3494:5;3477:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3467:34;;;;;;:76;3463:178;;-1:-1:-1;753:42:125;;2962:685;-1:-1:-1;2962:685:125:o;3463:178::-;3607:23;;-1:-1:-1;;;3607:23:125;;13925:2:169;3607:23:125;;;13907:21:169;13964:2;13944:18;;;13937:30;14003:15;13983:18;;;13976:43;14036:18;;3607:23:125;;;;;;;;13521:163:15;13597:80;13665:2;13669;13673;13613:63;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13613:63:15;;;;;;;;;;;;;;-1:-1:-1;;;;;13613:63:15;-1:-1:-1;;;13613:63:15;;;13597:15;:80::i;:::-;13521:163;;;:::o;31323:186::-;31414:88;31486:2;31490;31494;31498;31430:71;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;31430:71:15;;;;;;;;;;;;;;-1:-1:-1;;;;;31430:71:15;-1:-1:-1;;;31430:71:15;;;31414:15;:88::i;:::-;31323:186;;;;:::o;3255:524:3:-;3325:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3325:18:3;3369:10;3363:24;3391:1;3363:29;3355:109;;;;-1:-1:-1;;;3355:109:3;;15215:2:169;3355:109:3;;;15197:21:169;15254:2;15234:18;;;15227:30;15293:34;15273:18;;;15266:62;15364:34;15344:18;;;15337:62;-1:-1:-1;;;15415:19:169;;;15408:34;15459:19;;3355:109:3;15013:471:169;3355:109:3;3475:21;:19;:21::i;:::-;3514:6;3521:10;3514:18;;;;;;:::i;:::-;;;;;;;;;;;;;3506:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:5;:13;;;3580:1;3563:18;;3670:10;3602:96;;;;;;;;:::i;:::-;;;;;;;;;;;;;3542:167;;;;;-1:-1:-1;;;3542:167:3;;;;;;;;:::i;:::-;;3728:44;3754:10;3766:5;3728:25;:44::i;:::-;3720:52;3255:524;-1:-1:-1;;3255:524:3:o;408:133:15:-;479:55;526:7;505:19;479:55::i;8283:4000:3:-;8336:20;;;;;;;8332:33;;;8283:4000::o;8332:33::-;8375:20;:27;;-1:-1:-1;;8375:27:3;;;;;8521:86;;;;;;;;;;;;;;;;;;;;;8556:50;;;;;;;;;;;;;;;;;;;;;8575:5;8556:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8521:86;;:25;:86::i;:::-;8617:156;;;;;;;;;;;;;;-1:-1:-1;;;8617:156:3;;;8667:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8688:1;8667:96;;;;;;;;;;;;;;;;;;;;;;;8617:25;:156::i;:::-;8783:155;;;;;;;;;;;;;;;;;;8833:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8854:8;8833:95;;;;;;;;;;;;;;;;;;;;;;;8783:25;:155::i;:::-;8948:103;;;;;;;;;;;;;;;;;;8985:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9006:5;8985:65;;;;;;;;;;;;;;;;;;;;;;;8948:25;:103::i;:::-;9061:95;;;;;;;;;;;;;;;;;;9099:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9121:2;9099:56;;;;;;;;;;;;;;;;;;;;;;;;9061:25;:95::i;:::-;9166:139;;;;;;;;;;;;;;;;;;9225:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9255:8;9225:70;;;;;;;;;;;;;;;;;;;;;;;;9166:25;:139::i;:::-;9315:107;;;;;;;;;;;;;;-1:-1:-1;;;9315:107:3;;;9357:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9383:5;9357:64;;;;;;;;;;;;;;;;;;;;;;;;9315:25;:107::i;:::-;9432:156;;;;;;;;;;;;;;;;;;9495:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9529:6;9495:83;;;;;;;;;;;;;;;;;;;;;;;9432:25;:156::i;:::-;9598:109;;;;;;;;;;;;;;;;;;9641:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9668:5;9641:65;;;;;;;;;;;;;;;;;;;;;;;;9598:25;:109::i;:::-;9717:90;;;;;;;;;;;;;;;;;;9754:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9775:3;9754:52;;;;;;;;;;;;;;;;;;;;;;;;9717:25;:90::i;:::-;9817:136;;;;;;;;;;;;;;;;;;9872:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9898:5;9872:71;;;;;;;;;;;;;;;;;;;;;;;9817:25;:136::i;:::-;9963:110;;;;;;;;;;;;;;-1:-1:-1;;;9963:110:3;;;10002:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10025:5;10002:70;;;;;;;;;;;;;;;;;;;;;;;9963:25;:110::i;:::-;10083:147;;;;;;;;;;;;;;;;;;10140:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10168:5;10140:80;;;;;;;;;;;;;;;;;;;;;;;10083:25;:147::i;:::-;10240:137;;;;;;;;;;;;;;-1:-1:-1;;;10240:137:3;;;10298:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10327:2;10298:69;;;;;;;;;;;;;;;;;;;;;;;10240:25;:137::i;:::-;10387:171;;;;;;;;;;;;;;;;;;10465:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10502:2;10465:83;;;;;;;;;;;;;;;;;;;;;;;10387:25;:171::i;:::-;10568:104;;;;;;;;;;;;;;;;;;10610:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10636:3;10610:61;;;;;;;;;;;;;;;;;;;;;;;;10568:25;:104::i;:::-;10682:102;;;;;;;;;;;;;;;;;;10720:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10742:4;10720:63;;;;;;;;;;;;;;;;;;;;;;;;10682:25;:102::i;:::-;10794:136;;;;;;;;;;;;;;;;;;10846:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10869:4;10846:74;;;;;;;;;;;;;;;;;;;;;;;10794:25;:136::i;:::-;10940:106;;;;;;;;;;;;;;;;;;10978:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:4;10978:67;;;;;;;;;;;;;;;;;;;;;;;10940:25;:106::i;:::-;11056:103;;;;;;;;;;;;;;;;;;11098:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11124:5;11098:60;;;;;;;;;;;;;;;;;;;;;;;;11056:25;:103::i;:::-;11169:86;;;;;;;;;;;;;;-1:-1:-1;;;11169:86:3;;;11203:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11203:51:3;;;;;;;11221:4;11203:51;;;;;;;;;;;;;;;;;;;;;;;;11169:25;:86::i;:::-;11265:109;;;;;;;;;;;;;;;;;;11308:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11335:9;11308:65;;;;;;;;;;;;;;;;;;;;;;;;11265:25;:109::i;:::-;11384:85;;;;;;;;;;;;;;;;;;11419:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11438:5;11419:49;;;;;;;;;;;;;;;;;;;;;;;;11384:25;:85::i;:::-;11479:105;;;;;;;;;;;;;;;;;;11521:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11547:3;11521:62;;;;;;;;;;;;;;;;;;;;;;;;11479:25;:105::i;:::-;11594:152;;;;;;;;;;;;;;;;;;11657:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:4;11657:79;;;;;;;;;;;;;;;;;;;;;;;11594:25;:152::i;:::-;11756:87;;;;;;;;;;;;;;;;;;11793:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11814:3;11793:49;;;;;;;;;;;;;;;;;;;;;;;;11756:25;:87::i;:::-;11853:112;;;;;;;;;;;;;;;;;;11898:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11927:4;11898:66;;;;;;;;;;;;;;;;;;;;;;;;11853:25;:112::i;:::-;11975:157;;;;;;;;;;;;;;;;;;12042:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12080:5;12042:80;;;;;;;;;;;;;;;;;;;;;;;;11975:25;:157::i;:::-;12142:134;;;;;;;;;;;;;;;;;;12196:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12221:6;12196:70;;;;;;;;;;;;;;;;;;;;;;;12142:25;:134::i;:::-;8283:4000::o;6429:1725::-;6556:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6556:12:3;6594:5;:12;;;6588:26;6618:1;6588:31;6584:1542;;6639:21;;-1:-1:-1;;;6639:21:3;;:9;;;;:21;;6649:10;;6639:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6639:21:3;;;;;;;;;;;;:::i;:::-;;;6635:1481;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:21;6850:20;6859:10;6850:8;:20::i;:::-;6833:50;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:50:3;;;;;;;;;6906:24;;6833:50;;-1:-1:-1;6906:24:3;;6902:214;;;1993:28;1985:37;;-1:-1:-1;;;;;6969:8:3;;6978:7;6987:14;7002:10;6987:26;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;6969:45:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6969:45:3;;;;;;;;;;;;:::i;:::-;6954:12;;;:60;6902:214;;;7076:21;;-1:-1:-1;;;7076:21:3;;:12;;;;:21;;7089:7;;7076:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7076:21:3;;;;;;;;;;;;:::i;:::-;7061:12;;;:36;6902:214;7318:29;7456:10;7419:48;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7419:48:3;;;;;;;;;;7370:99;;;;;:::i;:::-;;;;-1:-1:-1;;7370:99:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;7370:99:3;-1:-1:-1;;;7370:99:3;;;7597:49;;7370:99;;-1:-1:-1;;;7597:49:3;;7635:10;;7597:49;;:::i;:::-;;;;-1:-1:-1;;7597:49:3;;;;;;;;;;7519:146;;;;;:::i;:::-;;;;-1:-1:-1;;7519:146:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;7519:146:3;-1:-1:-1;;;7519:146:3;;;7701:14;;;;;;7770:27;;;;;;;;;7519:146;;-1:-1:-1;7701:14:3;7759:38;;;;;:80;;-1:-1:-1;7812:27:3;;;;;;7801:38;;;7759:80;7758:141;;;-1:-1:-1;7874:12:3;;;;7868:26;:31;7758:141;7733:369;;;8057:3;8051:10;8045:3;8041:2;8037:12;8030:32;7733:369;6784:1332;;;;6759:1357;6635:1481;;;6716:12;;;:27;6635:1481;-1:-1:-1;8142:5:3;6429:1725;-1:-1:-1;6429:1725:3:o;547:380:15:-;645:14;;131:42;818:2;805:16;;621:21;;645:14;805:16;131:42;854:5;843:68;834:77;;771:150;;547:380;:::o;12365:305:3:-;12468:20;12491:5;:12;;;12468:35;;12542:6;12513:14;12528:10;12513:26;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;;;:::i;:::-;-1:-1:-1;12558:17:3;;;;;;;;-1:-1:-1;12558:17:3;;:12;;;:17;12585:27;12594:10;12558:5;12585:8;:27::i;:::-;12622:12;;;;:21;-1:-1:-1;12365:305:3:o;5842:451::-;5901:13;5926:17;5952:3;5926:30;;5966:17;5996:4;:11;5986:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5986:22:3;;5966:42;;6023:9;6018:240;6042:4;:11;6038:1;:15;6018:240;;;6074:8;6085:4;6090:1;6085:7;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;6110:9:3;;;;;:22;;-1:-1:-1;;;;6123:9:3;;;;;6110:22;6106:142;;;6169:13;6180:2;6169:8;;;;:13;:::i;:::-;6162:21;;6152:4;6157:1;6152:7;;;;;;;;:::i;:::-;;;;:31;;;;;;;;;;;6106:142;;;6232:1;6222:4;6227:1;6222:7;;;;;;;;:::i;:::-;;;;:11;;;;;;;;;;;6106:142;-1:-1:-1;6055:3:3;;;;:::i;:::-;;;;6018:240;;;-1:-1:-1;6281:4:3;5842:451;-1:-1:-1;;;5842:451:3:o;4397:1173::-;4519:10;4513:24;4541:1;4513:29;4492:153;;;;-1:-1:-1;;;4492:153:3;;21956:2:169;4492:153:3;;;21938:21:169;21995:2;21975:18;;;21968:30;22034:34;22014:18;;;22007:62;22105:34;22085:18;;;22078:62;22177:15;22156:19;;;22149:44;22210:19;;4492:153:3;21754:481:169;4492:153:3;4664:5;:13;;;4681:1;4664:18;4656:90;;;;-1:-1:-1;;;4656:90:3;;22442:2:169;4656:90:3;;;22424:21:169;22481:2;22461:18;;;22454:30;22520:34;22500:18;;;22493:62;22591:29;22571:18;;;22564:57;22638:19;;4656:90:3;22240:423:169;4656:90:3;4757:21;:19;:21::i;:::-;4825:13;;;;;4788:24;4815;;;:9;:24;;;;;;4788:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:10;4871:24;4899:1;4871:29;:93;;;;4952:10;4936:28;;;;;;4920:10;4904:28;;;;;;:60;4871:93;5123:13;;;;5111:26;;-1:-1:-1;;;5111:26:3;;;;;8244:25:169;;;;5111:11:3;;;;8217:18:169;;5111:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5111:26:3;;;;;;;;;;;;:::i;:::-;5202:10;5002:255;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4850:431;;;;;-1:-1:-1;;;4850:431:3;;;;;;;;:::i;:::-;;5292:18;5313:6;5320:10;5313:18;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;5292:47;;5356:9;:21;5366:10;5356:21;;;;;;;;;;;;5349:28;;;;:::i;:::-;5421:95;;;;;;;;5434:5;:10;;;5421:95;;;;5455:5;:13;;;5421:95;;;;5482:10;5421:95;;;;5502:5;:12;;;5421:95;;;5388:6;5395:10;5388:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:128;;:18;;:128;;:18;:128;:::i;:::-;-1:-1:-1;5388:128:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5388:128:3;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;5536:13:3;;;;;5526:24;;;;:9;:24;;;;;;:37;5553:10;5526:24;:37;:::i;:::-;;4482:1088;;4397:1173;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:681:169:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;-1:-1:-1;;;;;526:62:169;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:169;;14:681;-1:-1:-1;;;;;;14:681:169:o;950:250::-;1035:1;1045:113;1059:6;1056:1;1053:13;1045:113;;;1135:11;;;1129:18;1116:11;;;1109:39;1081:2;1074:10;1045:113;;;-1:-1:-1;;1192:1:169;1174:16;;1167:27;950:250::o;1205:271::-;1247:3;1285:5;1279:12;1312:6;1307:3;1300:19;1328:76;1397:6;1390:4;1385:3;1381:14;1374:4;1367:5;1363:16;1328:76;:::i;:::-;1458:2;1437:15;-1:-1:-1;;1433:29:169;1424:39;;;;1465:4;1420:50;;1205:271;-1:-1:-1;;1205:271:169:o;1481:1765::-;1714:2;1766:21;;;1836:13;;1739:18;;;1858:22;;;1685:4;;1714:2;1899;;1917:18;;;;1954:1;1997:15;;;1982:31;;1978:40;;2041:15;;;1685:4;;2105:1112;2121:6;2116:3;2113:15;2105:1112;;;-1:-1:-1;;2190:22:169;;;2186:36;2174:49;;2246:13;;2333:9;;-1:-1:-1;;;;;2329:58:169;2314:74;;2427:11;;2421:18;2459:15;;;2452:27;;;2540:19;;2286:15;;;2572:24;;;2753:21;;;;2619:2;2701:17;;;2689:30;;2685:39;;;2643:15;;;;2798:1;2812:296;2828:8;2823:3;2820:17;2812:296;;;2934:2;2930:7;2921:6;2913;2909:19;2905:33;2898:5;2891:48;2966:42;3001:6;2990:8;2984:15;2966:42;:::i;:::-;3037:17;;;;2956:52;-1:-1:-1;3080:14:169;;;;2856:1;2847:11;2812:296;;;-1:-1:-1;;;3195:12:169;;;;3131:6;-1:-1:-1;;3160:15:169;;;;2147:1;2138:11;2105:1112;;;-1:-1:-1;3234:6:169;;1481:1765;-1:-1:-1;;;;;;;;;;1481:1765:169:o;3251:127::-;3312:10;3307:3;3303:20;3300:1;3293:31;3343:4;3340:1;3333:15;3367:4;3364:1;3357:15;3383:275;3454:2;3448:9;3519:2;3500:13;;-1:-1:-1;;3496:27:169;3484:40;;3554:18;3539:34;;3575:22;;;3536:62;3533:88;;;3601:18;;:::i;:::-;3637:2;3630:22;3383:275;;-1:-1:-1;3383:275:169:o;3663:187::-;3712:4;3745:18;3737:6;3734:30;3731:56;;;3767:18;;:::i;:::-;-1:-1:-1;3833:2:169;3812:15;-1:-1:-1;;3808:29:169;3839:4;3804:40;;3663:187::o;3855:673::-;3924:6;3977:2;3965:9;3956:7;3952:23;3948:32;3945:52;;;3993:1;3990;3983:12;3945:52;4033:9;4020:23;4066:18;4058:6;4055:30;4052:50;;;4098:1;4095;4088:12;4052:50;4121:22;;4174:4;4166:13;;4162:27;-1:-1:-1;4152:55:169;;4203:1;4200;4193:12;4152:55;4239:2;4226:16;4264:49;4280:32;4309:2;4280:32;:::i;:::-;4264:49;:::i;:::-;4336:2;4329:5;4322:17;4376:7;4371:2;4366;4362;4358:11;4354:20;4351:33;4348:53;;;4397:1;4394;4387:12;4348:53;4452:2;4447;4443;4439:11;4434:2;4427:5;4423:14;4410:45;4496:1;4475:14;;;4491:2;4471:23;4464:34;;;;4479:5;3855:673;-1:-1:-1;;;;3855:673:169:o;4533:461::-;4585:3;4623:5;4617:12;4650:6;4645:3;4638:19;4676:4;4705:2;4700:3;4696:12;4689:19;;4742:2;4735:5;4731:14;4763:1;4773:196;4787:6;4784:1;4781:13;4773:196;;;4852:13;;-1:-1:-1;;;;;;4848:40:169;4836:53;;4909:12;;;;4944:15;;;;4809:1;4802:9;4773:196;;;-1:-1:-1;4985:3:169;;4533:461;-1:-1:-1;;;;;4533:461:169:o;4999:1185::-;5217:4;5246:2;5286;5275:9;5271:18;5316:2;5305:9;5298:21;5339:6;5374;5368:13;5405:6;5397;5390:22;5431:2;5421:12;;5464:2;5453:9;5449:18;5442:25;;5526:2;5516:6;5513:1;5509:14;5498:9;5494:30;5490:39;5564:2;5556:6;5552:15;5585:1;5595:560;5609:6;5606:1;5603:13;5595:560;;;5674:22;;;-1:-1:-1;;5670:36:169;5658:49;;5730:13;;5776:9;;5798:18;;;5843:48;5875:15;;;5776:9;5843:48;:::i;:::-;5932:11;;;5926:18;5981:19;;;5964:15;;;5957:44;5926:18;5829:62;-1:-1:-1;6024:51:169;5829:62;5926:18;6024:51;:::i;:::-;6133:12;;;;6014:61;-1:-1:-1;;;6098:15:169;;;;5631:1;5624:9;5595:560;;;-1:-1:-1;6172:6:169;;4999:1185;-1:-1:-1;;;;;;;;4999:1185:169:o;6189:803::-;6351:4;6380:2;6420;6409:9;6405:18;6450:2;6439:9;6432:21;6473:6;6508;6502:13;6539:6;6531;6524:22;6577:2;6566:9;6562:18;6555:25;;6639:2;6629:6;6626:1;6622:14;6611:9;6607:30;6603:39;6589:53;;6677:2;6669:6;6665:15;6698:1;6708:255;6722:6;6719:1;6716:13;6708:255;;;6815:2;6811:7;6799:9;6791:6;6787:22;6783:36;6778:3;6771:49;6843:40;6876:6;6867;6861:13;6843:40;:::i;:::-;6833:50;-1:-1:-1;6941:12:169;;;;6906:15;;;;6744:1;6737:9;6708:255;;;-1:-1:-1;6980:6:169;;6189:803;-1:-1:-1;;;;;;;6189:803:169:o;6997:1096::-;7199:4;7228:2;7268;7257:9;7253:18;7298:2;7287:9;7280:21;7321:6;7356;7350:13;7387:6;7379;7372:22;7413:2;7403:12;;7446:2;7435:9;7431:18;7424:25;;7508:2;7498:6;7495:1;7491:14;7480:9;7476:30;7472:39;7546:2;7538:6;7534:15;7567:1;7577:487;7591:6;7588:1;7585:13;7577:487;;;7656:22;;;-1:-1:-1;;7652:36:169;7640:49;;7712:13;;7757:9;;-1:-1:-1;;;;;7753:58:169;7738:74;;7851:11;;7845:18;7883:15;;;7876:27;;;7926:58;7968:15;;;7845:18;7926:58;:::i;:::-;8042:12;;;;7916:68;-1:-1:-1;;8007:15:169;;;;7613:1;7606:9;7577:487;;8472:127;8533:10;8528:3;8524:20;8521:1;8514:31;8564:4;8561:1;8554:15;8588:4;8585:1;8578:15;8604:380;8683:1;8679:12;;;;8726;;;8747:61;;8801:4;8793:6;8789:17;8779:27;;8747:61;8854:2;8846:6;8843:14;8823:18;8820:38;8817:161;;8900:10;8895:3;8891:20;8888:1;8881:31;8935:4;8932:1;8925:15;8963:4;8960:1;8953:15;8989:220;9138:2;9127:9;9120:21;9101:4;9158:45;9199:2;9188:9;9184:18;9176:6;9158:45;:::i;:::-;9150:53;8989:220;-1:-1:-1;;;8989:220:169:o;9214:184::-;9284:6;9337:2;9325:9;9316:7;9312:23;9308:32;9305:52;;;9353:1;9350;9343:12;9305:52;-1:-1:-1;9376:16:169;;9214:184;-1:-1:-1;9214:184:169:o;9403:289::-;9534:3;9572:6;9566:13;9588:66;9647:6;9642:3;9635:4;9627:6;9623:17;9588:66;:::i;:::-;9670:16;;;;;9403:289;-1:-1:-1;;9403:289:169:o;9697:127::-;9758:10;9753:3;9749:20;9746:1;9739:31;9789:4;9786:1;9779:15;9813:4;9810:1;9803:15;9829:135;9868:3;9889:17;;;9886:43;;9909:18;;:::i;:::-;-1:-1:-1;9956:1:169;9945:13;;9829:135::o;9969:183::-;10029:4;10062:18;10054:6;10051:30;10048:56;;;10084:18;;:::i;:::-;-1:-1:-1;10129:1:169;10125:14;10141:4;10121:25;;9969:183::o;10157:659::-;10222:5;10275:3;10268:4;10260:6;10256:17;10252:27;10242:55;;10293:1;10290;10283:12;10242:55;10322:6;10316:13;10348:4;10372:60;10388:43;10428:2;10388:43;:::i;10372:60::-;10466:15;;;10552:1;10548:10;;;;10536:23;;10532:32;;;10497:12;;;;10576:15;;;10573:35;;;10604:1;10601;10594:12;10573:35;10640:2;10632:6;10628:15;10652:135;10668:6;10663:3;10660:15;10652:135;;;10734:10;;10722:23;;10765:12;;;;10685;;10652:135;;;-1:-1:-1;10805:5:169;10157:659;-1:-1:-1;;;;;;10157:659:169:o;10821:1341::-;10950:6;10958;11011:2;10999:9;10990:7;10986:23;10982:32;10979:52;;;11027:1;11024;11017:12;10979:52;11060:9;11054:16;11089:18;11130:2;11122:6;11119:14;11116:34;;;11146:1;11143;11136:12;11116:34;11184:6;11173:9;11169:22;11159:32;;11229:7;11222:4;11218:2;11214:13;11210:27;11200:55;;11251:1;11248;11241:12;11200:55;11280:2;11274:9;11302:4;11326:60;11342:43;11382:2;11342:43;:::i;11326:60::-;11420:15;;;11502:1;11498:10;;;;11490:19;;11486:28;;;11451:12;;;;11526:19;;;11523:39;;;11558:1;11555;11548:12;11523:39;11582:11;;;;11602:342;11618:6;11613:3;11610:15;11602:342;;;11691:3;11685:10;-1:-1:-1;;;;;11732:5:169;11728:54;11721:5;11718:65;11708:163;;11825:1;11854:2;11850;11843:14;11708:163;11884:18;;11635:12;;;;11922;;;;11602:342;;;11999:18;;;11993:25;11963:5;;-1:-1:-1;11993:25:169;;-1:-1:-1;;;12030:16:169;;;12027:36;;;12059:1;12056;12049:12;12027:36;;12082:74;12148:7;12137:8;12126:9;12122:24;12082:74;:::i;:::-;12072:84;;;10821:1341;;;;;:::o;14065:411::-;14270:2;14259:9;14252:21;14233:4;14290:45;14331:2;14320:9;14316:18;14308:6;14290:45;:::i;:::-;-1:-1:-1;;;;;14371:55:169;;;;14366:2;14351:18;;14344:83;-1:-1:-1;14458:2:169;14443:18;14436:34;14282:53;14065:411;-1:-1:-1;14065:411:169:o;14481:527::-;14734:3;14723:9;14716:22;14697:4;14761:46;14802:3;14791:9;14787:19;14779:6;14761:46;:::i;:::-;14843:6;14838:2;14827:9;14823:18;14816:34;14886:6;14881:2;14870:9;14866:18;14859:34;14941:9;14933:6;14929:22;14924:2;14913:9;14909:18;14902:50;14969:33;14995:6;14987;14969:33;:::i;:::-;14961:41;14481:527;-1:-1:-1;;;;;;;14481:527:169:o;15489:777::-;15852:34;15847:3;15840:47;15917:66;15912:2;15907:3;15903:12;15896:88;15822:3;16013:6;16007:13;16029:73;16095:6;16090:2;16085:3;16081:12;16076:2;16068:6;16064:15;16029:73;:::i;:::-;16166:66;16161:2;16121:16;;;;16153:11;;;16146:87;-1:-1:-1;16257:2:169;16249:11;;15489:777;-1:-1:-1;15489:777:169:o;16271:649::-;16351:6;16404:2;16392:9;16383:7;16379:23;16375:32;16372:52;;;16420:1;16417;16410:12;16372:52;16453:9;16447:16;16486:18;16478:6;16475:30;16472:50;;;16518:1;16515;16508:12;16472:50;16541:22;;16594:4;16586:13;;16582:27;-1:-1:-1;16572:55:169;;16623:1;16620;16613:12;16572:55;16652:2;16646:9;16677:49;16693:32;16722:2;16693:32;:::i;16677:49::-;16749:2;16742:5;16735:17;16789:7;16784:2;16779;16775;16771:11;16767:20;16764:33;16761:53;;;16810:1;16807;16800:12;16761:53;16823:67;16887:2;16882;16875:5;16871:14;16866:2;16862;16858:11;16823:67;:::i;:::-;16909:5;16271:649;-1:-1:-1;;;;;16271:649:169:o;16925:459::-;17157:3;17195:6;17189:13;17211:66;17270:6;17265:3;17258:4;17250:6;17246:17;17211:66;:::i;:::-;17338:10;17299:16;;17324:25;;;-1:-1:-1;17376:1:169;17365:13;;16925:459;-1:-1:-1;16925:459:169:o;17515:1093::-;17709:2;17698:9;17691:21;17672:4;17735:45;17776:2;17765:9;17761:18;17753:6;17735:45;:::i;:::-;17799:2;17849:9;17841:6;17837:22;17832:2;17821:9;17817:18;17810:50;17880:1;17913:6;17907:13;17943:36;17969:9;17943:36;:::i;:::-;17988:22;;;18029:1;18046:18;;;18073:152;;;;18239:1;18234:348;;;;18039:543;;18073:152;-1:-1:-1;;18118:24:169;;18101:15;;;18094:49;18193:14;;18186:22;18183:1;18179:30;18167:43;;18163:52;;;-1:-1:-1;18073:152:169;;18234:348;18265:6;18262:1;18255:17;18313:2;18310:1;18300:16;18338:1;18352:177;18366:6;18363:1;18360:13;18352:177;;;18456:14;;18435;;;18431:23;;18424:47;18499:16;;;;18381:10;;18352:177;;;18553:14;;18549:23;;;-1:-1:-1;;18039:543:169;-1:-1:-1;18599:3:169;;17515:1093;-1:-1:-1;;;;;;;;;17515:1093:169:o;18613:448::-;18875:18;18870:3;18863:31;18845:3;18923:6;18917:13;18939:75;19007:6;19002:2;18997:3;18993:12;18986:4;18978:6;18974:17;18939:75;:::i;:::-;19034:16;;;;19052:2;19030:25;;18613:448;-1:-1:-1;;18613:448:169:o;19066:449::-;19328:19;19323:3;19316:32;19298:3;19377:6;19371:13;19393:75;19461:6;19456:2;19451:3;19447:12;19440:4;19432:6;19428:17;19393:75;:::i;:::-;19488:16;;;;19506:2;19484:25;;19066:449;-1:-1:-1;;19066:449:169:o;19520:545::-;19622:2;19617:3;19614:11;19611:448;;;19658:1;19683:5;19679:2;19672:17;19728:4;19724:2;19714:19;19798:2;19786:10;19782:19;19779:1;19775:27;19769:4;19765:38;19834:4;19822:10;19819:20;19816:47;;;-1:-1:-1;19857:4:169;19816:47;19912:2;19907:3;19903:12;19900:1;19896:20;19890:4;19886:31;19876:41;;19967:82;19985:2;19978:5;19975:13;19967:82;;;20030:17;;;20011:1;20000:13;19967:82;;20241:1352;20367:3;20361:10;20394:18;20386:6;20383:30;20380:56;;;20416:18;;:::i;:::-;20445:97;20535:6;20495:38;20527:4;20521:11;20495:38;:::i;:::-;20489:4;20445:97;:::i;:::-;20597:4;;20661:2;20650:14;;20678:1;20673:663;;;;21380:1;21397:6;21394:89;;;-1:-1:-1;21449:19:169;;;21443:26;21394:89;-1:-1:-1;;20198:1:169;20194:11;;;20190:24;20186:29;20176:40;20222:1;20218:11;;;20173:57;21496:81;;20643:944;;20673:663;17462:1;17455:14;;;17499:4;17486:18;;-1:-1:-1;;20709:20:169;;;20827:236;20841:7;20838:1;20835:14;20827:236;;;20930:19;;;20924:26;20909:42;;21022:27;;;;20990:1;20978:14;;;;20857:19;;20827:236;;;20831:3;21091:6;21082:7;21079:19;21076:201;;;21152:19;;;21146:26;-1:-1:-1;;21235:1:169;21231:14;;;21247:3;21227:24;21223:37;21219:42;21204:58;21189:74;;21076:201;-1:-1:-1;;;;;21323:1:169;21307:14;;;21303:22;21290:36;;-1:-1:-1;20241:1352:169:o;21598:151::-;21688:4;21681:12;;;21667;;;21663:31;;21706:14;;21703:40;;;21723:18;;:::i;22668:1078::-;23180:34;23175:3;23168:47;23245:17;23240:2;23235:3;23231:12;23224:39;23150:3;23292:6;23286:13;23308:73;23374:6;23369:2;23364:3;23360:12;23355:2;23347:6;23343:15;23308:73;:::i;:::-;23445:66;23440:2;23400:16;;;23432:11;;;23425:87;23537:13;;23559:74;23537:13;23619:2;23611:11;;23606:2;23594:15;;23559:74;:::i;:::-;-1:-1:-1;;;23693:2:169;23652:17;;;;23685:11;;;23678:35;23737:2;23729:11;;22668:1078;-1:-1:-1;;;;22668:1078:169:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "factoryArbitrum()": "5c79611d",
    "factoryAvax()": "39fe7891",
    "factoryBsc()": "3f0072a8",
    "factoryEth()": "264afb38",
    "failed()": "ba414fa6",
    "forks(string)": "a8553d75",
    "get_size(string)": "3596fa6d",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryArbitrum\",\"outputs\":[{\"internalType\":\"contract LBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryAvax\",\"outputs\":[{\"internalType\":\"contract LBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryBsc\",\"outputs\":[{\"internalType\":\"contract LBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryEth\",\"outputs\":[{\"internalType\":\"contract LBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"forks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chain\",\"type\":\"string\"}],\"name\":\"get_size\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/GetOracleLength.t.sol\":\"GetOracleLengthTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4\",\"dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x225e8a4d0a8b44ec2b68b44512f085667ca9db76c3a2f8aaa80e0b3898ded290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af293d5c423f0a1beac9d484890623bef35a5770cac772c424df98d4d96a60f4\",\"dweb:/ipfs/Qmf2ahJ1UV2f4pWBoMFsAfPTictdCsKTtEB11Sr1jrfLPg\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x523dfe3d65294426e5c62b4de747aa23170a38d1862dc495ef15922ad234ca50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bcab61b5db733a34e17ea268a33abcac85a4a4b52d2f5fa9f3a835f188bf8a\",\"dweb:/ipfs/QmNRL6ortf9LpBNxzxQeA6kLopKrcLDrYGgXyHNpZWkEEH\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a\",\"dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0xa12446ea8863f671b4b48f3643045a1166d9dc9a5c257f2da3067f41dbf65949\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://7658125eff548cfef35ad438149bf426d65e0d64d14be5136956b7ccfb1e453e\",\"dweb:/ipfs/QmaKFak4mw7mG9cjVPbY1xN6TTMZAm116QL7HufSCvDc3Y\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4\",\"dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0xcf616c17d7901088fbd84c0975aa38935b9e07526ea28e6c52c29bdf5829d54c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a8d129dd484f36be718320dda1005943d3966ca4407620abc2c2789b980e87\",\"dweb:/ipfs/QmV4DpERp2iKSJXWJsu71wVv1m525rgzG83X73JaZY5JoU\"]},\"src/LBToken.sol\":{\"keccak256\":\"0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8\",\"dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e\",\"dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a\",\"dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490\",\"dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262\",\"dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0\",\"dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f\",\"dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3\",\"dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6\",\"dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12\",\"dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65\",\"dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a\",\"dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a\",\"dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8\",\"dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b\",\"dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f\",\"dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea\",\"dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a\",\"dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d\",\"dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1\",\"dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f\",\"dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0\",\"dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e\",\"dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97\",\"dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126\",\"dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94\",\"dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea\",\"dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M\"]},\"test/GetOracleLength.t.sol\":{\"keccak256\":\"0x564a2553f8c8d44a1ce60a27cc3785effb81ee76bb0ebcd865435ea7e5202105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://870ab8ca588b3e464b4ff9e09a42d4dbd8e105c6a38b4f6c0557c3936d8ae043\",\"dweb:/ipfs/QmWAyFkN14JTeSCk5qzAVQWoDipadBvbiDwoYDxVBLRS8c\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a\",\"dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12\",\"dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211\",\"dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryArbitrum",
          "outputs": [
            {
              "internalType": "contract LBFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryAvax",
          "outputs": [
            {
              "internalType": "contract LBFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryBsc",
          "outputs": [
            {
              "internalType": "contract LBFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryEth",
          "outputs": [
            {
              "internalType": "contract LBFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "forks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "chain",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "get_size"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/GetOracleLength.t.sol": "GetOracleLengthTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2",
        "urls": [
          "bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4",
          "dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x225e8a4d0a8b44ec2b68b44512f085667ca9db76c3a2f8aaa80e0b3898ded290",
        "urls": [
          "bzz-raw://af293d5c423f0a1beac9d484890623bef35a5770cac772c424df98d4d96a60f4",
          "dweb:/ipfs/Qmf2ahJ1UV2f4pWBoMFsAfPTictdCsKTtEB11Sr1jrfLPg"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x523dfe3d65294426e5c62b4de747aa23170a38d1862dc495ef15922ad234ca50",
        "urls": [
          "bzz-raw://c5bcab61b5db733a34e17ea268a33abcac85a4a4b52d2f5fa9f3a835f188bf8a",
          "dweb:/ipfs/QmNRL6ortf9LpBNxzxQeA6kLopKrcLDrYGgXyHNpZWkEEH"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310",
        "urls": [
          "bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a",
          "dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0xa12446ea8863f671b4b48f3643045a1166d9dc9a5c257f2da3067f41dbf65949",
        "urls": [
          "bzz-raw://7658125eff548cfef35ad438149bf426d65e0d64d14be5136956b7ccfb1e453e",
          "dweb:/ipfs/QmaKFak4mw7mG9cjVPbY1xN6TTMZAm116QL7HufSCvDc3Y"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94",
        "urls": [
          "bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4",
          "dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0xcf616c17d7901088fbd84c0975aa38935b9e07526ea28e6c52c29bdf5829d54c",
        "urls": [
          "bzz-raw://85a8d129dd484f36be718320dda1005943d3966ca4407620abc2c2789b980e87",
          "dweb:/ipfs/QmV4DpERp2iKSJXWJsu71wVv1m525rgzG83X73JaZY5JoU"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434",
        "urls": [
          "bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8",
          "dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53",
        "urls": [
          "bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e",
          "dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b",
        "urls": [
          "bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a",
          "dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388",
        "urls": [
          "bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490",
          "dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4",
        "urls": [
          "bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262",
          "dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e",
        "urls": [
          "bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0",
          "dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f",
        "urls": [
          "bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f",
          "dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da",
        "urls": [
          "bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3",
          "dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7",
        "urls": [
          "bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6",
          "dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1",
        "urls": [
          "bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12",
          "dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401",
        "urls": [
          "bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65",
          "dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365",
        "urls": [
          "bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a",
          "dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd",
        "urls": [
          "bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a",
          "dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42",
        "urls": [
          "bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8",
          "dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71",
        "urls": [
          "bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b",
          "dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6",
        "urls": [
          "bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f",
          "dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0",
        "urls": [
          "bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea",
          "dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89",
        "urls": [
          "bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a",
          "dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546",
        "urls": [
          "bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d",
          "dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee",
        "urls": [
          "bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1",
          "dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f",
        "urls": [
          "bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f",
          "dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a",
        "urls": [
          "bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0",
          "dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257",
        "urls": [
          "bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e",
          "dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9",
        "urls": [
          "bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97",
          "dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a",
        "urls": [
          "bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126",
          "dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a",
        "urls": [
          "bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94",
          "dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f",
        "urls": [
          "bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea",
          "dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M"
        ],
        "license": "MIT"
      },
      "test/GetOracleLength.t.sol": {
        "keccak256": "0x564a2553f8c8d44a1ce60a27cc3785effb81ee76bb0ebcd865435ea7e5202105",
        "urls": [
          "bzz-raw://870ab8ca588b3e464b4ff9e09a42d4dbd8e105c6a38b4f6c0557c3936d8ae043",
          "dweb:/ipfs/QmWAyFkN14JTeSCk5qzAVQWoDipadBvbiDwoYDxVBLRS8c"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72",
        "urls": [
          "bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a",
          "dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8",
        "urls": [
          "bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12",
          "dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894",
        "urls": [
          "bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211",
          "dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/GetOracleLength.t.sol",
    "id": 80824,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39201
      ],
      "AvalancheAddresses": [
        106484
      ],
      "BinHelper": [
        72209
      ],
      "BitMath": [
        75717
      ],
      "Constants": [
        72369
      ],
      "ERC20": [
        42219
      ],
      "ERC20Mock": [
        122558
      ],
      "ERC20TransferTaxMock": [
        122612
      ],
      "Encoded": [
        75924
      ],
      "EnumerableMap": [
        48835
      ],
      "EnumerableSet": [
        49448
      ],
      "FeeHelper": [
        72562
      ],
      "FlashBorrower": [
        123341
      ],
      "GetAllSizeAndAddress": [
        80823
      ],
      "GetOracleLengthTest": [
        80741
      ],
      "Hooks": [
        73436
      ],
      "IERC20": [
        42297
      ],
      "IERC20Metadata": [
        42323
      ],
      "ILBFactory": [
        67912
      ],
      "ILBFlashLoanCallback": [
        67937
      ],
      "ILBHooks": [
        68110
      ],
      "ILBLegacyFactory": [
        68476
      ],
      "ILBLegacyPair": [
        68892
      ],
      "ILBLegacyRouter": [
        69301
      ],
      "ILBPair": [
        69863
      ],
      "ILBRouter": [
        70395
      ],
      "ILBToken": [
        70518
      ],
      "ISovrynLBFactoryV1": [
        70592
      ],
      "ISovrynLBPairV1": [
        70835
      ],
      "ISovrynLBRouter01": [
        71144
      ],
      "ISovrynLBRouter02": [
        71234
      ],
      "IWNATIVE": [
        71250
      ],
      "ImmutableClone": [
        73514
      ],
      "Initializable": [
        41704
      ],
      "LBFactory": [
        59216
      ],
      "LBPair": [
        62096
      ],
      "LBPairBeaconProxy": [
        62160
      ],
      "LBPairUpgradeableBeacon": [
        62364
      ],
      "LBQuoter": [
        63652
      ],
      "LBRouter": [
        66902
      ],
      "LBToken": [
        67421
      ],
      "LiquidityConfigurations": [
        76094
      ],
      "OracleHelper": [
        74171
      ],
      "Ownable": [
        40400
      ],
      "Ownable2StepUpgradeable": [
        39338
      ],
      "OwnableUpgradeable": [
        39533
      ],
      "PackedUint128Math": [
        76448
      ],
      "PairParameterHelper": [
        75028
      ],
      "PriceHelper": [
        75202
      ],
      "ReentrancyGuardUpgradeable": [
        75331
      ],
      "SafeCast": [
        77196
      ],
      "SafeERC20": [
        42746
      ],
      "SampleMath": [
        77621
      ],
      "SovrynLBLibrary": [
        75537
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3570
      ],
      "StdCheats": [
        6423
      ],
      "StdInvariant": [
        6783
      ],
      "StdStorage": [
        7555
      ],
      "StdStyle": [
        10725
      ],
      "StdUtils": [
        12103
      ],
      "Test": [
        12155
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        106283
      ],
      "TokenHelper": [
        75623
      ],
      "TransparentUpgradeableProxy": [
        41450
      ],
      "TreeMath": [
        78553
      ],
      "Uint256x256Math": [
        79189
      ],
      "UpgradeableBeacon": [
        41267
      ],
      "Utils": [
        106451
      ],
      "Vm": [
        15998
      ],
      "WNATIVE": [
        123651
      ],
      "console": [
        24122
      ],
      "console2": [
        24122
      ],
      "safeconsole": [
        38838
      ],
      "stdError": [
        6489
      ],
      "stdJson": [
        7375
      ],
      "stdMath": [
        7517
      ],
      "stdStorage": [
        9514
      ],
      "stdToml": [
        11317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4209:125",
    "nodes": [
      {
        "id": 80459,
        "nodeType": "PragmaDirective",
        "src": "33:24:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 80460,
        "nodeType": "ImportDirective",
        "src": "59:34:125",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "./helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80824,
        "sourceUnit": 106284,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80463,
        "nodeType": "ImportDirective",
        "src": "95:55:125",
        "nodes": [],
        "absolutePath": "src/LBFactory.sol",
        "file": "src/LBFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80824,
        "sourceUnit": 59217,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80461,
              "name": "LBFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59216,
              "src": "103:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80462,
              "name": "LBFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59216,
              "src": "114:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80470,
        "nodeType": "ImportDirective",
        "src": "151:118:125",
        "nodes": [],
        "absolutePath": "src/LBRouter.sol",
        "file": "src/LBRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80824,
        "sourceUnit": 66903,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80464,
              "name": "ILBRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70395,
              "src": "159:9:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80465,
              "name": "ISovrynLBFactoryV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70592,
              "src": "170:18:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80466,
              "name": "ILBLegacyFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68476,
              "src": "190:16:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80467,
              "name": "ILBLegacyRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69301,
              "src": "208:15:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80468,
              "name": "IWNATIVE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71250,
              "src": "225:8:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80469,
              "name": "LBRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66902,
              "src": "235:8:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80473,
        "nodeType": "ImportDirective",
        "src": "270:46:125",
        "nodes": [],
        "absolutePath": "src/LBPair.sol",
        "file": "src/LBPair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80824,
        "sourceUnit": 62097,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80471,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42297,
              "src": "278:6:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80472,
              "name": "LBPair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62096,
              "src": "286:6:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80475,
        "nodeType": "ImportDirective",
        "src": "317:42:125",
        "nodes": [],
        "absolutePath": "src/LBQuoter.sol",
        "file": "src/LBQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80824,
        "sourceUnit": 63653,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80474,
              "name": "LBQuoter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63652,
              "src": "325:8:125",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80741,
        "nodeType": "ContractDefinition",
        "src": "361:3288:125",
        "nodes": [
          {
            "id": 80483,
            "nodeType": "VariableDeclaration",
            "src": "404:93:125",
            "nodes": [],
            "constant": true,
            "functionSelector": "39fe7891",
            "mutability": "constant",
            "name": "factoryAvax",
            "nameLocation": "430:11:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBFactory_$59216",
              "typeString": "contract LBFactory"
            },
            "typeName": {
              "id": 80479,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80478,
                "name": "LBFactory",
                "nameLocations": [
                  "404:9:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59216,
                "src": "404:9:125"
              },
              "referencedDeclaration": 59216,
              "src": "404:9:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838653432663246343130313536336246363739393735313738653838304644383764336546643465",
                  "id": 80481,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "454:42:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x8e42f2F4101563bF679975178e880FD87d3eFd4e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 80480,
                "name": "LBFactory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59216,
                "src": "444:9:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBFactory_$59216_$",
                  "typeString": "type(contract LBFactory)"
                }
              },
              "id": 80482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "444:53:125",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80489,
            "nodeType": "VariableDeclaration",
            "src": "503:97:125",
            "nodes": [],
            "constant": true,
            "functionSelector": "5c79611d",
            "mutability": "constant",
            "name": "factoryArbitrum",
            "nameLocation": "529:15:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBFactory_$59216",
              "typeString": "contract LBFactory"
            },
            "typeName": {
              "id": 80485,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80484,
                "name": "LBFactory",
                "nameLocations": [
                  "503:9:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59216,
                "src": "503:9:125"
              },
              "referencedDeclaration": 59216,
              "src": "503:9:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838653432663246343130313536336246363739393735313738653838304644383764336546643465",
                  "id": 80487,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "557:42:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x8e42f2F4101563bF679975178e880FD87d3eFd4e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 80486,
                "name": "LBFactory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59216,
                "src": "547:9:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBFactory_$59216_$",
                  "typeString": "type(contract LBFactory)"
                }
              },
              "id": 80488,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "547:53:125",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80495,
            "nodeType": "VariableDeclaration",
            "src": "606:92:125",
            "nodes": [],
            "constant": true,
            "functionSelector": "3f0072a8",
            "mutability": "constant",
            "name": "factoryBsc",
            "nameLocation": "632:10:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBFactory_$59216",
              "typeString": "contract LBFactory"
            },
            "typeName": {
              "id": 80491,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80490,
                "name": "LBFactory",
                "nameLocations": [
                  "606:9:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59216,
                "src": "606:9:125"
              },
              "referencedDeclaration": 59216,
              "src": "606:9:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838653432663246343130313536336246363739393735313738653838304644383764336546643465",
                  "id": 80493,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "655:42:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x8e42f2F4101563bF679975178e880FD87d3eFd4e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 80492,
                "name": "LBFactory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59216,
                "src": "645:9:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBFactory_$59216_$",
                  "typeString": "type(contract LBFactory)"
                }
              },
              "id": 80494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "645:53:125",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80501,
            "nodeType": "VariableDeclaration",
            "src": "704:92:125",
            "nodes": [],
            "constant": true,
            "functionSelector": "264afb38",
            "mutability": "constant",
            "name": "factoryEth",
            "nameLocation": "730:10:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBFactory_$59216",
              "typeString": "contract LBFactory"
            },
            "typeName": {
              "id": 80497,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80496,
                "name": "LBFactory",
                "nameLocations": [
                  "704:9:125"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59216,
                "src": "704:9:125"
              },
              "referencedDeclaration": 59216,
              "src": "704:9:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307844433864373762363931353563374536384139356134666230663036613731464639304239343361",
                  "id": 80499,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "753:42:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xDC8d77b69155c7E68A95a4fb0f06a71FF90B943a"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 80498,
                "name": "LBFactory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59216,
                "src": "743:9:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBFactory_$59216_$",
                  "typeString": "type(contract LBFactory)"
                }
              },
              "id": 80500,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "743:53:125",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBFactory_$59216",
                "typeString": "contract LBFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 80509,
            "nodeType": "VariableDeclaration",
            "src": "803:77:125",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "chains",
            "nameLocation": "812:6:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 80502,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "803:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 80503,
              "nodeType": "ArrayTypeName",
              "src": "803:8:125",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "6176616c616e636865",
                  "id": 80504,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "822:11:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                    "typeString": "literal_string \"avalanche\""
                  },
                  "value": "avalanche"
                },
                {
                  "hexValue": "617262697472756d5f6f6e65",
                  "id": 80505,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "835:14:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e4b44cea7839e0679ac5072602932da9b25ebfb3a9ac42625d9c583a7b6b2eb4",
                    "typeString": "literal_string \"arbitrum_one\""
                  },
                  "value": "arbitrum_one"
                },
                {
                  "hexValue": "626e625f736d6172745f636861696e",
                  "id": 80506,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "851:17:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_fa8b17ae9aa26749f5dc3a3bb333e0019db0c257f3541e870f73bb48b574361e",
                    "typeString": "literal_string \"bnb_smart_chain\""
                  },
                  "value": "bnb_smart_chain"
                },
                {
                  "hexValue": "6d61696e6e6574",
                  "id": 80507,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "870:9:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_7beafa94c8bfb8f1c1a43104a34f72c524268aafbfe83bff17485539345c66ff",
                    "typeString": "literal_string \"mainnet\""
                  },
                  "value": "mainnet"
                }
              ],
              "id": 80508,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "821:59:125",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_memory_ptr_$4_memory_ptr",
                "typeString": "string memory[4] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80513,
            "nodeType": "VariableDeclaration",
            "src": "886:39:125",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8553d75",
            "mutability": "mutable",
            "name": "forks",
            "nameLocation": "920:5:125",
            "scope": 80741,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 80512,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 80510,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "894:6:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "886:26:125",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 80511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:125",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 80547,
            "nodeType": "FunctionDefinition",
            "src": "932:199:125",
            "nodes": [],
            "body": {
              "id": 80546,
              "nodeType": "Block",
              "src": "956:175:125",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 80544,
                    "nodeType": "Block",
                    "src": "1010:115:125",
                    "statements": [
                      {
                        "assignments": [
                          80528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80528,
                            "mutability": "mutable",
                            "name": "chain",
                            "nameLocation": "1038:5:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 80544,
                            "src": "1024:19:125",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 80527,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1024:6:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80532,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80529,
                            "name": "chains",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80509,
                            "src": "1046:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 80531,
                          "indexExpression": {
                            "id": 80530,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80517,
                            "src": "1053:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1046:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1024:31:125"
                      },
                      {
                        "expression": {
                          "id": 80542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 80533,
                              "name": "forks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80513,
                              "src": "1070:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 80535,
                            "indexExpression": {
                              "id": 80534,
                              "name": "chain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80528,
                              "src": "1076:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1070:12:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 80539,
                                    "name": "chain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80528,
                                    "src": "1107:5:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 80538,
                                  "name": "_getRPC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80658,
                                  "src": "1099:7:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (string memory) returns (string memory)"
                                  }
                                },
                                "id": 80540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1099:14:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 80536,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "1085:2:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$15998",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 80537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1088:10:125",
                              "memberName": "createFork",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15449,
                              "src": "1085:13:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) external returns (uint256)"
                              }
                            },
                            "id": 80541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1085:29:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1070:44:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80543,
                        "nodeType": "ExpressionStatement",
                        "src": "1070:44:125"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80520,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80517,
                      "src": "986:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80521,
                        "name": "chains",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80509,
                        "src": "990:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 80522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "997:6:125",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "990:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "986:17:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80545,
                  "initializationExpression": {
                    "assignments": [
                      80517
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80517,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "979:1:125",
                        "nodeType": "VariableDeclaration",
                        "scope": 80545,
                        "src": "971:9:125",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80519,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "983:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "971:13:125"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1005:3:125",
                      "subExpression": {
                        "id": 80524,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80517,
                        "src": "1005:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80526,
                    "nodeType": "ExpressionStatement",
                    "src": "1005:3:125"
                  },
                  "nodeType": "ForStatement",
                  "src": "966:159:125"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "941:5:125",
            "parameters": {
              "id": 80514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:125"
            },
            "returnParameters": {
              "id": 80515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:125"
            },
            "scope": 80741,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80644,
            "nodeType": "FunctionDefinition",
            "src": "1495:688:125",
            "nodes": [],
            "body": {
              "id": 80643,
              "nodeType": "Block",
              "src": "1541:642:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 80555,
                          "name": "forks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80513,
                          "src": "1565:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 80557,
                        "indexExpression": {
                          "id": 80556,
                          "name": "chain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80549,
                          "src": "1571:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1565:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80552,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1551:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 80554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1554:10:125",
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15751,
                      "src": "1551:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 80558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:27:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80559,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:27:125"
                },
                {
                  "assignments": [
                    80562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80562,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1599:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80643,
                      "src": "1589:17:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBFactory_$59216",
                        "typeString": "contract LBFactory"
                      },
                      "typeName": {
                        "id": 80561,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80560,
                          "name": "LBFactory",
                          "nameLocations": [
                            "1589:9:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59216,
                          "src": "1589:9:125"
                        },
                        "referencedDeclaration": 59216,
                        "src": "1589:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59216",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80566,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80564,
                        "name": "chain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80549,
                        "src": "1625:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 80563,
                      "name": "_getLBFactories",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80740,
                      "src": "1609:15:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_contract$_LBFactory_$59216_$",
                        "typeString": "function (string memory) pure returns (contract LBFactory)"
                      }
                    },
                    "id": 80565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:22:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBFactory_$59216",
                      "typeString": "contract LBFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1589:42:125"
                },
                {
                  "assignments": [
                    80569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80569,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1663:1:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80643,
                      "src": "1642:22:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GetAllSizeAndAddress_$80823",
                        "typeString": "contract GetAllSizeAndAddress"
                      },
                      "typeName": {
                        "id": 80568,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80567,
                          "name": "GetAllSizeAndAddress",
                          "nameLocations": [
                            "1642:20:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80823,
                          "src": "1642:20:125"
                        },
                        "referencedDeclaration": 80823,
                        "src": "1642:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GetAllSizeAndAddress_$80823",
                          "typeString": "contract GetAllSizeAndAddress"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80574,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1667:24:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GetAllSizeAndAddress_$80823_$",
                        "typeString": "function () returns (contract GetAllSizeAndAddress)"
                      },
                      "typeName": {
                        "id": 80571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80570,
                          "name": "GetAllSizeAndAddress",
                          "nameLocations": [
                            "1671:20:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80823,
                          "src": "1671:20:125"
                        },
                        "referencedDeclaration": 80823,
                        "src": "1671:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GetAllSizeAndAddress_$80823",
                          "typeString": "contract GetAllSizeAndAddress"
                        }
                      }
                    },
                    "id": 80573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:26:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GetAllSizeAndAddress_$80823",
                      "typeString": "contract GetAllSizeAndAddress"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1642:51:125"
                },
                {
                  "assignments": [
                    80579,
                    80582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80579,
                      "mutability": "mutable",
                      "name": "pairs",
                      "nameLocation": "1722:5:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80643,
                      "src": "1705:22:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1705:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80578,
                        "nodeType": "ArrayTypeName",
                        "src": "1705:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80582,
                      "mutability": "mutable",
                      "name": "sizes",
                      "nameLocation": "1746:5:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80643,
                      "src": "1729:22:125",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1729:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80581,
                        "nodeType": "ArrayTypeName",
                        "src": "1729:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80587,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80585,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80562,
                        "src": "1778:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59216",
                          "typeString": "contract LBFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LBFactory_$59216",
                          "typeString": "contract LBFactory"
                        }
                      ],
                      "expression": {
                        "id": 80583,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80569,
                        "src": "1755:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GetAllSizeAndAddress_$80823",
                          "typeString": "contract GetAllSizeAndAddress"
                        }
                      },
                      "id": 80584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1757:20:125",
                      "memberName": "getAllSizeAndAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80822,
                      "src": "1755:22:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_LBFactory_$59216_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (contract LBFactory) view external returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 80586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:31:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1704:82:125"
                },
                {
                  "assignments": [
                    80589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80589,
                      "mutability": "mutable",
                      "name": "atRisk",
                      "nameLocation": "1805:6:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80643,
                      "src": "1797:14:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1797:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80591,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 80590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1814:1:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1797:18:125"
                },
                {
                  "body": {
                    "id": 80631,
                    "nodeType": "Block",
                    "src": "1869:218:125",
                    "statements": [
                      {
                        "assignments": [
                          80604
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80604,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "1891:4:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 80631,
                            "src": "1883:12:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 80603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1883:7:125",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80608,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80605,
                            "name": "pairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80579,
                            "src": "1898:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 80607,
                          "indexExpression": {
                            "id": 80606,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80593,
                            "src": "1904:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1898:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1883:23:125"
                      },
                      {
                        "assignments": [
                          80610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80610,
                            "mutability": "mutable",
                            "name": "size",
                            "nameLocation": "1928:4:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 80631,
                            "src": "1920:12:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 80609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1920:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80614,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80611,
                            "name": "sizes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80582,
                            "src": "1935:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 80613,
                          "indexExpression": {
                            "id": 80612,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80593,
                            "src": "1941:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1935:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1920:23:125"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80615,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80610,
                            "src": "1962:4:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 80616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1969:1:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1962:8:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80630,
                        "nodeType": "IfStatement",
                        "src": "1958:119:125",
                        "trueBody": {
                          "id": 80629,
                          "nodeType": "Block",
                          "src": "1972:105:125",
                          "statements": [
                            {
                              "expression": {
                                "id": 80619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1990:8:125",
                                "subExpression": {
                                  "id": 80618,
                                  "name": "atRisk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80589,
                                  "src": "1990:6:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 80620,
                              "nodeType": "ExpressionStatement",
                              "src": "1990:8:125"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "50616972202573206861732073697a65202573",
                                    "id": 80624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2028:21:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_40263c33992144b6ccca52c6b5ec993b8fa14c33dcc31b94fa1b7b35a2ca927d",
                                      "typeString": "literal_string \"Pair %s has size %s\""
                                    },
                                    "value": "Pair %s has size %s"
                                  },
                                  {
                                    "id": 80625,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80604,
                                    "src": "2051:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 80626,
                                    "name": "size",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80610,
                                    "src": "2057:4:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_40263c33992144b6ccca52c6b5ec993b8fa14c33dcc31b94fa1b7b35a2ca927d",
                                      "typeString": "literal_string \"Pair %s has size %s\""
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 80621,
                                    "name": "console",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24122,
                                    "src": "2016:7:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_console_$24122_$",
                                      "typeString": "type(library console)"
                                    }
                                  },
                                  "id": 80623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2024:3:125",
                                  "memberName": "log",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17533,
                                  "src": "2016:11:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,address,uint256) pure"
                                  }
                                },
                                "id": 80627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2016:46:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80628,
                              "nodeType": "ExpressionStatement",
                              "src": "2016:46:125"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80596,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80593,
                      "src": "1846:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80597,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80579,
                        "src": "1850:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 80598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1856:6:125",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1850:12:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1846:16:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80632,
                  "initializationExpression": {
                    "assignments": [
                      80593
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80593,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "1839:1:125",
                        "nodeType": "VariableDeclaration",
                        "scope": 80632,
                        "src": "1831:9:125",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80592,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80595,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1843:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1831:13:125"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1864:3:125",
                      "subExpression": {
                        "id": 80600,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80593,
                        "src": "1864:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80602,
                    "nodeType": "ExpressionStatement",
                    "src": "1864:3:125"
                  },
                  "nodeType": "ForStatement",
                  "src": "1826:261:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5468657265206172652025732f2573207061697273206174207269736b206f6e202573",
                        "id": 80636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:37:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d84db9ff9697601525498d0167017203d310e1893af6f8fd31a11ef83b7171b3",
                          "typeString": "literal_string \"There are %s/%s pairs at risk on %s\""
                        },
                        "value": "There are %s/%s pairs at risk on %s"
                      },
                      {
                        "id": 80637,
                        "name": "atRisk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80589,
                        "src": "2148:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 80638,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80579,
                          "src": "2156:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 80639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2162:6:125",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2156:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80640,
                        "name": "chain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80549,
                        "src": "2170:5:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d84db9ff9697601525498d0167017203d310e1893af6f8fd31a11ef83b7171b3",
                          "typeString": "literal_string \"There are %s/%s pairs at risk on %s\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 80633,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24122,
                        "src": "2097:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$24122_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 80635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2105:3:125",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19751,
                      "src": "2097:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 80641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:79:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80642,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:79:125"
                }
              ]
            },
            "functionSelector": "3596fa6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_size",
            "nameLocation": "1504:8:125",
            "parameters": {
              "id": 80550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80549,
                  "mutability": "mutable",
                  "name": "chain",
                  "nameLocation": "1527:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80644,
                  "src": "1513:19:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80548,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1512:21:125"
            },
            "returnParameters": {
              "id": 80551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1541:0:125"
            },
            "scope": 80741,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80658,
            "nodeType": "FunctionDefinition",
            "src": "2189:767:125",
            "nodes": [],
            "body": {
              "id": 80657,
              "nodeType": "Block",
              "src": "2260:696:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 80653,
                          "name": "chain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80646,
                          "src": "2936:5:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 80651,
                          "name": "StdChains",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3570,
                          "src": "2917:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_StdChains_$3570_$",
                            "typeString": "type(contract StdChains)"
                          }
                        },
                        "id": 80652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2927:8:125",
                        "memberName": "getChain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2842,
                        "src": "2917:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_struct$_Chain_$2774_memory_ptr_$",
                          "typeString": "function (string memory) returns (struct StdChains.Chain memory)"
                        }
                      },
                      "id": 80654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2917:25:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Chain_$2774_memory_ptr",
                        "typeString": "struct StdChains.Chain memory"
                      }
                    },
                    "id": 80655,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2943:6:125",
                    "memberName": "rpcUrl",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2773,
                    "src": "2917:32:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 80650,
                  "id": 80656,
                  "nodeType": "Return",
                  "src": "2910:39:125"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRPC",
            "nameLocation": "2198:7:125",
            "parameters": {
              "id": 80647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80646,
                  "mutability": "mutable",
                  "name": "chain",
                  "nameLocation": "2220:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80658,
                  "src": "2206:19:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80645,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2205:21:125"
            },
            "returnParameters": {
              "id": 80650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80658,
                  "src": "2245:13:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2244:15:125"
            },
            "scope": 80741,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 80740,
            "nodeType": "FunctionDefinition",
            "src": "2962:685:125",
            "nodes": [],
            "body": {
              "id": 80739,
              "nodeType": "Block",
              "src": "3042:605:125",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 80678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80669,
                              "name": "chain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80660,
                              "src": "3083:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 80667,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3066:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 80668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3070:12:125",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3066:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 80670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3066:23:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 80666,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3056:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 80671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3056:34:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "6176616c616e636865",
                              "id": 80675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3121:11:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                                "typeString": "literal_string \"avalanche\""
                              },
                              "value": "avalanche"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                                "typeString": "literal_string \"avalanche\""
                              }
                            ],
                            "expression": {
                              "id": 80673,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3104:3:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 80674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3108:12:125",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3104:16:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 80676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:29:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 80672,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3094:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 80677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3094:40:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3056:78:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 80694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 80685,
                                "name": "chain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80660,
                                "src": "3216:5:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 80683,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3199:3:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 80684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3203:12:125",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3199:16:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 80686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3199:23:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 80682,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3189:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 80687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3189:34:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "617262697472756d5f6f6e65",
                                "id": 80691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3254:14:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e4b44cea7839e0679ac5072602932da9b25ebfb3a9ac42625d9c583a7b6b2eb4",
                                  "typeString": "literal_string \"arbitrum_one\""
                                },
                                "value": "arbitrum_one"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e4b44cea7839e0679ac5072602932da9b25ebfb3a9ac42625d9c583a7b6b2eb4",
                                  "typeString": "literal_string \"arbitrum_one\""
                                }
                              ],
                              "expression": {
                                "id": 80689,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3237:3:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 80690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3241:12:125",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3237:16:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 80692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3237:32:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 80688,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3227:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 80693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3227:43:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3189:81:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 80710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80701,
                                  "name": "chain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80660,
                                  "src": "3356:5:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 80699,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3339:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 80700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3343:12:125",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3339:16:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 80702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3339:23:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 80698,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3329:9:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 80703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:34:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "626e625f736d6172745f636861696e",
                                  "id": 80707,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3394:17:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_fa8b17ae9aa26749f5dc3a3bb333e0019db0c257f3541e870f73bb48b574361e",
                                    "typeString": "literal_string \"bnb_smart_chain\""
                                  },
                                  "value": "bnb_smart_chain"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_fa8b17ae9aa26749f5dc3a3bb333e0019db0c257f3541e870f73bb48b574361e",
                                    "typeString": "literal_string \"bnb_smart_chain\""
                                  }
                                ],
                                "expression": {
                                  "id": 80705,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3377:3:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 80706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3381:12:125",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3377:16:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 80708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3377:35:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 80704,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3367:9:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 80709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:46:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3329:84:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 80726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 80717,
                                    "name": "chain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80660,
                                    "src": "3494:5:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 80715,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3477:3:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 80716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3481:12:125",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3477:16:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 80718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3477:23:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 80714,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3467:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 80719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3467:34:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "6d61696e6e6574",
                                    "id": 80723,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3532:9:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7beafa94c8bfb8f1c1a43104a34f72c524268aafbfe83bff17485539345c66ff",
                                      "typeString": "literal_string \"mainnet\""
                                    },
                                    "value": "mainnet"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7beafa94c8bfb8f1c1a43104a34f72c524268aafbfe83bff17485539345c66ff",
                                      "typeString": "literal_string \"mainnet\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 80721,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3515:3:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 80722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3519:12:125",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3515:16:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 80724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3515:27:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 80720,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3505:9:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 80725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3505:38:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3467:76:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 80734,
                          "nodeType": "Block",
                          "src": "3593:48:125",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "496e76616c696420636861696e",
                                    "id": 80731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3614:15:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4acdaa077a05cc233cc6b88fd673b3b7b4568e0105f0d44839e2c03bc4380c92",
                                      "typeString": "literal_string \"Invalid chain\""
                                    },
                                    "value": "Invalid chain"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_4acdaa077a05cc233cc6b88fd673b3b7b4568e0105f0d44839e2c03bc4380c92",
                                      "typeString": "literal_string \"Invalid chain\""
                                    }
                                  ],
                                  "id": 80730,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3607:6:125",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 80732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3607:23:125",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80733,
                              "nodeType": "ExpressionStatement",
                              "src": "3607:23:125"
                            }
                          ]
                        },
                        "id": 80735,
                        "nodeType": "IfStatement",
                        "src": "3463:178:125",
                        "trueBody": {
                          "id": 80729,
                          "nodeType": "Block",
                          "src": "3545:42:125",
                          "statements": [
                            {
                              "expression": {
                                "id": 80727,
                                "name": "factoryEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80501,
                                "src": "3566:10:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBFactory_$59216",
                                  "typeString": "contract LBFactory"
                                }
                              },
                              "functionReturnParameters": 80665,
                              "id": 80728,
                              "nodeType": "Return",
                              "src": "3559:17:125"
                            }
                          ]
                        }
                      },
                      "id": 80736,
                      "nodeType": "IfStatement",
                      "src": "3325:316:125",
                      "trueBody": {
                        "id": 80713,
                        "nodeType": "Block",
                        "src": "3415:42:125",
                        "statements": [
                          {
                            "expression": {
                              "id": 80711,
                              "name": "factoryBsc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80495,
                              "src": "3436:10:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LBFactory_$59216",
                                "typeString": "contract LBFactory"
                              }
                            },
                            "functionReturnParameters": 80665,
                            "id": 80712,
                            "nodeType": "Return",
                            "src": "3429:17:125"
                          }
                        ]
                      }
                    },
                    "id": 80737,
                    "nodeType": "IfStatement",
                    "src": "3185:456:125",
                    "trueBody": {
                      "id": 80697,
                      "nodeType": "Block",
                      "src": "3272:47:125",
                      "statements": [
                        {
                          "expression": {
                            "id": 80695,
                            "name": "factoryArbitrum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80489,
                            "src": "3293:15:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$59216",
                              "typeString": "contract LBFactory"
                            }
                          },
                          "functionReturnParameters": 80665,
                          "id": 80696,
                          "nodeType": "Return",
                          "src": "3286:22:125"
                        }
                      ]
                    }
                  },
                  "id": 80738,
                  "nodeType": "IfStatement",
                  "src": "3052:589:125",
                  "trueBody": {
                    "id": 80681,
                    "nodeType": "Block",
                    "src": "3136:43:125",
                    "statements": [
                      {
                        "expression": {
                          "id": 80679,
                          "name": "factoryAvax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80483,
                          "src": "3157:11:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59216",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "functionReturnParameters": 80665,
                        "id": 80680,
                        "nodeType": "Return",
                        "src": "3150:18:125"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLBFactories",
            "nameLocation": "2971:15:125",
            "parameters": {
              "id": 80661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80660,
                  "mutability": "mutable",
                  "name": "chain",
                  "nameLocation": "3001:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80740,
                  "src": "2987:19:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:21:125"
            },
            "returnParameters": {
              "id": 80665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80740,
                  "src": "3031:9:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LBFactory_$59216",
                    "typeString": "contract LBFactory"
                  },
                  "typeName": {
                    "id": 80663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80662,
                      "name": "LBFactory",
                      "nameLocations": [
                        "3031:9:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59216,
                      "src": "3031:9:125"
                    },
                    "referencedDeclaration": 59216,
                    "src": "3031:9:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBFactory_$59216",
                      "typeString": "contract LBFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:11:125"
            },
            "scope": 80741,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80476,
              "name": "Test",
              "nameLocations": [
                "393:4:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12155,
              "src": "393:4:125"
            },
            "id": 80477,
            "nodeType": "InheritanceSpecifier",
            "src": "393:4:125"
          }
        ],
        "canonicalName": "GetOracleLengthTest",
        "contractDependencies": [
          80823
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "16051": 1
        },
        "linearizedBaseContracts": [
          80741,
          12155,
          12103,
          6783,
          6423,
          5630,
          3570,
          2734,
          65,
          62
        ],
        "name": "GetOracleLengthTest",
        "nameLocation": "370:19:125",
        "scope": 80824,
        "usedErrors": [],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255
        ]
      },
      {
        "id": 80823,
        "nodeType": "ContractDefinition",
        "src": "3651:590:125",
        "nodes": [
          {
            "id": 80822,
            "nodeType": "FunctionDefinition",
            "src": "3687:552:125",
            "nodes": [],
            "body": {
              "id": 80821,
              "nodeType": "Block",
              "src": "3834:405:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80754,
                      "mutability": "mutable",
                      "name": "nbPairs",
                      "nameLocation": "3852:7:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 80821,
                      "src": "3844:15:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3844:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80758,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80755,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80744,
                        "src": "3862:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59216",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 80756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3870:18:125",
                      "memberName": "getNumberOfLBPairs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57839,
                      "src": "3862:26:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 80757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:28:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3844:46:125"
                },
                {
                  "expression": {
                    "id": 80765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80759,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80748,
                      "src": "3901:5:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80763,
                          "name": "nbPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80754,
                          "src": "3923:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 80762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3909:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 80760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3913:7:125",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 80761,
                          "nodeType": "ArrayTypeName",
                          "src": "3913:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 80764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3909:22:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3901:30:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 80766,
                  "nodeType": "ExpressionStatement",
                  "src": "3901:30:125"
                },
                {
                  "expression": {
                    "id": 80773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80767,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80751,
                      "src": "3941:4:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80771,
                          "name": "nbPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80754,
                          "src": "3962:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 80770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3948:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 80768,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3952:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 80769,
                          "nodeType": "ArrayTypeName",
                          "src": "3952:9:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 80772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3948:22:125",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3941:29:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 80774,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:29:125"
                },
                {
                  "body": {
                    "id": 80819,
                    "nodeType": "Block",
                    "src": "4019:214:125",
                    "statements": [
                      {
                        "assignments": [
                          80787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80787,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "4040:4:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 80819,
                            "src": "4033:11:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62096",
                              "typeString": "contract LBPair"
                            },
                            "typeName": {
                              "id": 80786,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80785,
                                "name": "LBPair",
                                "nameLocations": [
                                  "4033:6:125"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 62096,
                                "src": "4033:6:125"
                              },
                              "referencedDeclaration": 62096,
                              "src": "4033:6:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LBPair_$62096",
                                "typeString": "contract LBPair"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80797,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 80793,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80776,
                                      "src": "4087:1:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 80791,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80744,
                                      "src": "4062:7:125",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LBFactory_$59216",
                                        "typeString": "contract LBFactory"
                                      }
                                    },
                                    "id": 80792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4070:16:125",
                                    "memberName": "getLBPairAtIndex",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 57854,
                                    "src": "4062:24:125",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_ILBPair_$69863_$",
                                      "typeString": "function (uint256) view external returns (contract ILBPair)"
                                    }
                                  },
                                  "id": 80794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4062:27:125",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILBPair_$69863",
                                    "typeString": "contract ILBPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILBPair_$69863",
                                    "typeString": "contract ILBPair"
                                  }
                                ],
                                "id": 80790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4054:7:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80789,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4054:7:125",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4054:36:125",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80788,
                            "name": "LBPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62096,
                            "src": "4047:6:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LBPair_$62096_$",
                              "typeString": "type(contract LBPair)"
                            }
                          },
                          "id": 80796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4047:44:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62096",
                            "typeString": "contract LBPair"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4033:58:125"
                      },
                      {
                        "assignments": [
                          null,
                          80799,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 80799,
                            "mutability": "mutable",
                            "name": "_size",
                            "nameLocation": "4116:5:125",
                            "nodeType": "VariableDeclaration",
                            "scope": 80819,
                            "src": "4109:12:125",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 80798,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "4109:6:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null
                        ],
                        "id": 80803,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 80800,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80787,
                              "src": "4128:4:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LBPair_$62096",
                                "typeString": "contract LBPair"
                              }
                            },
                            "id": 80801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4133:19:125",
                            "memberName": "getOracleParameters",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59841,
                            "src": "4128:24:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                              "typeString": "function () view external returns (uint8,uint16,uint16,uint40,uint40)"
                            }
                          },
                          "id": 80802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4128:26:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint8_$_t_uint16_$_t_uint16_$_t_uint40_$_t_uint40_$",
                            "typeString": "tuple(uint8,uint16,uint16,uint40,uint40)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4106:48:125"
                      },
                      {
                        "expression": {
                          "id": 80811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 80804,
                              "name": "pairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80748,
                              "src": "4169:5:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 80806,
                            "indexExpression": {
                              "id": 80805,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80776,
                              "src": "4175:1:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4169:8:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 80809,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80787,
                                "src": "4188:4:125",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62096",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62096",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 80808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4180:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80807,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4180:7:125",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4180:13:125",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4169:24:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80812,
                        "nodeType": "ExpressionStatement",
                        "src": "4169:24:125"
                      },
                      {
                        "expression": {
                          "id": 80817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 80813,
                              "name": "size",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80751,
                              "src": "4207:4:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 80815,
                            "indexExpression": {
                              "id": 80814,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80776,
                              "src": "4212:1:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4207:7:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 80816,
                            "name": "_size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80799,
                            "src": "4217:5:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4207:15:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80818,
                        "nodeType": "ExpressionStatement",
                        "src": "4207:15:125"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80779,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80776,
                      "src": "4001:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 80780,
                      "name": "nbPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80754,
                      "src": "4005:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4001:11:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80820,
                  "initializationExpression": {
                    "assignments": [
                      80776
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80776,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3994:1:125",
                        "nodeType": "VariableDeclaration",
                        "scope": 80820,
                        "src": "3986:9:125",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80775,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3986:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80778,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3998:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3986:13:125"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4014:3:125",
                      "subExpression": {
                        "id": 80782,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80776,
                        "src": "4014:1:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80784,
                    "nodeType": "ExpressionStatement",
                    "src": "4014:3:125"
                  },
                  "nodeType": "ForStatement",
                  "src": "3981:252:125"
                }
              ]
            },
            "functionSelector": "4978ef81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllSizeAndAddress",
            "nameLocation": "3696:20:125",
            "parameters": {
              "id": 80745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80744,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "3727:7:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80822,
                  "src": "3717:17:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LBFactory_$59216",
                    "typeString": "contract LBFactory"
                  },
                  "typeName": {
                    "id": 80743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80742,
                      "name": "LBFactory",
                      "nameLocations": [
                        "3717:9:125"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59216,
                      "src": "3717:9:125"
                    },
                    "referencedDeclaration": 59216,
                    "src": "3717:9:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBFactory_$59216",
                      "typeString": "contract LBFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3716:19:125"
            },
            "returnParameters": {
              "id": 80752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80748,
                  "mutability": "mutable",
                  "name": "pairs",
                  "nameLocation": "3800:5:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80822,
                  "src": "3783:22:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80746,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3783:7:125",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 80747,
                    "nodeType": "ArrayTypeName",
                    "src": "3783:9:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80751,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "3824:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 80822,
                  "src": "3807:21:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80749,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3807:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80750,
                    "nodeType": "ArrayTypeName",
                    "src": "3807:9:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3782:47:125"
            },
            "scope": 80823,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GetAllSizeAndAddress",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80823
        ],
        "name": "GetAllSizeAndAddress",
        "nameLocation": "3660:20:125",
        "scope": 80824,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 125
}