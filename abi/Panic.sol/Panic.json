{
  "abi": [],
  "bytecode": {
    "object": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220502fda8f34c8bebf63a78fef2bfb644862616d6bc3c31d7a9d6a984a201cbf3564736f6c63430008140033",
    "sourceMap": "561:1353:54:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;561:1353:54;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220502fda8f34c8bebf63a78fef2bfb644862616d6bc3c31d7a9d6a984a201cbf3564736f6c63430008140033",
    "sourceMap": "561:1353:54:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15\",\"dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/utils/Panic.sol": "Panic"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754",
        "urls": [
          "bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15",
          "dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Panic.sol",
    "id": 43073,
    "exportedSymbols": {
      "Panic": [
        43072
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1882:54",
    "nodes": [
      {
        "id": 43022,
        "nodeType": "PragmaDirective",
        "src": "33:24:54",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 43072,
        "nodeType": "ContractDefinition",
        "src": "561:1353:54",
        "nodes": [
          {
            "id": 43027,
            "nodeType": "VariableDeclaration",
            "src": "622:40:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43024,
              "nodeType": "StructuredDocumentation",
              "src": "581:36:54",
              "text": "@dev generic / unspecified error"
            },
            "mutability": "constant",
            "name": "GENERIC",
            "nameLocation": "648:7:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43025,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783030",
              "id": 43026,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "658:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x00"
            },
            "visibility": "internal"
          },
          {
            "id": 43031,
            "nodeType": "VariableDeclaration",
            "src": "710:39:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43028,
              "nodeType": "StructuredDocumentation",
              "src": "668:37:54",
              "text": "@dev used by the assert() builtin"
            },
            "mutability": "constant",
            "name": "ASSERT",
            "nameLocation": "736:6:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43029,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "710:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783031",
              "id": 43030,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "745:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x01"
            },
            "visibility": "internal"
          },
          {
            "id": 43035,
            "nodeType": "VariableDeclaration",
            "src": "801:47:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43032,
              "nodeType": "StructuredDocumentation",
              "src": "755:41:54",
              "text": "@dev arithmetic underflow or overflow"
            },
            "mutability": "constant",
            "name": "UNDER_OVERFLOW",
            "nameLocation": "827:14:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43033,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "801:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783131",
              "id": 43034,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "844:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_17_by_1",
                "typeString": "int_const 17"
              },
              "value": "0x11"
            },
            "visibility": "internal"
          },
          {
            "id": 43039,
            "nodeType": "VariableDeclaration",
            "src": "894:49:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43036,
              "nodeType": "StructuredDocumentation",
              "src": "854:35:54",
              "text": "@dev division or modulo by zero"
            },
            "mutability": "constant",
            "name": "DIVISION_BY_ZERO",
            "nameLocation": "920:16:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43037,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "894:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783132",
              "id": 43038,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "939:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "0x12"
            },
            "visibility": "internal"
          },
          {
            "id": 43043,
            "nodeType": "VariableDeclaration",
            "src": "984:54:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43040,
              "nodeType": "StructuredDocumentation",
              "src": "949:30:54",
              "text": "@dev enum conversion error"
            },
            "mutability": "constant",
            "name": "ENUM_CONVERSION_ERROR",
            "nameLocation": "1010:21:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43041,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "984:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783231",
              "id": 43042,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1034:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33_by_1",
                "typeString": "int_const 33"
              },
              "value": "0x21"
            },
            "visibility": "internal"
          },
          {
            "id": 43047,
            "nodeType": "VariableDeclaration",
            "src": "1085:55:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43044,
              "nodeType": "StructuredDocumentation",
              "src": "1044:36:54",
              "text": "@dev invalid encoding in storage"
            },
            "mutability": "constant",
            "name": "STORAGE_ENCODING_ERROR",
            "nameLocation": "1111:22:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43045,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1085:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783232",
              "id": 43046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1136:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_34_by_1",
                "typeString": "int_const 34"
              },
              "value": "0x22"
            },
            "visibility": "internal"
          },
          {
            "id": 43051,
            "nodeType": "VariableDeclaration",
            "src": "1175:48:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43048,
              "nodeType": "StructuredDocumentation",
              "src": "1146:24:54",
              "text": "@dev empty array pop"
            },
            "mutability": "constant",
            "name": "EMPTY_ARRAY_POP",
            "nameLocation": "1201:15:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43049,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1175:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783331",
              "id": 43050,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1219:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49_by_1",
                "typeString": "int_const 49"
              },
              "value": "0x31"
            },
            "visibility": "internal"
          },
          {
            "id": 43055,
            "nodeType": "VariableDeclaration",
            "src": "1269:52:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43052,
              "nodeType": "StructuredDocumentation",
              "src": "1229:35:54",
              "text": "@dev array out of bounds access"
            },
            "mutability": "constant",
            "name": "ARRAY_OUT_OF_BOUNDS",
            "nameLocation": "1295:19:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43053,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1269:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783332",
              "id": 43054,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1317:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "0x32"
            },
            "visibility": "internal"
          },
          {
            "id": 43059,
            "nodeType": "VariableDeclaration",
            "src": "1397:47:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43056,
              "nodeType": "StructuredDocumentation",
              "src": "1327:65:54",
              "text": "@dev resource error (too large allocation or too large array)"
            },
            "mutability": "constant",
            "name": "RESOURCE_ERROR",
            "nameLocation": "1423:14:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43057,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1397:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783431",
              "id": 43058,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1440:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65_by_1",
                "typeString": "int_const 65"
              },
              "value": "0x41"
            },
            "visibility": "internal"
          },
          {
            "id": 43063,
            "nodeType": "VariableDeclaration",
            "src": "1497:58:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 43060,
              "nodeType": "StructuredDocumentation",
              "src": "1450:42:54",
              "text": "@dev calling invalid internal function"
            },
            "mutability": "constant",
            "name": "INVALID_INTERNAL_FUNCTION",
            "nameLocation": "1523:25:54",
            "scope": 43072,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43061,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30783531",
              "id": 43062,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1551:4:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_81_by_1",
                "typeString": "int_const 81"
              },
              "value": "0x51"
            },
            "visibility": "internal"
          },
          {
            "id": 43071,
            "nodeType": "FunctionDefinition",
            "src": "1680:232:54",
            "nodes": [],
            "body": {
              "id": 43070,
              "nodeType": "Block",
              "src": "1723:189:54",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1785:121:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1806:4:54",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1816:4:54",
                                  "type": "",
                                  "value": "0xe0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1822:10:54",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1812:3:54"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1812:21:54"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1799:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1799:35:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1799:35:54"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1854:4:54",
                              "type": "",
                              "value": "0x04"
                            },
                            {
                              "name": "code",
                              "nodeType": "YulIdentifier",
                              "src": "1860:4:54"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1847:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1847:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1847:18:54"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1885:4:54",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1891:4:54",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1878:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1878:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1878:18:54"
                      }
                    ]
                  },
                  "documentation": "@solidity memory-safe-assembly",
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 43066,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1860:4:54",
                      "valueSize": 1
                    }
                  ],
                  "id": 43069,
                  "nodeType": "InlineAssembly",
                  "src": "1776:130:54"
                }
              ]
            },
            "documentation": {
              "id": 43064,
              "nodeType": "StructuredDocumentation",
              "src": "1562:113:54",
              "text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "panic",
            "nameLocation": "1689:5:54",
            "parameters": {
              "id": 43067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43066,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "1703:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 43071,
                  "src": "1695:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:14:54"
            },
            "returnParameters": {
              "id": 43068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1723:0:54"
            },
            "scope": 43072,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Panic",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 43023,
          "nodeType": "StructuredDocumentation",
          "src": "59:459:54",
          "text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43072
        ],
        "name": "Panic",
        "nameLocation": "569:5:54",
        "scope": 43073,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 54
}