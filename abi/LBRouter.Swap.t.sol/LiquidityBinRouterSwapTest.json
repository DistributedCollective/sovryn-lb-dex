{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "Uint128x128Math__PowUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_GetIdFromPrice",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapNATIVEForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;-1:-1:-1;;3126:44:3;3166:4;3126:44;;;1951:4:123;1903:54;;2005:17;555:19551:121;2005:17:123;;555:19551:121;2005:17:123;;;-1:-1:-1;;;3126:44:3;2005:17:123;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:123;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:123;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:123;;;555:19551:121;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:152;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:152;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:152:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:152;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:152:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:152;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:152:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:152;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:152:o;:::-;555:19551:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620001c75760003560e01c80636d09084011620000f3578063916a17c61162000095578063b89e0233116200006c578063b89e0233146200049f578063ba414fa614620004c4578063e20c9f7114620004dc578063fecaa22314620004f457600080fd5b8063916a17c6146200044a578063a7aa85e91462000462578063b5508aa9146200048757600080fd5b806385226c8111620000ca57806385226c8114620003d1578063889be5b714620003f85780638f8d57ea146200043257600080fd5b80636d090840146200038957806372b01c7a14620003a15780637594f3a114620003b957600080fd5b806338a637ed11620001695780633f7286f411620001405780633f7286f414620002fe5780634415cf9d146200031657806349789ef9146200032e57806366d9a9a0146200036257600080fd5b806338a637ed14620002b65780633e5e3c2314620002ce5780633f6fb2f714620002e657600080fd5b80631ed7831c116200019e5780631ed7831c14620002505780632ade388014620002775780632debd6fd146200029e57600080fd5b806301ffc9a714620001d4578063061794b3146200021e5780630a9254e4146200023857600080fd5b36620001cf57005b600080fd5b348015620001e157600080fd5b5062000209620001f336600462009dce565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b3480156200022b57600080fd5b506200023662000519565b005b3480156200024557600080fd5b5062000236620006cf565b3480156200025d57600080fd5b506200026862000b82565b60405162000215919062009dfa565b3480156200028457600080fd5b506200028f62000be6565b60405162000215919062009e9d565b348015620002ab57600080fd5b506200023662000d34565b348015620002c357600080fd5b5062000236620015ed565b348015620002db57600080fd5b506200026862001ed8565b348015620002f357600080fd5b506200023662001f3a565b3480156200030b57600080fd5b5062000268620026d9565b3480156200032357600080fd5b50620002366200273b565b3480156200033b57600080fd5b50620003536200034d36600462009f75565b62002f2a565b60405190815260200162000215565b3480156200036f57600080fd5b506200037a62002f7f565b60405162000215919062009fad565b3480156200039657600080fd5b506200023662003069565b348015620003ae57600080fd5b5062000236620039e5565b348015620003c657600080fd5b506200023662004314565b348015620003de57600080fd5b50620003e96200482f565b6040516200021591906200a064565b3480156200040557600080fd5b506200041d620004173660046200a0dc565b62004909565b60405162ffffff909116815260200162000215565b3480156200043f57600080fd5b506200023662004964565b3480156200045757600080fd5b506200037a62005233565b3480156200046f57600080fd5b5062000236620004813660046200a135565b6200531d565b3480156200049457600080fd5b50620003e9620057be565b348015620004ac57600080fd5b5062000209620004be3660046200a1e4565b62005898565b348015620004d157600080fd5b50620002096200591b565b348015620004e957600080fd5b5062000268620059d5565b3480156200050157600080fd5b5062000236620005133660046200a204565b62005a37565b60248054601e54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a604484015260009291169063704037bd90606401608060405180830381865afa1580156200057e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a491906200a2bf565b6020015160255460405163f96fe92560e01b81526001600160a01b0380841660048301527002b78853aaac41bff0c3916eff1037c97a602483015292935091169063f96fe92590604401602060405180830381865afa1580156200060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200063291906200a34c565b506025546001600160a01b031663d0e380f28262000656628000006103e86200a382565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015262ffffff166024820152604401602060405180830381865afa158015620006a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006cb91906200a3a1565b5050565b620006d962005d3c565b60248054604051634cd161d360e01b8152600a60048201526001928101929092526001600160a01b031690634cd161d390604401600060405180830381600087803b1580156200072857600080fd5b505af11580156200073d573d6000803e3d6000fd5b5050602554601e54601d5460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a60648201529116925063659ac74b91506084016020604051808303816000875af1158015620007ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007d191906200a3bb565b50602554601c54601d5460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af11580156200083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200086291906200a3bb565b50602554602354601c5460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af1158015620008cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f391906200a3bb565b50601d546dffffffffffffffffffffffffffff906200091d906001600160a01b0316308362007510565b601e5462000936906001600160a01b0316308362007510565b6023546200094f906001600160a01b0316308362007510565b601e54601d5460009162000981916001600160a01b03918216911668056bc75e2d6310000062800000600f8662007524565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a90620009b49084906004016200a418565b6000604051808303816000875af1158015620009d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620009fe91908101906200a5fa565b5050601c54601d5462000a3695506001600160a01b03918216945016915068056bc75e2d63100000905062800000600f600062007524565b60255460608201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000a719085906004016200a418565b60006040518083038185885af115801562000a90573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000abb91908101906200a5fa565b5050602354601c5462000af395506001600160a01b039182169450169150680ad78ebc5ac6200000905062800000600f600062007524565b60255460808201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000b2e9085906004016200a418565b60006040518083038185885af115801562000b4d573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000b7891908101906200a5fa565b5050505050505050565b6060601480548060200260200160405190810160405280929190818152602001828054801562000bdc57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000bbd575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000d2b57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000d1357838290600052602060002001805462000c7f906200a68a565b80601f016020809104026020016040519081016040528092919081815260200182805462000cad906200a68a565b801562000cfe5780601f1062000cd25761010080835404028352916020019162000cfe565b820191906000526020600020905b81548152906001019060200180831162000ce057829003601f168201915b50505050508152602001906001019062000c5d565b50505050815250508152602001906001019062000c0a565b50505050905090565b60248054602354601c5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa15801562000da6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dcc91906200a2bf565b6020015160255460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa15801562000e36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e5c91906200a6de565b50601c546023549193506000925062000e82916001600160a01b039182169116620076bc565b905060008051602062020a5183398151915263f28dceb36313fab00360e21b8462000eaf6002826200a735565b62000ebc9060016200a75e565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262000f20916004016200a781565b600060405180830381600087803b15801562000f3b57600080fd5b505af115801562000f50573d6000803e3d6000fd5b50506025546001600160a01b0316915063e038e6dc90506001600160801b03861684843062000f814260016200a796565b6040518663ffffffff1660e01b815260040162000fa294939291906200a88e565b60206040518083038185885af115801562000fc1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000fe891906200a3a1565b506023546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200105991906200a3a1565b6025549091506000906001600160a01b031663e038e6dc6001600160801b038816620010876002886200a735565b8630620010964260016200a796565b6040518663ffffffff1660e01b8152600401620010b794939291906200a88e565b60206040518083038185885af1158015620010d6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620010fd91906200a3a1565b90506200114781620011116002876200a735565b6200111e9060016200a75e565b6001600160801b03166040518060600160405280603d815260200162020b28603d913962007833565b6023546040516370a0823160e01b8152306004820152620011e5916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001193573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011b991906200a3a1565b620011c583856200a796565b6040518060600160405280603d815260200162020aeb603d913962007833565b601e54604084015180516001600160a01b03909216916000906200120d576200120d6200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200129a916004016200a781565b600060405180830381600087803b158015620012b557600080fd5b505af1158015620012ca573d6000803e3d6000fd5b50506025546001600160a01b0316915063e038e6dc90506001600160801b038816868630620012fb4260016200a796565b6040518663ffffffff1660e01b81526004016200131c94939291906200a88e565b60206040518083038185885af11580156200133b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200136291906200a3a1565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b6200138d6001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620013e8916004016200a781565b600060405180830381600087803b1580156200140357600080fd5b505af115801562001418573d6000803e3d6000fd5b50506025546001600160a01b0316915063e038e6dc90506001600160801b038816868630620014496001426200a8e4565b6040518663ffffffff1660e01b81526004016200146a94939291906200a88e565b60206040518083038185885af115801562001489573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620014b091906200a3a1565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb3926200151c92016200a781565b600060405180830381600087803b1580156200153757600080fd5b505af11580156200154c573d6000803e3d6000fd5b50506025546001600160a01b0316915063e038e6dc90506001600160801b0388168686306200157d4260016200a796565b6040518663ffffffff1660e01b81526004016200159e94939291906200a88e565b60206040518083038185885af1158015620015bd573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620015e491906200a3a1565b50505050505050565b60248054601c54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa1580156200165f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200168591906200a2bf565b6020015160255460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa158015620016f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200171691906200a6de565b50601c54601d54919350600092506200173c916001600160a01b039182169116620076bc565b601d546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156200178b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017b191906200a3a1565b6025549091506000906001600160a01b031663b066ea7c6001600160801b038816868630620017e24260016200a796565b6040518663ffffffff1660e01b81526004016200180394939291906200a88e565b60206040518083038185885af115801562001822573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200184991906200a3a1565b90506200189681856001600160801b03166040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3181525062007833565b601d546040516370a0823160e01b815230600482015262001950916001600160a01b0316906370a0823190602401602060405180830381865afa158015620018e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200190891906200a3a1565b6200191483856200a796565b6040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3281525062007833565b60255460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa158015620019b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019d791906200a6de565b50945060008051602062020a51833981519152905063f28dceb36313fab00360e21b62001a068760016200a75e565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001a6b916004016200a781565b600060405180830381600087803b15801562001a8657600080fd5b505af115801562001a9b573d6000803e3d6000fd5b50506025546001600160a01b0316915063b066ea7c90506001600160801b03881662001ac98760016200a75e565b863062001ad84260016200a796565b6040518663ffffffff1660e01b815260040162001af994939291906200a88e565b60206040518083038185885af115801562001b18573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001b3f91906200a3a1565b50601e54604084015180516001600160a01b039092169160009062001b685762001b686200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001bf5916004016200a781565b600060405180830381600087803b15801562001c1057600080fd5b505af115801562001c25573d6000803e3d6000fd5b50506025546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001c564260016200a796565b6040518663ffffffff1660e01b815260040162001c7794939291906200a88e565b60206040518083038185885af115801562001c96573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001cbd91906200a3a1565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b62001ce86001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001d43916004016200a781565b600060405180830381600087803b15801562001d5e57600080fd5b505af115801562001d73573d6000803e3d6000fd5b50506025546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001da46001426200a8e4565b6040518663ffffffff1660e01b815260040162001dc594939291906200a88e565b60206040518083038185885af115801562001de4573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001e0b91906200a3a1565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb39262001e7792016200a781565b600060405180830381600087803b15801562001e9257600080fd5b505af115801562001ea7573d6000803e3d6000fd5b50506025546001600160a01b0316915063b066ea7c90506001600160801b0388168686306200157d4260016200a796565b6060601680548060200260200160405190810160405280929190818152602001828054801562000bdc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000bbd575050505050905090565b60248054602354601c5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa15801562001fac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fd291906200a2bf565b6020015160255460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa1580156200203d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200206391906200a6de565b50602354601c549193506000925062002089916001600160a01b039182169116620076bc565b905060008051602062020a5183398151915263f28dceb36313fab00360e21b84620020b66002826200a735565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200211a916004016200a781565b600060405180830381600087803b1580156200213557600080fd5b505af11580156200214a573d6000803e3d6000fd5b50506025546001600160a01b03169150631a24f9a9905085848430620021724260016200a796565b6040518663ffffffff1660e01b8152600401620021949594939291906200a8fa565b6020604051808303816000875af1158015620021b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021da91906200a3a1565b5060255447906000906001600160a01b0316631a24f9a987620021ff6002886200a735565b86306200220e4260016200a796565b6040518663ffffffff1660e01b8152600401620022309594939291906200a8fa565b6020604051808303816000875af115801562002250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200227691906200a3a1565b9050620022b3816200228a6002876200a735565b6001600160801b03166040518060600160405280603d815260200162020aae603d913962007833565b620022e447620022c483856200a796565b6040518060600160405280603d815260200162020a71603d913962007833565b601e54604084015180516001600160a01b039092169160019081106200230e576200230e6200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200239b916004016200a781565b600060405180830381600087803b158015620023b657600080fd5b505af1158015620023cb573d6000803e3d6000fd5b50506025546001600160a01b03169150631a24f9a9905087620023f08760016200a75e565b8630620023ff4260016200a796565b6040518663ffffffff1660e01b8152600401620024219594939291906200a8fa565b6020604051808303816000875af115801562002441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200246791906200a3a1565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b620024926001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620024ed916004016200a781565b600060405180830381600087803b1580156200250857600080fd5b505af11580156200251d573d6000803e3d6000fd5b50506025546001600160a01b03169150631a24f9a9905087868630620025456001426200a8e4565b6040518663ffffffff1660e01b8152600401620025679594939291906200a8fa565b6020604051808303816000875af115801562002587573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025ad91906200a3a1565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb3926200261992016200a781565b600060405180830381600087803b1580156200263457600080fd5b505af115801562002649573d6000803e3d6000fd5b50506025546001600160a01b03169150631a24f9a9905087868630620026714260016200a796565b6040518663ffffffff1660e01b8152600401620026939594939291906200a8fa565b6020604051808303816000875af1158015620026b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015e491906200a3a1565b6060601580548060200260200160405190810160405280929190818152602001828054801562000bdc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000bbd575050505050905090565b60248054601c54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa158015620027ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027d391906200a2bf565b6020015160255460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa1580156200283d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200286391906200a6de565b50601d54601c549193506000925062002889916001600160a01b039182169116620076bc565b60255490915047906000906001600160a01b0316639ab6156b87868630620028b34260016200a796565b6040518663ffffffff1660e01b8152600401620028d59594939291906200a8fa565b6020604051808303816000875af1158015620028f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200291b91906200a3a1565b90506200296881856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3181525062007833565b620029b5476200297983856200a796565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3281525062007833565b60255460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063a0d376cf90606401606060405180830381865afa15801562002a16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a3c91906200a6de565b50945060008051602062020a51833981519152905063f28dceb36313fab00360e21b62002a6b8760016200a75e565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002ad0916004016200a781565b600060405180830381600087803b15801562002aeb57600080fd5b505af115801562002b00573d6000803e3d6000fd5b50506025546001600160a01b03169150639ab6156b90508762002b258760016200a75e565b863062002b344260016200a796565b6040518663ffffffff1660e01b815260040162002b569594939291906200a8fa565b6020604051808303816000875af115801562002b76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b9c91906200a3a1565b50601e54604084015180516001600160a01b0390921691600190811062002bc75762002bc76200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002c54916004016200a781565b600060405180830381600087803b15801562002c6f57600080fd5b505af115801562002c84573d6000803e3d6000fd5b50506025546001600160a01b03169150639ab6156b90508762002ca98760016200a75e565b863062002cb84260016200a796565b6040518663ffffffff1660e01b815260040162002cda9594939291906200a8fa565b6020604051808303816000875af115801562002cfa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d2091906200a3a1565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b62002d4b6001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002da6916004016200a781565b600060405180830381600087803b15801562002dc157600080fd5b505af115801562002dd6573d6000803e3d6000fd5b50506025546001600160a01b03169150639ab6156b90508786863062002dfe6001426200a8e4565b6040518663ffffffff1660e01b815260040162002e209594939291906200a8fa565b6020604051808303816000875af115801562002e40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e6691906200a3a1565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb39262002ed292016200a781565b600060405180830381600087803b15801562002eed57600080fd5b505af115801562002f02573d6000803e3d6000fd5b50506025546001600160a01b03169150639ab6156b905087868630620026714260016200a796565b6000808360ff1611801562002f42575060008260ff16115b62002f595762002f5382846200a945565b62002f73565b600162002f6783856200a945565b62002f7391906200a961565b60ff1690505b92915050565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000d2b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200305057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620030115790505b5050505050815250508152602001906001019062002fa3565b60248054601c54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa158015620030db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200310191906200a2bf565b60200151602554604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063964f987c90606401606060405180830381865afa1580156200316b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200319191906200a6de565b5050601d54601c54919250600091620031b7916001600160a01b039081169116620076bc565b601d546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003206573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200322c91906200a3a1565b6025549091506000906001600160a01b0316633dc8f8ec87868630620032544260016200a796565b6040518663ffffffff1660e01b8152600401620032769594939291906200a8fa565b6000604051808303816000875af115801562003296573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620032c091908101906200a97d565b90506200332a81600081518110620032dc57620032dc6200a8ce565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3181525062007833565b601d546040516370a0823160e01b815230600482015262003403916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003376573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200339c91906200a3a1565b82600081518110620033b257620033b26200a8ce565b602002602001015184620033c791906200a8e4565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3281525062007833565b602554604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063964f987c90606401606060405180830381865afa15801562003464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200348a91906200a6de565b5090945060008051602062020a51833981519152905063f28dceb363194ee21960e31b620034ba6001886200a9b6565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200351f916004016200a781565b600060405180830381600087803b1580156200353a57600080fd5b505af11580156200354f573d6000803e3d6000fd5b50506025546001600160a01b031691506392fe8e70905087620035746001886200a9b6565b8630620035834260016200a796565b6040518663ffffffff1660e01b8152600401620035a59594939291906200a8fa565b6000604051808303816000875af1158015620035c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620035ef91908101906200a97d565b50601e54604084015180516001600160a01b039092169160019081106200361a576200361a6200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620036a7916004016200a781565b600060405180830381600087803b158015620036c257600080fd5b505af1158015620036d7573d6000803e3d6000fd5b50506025546001600160a01b03169150633dc8f8ec905087868630620036ff4260016200a796565b6040518663ffffffff1660e01b8152600401620037219594939291906200a8fa565b6000604051808303816000875af115801562003741573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200376b91908101906200a97d565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b620037966001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620037f1916004016200a781565b600060405180830381600087803b1580156200380c57600080fd5b505af115801562003821573d6000803e3d6000fd5b50506025546001600160a01b031691506392fe8e70905087868630620038496001426200a8e4565b6040518663ffffffff1660e01b81526004016200386b9594939291906200a8fa565b6000604051808303816000875af11580156200388b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620038b591908101906200a97d565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb3926200392192016200a781565b600060405180830381600087803b1580156200393c57600080fd5b505af115801562003951573d6000803e3d6000fd5b50506025546001600160a01b031691506392fe8e70905087868630620039794260016200a796565b6040518663ffffffff1660e01b81526004016200399b9594939291906200a8fa565b6000604051808303816000875af1158015620039bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620015e491908101906200a97d565b60248054601e54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa15801562003a57573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a7d91906200a2bf565b6020015160255460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa15801562003ae8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b0e91906200a6de565b50601e54601d549193506000925062003b34916001600160a01b039182169116620076bc565b601d546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003b83573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ba991906200a3a1565b6025549091506000906001600160a01b0316632a443fae8786863062003bd14260016200a796565b6040518663ffffffff1660e01b815260040162003bf39594939291906200a8fa565b6020604051808303816000875af115801562003c13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c3991906200a3a1565b905062003c8681856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3181525062007833565b601d546040516370a0823160e01b815230600482015262003d40916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003cd2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003cf891906200a3a1565b62003d0483856200a796565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3281525062007833565b60255460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa15801562003da1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dc791906200a6de565b50945060008051602062020a51833981519152905063f28dceb36313fab00360e21b62003df68760016200a75e565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003e5b916004016200a781565b600060405180830381600087803b15801562003e7657600080fd5b505af115801562003e8b573d6000803e3d6000fd5b50506025546001600160a01b03169150632a443fae90508762003eb08760016200a75e565b863062003ebf4260016200a796565b6040518663ffffffff1660e01b815260040162003ee19594939291906200a8fa565b6020604051808303816000875af115801562003f01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f2791906200a3a1565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b62003f526001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003fad916004016200a781565b600060405180830381600087803b15801562003fc857600080fd5b505af115801562003fdd573d6000803e3d6000fd5b50506025546001600160a01b03169150632a443fae905087868630620040056001426200a8e4565b6040518663ffffffff1660e01b8152600401620040279594939291906200a8fa565b6020604051808303816000875af115801562004047573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200406d91906200a3a1565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb392620040d992016200a781565b600060405180830381600087803b158015620040f457600080fd5b505af115801562004109573d6000803e3d6000fd5b50506025546001600160a01b03169150632a443fae905087868630620041314260016200a796565b6040518663ffffffff1660e01b8152600401620041539594939291906200a8fa565b6020604051808303816000875af115801562004173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200419991906200a3a1565b50604080516002808252606082018352909160208301908036833750505060408401819052601e5481516001600160a01b039091169190600090620041e257620041e26200a8ce565b6001600160a01b0392831660209182029290920101526023546040850151805191909216919060019081106200421c576200421c6200a8ce565b6001600160a01b039283166020918202929092010152601e5460235460405191831660248301529091166044820152600a606482015260008051602062020a518339815191529063f28dceb390636b2471d160e11b9060840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620042bc916004016200a781565b600060405180830381600087803b158015620042d757600080fd5b505af1158015620042ec573d6000803e3d6000fd5b50506025546001600160a01b03169150632a443fae905087868630620026714260016200a796565b60248054601e54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa15801562004386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620043ac91906200a2bf565b60200151602554604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa15801562004417573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200443d91906200a6de565b5050601e54601d5491925060009162004463916001600160a01b039081169116620076bc565b601e546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015620044b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620044d891906200a3a1565b6025549091506000906001600160a01b03166392fe8e7087868630620045004260016200a796565b6040518663ffffffff1660e01b8152600401620045229594939291906200a8fa565b6000604051808303816000875af115801562004542573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200456c91908101906200a97d565b9050620045d6816000815181106200458857620045886200a8ce565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3181525062007833565b601e546040516370a0823160e01b8152306004820152620046af916001600160a01b0316906370a0823190602401602060405180830381865afa15801562004622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200464891906200a3a1565b826000815181106200465e576200465e6200a8ce565b6020026020010151846200467391906200a8e4565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3281525062007833565b602554604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200473691906200a6de565b5090945060008051602062020a51833981519152905063f28dceb363194ee21960e31b620047666001886200a9b6565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620047cb916004016200a781565b600060405180830381600087803b158015620047e657600080fd5b505af1158015620047fb573d6000803e3d6000fd5b50506025546001600160a01b031691506392fe8e70905087620048206001886200a9b6565b8630620036ff4260016200a796565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000d2b57838290600052602060002001805462004875906200a68a565b80601f0160208091040260200160405190810160405280929190818152602001828054620048a3906200a68a565b8015620048f45780601f10620048c857610100808354040283529160200191620048f4565b820191906000526020600020905b815481529060010190602001808311620048d657829003601f168201915b50505050508152602001906001019062004853565b6000806200491d8462ffffff87166200a796565b905060008360ff16116200493257806200494e565b6200494160ff8416826200a8e4565b6200494e9060016200a796565b90506200495b8162007899565b95945050505050565b60248054601c54601d5460405163704037bd60e01b81526001600160a01b03928316600482015290821693810193909352600a60448401526801158e460913d0000092600092919091169063704037bd90606401608060405180830381865afa158015620049d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620049fc91906200a2bf565b60200151602554604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa15801562004a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a8d91906200a6de565b5050601c54601d5491925060009162004ab3916001600160a01b039081169116620076bc565b60255490915047906000906001600160a01b0316632075ad2262004ad98660646200a75e565b6001600160801b031688863062004af24260016200a796565b6040518663ffffffff1660e01b815260040162004b1394939291906200a88e565b60006040518083038185885af115801562004b32573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004b5d91908101906200a97d565b905062004bc78160008151811062004b795762004b796200a8ce565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3181525062007833565b62004c33478260008151811062004be25762004be26200a8ce565b60200260200101518462004bf791906200a8e4565b6040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3281525062007833565b602554604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004c94573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004cba91906200a6de565b5090945060008051602062020a51833981519152905063f28dceb363194ee21960e31b62004cea6002886200a735565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004d4f916004016200a781565b600060405180830381600087803b15801562004d6a57600080fd5b505af115801562004d7f573d6000803e3d6000fd5b50506025546001600160a01b03169150632075ad22905062004da36002876200a735565b6001600160801b031688863062004dbc4260016200a796565b6040518663ffffffff1660e01b815260040162004ddd94939291906200a88e565b60006040518083038185885af115801562004dfc573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004e2791908101906200a97d565b50601e54604084015180516001600160a01b039092169160009062004e505762004e506200a8ce565b6001600160a01b039283166020918202929092010152601e546040519116602482015260008051602062020a518339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004edd916004016200a781565b600060405180830381600087803b15801562004ef857600080fd5b505af115801562004f0d573d6000803e3d6000fd5b50506025546001600160a01b03169150632075ad2290506001600160801b03861688863062004f3e4260016200a796565b6040518663ffffffff1660e01b815260040162004f5f94939291906200a88e565b60006040518083038185885af115801562004f7e573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004fa991908101906200a97d565b5060008051602062020a5183398151915263f28dceb363dae7ca7d60e01b62004fd46001426200a8e4565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200502f916004016200a781565b600060405180830381600087803b1580156200504a57600080fd5b505af11580156200505f573d6000803e3d6000fd5b50506025546001600160a01b03169150632075ad2290506001600160801b038616888630620050906001426200a8e4565b6040518663ffffffff1660e01b8152600401620050b194939291906200a88e565b60006040518083038185885af1158015620050d0573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052620050fb91908101906200a97d565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020a518339815191529263f28dceb3926200516792016200a781565b600060405180830381600087803b1580156200518257600080fd5b505af115801562005197573d6000803e3d6000fd5b50506025546001600160a01b03169150632075ad2290506001600160801b038616888630620051c84260016200a796565b6040518663ffffffff1660e01b8152600401620051e994939291906200a88e565b60006040518083038185885af115801562005208573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052620015e491908101906200a97d565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000d2b5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200530457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620052c55790505b5050505050815250508152602001906001019062005257565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200535e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200538491906200a3bb565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620053c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620053ed91906200a3bb565b9050620053fc828b8862007510565b62005409818b8762007510565b600062005417858562002f2a565b905060008167ffffffffffffffff8111156200543757620054376200a298565b60405190808252806020026020018201604052801562005461578160200160208202803683370190505b50905060005b82811015620055605760006200547f8b838962004909565b905060008b62ffffff168262ffffff1610158015620054a1575060008960ff16115b620054ae576000620054cf565b620054cf620054c960ff8b16670de0b6b3a76400006200a9d9565b620078c5565b905060008c62ffffff168362ffffff1611158015620054f1575060008960ff16115b620054fe57600062005519565b62005519620054c960ff8b16670de0b6b3a76400006200a9d9565b905062005528828285620078f1565b8585815181106200553d576200553d6200a8ce565b6020026020010181815250505050508062005558906200a9f0565b905062005467565b506040516303223eab60e11b81526001600160a01b038d16600482015260008051602062020a51833981519152906306447d5690602401600060405180830381600087803b158015620055b257600080fd5b505af1158015620055c7573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af11580156200561b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200564191906200aa0c565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af115801562005692573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056b891906200aa0c565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200571857600080fd5b505af11580156200572d573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b815260040162005763939291906200aa2a565b6000604051808303816000875af115801562005783573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620057ad91908101906200aa90565b505050505050505050505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000d2b57838290600052602060002001805462005804906200a68a565b80601f016020809104026020016040519081016040528092919081815260200182805462005832906200a68a565b8015620058835780601f10620058575761010080835404028352916020019162005883565b820191906000526020600020905b8154815290600101906020018083116200586557829003601f168201915b505050505081526020019060010190620057e2565b60248054604051632aaf12cf60e21b815261ffff841660048201526000926001600160a01b039092169163aabc4b3c910161010060405180830381865afa158015620058e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200590e91906200aae4565b9998505050505050505050565b60075460009060ff161562005934575060075460ff1690565b604051630667f9d760e41b815260008051602062020a51833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa158015620059a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059ce91906200a3a1565b1415905090565b6060601380548060200260200160405190810160405280929190818152602001828054801562000bdc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000bbd575050505050905090565b670de0b6b3a764000083111562005a955760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062005aa3838362002f2a565b905060008167ffffffffffffffff81111562005ac35762005ac36200a298565b60405190808252806020026020018201604052801562005aed578160200160208202803683370190505b50905060008267ffffffffffffffff81111562005b0e5762005b0e6200a298565b60405190808252806020026020018201604052801562005b38578160200160208202803683370190505b50905060005b8381101562005c4657600062005b5689838862004909565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562005bac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bd291906200a3a1565b90508162ffffff1685848151811062005bef5762005bef6200a8ce565b602090810291909101015262005c0f818a670de0b6b3a76400006200792f565b84848151811062005c245762005c246200a8ce565b60200260200101818152505050508062005c3e906200a9f0565b905062005b3e565b5060405163ca669fa760e01b81526001600160a01b038b16600482015260008051602062020a518339815191529063ca669fa790602401600060405180830381600087803b15801562005c9857600080fd5b505af115801562005cad573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062005ce5908d908d90879087906004016200ab3e565b6000604051808303816000875af115801562005d05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005d2f91908101906200a97d565b5050505050505050505050565b601c80546001600160a01b03191673b31f66aa3c1e785363f0875a1b74e27b85fd66c79081179091553b60000362005e3957601c5460405160008051602062020a518339815191529163b4d6c782916001600160a01b039091169062005da29062009d12565b604051809103906000f08015801562005dbf573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b815260040162005e049291906200ab80565b600060405180830381600087803b15801562005e1f57600080fd5b505af115801562005e34573d6000803e3d6000fd5b505050505b600660405162005e499062009d20565b60ff9091168152602001604051809103906000f08015801562005e70573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691909117905560405160069062005ea29062009d20565b60ff9091168152602001604051809103906000f08015801562005ec9573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b039290921691909117905560405160089062005efb9062009d20565b60ff9091168152602001604051809103906000f08015801562005f22573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b039290921691909117905560405160129062005f549062009d20565b60ff9091168152602001604051809103906000f08015801562005f7b573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691909117905560405160129062005fad9062009d20565b60ff9091168152602001604051809103906000f08015801562005fd4573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392909216919091179055604051601290620060069062009d20565b60ff9091168152602001604051809103906000f0801580156200602d573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b03929092169190911790556040516200605c9062009d2e565b604051809103906000f08015801562006079573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b03928316179055601c54604080516318caf8e360e31b81529190921660048201526024810191909152600760448201527f776e617469766500000000000000000000000000000000000000000000000000606482015260008051602062020a518339815191529063c657c71890608401600060405180830381600087803b1580156200611a57600080fd5b505af11580156200612f573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b158015620061a757600080fd5b505af1158015620061bc573d6000803e3d6000fd5b5050601e54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b1580156200623457600080fd5b505af115801562006249573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b158015620062c157600080fd5b505af1158015620062d6573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b1580156200634e57600080fd5b505af115801562006363573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b158015620063db57600080fd5b505af1158015620063f0573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526231373160e91b606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b1580156200646257600080fd5b505af115801562006477573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e000000000000000000000000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b1580156200650357600080fd5b505af115801562006518573d6000803e3d6000fd5b5050602a80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602b8054909116739ad6c38be94206ca50bb0d90783181662f0cfa101790555050604051600090620065759062009d3c565b604051809103906000f08015801562006592573d6000803e3d6000fd5b509050807f0000000000000000000000000000000000000000000000000000000000000000604051620065c59062009d4a565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f08015801562006608573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169182179055604051600091906200663a9062009d58565b6001600160a01b039091168152602001604051809103906000f08015801562006667573d6000803e3d6000fd5b5090506000817f0000000000000000000000000000000000000000000000000000000000000000602460009054906101000a90046001600160a01b0316604051620066b29062009d66565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620066ef573d6000803e3d6000fd5b5060248054604051632f880c2560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301819052938201939093526602d79883d2000060448201528383166064820152929350169063be20309490608401600060405180830381600087803b1580156200677857600080fd5b505af11580156200678d573d6000803e3d6000fd5b50506024546040516001600160a01b039091169250620067ae915062009d58565b6001600160a01b039091168152602001604051809103906000f080158015620067db573d6000803e3d6000fd5b50602980546001600160a01b0319166001600160a01b039283169081179091556024805460405163b038478160e01b815260048101939093529092169163b03847819101600060405180830381600087803b1580156200683a57600080fd5b505af11580156200684f573d6000803e3d6000fd5b505050506200685d6200795d565b62006869600a62007d02565b602454602b54601c546040516001600160a01b03938416939283169290911690620068949062009d74565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620068d1573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316908117909155602b54602454604051918416931691906200690c9062009d82565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006949573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316179055602554604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f757465720000000000000000000000000000000000000000000000000000606482015260008051602062020a518339815191529063c657c71890608401600060405180830381600087803b158015620069ea57600080fd5b505af1158015620069ff573d6000803e3d6000fd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f7465720000000000000000000000000000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b15801562006a8b57600080fd5b505af115801562006aa0573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600760448201527f666163746f727900000000000000000000000000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b15801562006b2f57600080fd5b505af115801562006b44573d6000803e3d6000fd5b5050602954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e0000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b15801562006bd057600080fd5b505af115801562006be5573d6000803e3d6000fd5b5050602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f757465725631000000000000000000000000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b15801562006c7157600080fd5b505af115801562006c86573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f727956310000000000000000000000000000000000000000000000606482015260008051602062020a51833981519152925063c657c7189150608401600060405180830381600087803b15801562006d1257600080fd5b505af115801562006d27573d6000803e3d6000fd5b5050601c54602a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af115801562006d82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006da891906200aa0c565b50601d54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006e00573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e2691906200aa0c565b50601e54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006e7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ea491906200aa0c565b50601f54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006efc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006f2291906200aa0c565b50602254602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006f7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006fa091906200aa0c565b50602054602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006ff8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200701e91906200aa0c565b50602154602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200709c91906200aa0c565b50602354602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620070f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200711a91906200aa0c565b50601c5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007172573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200719891906200aa0c565b50601d5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620071f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200721691906200aa0c565b50601e5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200726e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200729491906200aa0c565b50601f5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620072ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200731291906200aa0c565b5060225460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200736a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200739091906200aa0c565b5060205460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620073e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200740e91906200aa0c565b5060215460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007466573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200748c91906200aa0c565b5060235460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620074e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200750a91906200aa0c565b50505050565b6200751f838383600062007da9565b505050565b620075c2604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600080600080620075d68989898962007fac565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620076548a87620082bb90919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a001620076ab426103e86200a796565b90529b9a5050505050505050505050565b620076e160405180606001604052806060815260200160608152602001606081525090565b60408051600180825281830190925290602080830190803683375050508082528051600a91906000906200771957620077196200a8ce565b602090810291909101015260408051600180825281830190925290816020016020820280368337505050602082018190528051600191906000906200776257620077626200a8ce565b602002602001019060018111156200777e576200777e6200a7ac565b908160018111156200779457620077946200a7ac565b9052506040805160028082526060820183529091602083019080368337505050604082018190528051849190600090620077d257620077d26200a8ce565b60200260200101906001600160a01b031690816001600160a01b0316815250508181604001516001815181106200780d576200780d6200a8ce565b60200260200101906001600160a01b031690816001600160a01b03168152505092915050565b6040516388b44c8560e01b815260008051602062020a51833981519152906388b44c85906200786b908690869086906004016200aba4565b60006040518083038186803b1580156200788457600080fd5b505afa158015620015e4573d6000803e3d6000fd5b8062ffffff81168114620078c057604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff81168114620078c05760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b60008060006200794086866200837f565b915091506200795386868685856200839e565b9695505050505050565b601c546001600160a01b031615620079d25760248054601c54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620079b857600080fd5b505af1158015620079cd573d6000803e3d6000fd5b505050505b601d546001600160a01b03161562007a475760248054601d54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007a2d57600080fd5b505af115801562007a42573d6000803e3d6000fd5b505050505b601e546001600160a01b03161562007abc5760248054601e54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007aa257600080fd5b505af115801562007ab7573d6000803e3d6000fd5b505050505b601f546001600160a01b03161562007b315760248054601f54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007b1757600080fd5b505af115801562007b2c573d6000803e3d6000fd5b505050505b6022546001600160a01b03161562007ba65760248054602254604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007b8c57600080fd5b505af115801562007ba1573d6000803e3d6000fd5b505050505b6020546001600160a01b03161562007c1b5760248054602054604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007c0157600080fd5b505af115801562007c16573d6000803e3d6000fd5b505050505b6021546001600160a01b03161562007c905760248054602154604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007c7657600080fd5b505af115801562007c8b573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562007d005760248054602354604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b15801562007ceb57600080fd5b505af11580156200750a573d6000803e3d6000fd5b565b6024805460405163379ee80360e01b815261ffff84166004820152611388928101839052601e604482015261025860648201526084810192909252619c4060a48301526103e860c48301526205573060e483015260006101048301526001600160a01b03169063379ee8039061012401600060405180830381600087803b15801562007d8d57600080fd5b505af115801562007da2573d6000803e3d6000fd5b5050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162007dff916200abc5565b600060405180830381855afa9150503d806000811462007e3c576040519150601f19603f3d011682016040523d82523d6000602084013e62007e41565b606091505b5091505060008180602001905181019062007e5d91906200a3a1565b905062007e978462007e908762007e896370a0823160e01b62007e82600c8d62008450565b9062008478565b9062008496565b90620084bf565b821562007fa45760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162007ee291906200abc5565b600060405180830381855afa9150503d806000811462007f1f576040519150601f19603f3d011682016040523d82523d6000602084013e62007f24565b606091505b5091505060008180602001905181019062007f4091906200a3a1565b90508286101562007f6b5762007f5786846200a8e4565b62007f6390826200a8e4565b905062007f86565b62007f7783876200a8e4565b62007f8390826200a796565b90505b62000b788162007e906318160ddd60e01b62007e82600c8d62008450565b505050505050565b60608080600062007fbf6002876200abe3565b62ffffff16600003620080155760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e73604482015260640162005a8c565b6000620080246002886200ac08565b90508662ffffff1667ffffffffffffffff8111156200804757620080476200a298565b60405190808252806020026020018201604052801562008071578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff8111156200809557620080956200a298565b604051908082528060200260200182016040528015620080bf578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff811115620080e357620080e36200a298565b6040519080825280602002602001820160405280156200810d578160200160208202803683370190505b50925060006200811f8260016200a382565b620081389062ffffff16670de0b6b3a76400006200a9d9565b90506000620081498360016200a382565b6200815a9062ffffff168c6200a9d9565b905060005b8962ffffff16811015620082ac576200817a8960016200a382565b6200818b9062ffffff16826200ac21565b620081988a60016200a382565b620081a490866200ac3b565b620081b0908d6200ac65565b62ffffff16620081c191906200a796565b888281518110620081d657620081d66200a8ce565b6020026020010181815250508362ffffff1681116200821257828682815181106200820557620082056200a8ce565b6020026020010181815250505b8362ffffff1681106200829757828782815181106200823557620082356200a8ce565b602002602001018181525050600082116200825257600062008288565b6200828860806200827f8a84815181106200827157620082716200a8ce565b6020026020010151620084cb565b849190620084da565b6200829490866200a796565b94505b80620082a3816200a9f0565b9150506200815f565b50505050945094509450949050565b6060825167ffffffffffffffff811115620082da57620082da6200a298565b60405190808252806020026020018201604052801562008304578160200160208202803683370190505b50905060005b835181101562008378578262ffffff168482815181106200832f576200832f6200a8ce565b60200260200101516200834391906200ac84565b8282815181106200835857620083586200a8ce565b6020908102919091010152806200836f816200a9f0565b9150506200830a565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b600081600003620083c457838381620083bb57620083bb6200a71f565b0490506200495b565b838210620083e5576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60038201805463ffffffff191660e083901c17905560008262008471565b6002820180546001810182556000918252602082206001600160a01b0384169101558262008471565b620006cb828262008506565b600062002f7982600a62008913565b600060ff831684811b9061ffff6101008290031686901c90620079539087906001901b8685856200839e565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200857957602002820191906000526020600020905b81548152602001906001019080831162008564575b505050505090506000836200858e8362008950565b604051602001620085a19291906200aca7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620085f59186918891016200acda565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662008630576200862e87620089fd565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620086719187918991016200acda565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620086b891906200abc5565b600060405180830381855afa9150503d8060008114620086f5576040519150601f19603f3d011682016040523d82523d6000602084013e620086fa565b606091505b50915062008717905081620087118860206200ac21565b62008a0a565b604051630667f9d760e41b81526001600160a01b038a166004820152602481018590529092506000915060008051602062020a518339815191529063667f9d7090604401602060405180830381865afa15801562008779573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200879f91906200a3a1565b9050808214620088565760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162005a8c565b6040516370ca10bb60e01b81526001600160a01b038916600482015260248101849052604481018a905260008051602062020a51833981519152906370ca10bb90606401600060405180830381600087803b158015620088b557600080fd5b505af1158015620088ca573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620088ff60028b01600062009d90565b896004016000905550505050505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff19016200495b828262008aac565b60606000825160206200896491906200ac21565b67ffffffffffffffff8111156200897f576200897f6200a298565b6040519080825280601f01601f191660200182016040528015620089aa576020820181803683370190505b50905060005b835181101562008378576000848281518110620089d157620089d16200a8ce565b602002602001015190508082602002602001840152508080620089f4906200a9f0565b915050620089b0565b600062002f798262008d2b565b6000806000602085511162008a2157845162008a24565b60205b905060005b8181101562008aa25762008a3f8160086200ac21565b8662008a4c83886200a796565b8151811062008a5f5762008a5f6200a8ce565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c92909217918062008a99816200a9f0565b91505062008a29565b5090949350505050565b60008060008360000362008aca5750600160801b915062002f799050565b5082600081121562008add579015906000035b6210000081101562008ce357600160801b9250846001600160801b0381111562008b0957911591600019045b600182161562008b1b5792830260801c925b800260801c600282161562008b325792830260801c925b800260801c600482161562008b495792830260801c925b800260801c600882161562008b605792830260801c925b800260801c601082161562008b775792830260801c925b800260801c602082161562008b8e5792830260801c925b800260801c604082161562008ba55792830260801c925b8002608090811c9082161562008bbd5792830260801c925b800260801c61010082161562008bd55792830260801c925b800260801c61020082161562008bed5792830260801c925b800260801c61040082161562008c055792830260801c925b800260801c61080082161562008c1d5792830260801c925b800260801c61100082161562008c355792830260801c925b800260801c61200082161562008c4d5792830260801c925b800260801c61400082161562008c655792830260801c925b800260801c61800082161562008c7d5792830260801c925b800260801c6201000082161562008c965792830260801c925b800260801c6202000082161562008caf5792830260801c925b800260801c6204000082161562008cc85792830260801c925b800260801c6208000082161562008ce15792830260801c925b505b8260000362008d1057604051631dba598d60e11b8152600481018690526024810185905260440162005a8c565b8162008d1d57826200495b565b6200495b836000196200a9d9565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562008d9d57602002820191906000526020600020905b81548152602001906001019080831162008d88575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062008de9925085918791016200acda565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562008e88576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162008e589185918791016200acda565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362008e968362009bcd565b60405160200162008ea99291906200aca7565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562008f1957600080fd5b505af115801562008f2e573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162008f4f91906200abc5565b600060405180830381855afa9150503d806000811462008f8c576040519150601f19603f3d011682016040523d82523d6000602084013e62008f91565b606091505b50915062008fae90508162008fa88760206200ac21565b62009c7a565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062020a51833981519152906365bc9481906024016000604051808303816000875af11580156200900b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200903591908101906200ad16565b5090508051600103620093d95760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d7089846000815181106200908d576200908d6200a8ce565b60200260200101516040518363ffffffff1660e01b8152600401620090c79291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015620090e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200910b91906200a3a1565b90508062009176577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200914b576200914b6200a8ce565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b8083146200922b5760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162005a8c565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620092639291906200acda565b60405160208183030381529060405280519060200120856000815181106200928f576200928f6200a8ce565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a181600081518110620092e957620092e96200a8ce565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262009334918a918c91016200acda565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200939e918a918c91016200acda565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062009a42565b600181511115620099d15760005b8151811015620099ca5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a8585815181106200943b576200943b6200a8ce565b60200260200101516040518363ffffffff1660e01b8152600401620094759291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562009493573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620094b991906200a3a1565b90508062009523577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620094f857620094f86200a8ce565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b838114620095325750620099b5565b825181199060008051602062020a51833981519152906370ca10bb908c908790879081106200956557620095656200a8ce565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b158015620095be57600080fd5b505af1158015620095d3573d6000803e3d6000fd5b50505050600060608b6001600160a01b031688604051620095f591906200abc5565b600060405180830381855afa9150503d806000811462009632576040519150601f19603f3d011682016040523d82523d6000602084013e62009637565b606091505b5090925090506200964f8162008fa88c60206200ac21565b9650508080156200965f57508186145b15620098f7577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200969d9291906200acda565b60405160208183030381529060405280519060200120888881518110620096c857620096c86200a8ce565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a18484815181106200972157620097216200a8ce565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200976c918d918f91016200acda565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620097f99291906200acda565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c8787815181106200987c576200987c6200a8ce565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620098d557600080fd5b505af1158015620098ea573d6000803e3d6000fd5b50505050505050620099ca565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c8787815181106200993f576200993f6200a8ce565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b1580156200999857600080fd5b505af1158015620099ad573d6000803e3d6000fd5b505050505050505b80620099c1816200a9f0565b915050620093e7565b5062009a42565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005a8c565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162009a869188918a91016200acda565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662009b235760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162005a8c565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562009b5460028a01600062009d90565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162009b9a9188918a91016200acda565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b606060008251602062009be191906200ac21565b67ffffffffffffffff81111562009bfc5762009bfc6200a298565b6040519080825280601f01601f19166020018201604052801562009c27576020820181803683370190505b50905060005b83518110156200837857600084828151811062009c4e5762009c4e6200a8ce565b60200260200101519050808260200260200184015250808062009c71906200a9f0565b91505062009c2d565b6000806000602085511162009c9157845162009c94565b60205b905060005b8181101562008aa25762009caf8160086200ac21565b8662009cbc83886200a796565b8151811062009ccf5762009ccf6200a8ce565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c92909217918062009d09816200a9f0565b91505062009c99565b610b08806200ad8283390190565b610bfd806200b88a83390190565b610c18806200c48783390190565b6145c5806200d09f83390190565b610f1f806201166483390190565b616265806201258383390190565b61091780620187e883390190565b614d3f80620190ff83390190565b612c13806201de3e83390190565b508054600082559060005260206000209081019062009db0919062009db3565b50565b5b8082111562009dca576000815560010162009db4565b5090565b60006020828403121562009de157600080fd5b81356001600160e01b0319811681146200847157600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562009e3d5783516001600160a01b03168352928401929184019160010162009e16565b50909695505050505050565b60005b8381101562009e6657818101518382015260200162009e4c565b50506000910152565b6000815180845262009e8981602086016020860162009e49565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562009f5357603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562009f3c57605f1989850301835262009f2984865162009e6f565b948e01949350918d019160010162009f0a565b505050978a01979450509188019160010162009ec4565b50919a9950505050505050505050565b803560ff81168114620078c057600080fd5b6000806040838503121562009f8957600080fd5b62009f948362009f63565b915062009fa46020840162009f63565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200a05557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156200a03f5783516001600160e01b0319168252928b019260019290920191908b01906200a013565b50978a0197955050509187019160010162009fd5565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200a0bd57603f198886030184526200a0aa85835162009e6f565b945092850192908501906001016200a08b565b5092979650505050505050565b62ffffff8116811462009db057600080fd5b6000806000606084860312156200a0f257600080fd5b83356200a0ff816200a0ca565b9250602084013591506200a1166040850162009f63565b90509250925092565b6001600160a01b038116811462009db057600080fd5b600080600080600080600080610100898b0312156200a15357600080fd5b88356200a160816200a11f565b975060208901356200a172816200a11f565b965060408901356200a184816200a11f565b955060608901356200a196816200a0ca565b94506080890135935060a089013592506200a1b460c08a0162009f63565b91506200a1c460e08a0162009f63565b90509295985092959890939650565b61ffff8116811462009db057600080fd5b6000602082840312156200a1f757600080fd5b813562008471816200a1d3565b600080600080600080600060e0888a0312156200a22057600080fd5b87356200a22d816200a11f565b965060208801356200a23f816200a11f565b955060408801356200a251816200a11f565b945060608801356200a263816200a0ca565b9350608088013592506200a27a60a0890162009f63565b91506200a28a60c0890162009f63565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b80518015158114620078c057600080fd5b6000608082840312156200a2d257600080fd5b6040516080810181811067ffffffffffffffff821117156200a2f8576200a2f86200a298565b60405282516200a308816200a1d3565b815260208301516200a31a816200a11f565b60208201526200a32d604084016200a2ae565b60408201526200a340606084016200a2ae565b60608201529392505050565b6000602082840312156200a35f57600080fd5b815162008471816200a0ca565b634e487b7160e01b600052601160045260246000fd5b62ffffff8181168382160190808211156200837857620083786200a36c565b6000602082840312156200a3b457600080fd5b5051919050565b6000602082840312156200a3ce57600080fd5b815162008471816200a11f565b600081518084526020808501945080840160005b838110156200a40d578151875295820195908201906001016200a3ef565b509495945050505050565b602081526200a4336020820183516001600160a01b03169052565b600060208301516200a45060408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e061014081818601526200a4c16102008601846200a3db565b9250808601519050601f196101608187860301818801526200a4e485846200a3db565b9450808801519250506101808187860301818801526200a50585846200a3db565b945080880151925050506101a06200a527818701836001600160a01b03169052565b86015190506101c06200a544868201836001600160a01b03169052565b959095015193019290925250919050565b600082601f8301126200a56757600080fd5b8151602067ffffffffffffffff808311156200a587576200a5876200a298565b8260051b604051601f19603f830116810181811084821117156200a5af576200a5af6200a298565b6040529384528581018301938381019250878511156200a5ce57600080fd5b83870191505b848210156200a5ef578151835291830191908301906200a5d4565b979650505050505050565b60008060008060008060c087890312156200a61457600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200a64957600080fd5b6200a6578a838b016200a555565b935060a08901519150808211156200a66e57600080fd5b506200a67d89828a016200a555565b9150509295509295509295565b600181811c908216806200a69f57607f821691505b6020821081036200a6c057634e487b7160e01b600052602260045260246000fd5b50919050565b80516001600160801b0381168114620078c057600080fd5b6000806000606084860312156200a6f457600080fd5b6200a6ff846200a6c6565b92506200a70f602085016200a6c6565b91506200a116604085016200a6c6565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b03808416806200a752576200a7526200a71f565b92169190910492915050565b6001600160801b038181168382160190808211156200837857620083786200a36c565b60208152600062008471602083018462009e6f565b8082018082111562002f795762002f796200a36c565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b838110156200a40d5781516001600160a01b0316875295820195908201906001016200a7d6565b60008151606084526200a81460608501826200a3db565b6020848101518683038783015280518084529082019350909160009190830190825b818110156200a871578551600281106200a85e57634e487b7160e01b85526021600452602485fd5b835294840194918401916001016200a836565b50506040860151935086810360408801526200a5ef81856200a7c2565b6001600160801b03851681526080602082015260006200a8b260808301866200a7fd565b6001600160a01b03949094166040830152506060015292915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111562002f795762002f796200a36c565b60006001600160801b03808816835280871660208401525060a060408301526200a92860a08301866200a7fd565b6001600160a01b0394909416606083015250608001529392505050565b60ff818116838216019081111562002f795762002f796200a36c565b60ff828116828216039081111562002f795762002f796200a36c565b6000602082840312156200a99057600080fd5b815167ffffffffffffffff8111156200a9a857600080fd5b62007927848285016200a555565b6001600160801b038281168282160390808211156200837857620083786200a36c565b6000826200a9eb576200a9eb6200a71f565b500490565b6000600182016200aa05576200aa056200a36c565b5060010190565b6000602082840312156200aa1f57600080fd5b62008471826200a2ae565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156200aa77578551835294830194918301916001016200aa59565b5050809450505080851660408501525050949350505050565b6000806000606084860312156200aaa657600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156200aacc57600080fd5b6200aada868287016200a555565b9150509250925092565b600080600080600080600080610100898b0312156200ab0257600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200a1c460e08a016200a2ae565b60006001600160a01b038087168352808616602084015250608060408301526200ab6c60808301856200a3db565b82810360608401526200a5ef81856200a3db565b6001600160a01b038316815260406020820152600062007927604083018462009e6f565b8381528260208201526060604082015260006200495b606083018462009e6f565b600082516200abd981846020870162009e49565b9190910192915050565b600062ffffff808416806200abfc576200abfc6200a71f565b92169190910692915050565b600062ffffff808416806200a752576200a7526200a71f565b808202811582820484141762002f795762002f796200a36c565b62ffffff8181168382160280821691908281146200ac5d576200ac5d6200a36c565b505092915050565b62ffffff8281168282160390808211156200837857620083786200a36c565b81810360008312801583831316838312821617156200837857620083786200a36c565b6001600160e01b03198316815281516000906200accc81600485016020870162009e49565b919091016004019392505050565b825160009082906020808701845b838110156200ad06578151855293820193908201906001016200ace8565b5050948252509092019392505050565b600080604083850312156200ad2a57600080fd5b825167ffffffffffffffff808211156200ad4357600080fd5b6200ad51868387016200a555565b935060208501519150808211156200ad6857600080fd5b506200ad77858286016200a555565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212202ab795b0ce94f91a024b1b71ac52b4e387b166615116741de962b87d1ded9a1864736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea264697066735822122060af1bf6f178dcc33e2d7624fae6c8097c290090aaff055f985e68230f892cec64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea2646970667358221220904429f87dd1e708f131c5e5a2ef37f95e3cc0521c43a457c11512002564e8e164736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6144df80620000e66000396000f3fe60806040523480156200001157600080fd5b50600436106200033d5760003560e01c8063704037bd11620001bd578063b03847811162000101578063e30c397811620000a3578063e92d0d5d116200007a578063e92d0d5d146200077a578063f2fde38b1462000791578063fd90c2be14620007a857600080fd5b8063e30c39781462000731578063e63ab1e9146200073b578063e74b981b146200076357600080fd5b8063d547741f11620000d8578063d547741f14620006ec578063ddbfd9411462000703578063e203a31f146200071a57600080fd5b8063b03847811462000697578063be20309414620006ae578063c1b931be14620006c557600080fd5b80638ce9aa1c116200016b578063a217fddf1162000142578063a217fddf1462000627578063aabc4b3c1462000630578063af371065146200068557600080fd5b80638ce9aa1c14620005f75780638da5cb5b146200060657806391d14854146200061057600080fd5b806379ba509711620001a057806379ba509714620005cc5780637daf5d6614620005d657806380c5061e14620005ed57600080fd5b8063704037bd146200059c578063715018a614620005c257600080fd5b80633a2f1a9111620002855780635a44092311620002335780636622e0d7116200020a5780636622e0d7146200055757806369d56ea3146200057d578063701ab8c1146200059457600080fd5b80635a440923146200051f5780635b35875c1462000536578063659ac74b146200054057600080fd5b80634ccb20c011620002685780634ccb20c014620004ed5780634cd161d314620004ff5780634e937c3a146200051657600080fd5b80633a2f1a9114620004bf5780633c78a94114620004d657600080fd5b8063248a9ca311620002ef5780632f2ff15d11620002c65780632f2ff15d146200047a57806336568abe1462000491578063379ee80314620004a857600080fd5b8063248a9ca3146200040757806327721842146200044c5780632cc06b8c146200046357600080fd5b80630752092b11620003245780630752092b1462000387578063093ff76914620003b75780631af5bacc14620003d057600080fd5b806301ffc9a714620003425780630282c9c1146200036e575b600080fd5b620003596200035336600462002e46565b620007b1565b60405190151581526020015b60405180910390f35b62000378620007e9565b60405162000365919062002e72565b6200039e6200039836600462002eb8565b620008d9565b6040516001600160a01b03909116815260200162000365565b620003ce620003c836600462002f0f565b620008e8565b005b620003f87fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000365565b620003f86200041836600462002eb8565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b620003596200045d36600462002fe2565b620009f5565b620003ce6200047436600462003002565b62000a04565b620003ce6200048b36600462003050565b62000a57565b620003ce620004a236600462003050565b62000a9f565b620003ce620004b936600462003094565b62000ada565b620003ce620004d03660046200314f565b62000c01565b620003ce620004e736600462002fe2565b62000cb9565b6000546001600160a01b03166200039e565b620003ce620005103660046200320b565b62000d1b565b600354620003f8565b620003ce6200053036600462002fe2565b62000df3565b6200037862000e6b565b6200039e6200055136600462003243565b62000e7e565b6200056e62000568366004620032a4565b6200140d565b604051620003659190620032d7565b620003ce6200058e3660046200334e565b620015b8565b6001620003f8565b620005b3620005ad366004620033a4565b62001765565b604051620003659190620033ea565b620003ce6200179e565b620003ce620017b6565b6200039e620005e736600462002eb8565b62001804565b620003f862001837565b67016345785d8a0000620003f8565b6200039e62001845565b620003596200062136600462003050565b6200187a565b620003f8600081565b620006476200064136600462002eb8565b620018f5565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000365565b6002546001600160a01b03166200039e565b620003ce620006a836600462002fe2565b620019ca565b620003ce620006bf36600462003427565b62001b14565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620003f8565b620003ce620006fd36600462003050565b62001ce4565b620003ce6200071436600462002fe2565b62001d2c565b620003ce6200072b36600462003481565b62001da4565b6200039e62001e16565b620003f87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b620003ce6200077436600462002fe2565b62001e40565b620003ce6200078b36600462002eb8565b62001e55565b620003ce620007a236600462002fe2565b62001eff565b600154620003f8565b60006001600160e01b03198216637965db0b60e01b1480620007e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007f9600562001f88565b90508015620008d5578067ffffffffffffffff8111156200081e576200081e6200349f565b60405190808252806020026020018201604052801562000848578160200160208202803683370190505b5091506000805b82811015620008c5576000806200086860058462001f95565b9092509050620008788162001fb3565b15620008af5781868581518110620008945762000894620034b5565b602090810291909101015283620008ab81620034e1565b9450505b505080620008bd90620034e1565b90506200084f565b5081811015620008d3578083525b505b5090565b6000620007e360088362001fc0565b620008f262001fce565b6000620009058b8b8b61ffff1662002004565b6020015190506001600160a01b038116620009555760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009cf57600080fd5b505af1158015620009e4573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007e3600883620020b0565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a3081620020d3565b6040805160008082526020820190925262000a5191869186918691620020df565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a9381620020d3565b62000a51838362002233565b6001600160a01b038116331462000ac95760405163334bd91960e11b815260040160405180910390fd5b62000ad5828262002260565b505050565b62000ae462001fce565b60018961ffff16101562000b1257604051634f958e7160e01b815261ffff8a1660048201526024016200094c565b600062000b26818a8a8a8a8a8a8a620022fd565b9050811562000b415762000b3e81600160ff62002402565b90505b62000b53600561ffff8c16836200242c565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c2d81620020d3565b6001600160a01b038416158062000c4c5750836001600160a01b031916155b1562000c6b5760405163d43a15d160e01b815260040160405180910390fd5b62000cb08787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620020df92505050565b50505050505050565b62000cc362001fce565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cff57600080fd5b505af115801562000d14573d6000803e3d6000fd5b5050505050565b62000d2562001fce565b62000d36600561ffff84166200243b565b62000d5b57604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000d6e600561ffff851662002449565b905081151560ff82901c15150362000d99576040516311be38db60e11b815260040160405180910390fd5b62000dba61ffff841662000db0838560ff62002402565b600591906200242c565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dfd62001fce565b62000e0a60088262002457565b62000e34576040516303ce0ad960e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e7960056200246e565b905090565b600062000e91600561ffff84166200243b565b62000eb657604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000ec9600561ffff851662002449565b9050600062000ed762001845565b6001600160a01b0316336001600160a01b031614905062000ef88262001fb3565b15801562000f04575080155b1562000f30576040516304fc2fe760e11b815233600482015261ffff851660248201526044016200094c565b62000f3d600887620020b0565b62000f6757604051638e888ef360e01b81526001600160a01b03871660048201526024016200094c565b856001600160a01b0316876001600160a01b03160362000fa657604051632f9b185360e01b81526001600160a01b03881660048201526024016200094c565b62000fb285856200247d565b5060008062000fc28989620024c3565b90925090506001600160a01b03821662000fef57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010665760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff871660448201526064016200094c565b6002546001600160a01b03168062001091576040516328b4fcf960e21b815260040160405180910390fd5b60006200109e86620024ed565b620010a987620024fa565b620010b4886200250b565b620010bf896200251c565b620010ca8a6200252d565b620010d58b6200253f565b620010e08c62002550565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e4820152908a166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b179052600b5490519192506001600160a01b0316908c908c908b908590620011919062002e38565b620011a195949392919062003545565b604051809103906000f080158015620011be573d6000803e3d6000fd5b509650505060405180608001604052808761ffff168152602001866001600160a01b0316815260200184151581526020016000151581525060046000846001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008861ffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160000160166101000a81548160ff02191690831515021790555060608201518160000160176101000a81548160ff0219169083151502179055509050506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506200138f8661ffff16600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b031681526020019081526020016000206200256290919063ffffffff16565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff886001600380549050620013df919062003590565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200141e8585620024c3565b6001600160a01b038083166000908152600a602090815260408083209385168352929052908120929450909250620014568262002570565b90508015620015ae578067ffffffffffffffff8111156200147b576200147b6200349f565b604051908082528060200260200182016040528015620014cf57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816200149a5790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620015ab5760006200151c62001516868462001fc0565b6200257b565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620015965762001596620034b5565b602090810291909101015250600101620014fb565b50505b5050505092915050565b620015c262001fce565b600080620015d18686620024c3565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b90920490911615156060830152929450909250906200168d5760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff861660448201526064016200094c565b8315158160600151151503620016b557604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff90911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200175490871515815260200190565b60405180910390a250505050505050565b6040805160808101825260008082526020820181905291810182905260608101919091526200179684848462002004565b949350505050565b620017a862001fce565b620017b46000620025a6565b565b3380620017c262001e16565b6001600160a01b031614620017f65760405163118cdaa760e01b81526001600160a01b03821660048201526024016200094c565b6200180181620025a6565b50565b6000600382815481106200181c576200181c620034b5565b6000918252602090912001546001600160a01b031692915050565b600062000e79600862002570565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620018a8576200188c62001845565b6001600160a01b0316826001600160a01b0316149050620007e3565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200190b60058a6200243b565b6200192d57604051637d9160bf60e11b8152600481018a90526024016200094c565b60006200193c60058b62002449565b90506200194981620024ed565b61ffff1698506200195a81620024fa565b61ffff1697506200196b816200250b565b61ffff1696506200197c816200251c565b61ffff1695506200198d816200252d565b62ffffff1694506200199f816200253f565b61ffff169350620019b08162002550565b62ffffff16925060ff81901c915050919395975091939597565b620019d462001fce565b306001600160a01b0316816001600160a01b03166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001a1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a439190620035a6565b6001600160a01b03161462001a7757604051630a3e70af60e11b81526001600160a01b03821660048201526024016200094c565b6002546001600160a01b03908116908216810362001ab457604051630ded3b9560e31b81526001600160a01b03831660048201526024016200094c565b600280546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff1660008115801562001b605750825b905060008267ffffffffffffffff16600114801562001b7e5750303b155b90508115801562001b8d575080155b1562001bac5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831562001be157845468ff00000000000000001916680100000000000000001785555b62001bec88620025e4565b67016345785d8a000087111562001c2857604051635e8988c160e01b81526004810188905267016345785d8a000060248201526044016200094c565b62001c3389620025f9565b6001879055600b80546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001cd957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001d2081620020d3565b62000a51838362002260565b62001d3662001fce565b62001d43600882620026bb565b62001d6d57604051638e888ef360e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001dae62001fce565b62001dbf600561ffff8316620026d2565b62001de457604051637d9160bf60e11b815261ffff821660048201526024016200094c565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006200186a565b62001e4a62001fce565b6200180181620025f9565b62001e5f62001fce565b60015481810362001e8757604051631baa31e960e21b8152600481018390526024016200094c565b67016345785d8a000082111562001ec357604051635e8988c160e01b81526004810183905267016345785d8a000060248201526044016200094c565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910162001b08565b62001f0962001fce565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001f4f62001845565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007e382620026e0565b600080808062001fa68686620026ed565b9097909650945050505050565b600060ff82901c620007e3565b6000620018ee83836200271a565b3362001fd962001845565b6001600160a01b031614620017b45760405163118cdaa760e01b81523360048201526024016200094c565b604080516080810182526000808252602082018190529181018290526060810191909152620020348484620024c3565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620018ee565b62001801813362002747565b6000620020f286868661ffff1662002004565b6020015190506001600160a01b0381166200213e5760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff851660448201526064016200094c565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200217e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a49190620035c6565b03620021c75760405163b70cd0db60e01b8152600481018490526024016200094c565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d90620021f79086908690600401620035e0565b600060405180830381600087803b1580156200221257600080fd5b505af115801562002227573d6000803e3d6000fd5b50505050505050505050565b6000826200225457604051633e3253cf60e11b815260040160405180910390fd5b620018ee838362002784565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200228f84846200187a565b15620022f2576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007e3565b6000915050620007e3565b60008561ffff168761ffff1611806200231b5750610fff8661ffff16115b806200232c57506127108561ffff16115b806200233d57506109c48361ffff16115b80620023505750620fffff8262ffffff16115b156200236f57604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620017968484620024175760006200241a565b60015b600180861b19929092169116841b1790565b60006200179684848462002836565b6000620018ee838362002855565b6000620018ee838362002863565b6000620018ee836001600160a01b038416620028af565b60606000620018ee8362002901565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620024ba82826200290e565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620024e5579192915b509192909150565b600061ffff8216620007e3565b6000620007e38260101c610fff1690565b6000620007e382601c1c610fff1690565b6000620007e38260281c613fff1690565b6000620007e38260361c62ffffff1690565b6000620007e382604e1c613fff1690565b6000620007e382605c1c620fffff1690565b6000620018ee8383620028af565b6000620007e3825490565b8061ffff81168114620025a1576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620025e08262002b96565b5050565b620025ee62002c07565b620018018162002c56565b6001600160a01b0381166200262157604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200266257600054604051634fcea97160e01b81526001600160a01b0390911660048201526024016200094c565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001b08565b6000620018ee836001600160a01b03841662002c8c565b6000620018ee838362002d85565b6000620007e38262002570565b60008080620026fd858562001fc0565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620027345762002734620034b5565b9060005260206000200154905092915050565b6200275382826200187a565b620025e05760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016200094c565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800620027b384846200187a565b620022f2576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620027eb3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007e3565b6000828152600284016020526040812082905562001796848462002562565b6000620018ee838362002da4565b6000818152600283016020526040812054801580156200288c57506200288a848462002855565b155b15620018ee5760405163015ab34360e11b8152600481018490526024016200094c565b6000818152600183016020526040812054620028f857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007e3565b506000620007e3565b6060620007e38262002dbd565b6000806000836000036200292c5750600160801b9150620007e39050565b508260008112156200293f579015906000035b6210000081101562002b4e57600160801b9250846fffffffffffffffffffffffffffffffff8111156200297457911591600019045b6001821615620029865792830260801c925b800260801c60028216156200299d5792830260801c925b800260801c6004821615620029b45792830260801c925b800260801c6008821615620029cb5792830260801c925b800260801c6010821615620029e25792830260801c925b800260801c6020821615620029f95792830260801c925b800260801c604082161562002a105792830260801c925b8002608090811c9082161562002a285792830260801c925b800260801c61010082161562002a405792830260801c925b800260801c61020082161562002a585792830260801c925b800260801c61040082161562002a705792830260801c925b800260801c61080082161562002a885792830260801c925b800260801c61100082161562002aa05792830260801c925b800260801c61200082161562002ab85792830260801c925b800260801c61400082161562002ad05792830260801c925b800260801c61800082161562002ae85792830260801c925b800260801c6201000082161562002b015792830260801c925b800260801c6202000082161562002b1a5792830260801c925b800260801c6204000082161562002b335792830260801c925b800260801c6208000082161562002b4c5792830260801c925b505b8260000362002b7b57604051631dba598d60e11b815260048101869052602481018590526044016200094c565b8162002b885782620024ba565b620024ba83600019620035fb565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620017b457604051631afcd79f60e31b815260040160405180910390fd5b62002c6062002c07565b6001600160a01b038116620017f657604051631e4fbdf760e01b8152600060048201526024016200094c565b60008181526001830160205260408120548015620022f257600062002cb360018362003590565b855490915060009062002cc99060019062003590565b905080821462002d3557600086600001828154811062002ced5762002ced620034b5565b906000526020600020015490508087600001848154811062002d135762002d13620034b5565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002d495762002d496200361e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007e3565b60008181526002830160205260408120819055620018ee838362002dcc565b60008181526001830160205260408120541515620018ee565b60606000620018ee8362002dda565b6000620018ee838362002c8c565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002e2c57602002820191906000526020600020905b81548152602001906001019080831162002e17575b50505050509050919050565b610e75806200363583390190565b60006020828403121562002e5957600080fd5b81356001600160e01b031981168114620018ee57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002eac5783518352928401929184019160010162002e8e565b50909695505050505050565b60006020828403121562002ecb57600080fd5b5035919050565b6001600160a01b03811681146200180157600080fd5b803561ffff81168114620025a157600080fd5b803562ffffff81168114620025a157600080fd5b6000806000806000806000806000806101408b8d03121562002f3057600080fd5b8a3562002f3d8162002ed2565b995060208b013562002f4f8162002ed2565b985062002f5f60408c0162002ee8565b975062002f6f60608c0162002ee8565b965062002f7f60808c0162002ee8565b955062002f8f60a08c0162002ee8565b945062002f9f60c08c0162002ee8565b935062002faf60e08c0162002efb565b925062002fc06101008c0162002ee8565b915062002fd16101208c0162002efb565b90509295989b9194979a5092959850565b60006020828403121562002ff557600080fd5b8135620018ee8162002ed2565b6000806000606084860312156200301857600080fd5b8335620030258162002ed2565b92506020840135620030378162002ed2565b9150620030476040850162002ee8565b90509250925092565b600080604083850312156200306457600080fd5b823591506020830135620030788162002ed2565b809150509250929050565b80358015158114620025a157600080fd5b60008060008060008060008060006101208a8c031215620030b457600080fd5b620030bf8a62002ee8565b9850620030cf60208b0162002ee8565b9750620030df60408b0162002ee8565b9650620030ef60608b0162002ee8565b9550620030ff60808b0162002ee8565b94506200310f60a08b0162002efb565b93506200311f60c08b0162002ee8565b92506200312f60e08b0162002efb565b9150620031406101008b0162003083565b90509295985092959850929598565b60008060008060008060a087890312156200316957600080fd5b8635620031768162002ed2565b95506020870135620031888162002ed2565b9450620031986040880162002ee8565b935060608701359250608087013567ffffffffffffffff80821115620031bd57600080fd5b818901915089601f830112620031d257600080fd5b813581811115620031e257600080fd5b8a6020828501011115620031f557600080fd5b6020830194508093505050509295509295509295565b600080604083850312156200321f57600080fd5b6200322a8362002ee8565b91506200323a6020840162003083565b90509250929050565b600080600080608085870312156200325a57600080fd5b8435620032678162002ed2565b93506020850135620032798162002ed2565b9250620032896040860162002efb565b9150620032996060860162002ee8565b905092959194509250565b60008060408385031215620032b857600080fd5b8235620032c58162002ed2565b91506020830135620030788162002ed2565b6020808252825182820181905260009190848201906040850190845b8181101562002eac576200333a83855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620032f3565b600080600080608085870312156200336557600080fd5b8435620033728162002ed2565b93506020850135620033848162002ed2565b9250620033946040860162002ee8565b9150620032996060860162003083565b600080600060608486031215620033ba57600080fd5b8335620033c78162002ed2565b92506020840135620033d98162002ed2565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007e3565b600080600080608085870312156200343e57600080fd5b84356200344b8162002ed2565b935060208501356200345d8162002ed2565b9250604085013591506060850135620034768162002ed2565b939692955090935050565b6000602082840312156200349457600080fd5b620018ee8262002ee8565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620034f657620034f6620034cb565b5060010190565b6000815180845260005b81811015620035255760208185018101518683018201520162003507565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200358560a0830184620034fd565b979650505050505050565b81810381811115620007e357620007e3620034cb565b600060208284031215620035b957600080fd5b8151620018ee8162002ed2565b600060208284031215620035d957600080fd5b5051919050565b828152604060208201526000620017966040830184620034fd565b6000826200361957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a060405260405162000e7538038062000e758339810160408190526200002691620006b4565b6040805160208101909152600081528590620000438282620002cb565b506001600160a01b031660805260006200007f60017f73ef95b1b141b4aeb11976757a225324c423bf4634f4361553b9b059a82050bb6200075d565b6040516020016200009291815260200190565b60408051601f19818403018152919052805160209091012090506000620000db60017f039c6157caeca9b57df712b1365b48c637c526ae0a75b2c95cd3622e6ffda4fd6200075d565b604051602001620000ee91815260200190565b60408051601f198184030181529190528051602090910120905060006200013760017fd1a1c4c8365fed7323947e7cb6a7be46aba18d67bc4a4c5418b50b8bbf5a31856200075d565b6040516020016200014a91815260200190565b6040516020818303038152906040528051906020012090506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620001a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001cd91908101906200077f565b90506000876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000210573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200023a91908101906200077f565b9050818160405160200162000251929190620007d4565b60405160208183030381529060405260009081620002709190620008cd565b5081816040516020016200028692919062000999565b60405160208183030381529060405260019081620002a59190620008cd565b50888555878455868355620002bb8a87620002cb565b5050505050505050505062000a25565b620002d68262000395565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a2805115620003875762000382826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037b9190620009e9565b82620004ae565b505050565b620003916200052d565b5050565b806001600160a01b03163b600003620003d157604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156200044e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004749190620009e9565b9050806001600160a01b03163b6000036200039157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401620003c8565b6060600080846001600160a01b031684604051620004cd919062000a07565b600060405180830381855af49150503d80600081146200050a576040519150601f19603f3d011682016040523d82523d6000602084013e6200050f565b606091505b509092509050620005228583836200054f565b925050505b92915050565b34156200054d5760405163b398979f60e01b815260040160405180910390fd5b565b60608262000568576200056282620005b5565b620005ae565b81511580156200058057506001600160a01b0384163b155b15620005ab57604051639996b31560e01b81526001600160a01b0385166004820152602401620003c8565b50805b9392505050565b805115620005c65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b0381168114620005f757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200062f57818101518382015260200162000615565b50506000910152565b60006001600160401b0380841115620006555762000655620005fc565b604051601f8501601f19908116603f01168101908282118183101715620006805762000680620005fc565b816040528093508581528686860111156200069a57600080fd5b620006aa86602083018762000612565b5050509392505050565b600080600080600060a08688031215620006cd57600080fd5b620006d886620005df565b9450620006e860208701620005df565b9350620006f860408701620005df565b9250606086015161ffff811681146200071057600080fd5b60808701519092506001600160401b038111156200072d57600080fd5b8601601f810188136200073f57600080fd5b620007508882516020840162000638565b9150509295509295909350565b818103818111156200052757634e487b7160e01b600052601160045260246000fd5b6000602082840312156200079257600080fd5b81516001600160401b03811115620007a957600080fd5b8201601f81018413620007bb57600080fd5b620007cc8482516020840162000638565b949350505050565b7f4c697175696469747920426f6f6b20546f6b656e2000000000000000000000008152600083516200080e81601585016020880162000612565b6201016960ed1b60159184019182015283516200083381601884016020880162000612565b01601801949350505050565b600181811c908216806200085457607f821691505b6020821081036200087557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038257600081815260208120601f850160051c81016020861015620008a45750805b601f850160051c820191505b81811015620008c557828155600101620008b0565b505050505050565b81516001600160401b03811115620008e957620008e9620005fc565b6200090181620008fa84546200083f565b846200087b565b602080601f831160018114620009395760008415620009205750858301515b600019600386901b1c1916600185901b178555620008c5565b600085815260208120601f198616915b828110156200096a5788860151825594840194600190910190840162000949565b5085821015620009895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b815260008351620009ba81600485016020880162000612565b602d60f81b6004918401918201528351620009dd81600584016020880162000612565b01600501949350505050565b600060208284031215620009fc57600080fd5b620005ae82620005df565b6000825162000a1b81846020870162000612565b9190910192915050565b60805161042d62000a48600039600081816101000152610281015261042d6000f3fe60806040526004361061005e5760003560e01c80632a905318116100435780632a905318146100af57806395d89b41146100c4578063a0a0ea39146100d957610065565b806306fdde031461006f578063188214001461009a57610065565b3661006557005b61006d61012a565b005b34801561007b57600080fd5b5061008461013c565b6040516100919190610332565b60405180910390f35b3480156100a657600080fd5b506100846101ce565b3480156100bb57600080fd5b5061008461025c565b3480156100d057600080fd5b50610084610269565b3480156100e557600080fd5b5060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610091565b61013a61013561027d565b61030e565b565b60606000805461014b90610380565b80601f016020809104026020016040519081016040528092919081815260200182805461017790610380565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b5050505050905090565b600080546101db90610380565b80601f016020809104026020016040519081016040528092919081815260200182805461020790610380565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b505050505081565b600180546101db90610380565b60606001805461014b90610380565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027891906103ba565b3660008037600080366000845af43d6000803e80801561032d573d6000f35b3d6000fd5b600060208083528351808285015260005b8181101561035f57858101830151858201604001528201610343565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061039457607f821691505b6020821081036103b457634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156103cc57600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146103f057600080fd5b939250505056fea2646970667358221220987a765db63dffe58db0b421e36dac7209a4678cbdd85305745ef29cb609b32e64736f6c63430008140033a264697066735822122001f42a57b243433f9731be9b4ce5461ee1f8ffcfc048fa48416b289b3310877f64736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220c751c6e74abc2f10fca1532fff04ba4d93d2bbfe6e6393c05ee2193b1b89eb0164736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea26469706673582212206248ef346204c1e1140ec416b1a65424d286422b9e1b51585d10e32eff8e290e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360c06040523480156200001157600080fd5b50604051620062653803806200626583398101604081905262000034916200010a565b6001600160a01b03811660a052306080526200004f62000056565b506200013c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001075780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011d57600080fd5b81516001600160a01b03811681146200013557600080fd5b9392505050565b60805160a0516160ee62000177600039600081816104fc0152818161141601528181612291015261376e0152600061046901526160ee6000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c806388cc58e411610160578063c9939f5e116100d8578063e584b6541161008c578063e985e9c511610071578063e985e9c5146106b0578063ea3446bf146106d3578063f5e29329146106e657600080fd5b8063e584b6541461068a578063e77366f81461069d57600080fd5b8063d8dfcea0116100bd578063d8dfcea014610672578063da10610c1461067a578063dbe65edc1461068257600080fd5b8063c9939f5e14610657578063d3b9fbe41461066a57600080fd5b8063a1af5b9a1161012f578063abcd783011610114578063abcd7830146105e7578063bd85b03914610624578063c7bd65861461064457600080fd5b8063a1af5b9a146105b8578063a41a01fb146105c057600080fd5b806388cc58e4146104fa5780638940a16a146105205780638d7024e51461055e57806395d89b411461059957600080fd5b806347973bff116101f357806355182894116101c25780636653851a116101a75780636653851a1461048b578063781a89151461049e5780637ca0de30146104a857600080fd5b8063551828941461041f5780635c60da1b1461046457600080fd5b806347973bff146103c65780634c7cffbd146103d95780634e1273f4146103ec57806353c059a01461040c57600080fd5b80630abe96881161024a57806317fad7fc1161022f57806317fad7fc1461037c5780631b057f6d14610391578063383d15c5146103a457600080fd5b80630abe96881461032b57806317f11ecc1461036157600080fd5b8062fdd58e1461027b57806305e8746d146102a157806306fdde03146102c15780630902f1ac14610303575b600080fd5b61028e610289366004615635565b6106f9565b6040519081526020015b60405180910390f35b6102a9610722565b6040516001600160a01b039091168152602001610298565b60408051808201909152601481527f4c697175696469747920426f6f6b20546f6b656e00000000000000000000000060208201525b6040516102989190615685565b61030b61073f565b604080516001600160801b03938416815292909116602083015201610298565b61030b6103393660046156cb565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610369610779565b60405161ffff9091168152602001610298565b61038f61038a36600461572b565b6107a3565b005b61038f61039f366004615802565b6107fe565b6103b76103b236600461584e565b61091d565b604051610298939291906158f1565b61038f6103d4366004615922565b610bbf565b61028e6103e73660046156cb565b610d1d565b6103ff6103fa3660046159b9565b610d56565b6040516102989190615a25565b61028e61041a366004615a48565b610e2c565b610427611180565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a001610298565b6102a97f000000000000000000000000000000000000000000000000000000000000000081565b61038f610499366004615a7f565b61122a565b620100095461028e565b6104b0611263565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e001610298565b7f00000000000000000000000000000000000000000000000000000000000000006102a9565b61053361052e366004615b05565b6112cb565b6040805167ffffffffffffffff94851681529284166020840152921691810191909152606001610298565b6105666113ca565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff9091166060820152608001610298565b60408051808201909152600381526213109560ea1b60208201526102f6565b61028e61140a565b6105d36105ce366004615b2c565b6115d0565b60405162ffffff9091168152602001610298565b6105fa6105f5366004615b56565b6115e3565b604080516001600160801b0394851681529284166020840152921691810191909152606001610298565b61028e610632366004615b8e565b60009081526001602052604090205490565b61038f610652366004615ba7565b611791565b6103ff61066536600461572b565b611827565b61038f611b5f565b61030b611bf3565b6102a9611c0e565b6105d3611c26565b61038f610698366004615bc2565b611c33565b6105fa6106ab366004615b56565b611c42565b6106c36106be366004615be0565b611d91565b6040519015158152602001610298565b61038f6106e1366004615bfe565b611d9d565b6105d36106f4366004615b8e565b61209b565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b600061073a6000805160206160798339815191525490565b905090565b60008061077061075c6005546004546120cf90919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b600061073a7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b6107ab612109565b62010009546107c08133898989898989612141565b6107ce8787878787876121e1565b6107e5600160008051602061609983398151915255565b6107f5813389898989898961223f565b50505050505050565b610806612109565b61080e612286565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108d75750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190615c4e565b6001600160a01b031614155b156108f557604051631b5de6eb60e01b815260040160405180910390fd5b6109008484846122cf565b50610918600160008051602061609983398151915255565b505050565b60008060608661092c816122f6565b610934612109565b60008690036109565760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561098357610983615c6b565b6040519080825280602002602001820160405280156109ac578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109cb576109cb615c6b565b6040519080825280602002602001820160405280156109f4578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a1357610a13615c6b565b604051908082528060200260200182016040528015610a3c578160200160208202803683370190505b509052600454909150610a76610a5e6000805160206160798339815191525490565b60008051602061605983398151915254839190612332565b9650610a8683338d8d8d8c612372565b610a938a8a898e866123bc565b9550610aa9610aa288886120cf565b82906124fa565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610af791908b90615c81565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b43929190615c81565b60405180910390a38515610b8357610b83610b6a6000805160206160798339815191525490565b600080516020616059833981519152548891908b612534565b610b9a600160008051602061609983398151915255565b610bb183338d8d8d610bac8d8d6120cf565b612592565b505050509450945094915050565b610bc7612286565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c125750825b905060008267ffffffffffffffff166001148015610c2f5750303b155b905081158015610c3d575080155b15610c5b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c8f57845468ff00000000000000001916680100000000000000001785555b610c976125d4565b610cc3610cb7610cb2886003546125e490919063ffffffff16565b612633565b8e8e8e8e8e8e8e612687565b8315610d0e57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b600061071c610d4a7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b62ffffff841690612817565b60608382610d64828261284e565b8567ffffffffffffffff811115610d7d57610d7d615c6b565b604051908082528060200260200182016040528015610da6578160200160208202803683370190505b50925060005b86811015610e2157610dfc888883818110610dc957610dc9615ca6565b9050602002016020810190610dde9190615cbc565b878784818110610df057610df0615ca6565b905060200201356106f9565b848281518110610e0e57610e0e615ca6565b6020908102919091010152600101610dac565b505050949350505050565b6000610e36612109565b6201000954600454600554600086610e6d57610e68610e616000805160206160598339815191525490565b849061286e565b610e8d565b610e8d610e866000805160206160798339815191525490565b84906128a3565b90506000819003610eb157604051637df801c760e01b815260040160405180910390fd5b86610ebf85338984866128d2565b610ec984836124fa565b6003549094506000610ef97fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b90506000610f0683612936565b9050610f128342612942565b92505b62ffffff8116600090815260066020526040902054610f358186156129b8565b61105957610f4384836129e7565b935060008080610f578488888b898e612a6f565b91945092509050821561105557610f6e89846120cf565b9850610f7a8d836124fa565b9c506000610f95610f8a89612c95565b839061ffff16612ca5565b90508015610fb657610fa78b826124fa565b9a50610fb384826120cf565b93505b610fca83610fc487876124fa565b906120cf565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca708887876110178e612d1b565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b600086900361106857506110b2565b60006110748684612d2c565b905062ffffff8116158061108c575062ffffff818116145b156110aa57604051631a6d7fb160e31b815260040160405180910390fd5b915050610f15565b60008990036110d45760405163439df85d60e11b815260040160405180910390fd5b6110de878a6120cf565b60045560058690556110f2600a8483612d4e565b92506110fe83826125e4565b600355831561112d576111286111206000805160206160598339815191525490565b8a908c612e69565b61114e565b61114e6111466000805160206160798339815191525490565b8a908c612ea9565b611165600160008051602061609983398151915255565b61117288338c878d612eba565b505050505050505092915050565b6003546078906000908190819081908161119982612f17565b905061ffff8116156112215760006111b2600a83612f27565b965090506111bf81612f85565b96506111ca81612f91565b94508464ffffffffff166000036111e057600095505b61ffff86161561121f576112118661ffff168361ffff168161120457611204615cd9565b600a916001910601612fb2565b905061121c81612f91565b93505b505b50509091929394565b611232612109565b61123a612286565b61124c60035488888888888888612687565b6107f5600160008051602061609983398151915255565b600080600080600080600080600354905061127d81612f85565b975061128881612fe2565b965061129381612ff2565b955061129e81613002565b94506112a981613012565b93506112b481612c95565b92506112bf81613023565b91505090919293949596565b600080600080600354905060006112e182612f17565b905061ffff811615806112fa5750428664ffffffffff16115b1561131157600080600094509450945050506113c3565b600061131f600a8389613034565b91985096509450905064ffffffffff80881690821610156113bf5761135561134684612936565b849064ffffffffff8a16613157565b925060006113638289615d05565b90508064ffffffffff1661137685612936565b62ffffff166113859190615d23565b61138f9088615d4f565b96508064ffffffffff166113a285612d1b565b62ffffff166113b19190615d23565b6113bb9087615d4f565b9550505b5050505b9193909250565b600080600080600060035490506113e081612d1b565b94506113eb8161316f565b93506113f681613180565b925061140181613191565b91505090919293565b6000611414612109565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114969190615c4e565b6001600160a01b0316336001600160a01b0316146114c757604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c6000611522826114ea5760006114ed565b60015b60ff166000856001600160801b03161161150857600061150b565b60015b60ff169060801b6001600160801b03919091161790565b905061152e84826120cf565b945084156115b257600581905560045461154890866120cf565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a26115b26115996000805160206160798339815191525490565b6000805160206160598339815191525487919033612534565b505050506115cd600160008051602061609983398151915255565b90565b60006115dc8383612d2c565b9392505050565b60035460009083908290816116167fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b9050600061162383612936565b905061162f8342612942565b92505b62ffffff81166000908152600660205260408120546116529089156131a4565b90506001600160801b0381161561173857600061167462ffffff841685612817565b90506000876001600160801b0316836001600160801b0316116116975782611699565b875b90506116a586856129e7565b955060008a6116c8576116c36001600160801b0383168460806131c4565b6116dd565b6116dd6001600160801b0383166080856131fa565b905060006116eb8888613230565b905060006117026001600160801b0384168361324f565b905061170e8184615d70565b611718908d615d70565b9b50611724848c615d90565b9a50611730818b615d70565b995050505050505b856001600160801b031660000361174f5750611787565b600061175b8984612d2c565b905062ffffff81161580611773575062ffffff818116145b1561177f575050611787565b915050611632565b5050509250925092565b611799612109565b60035460006117a782612f17565b90508061ffff166000036117c6575060016117c28282613298565b6003555b6117d2600a82856132e7565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a25050611824600160008051602061609983398151915255565b50565b6060863361183582826133d0565b61186a5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b611872612109565b85158061187f5750858414155b1561189d57604051633ab7870760e01b815260040160405180910390fd5b62010009546118b281338c8c8c8c8c8c61341c565b898767ffffffffffffffff8111156118cc576118cc615c6b565b6040519080825280602002602001820160405280156118f5578160200160208202803683370190505b5094506000805b89811015611a495760006119278c8c8481811061191b5761191b615ca6565b90506020020135613462565b905060008a8a8481811061193d5761193d615ca6565b9050602002013590508060000361196e57604051636996a92560e01b815262ffffff83166004820152602401611861565b62ffffff8216600081815260066020908152604080832054600190925290912054909161199d9088908561348d565b60006119aa83858461350e565b905060008190036119d55760405163fd44792960e01b815262ffffff86166004820152602401611861565b6119df83826120cf565b92508382036119f5576119f3600786613586565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611a2257611a22615ca6565b6020908102919091010152611a3787826124fa565b965085600101955050505050506118fc565b50600454611a5790826120cf565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611aa0908f908f908f908f90615dfb565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611aef93929190615e22565b60405180910390a3611b29611b106000805160206160798339815191525490565b600080516020616059833981519152548391908e612534565b611b40600160008051602061609983398151915255565b611b508333848e8e8e8e8e613628565b50505050509695505050505050565b611b67612109565b611b6f612286565b600354611b83611b7e82612633565b61366e565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611bb183613180565b611bba8461316f565b6040805162ffffff93841681529290911660208301520160405180910390a250611bf1600160008051602061609983398151915255565b565b60055460009081906001600160801b0381169060801c610770565b600061073a6000805160206160598339815191525490565b600061073a600354612936565b611c3e3383836136a3565b5050565b6000808080611c5a6001600160801b03871686613758565b6003549091506000611c8a7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b90506000611c9783612936565b9050611ca38342612942565b92505b62ffffff8116600090815260066020526040902054611cc6818a156129b8565b611d3357611cd484836129e7565b935060008080611ce88488888f898d612a6f565b919450925090508215611d2f57611cff88846120cf565b9750611d0c828d156131a4565b611d16908b615d70565b9950611d22818d6131a4565b611d2c908a615d70565b98505b5050505b6000859003611d425750611d7a565b6000611d4e8a84612d2c565b905062ffffff81161580611d66575062ffffff818116145b15611d72575050611d7a565b915050611ca6565b611d8484896131a4565b9650505050509250925092565b60006115dc83836133d0565b611da5612109565b6000839003611dc75760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611dda86613769565b9050611de883338989613871565b611e1a611e016000805160206160798339815191525490565b600080516020616059833981519152548891908a612534565b6000806001600160a01b038916631faa6b8760e01b33611e466000805160206160798339815191525490565b600080516020616059833981519152548c888d8d604051602401611e709796959493929190615e71565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611ec69190615eb2565b6000604051808303816000865af19150503d8060008114611f03576040519150601f19603f3d011682016040523d82523d6000602084013e611f08565b606091505b5091509150811580611f1c57508051602014155b80611f5a57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c281806020019051810190611f579190615ece565b14155b15611f7857604051634a57011360e01b815260040160405180910390fd5b6000611fac611f936000805160206160798339815191525490565b6000805160206160598339815191525460009190612332565b9050611fc2611fbb86866124fa565b82906138c6565b15611fe057604051630e3c717160e11b815260040160405180910390fd5b6000611fec82876120cf565b600483905560055490915061200190826124fa565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d9061203f90612936565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a3612081600160008051602061609983398151915255565b61208e87338d888561390a565b5050505050505050505050565b600061071c6120c87fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b8390613966565b808203828111806120eb57506001600160801b03808416908216115b1561071c5760405163e599af5560e01b815260040160405180910390fd5b60008051602061609983398151915280546001190161213b57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b75010000000000000000000000000000000000000000008816156121d7576121d7886379c8ccf760e01b898989898989896040516024016121889796959493929190615ee7565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526139ab565b5050505050505050565b85336121ed82826133d0565b61221d5760405163548f773d60e01b81526001600160a01b03808416600483015282166024820152604401611861565b6121d7888888888888613a0f565b600160008051602061609983398151915255565b75020000000000000000000000000000000000000000008816156121d7576121d7886367ddb27860e01b898989898989896040516024016121889796959493929190615ee7565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bf157604051632486085360e01b815260040160405180910390fd5b82156109185761091883634e430b5a60e01b85858560405160240161218893929190615f3d565b6001600160a01b038116158061231457506001600160a01b03811630145b15611824576040516345c210e760e11b815260040160405180910390fd5b600061236a84610fc461234485613b72565b61234d87613b72565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156123b4576123b486630d4abdb360e01b8787878787604051602401612188959493929190615f57565b505050505050565b6000806123e77fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b60035490915060006123f882612936565b905086935060005b888110156124ed576000806124368a8d8d8681811061242157612421615ca6565b90506020020135613be190919063ffffffff16565b91509150600080600061244c898886888c613c2a565b9194509250905061245d8a836120cf565b99508362ffffff168b60000151878151811061247b5761247b615ca6565b602002602001018181525050808b60200151878151811061249e5761249e615ca6565b602002602001018181525050828b6040015187815181106124c1576124c1615ca6565b6020026020010181815250506124dd8c8562ffffff1685613e38565b8560010195505050505050612400565b5050505095945050505050565b8181018281108061251657506001600160801b03808416908216105b1561071c576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c8115612566576125666001600160a01b038616846001600160801b038516613e85565b6001600160801b038116156123b4576123b46001600160a01b038516846001600160801b038416613e85565b742000000000000000000000000000000000000000008616156123b4576123b486637a51a4c660e01b8787878787604051602401612188959493929190615f57565b6125dc613ed6565b611bf1613f24565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b16176115dc565b60008061263f83612936565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b16176115dc565b61ffff871615801561269b575061ffff8616155b80156126a9575061ffff8516155b80156126b7575061ffff8416155b80156126c6575062ffffff8316155b80156126d4575061ffff8216155b80156126e3575062ffffff8116155b15612701576040516331375e0360e11b815260040160405180910390fd5b6127118888888888888888613f2c565b9750600061273d7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b9050600061274b8a84614045565b9050600061275982846140a3565b61276383856140e3565b61276d9190615f96565b905067016345785d8a0000811115612798576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff19016128458282614107565b95945050505050565b808214611c3e576040516340311ffd60e11b815260040160405180910390fd5b60008061287b8460801c90565b905061236a8161288a85613b72565b6128949190615d90565b6001600160801b031660801b90565b60006001600160801b03831661236a816128bc85613b72565b6128c69190615d90565b6001600160801b031690565b7401000000000000000000000000000000000000000085161561292f576040516001600160a01b0380861660248301528416604482015282151560648201526084810182905261292f90869063feee373560e01b9060a401612188565b5050505050565b600060e882901c61071c565b60008061294e84613191565b61295f9064ffffffffff1684615fa9565b905061296a84612fe2565b61ffff1681106129ae5761297d84612633565b935061298884612ff2565b61ffff1681106129a25761299d846000614367565b6129ab565b6129ab8461366e565b93505b61236a84846143d5565b6000816129d8576129c98360801c90565b6001600160801b0316156115dc565b50506001600160801b03161590565b6000806129f384613180565b62ffffff169050600080828562ffffff1611612a16578462ffffff168303612a1f565b828562ffffff16035b91506127108202612a2f8761316f565b62ffffff160190506000612a4287613023565b62ffffff169050808211612a565781612a58565b805b9150612a648783614045565b979650505050505050565b6000808080612a8362ffffff871689612817565b90506000612a928b89156131a4565b9050600088612abd57612ab8612ab36001600160801b0384168560806131c4565b61442e565b612ad5565b612ad5612ab36001600160801b0384166080866131fa565b90506000612ae38c8c613230565b90506000612afa6001600160801b0384168361324f565b9050612b068184615d70565b92506000612b148a8d6131a4565b9050600080856001600160801b0316836001600160801b031610612b3f575084915082905085612bb5565b612b526001600160801b03841686614458565b91506000612b608385615d90565b6001600160801b031690508e612b8457612b7f612ab38260808c61448f565b612b93565b612b93612ab3828b60806144b9565b9150876001600160801b0316826001600160801b03161115612bb3578791505b505b8d612bef57612bcd836001600160801b031660801b90565b6001600160801b038216612bea846001600160801b031660801b90565b612c17565b6001600160801b038316612c0c826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612c69612c6385610fc4888f6124fa90919063ffffffff16565b83614527565b1115612c885760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061071c82604e1c613fff1690565b6000816001600160801b0316600003612cc05750600061071c565b6127106001600160801b038316811015612ced57604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b600061071c8260701c620fffff1690565b600082612d4357612d3e600783614543565b6115dc565b6115dc60078361468f565b600080612d5a84612f17565b90508061ffff16600003612d7157839150506115dc565b6000612d7d8683612fb2565b90506000612d8a826147bf565b90506000612d97836147cb565b612da49060ff1683615fbc565b90508064ffffffffff16612db7426147da565b64ffffffffff161115612e5d576000806000612dfc8464ffffffffff164203612ddf8c612936565b612de88d612d1b565b612df28e8e614802565b8a93929190614832565b9250925092506000612e0d87612f85565b905064ffffffffff861642036078811115612e3d575096879006600101964295506000612e3a8c8a613298565b9b505b612e4b82868686858c614897565b97505050505050612e5d88858561493b565b50949695505050505050565b6000612e758460801c90565b90506001600160801b03811615612ea357612ea36001600160a01b038416836001600160801b038416613e85565b50505050565b60006001600160801b038416612e75565b7402000000000000000000000000000000000000000085161561292f576040516001600160a01b0380861660248301528416604482015282151560648201526084810182905261292f9086906353e8079b60e01b9060a401612188565b600061071c8260d81c61ffff1690565b600080612f348484612fb2565b9150612f3f82612f85565b90508061ffff168361ffff1614612f7e57612f62612f5d8583612fb2565b612f85565b90508061ffff168361ffff1611612f795780612f7b565b825b90505b9250929050565b600061ffff821661071c565b6000612f9c826147cb565b60ff16612fa8836147bf565b61071c9190615fbc565b600081612fbe81614968565b8361ffff60001985018116908110612fd857612fd8615ca6565b0154949350505050565b600061071c8260101c610fff1690565b600061071c82601c1c610fff1690565b600061071c8260281c613fff1690565b600061071c8260361c62ffffff1690565b600061071c82605c1c620fffff1690565b6000806000806000806130478989612f27565b909250905064ffffffffff871661307e8a613062848c615fda565b61ffff1661ffff811061307757613077615ca6565b0154612f91565b64ffffffffff1611156130a457604051631c4e7f9560e21b815260040160405180910390fd5b6130ad82612f91565b95508664ffffffffff168664ffffffffff16116130ef57856130ce8361498d565b6130d7846149a3565b6130e0856149b9565b9550955095509550505061314e565b8695506000806131018b8b8b866149cf565b9150915060008961311183612f91565b61311b9190615d05565b9050600061312884612f91565b613132908c615d05565b905061314084848484614b21565b919a50985096505050505050505b93509350935093565b60006131638483612942565b935061236a84846129e7565b600061071c8260841c620fffff1690565b600061071c8260981c62ffffff1690565b600061071c8260b01c64ffffffffff1690565b6000816131b557612d3e8360801c90565b6001600160801b0383166115dc565b60006131d18484846144b9565b9050600160ff83161b806131e7576131e7615cd9565b838509156115dc5761236a600182615f96565b600061320784848461448f565b9050818061321757613217615cd9565b600160ff85161b8509156115dc5761236a600182615f96565b60006115dc61323f84846140a3565b61324985856140e3565b0161442e565b60008161325b81614c85565b6001600160801b03808416670de0b6b3a7640000819003918291600019918816028201018161328c5761328c615cd9565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b16176115dc565b60006132f38484612fb2565b9050600061330082612f85565b90508261ffff168161ffff161061332a57604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff161461335b5761ffff8216156133545761334f8683612fb2565b61335d565b600061335d565b825b9050600061336a82612f85565b61ffff169050808661ffff16116133815780613387565b8561ffff165b905061ffff83165b8561ffff168110156133b95781888261ffff81106133af576133af615ca6565b015560010161338f565b506107f5878761ffff86811688189089161761493b565b6000816001600160a01b0316836001600160a01b031614806115dc5750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b744000000000000000000000000000000000000000008816156121d7576121d78863ea9db9d360e01b898989898989896040516024016121889796959493929190615ee7565b8062ffffff8116811461348857604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b0383166000908152602081815260408083208584529182905290912054828110156134ea57604051625b387760e31b81526001600160a01b03861660048201526024810185905260448101849052606401611861565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c828083156135415761353e612ab3886001600160801b03871689614cb7565b91505b6001600160801b0383161561356a57613567612ab3886001600160801b03861689614cb7565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461361c57600083815260028701602052604081208290558190036136105750600882901c6000818152600187810160205260408220805460ff87169290921b1990911690819055919082900361360e578654600160ff83161b191687555b505b6001935050505061071c565b50600095945050505050565b748000000000000000000000000000000000000000008816156121d7576121d78863fdc2725760e01b898989898989896040516024016121889796959493929190615ee7565b60008061367a83612d1b565b62ffffff169050600061368c84613002565b61ffff169050612710828202046128458582614367565b826136ad816122f6565b826001600160a01b0316846001600160a01b0316036136ea5760405163782ee70760e01b81526001600160a01b0385166004820152602401611861565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816131b557612d3e8360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156137ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137ee9190615ece565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff9061382790670de0b6b3a7640000908616850283015b0461442e565b9250613859670de0b6b3a764000082866001600160801b0316856001600160801b031602018161382157613821615cd9565b915050608081901b6001600160801b03831617612845565b74040000000000000000000000000000000000000000841615612ea3576040516001600160a01b0380851660248301528316604482015260648101829052612ea390859063505d903360e01b90608401612188565b60006001600160801b0383811690608085811c9185169085901c81841080612a645750806001600160801b0316836001600160801b03161094505050505092915050565b7408000000000000000000000000000000000000000085161561292f576040516001600160a01b03808616602483015284166044820152606481018390526084810182905261292f9086906360bed5f360e01b9060a401612188565b600061271061ffff60801b608084901b1604600160801b018161398882614cd7565b61399186614cd7565b61399b9190615ffb565b9050612845816280000001613462565b600080839050602083015160e01c602060008551602087016000865af192503d1515831516156139df573d6000803e3d6000fd5b8060005160e01c14601f3d1116831692505081612ea357604051636c93cb9b60e01b815260040160405180910390fd5b8281613a1b828261284e565b86613a25816122f6565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613b095760008a8a83818110613a6457613a64615ca6565b9050602002013590506000898984818110613a8157613a81615ca6565b600085815260208981526040909120549102929092013592505081811015613ade578e83836040516358b4690f60e01b8152600401611861939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613a48565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613b5d9493929190615dfb565b60405180910390a45050505050505050505050565b6040516370a0823160e01b815230600482015260009061071c906001600160a01b038416906370a0823190602401602060405180830381865afa158015613bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab39190615ece565b6000806000806000613bf287614de4565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613c51908b612817565b90506000613c708962ffffff1660009081526001602052604090205490565b9050613c7e83898484614e87565b909650945084935062ffffff808b16908a1603613db657613ca0878a42613157565b96506000613cb284898e89868c61500d565b90508015613db0576000613cd084613cca89856120cf565b90614527565b90506000613ceb613ce08b612c95565b849061ffff16612ca5565b90508015613d1157613cfd87826120cf565b600554909750613d0d90826124fa565b6005555b6000613d2b86613cca613d2487866120cf565b8a906124fa565b9050613d38838683614cb7565b9950613d46600a8c8f612d4e565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613da49392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b50613dc1565b613dc1858b8b615102565b851580613dcc575083155b15613df157604051634c98d35760e11b815262ffffff8a166004820152602401611861565b80600003613e0657613e0460078a615168565b505b613e1083856124fa565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b60008281526001602052604081208054839290613e56908490615f96565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612ea384826151f5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611bf157604051631afcd79f60e31b815260040160405180910390fd5b61222b613ed6565b60008561ffff168761ffff161180613f495750610fff8661ffff16115b80613f5957506127108561ffff16115b80613f6957506109c48361ffff16115b80613f7b5750620fffff8262ffffff16115b15613f9957604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff16111561407057604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b16176115dc565b6000806140af84613012565b62ffffff16905080156132915760008361ffff166140cc86612d1b565b62ffffff160290506064606382800284020161328c565b60008161ffff166140f384612f85565b61ffff16026402540be40002905092915050565b6000806000836000036141235750600160801b915061071c9050565b50826000811215614135579015906000035b6210000081101561432557600160801b9250846001600160801b0381111561415f57911591600019045b60018216156141705792830260801c925b800260801c60028216156141865792830260801c925b800260801c600482161561419c5792830260801c925b800260801c60088216156141b25792830260801c925b800260801c60108216156141c85792830260801c925b800260801c60208216156141de5792830260801c925b800260801c60408216156141f45792830260801c925b8002608090811c9082161561420b5792830260801c925b800260801c6101008216156142225792830260801c925b800260801c6102008216156142395792830260801c925b800260801c6104008216156142505792830260801c925b800260801c6108008216156142675792830260801c925b800260801c61100082161561427e5792830260801c925b800260801c6120008216156142955792830260801c925b800260801c6140008216156142ac5792830260801c925b800260801c6180008216156142c35792830260801c925b800260801c620100008216156142db5792830260801c925b800260801c620200008216156142f35792830260801c925b800260801c6204000082161561430b5792830260801c925b800260801c620800008216156143235792830260801c925b505b8260000361435057604051631dba598d60e11b81526004810186905260248101859052604401611861565b8161435b5782612845565b61284583600019616029565b6000620fffff8262ffffff16111561439257604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b16176115dc565b6000806143e1836147da565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b161761236a565b806001600160801b038116811461348857604051632f45db3d60e21b815260040160405180910390fd5b60008161446481614c85565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612d119087906001901b868585615265565b60008060006144c88686615311565b91509150816000146144de578360ff1682901c92505b801561451e57600160ff85161b811061450a57604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c612845828286615330565b60008061ffff600884901c1660ff8085169081146145985760008281526002870160205260408120549350614578848361539b565b905060001981146145965760089290921b909117925061071c915050565b505b5060ff80821690600883901c90821461461257600081815260018801602052604081205494506145c8858461539b565b9050600019811461461057600882901b8117600081815260028a016020526040902054955093506145f8856153aa565b60ff1660088560001c901b179550505050505061071c565b505b60ff818116925082146146825786549350600061462f858461539b565b905060001981146146805760008181526001890160205260409020549450905080614659856153aa565b60ff16600883901b17600081815260028a016020526040902054955093506145f8856153aa565b505b5060009695505050505050565b60008061ffff600884901c1660ff841680156146e257600082815260028701602052604081205493506146c28483615446565b905060001981146146e05760089290921b909117925061071c915050565b505b5060ff8116600882901c8115614741576000818152600188016020526040812054945061470f8584615446565b9050600019811461473f57600882901b8117600081815260028a016020526040902054955093506145f885615456565b505b60ff8116915081156147b05786549350600061475d8584615446565b905060001981146147ae576000818152600189016020526040902054945090508061478785615456565b60ff16600883901b17600081815260028a016020526040902054955093506145f885615456565b505b5062ffffff9695505050505050565b600060d882901c61071c565b600061071c8260d01c60ff1690565b8064ffffffffff81168114613488576040516350dbfc8760e11b815260040160405180910390fd5b60008061480e84612936565b90508062ffffff168362ffffff16116148295782810361236a565b90910392915050565b64ffffffffff841662ffffff8481168202918482168102918416026148568861498d565b6148609084615d4f565b925061486b886149a3565b6148759083615d4f565b9150614880886149b9565b61488a9082615d4f565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612a64565b8161494581614968565b818461ffff6000198601811690811061496057614960615ca6565b015550505050565b8061ffff166000036118245760405163944e113960e01b815260040160405180910390fd5b600061071c8260101c67ffffffffffffffff1690565b600061071c8260501c67ffffffffffffffff1690565b600061071c8260901c67ffffffffffffffff1690565b60008080806149df60018661603d565b61ffff16905060008060008961ffff1690505b838511614a9d5760006001614a078688615f96565b901c9050888183089a508b61ffff808d16908110614a2757614a27615ca6565b01549350614a3484612f91565b92508964ffffffffff168364ffffffffff161115614a5e57614a57600182615fa9565b9450614a97565b8964ffffffffff168364ffffffffff161015614a8657614a7f816001615f96565b9550614a97565b838497509750505050505050614b18565b506149f2565b8164ffffffffff168964ffffffffff161015614aee578961ffff16600003614ac3578799505b8a61ffff6000198c018116908110614add57614add615ca6565b015483965096505050505050614b18565b8760018b089950828b61ffff808d16908110614b0c57614b0c615ca6565b01549650965050505050505b94509492505050565b600080600080614b308861498d565b67ffffffffffffffff1690506000614b47896149a3565b67ffffffffffffffff1690506000614b5e8a6149b9565b67ffffffffffffffff1690508664ffffffffff16600003614b855791945092509050614c7b565b6000614b908a61498d565b67ffffffffffffffff1690506000614ba78b6149a3565b67ffffffffffffffff1690506000614bbe8c6149b9565b67ffffffffffffffff1690508a64ffffffffff16600003614be95791975095509350614c7b92505050565b6000614bff64ffffffffff808d16908e16615f96565b9050808b64ffffffffff1685028d64ffffffffff1689020181614c2457614c24615cd9565b049950808b64ffffffffff1684028d64ffffffffff1688020181614c4a57614c4a615cd9565b049850808b64ffffffffff1683028d64ffffffffff1687020181614c7057614c70615cd9565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b0316111561182457604051638630bc6b60e01b815260040160405180910390fd5b6000806000614cc68686615311565b91509150612d118686868585615265565b600081600103614cea5750607f19919050565b81600003614d0b5760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614d3357506001614d4e565b5060001982600160fe1b81614d4a57614d4a615cd9565b0492505b6000614d5d607f85901c615456565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114614dd9576f400000000000000000000000000000005b6000811315614dd757908002607f1c90600160801b8210614dcf579384019360019190911c905b60011d614da8565b505b50500260011b919050565b60008080614dfc8460581c67ffffffffffffffff1690565b9250614e128460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff841180614e4d5750670de0b6b3a76400008367ffffffffffffffff16115b80614e695750670de0b6b3a76400008267ffffffffffffffff16115b156113c357604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c82614ea5838389615330565b905080600003614ebf575060009350839250614b18915050565b6000614ecb8a89614527565b9050801580614ed8575086155b15614ef457614ee6826154f1565b899550955050505050614b18565b614eff828883614cb7565b95506000614f0e87838a615563565b905080831115614fad576000614f248285615fa9565b9050600160801b8110614f6557608081901c858111614f435780614f45565b855b9050614f518187615fa9565b9550614f61608082901b83615fa9565b9150505b898110614f99576000614f788b83616029565b9050868111614f875780614f89565b865b9050614f958188615fa9565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611614fdf614fd98d8d6124fa565b8b614527565b1115614ffe5760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b60008160000361501f57506000612d11565b6001600160801b038416608085901c60008061505161075c6150418d8b6124fa565b8861504c818c615f96565b61350e565b91509150836001600160801b0316826001600160801b031611156150b457600061509761507e8c8c613230565b6150888487615d90565b6001600160801b031690615580565b90506150ac816001600160801b031660801b90565b9550506150f4565b826001600160801b0316816001600160801b031611156150f45760006150e76150dd8c8c613230565b6150888588615d90565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff1610801561511e5750608083901b15155b8061514357508162ffffff168162ffffff1611801561514357506001600160801b0383115b156109185760405163227bd87160e21b815262ffffff82166004820152602401611861565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b811780821461361c576000838152600287016020526040812082905582900361361057600883901c6000818152600180890160205260408220805460ff88169290921b82179055935083900361360e578654600160ff83161b178755506001935050505061071c565b600080600052602060008351602085016000875af19050808015615236573d80156152295760016000511483169250615230565b843b151592505b50615246565b3d15615246573d6000803e3d6000fd5b50806109185760405163197138bd60e11b815260040160405180910390fd5b6000816000036152865783838161527e5761527e615cd9565b049050612845565b8382106152a6576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b6000831561536b57508083028184828161534c5761534c615cd9565b041461536b576040516363f1e01f60e01b815260040160405180910390fd5b82156115dc5760809290921b918201828110156115dc576040516363f1e01f60e01b815260040160405180910390fd5b60006115dc83600184016155c1565b60008160801b80156153be57608091508092505b8260401b905080156153d1579150604001815b8260201b905080156153e4579150602001815b8260101b905080156153f7579150601001815b8260081b9050801561540a579150600801815b8260041b9050801561541d579150600401815b8260021b90508015615430579150600201815b508160011b1561543e576001015b60ff03919050565b60006115dc8360001984016155ef565b60006001600160801b0382111561546f5750608090811c905b67ffffffffffffffff82111561548757604091821c91015b63ffffffff82111561549b57602091821c91015b61ffff8211156154ad57601091821c91015b60ff8211156154be57600891821c91015b600f8211156154cf57600491821c91015b60038211156154e057600291821c91015b600182111561348857600101919050565b60008160000361550357506000919050565b600061550e83615456565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff16905082821061555d57826115dc565b50919050565b6000615570848484614cb7565b905081806131e7576131e7615cd9565b60008161558c81614c85565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a7640000919091010261328c565b60ff81169190911c90600082156155e557816155dc846153aa565b0160ff166115dc565b5060001992915050565b60ff8181031691821b916000908315615615578061560c85615456565b60ff160361236a565b506000199392505050565b6001600160a01b038116811461182457600080fd5b6000806040838503121561564857600080fd5b823561565381615620565b946020939093013593505050565b60005b8381101561567c578181015183820152602001615664565b50506000910152565b60208152600082518060208401526156a4816040850160208701615661565b601f01601f19169190910160400192915050565b803562ffffff8116811461348857600080fd5b6000602082840312156156dd57600080fd5b6115dc826156b8565b60008083601f8401126156f857600080fd5b50813567ffffffffffffffff81111561571057600080fd5b6020830191508360208260051b8501011115612f7e57600080fd5b6000806000806000806080878903121561574457600080fd5b863561574f81615620565b9550602087013561575f81615620565b9450604087013567ffffffffffffffff8082111561577c57600080fd5b6157888a838b016156e6565b909650945060608901359150808211156157a157600080fd5b506157ae89828a016156e6565b979a9699509497509295939492505050565b60008083601f8401126157d257600080fd5b50813567ffffffffffffffff8111156157ea57600080fd5b602083019150836020828501011115612f7e57600080fd5b60008060006040848603121561581757600080fd5b83359250602084013567ffffffffffffffff81111561583557600080fd5b615841868287016157c0565b9497909650939450505050565b6000806000806060858703121561586457600080fd5b843561586f81615620565b9350602085013567ffffffffffffffff81111561588b57600080fd5b615897878288016156e6565b90945092505060408501356158ab81615620565b939692955090935050565b600081518084526020808501945080840160005b838110156158e6578151875295820195908201906001016158ca565b509495945050505050565b83815282602082015260606040820152600061284560608301846158b6565b803561ffff8116811461348857600080fd5b600080600080600080600080610100898b03121561593f57600080fd5b61594889615910565b975061595660208a01615910565b965061596460408a01615910565b955061597260608a01615910565b945061598060808a016156b8565b935061598e60a08a01615910565b925061599c60c08a016156b8565b91506159aa60e08a016156b8565b90509295985092959890939650565b600080600080604085870312156159cf57600080fd5b843567ffffffffffffffff808211156159e757600080fd5b6159f3888389016156e6565b90965094506020870135915080821115615a0c57600080fd5b50615a19878288016156e6565b95989497509550505050565b6020815260006115dc60208301846158b6565b8035801515811461348857600080fd5b60008060408385031215615a5b57600080fd5b615a6483615a38565b91506020830135615a7481615620565b809150509250929050565b600080600080600080600060e0888a031215615a9a57600080fd5b615aa388615910565b9650615ab160208901615910565b9550615abf60408901615910565b9450615acd60608901615910565b9350615adb608089016156b8565b9250615ae960a08901615910565b9150615af760c089016156b8565b905092959891949750929550565b600060208284031215615b1757600080fd5b813564ffffffffff811681146115dc57600080fd5b60008060408385031215615b3f57600080fd5b615b4883615a38565b9150612f7b602084016156b8565b60008060408385031215615b6957600080fd5b82356001600160801b0381168114615b8057600080fd5b9150612f7b60208401615a38565b600060208284031215615ba057600080fd5b5035919050565b600060208284031215615bb957600080fd5b6115dc82615910565b60008060408385031215615bd557600080fd5b8235615b8081615620565b60008060408385031215615bf357600080fd5b8235615a6481615620565b60008060008060608587031215615c1457600080fd5b8435615c1f81615620565b935060208501359250604085013567ffffffffffffffff811115615c4257600080fd5b615a19878288016157c0565b600060208284031215615c6057600080fd5b81516115dc81615620565b634e487b7160e01b600052604160045260246000fd5b604081526000615c9460408301856158b6565b828103602084015261284581856158b6565b634e487b7160e01b600052603260045260246000fd5b600060208284031215615cce57600080fd5b81356115dc81615620565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff82811682821603908082111561329157613291615cef565b67ffffffffffffffff818116838216028082169190828114615d4757615d47615cef565b505092915050565b67ffffffffffffffff81811683821601908082111561329157613291615cef565b6001600160801b0381811683821601908082111561329157613291615cef565b6001600160801b0382811682821603908082111561329157613291615cef565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615de257600080fd5b8260051b80836020870137939093016020019392505050565b604081526000615e0f604083018688615db0565b8281036020840152612a64818587615db0565b604081526000615e36604083018587615db0565b8281036020840152612d1181856158b6565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a083015261403860c083018486615e48565b60008251615ec4818460208701615661565b9190910192915050565b600060208284031215615ee057600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a06060830152615f1c60a083018688615db0565b8281036080840152615f2f818587615db0565b9a9950505050505050505050565b838152604060208201526000612845604083018486615e48565b60006001600160a01b03808816835280871660208401525060806040830152615f84608083018587615db0565b90508260608301529695505050505050565b8082018082111561071c5761071c615cef565b8181038181111561071c5761071c615cef565b64ffffffffff81811683821601908082111561329157613291615cef565b600061ffff80841680615fef57615fef615cd9565b92169190910692915050565b60008261600a5761600a615cd9565b600160ff1b82146000198414161561602457616024615cef565b500590565b60008261603857616038615cd9565b500490565b61ffff82811682821603908082111561329157613291615cef56fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582643441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212207736ae067da0a3b5fe576a13adef9b1c0fc245ffed2ed5539b111ce0545fa84c64736f6c63430008140033608060405234801561001057600080fd5b5060405161091738038061091783398101604081905261002f916101a2565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a816100b6565b5061007482610106565b50506001600160a01b0382161561008e5761008e826100b6565b600380546001600160a01b0319166001600160a01b0392909216919091179055506101e59050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b60000361013c5760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461019d57600080fd5b919050565b6000806000606084860312156101b757600080fd5b6101c084610186565b92506101ce60208501610186565b91506101dc60408501610186565b90509250925092565b610723806101f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73576a05e4080c23a653c3c2240da4437e83dd50bf81565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73576a05e4080c23a653c3c2240da4437e83dd50bf6105b2565b600073576a05e4080c23a653c3c2240da4437e83dd50bf6105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea26469706673582212204fc80b91460c293ed1c2f8bf67b6935ac3f9df70298d03487fa70f9e5dc601d964736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004d3f38038062004d3f83398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614afe6200024160003960008181610194015281816102f3015281816105e2015281816106c00152818161079c015281816108df01528181610c6c01528181611288015281816113240152818161148b0152818161150e0152818161185101528181611ae601528181611dcf0152818161272801528181612ac70152612b450152600081816104900152613a4701526000818161035b0152818161102d015281816111da01528181611fc901526133230152614afe6000f3fe6080604052600436106101845760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc146104f4578063e9361c0814610507578063f96fe9251461052757600080fd5b8063bb558a9f14610481578063c22159b6146104b4578063d0e380f2146104d457600080fd5b8063a0d376cf116100b0578063a0d376cf1461042e578063a3c7271a1461044e578063b066ea7c1461046e57600080fd5b806392fe8e70146103a4578063964f987c146103c45780639ab6156b1461040e57600080fd5b806362c067671161013857806381c2fdfb1161011257806381c2fdfb1461031757806388cc58e41461034c5780638efc2b2c1461037f57600080fd5b806362c067671461028c578063659ac74b146102ac5780636c9c0078146102e457600080fd5b80632a443fae116101695780632a443fae1461022c5780633dc8f8ec1461024c5780634b8018701461026c57600080fd5b80631a24f9a9146101d95780632075ad221461020c57600080fd5b366101d457336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d257604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101e557600080fd5b506101f96101f436600461401a565b61055b565b6040519081526020015b60405180910390f35b61021f61021a366004614085565b61085d565b6040516102039190614121565b34801561023857600080fd5b506101f961024736600461401a565b610abd565b34801561025857600080fd5b5061021f61026736600461401a565b610bea565b34801561027857600080fd5b506101f961028736600461401a565b610df0565b34801561029857600080fd5b506101d26102a7366004614134565b61102b565b3480156102b857600080fd5b506102cc6102c73660046141a1565b61119b565b6040516001600160a01b039091168152602001610203565b3480156102f057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561032357600080fd5b506103376103323660046141fd565b611252565b60408051928352602083019190915201610203565b34801561035857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b61039261038d3660046142b8565b6113ab565b604051610203969594939291906142fb565b3480156103b057600080fd5b5061021f6103bf36600461401a565b6115fa565b3480156103d057600080fd5b506103e46103df366004614368565b61173f565b604080516001600160801b0394851681529284166020840152921691810191909152606001610203565b34801561041a57600080fd5b506101f961042936600461401a565b6117cf565b34801561043a57600080fd5b506103e4610449366004614368565b611943565b34801561045a57600080fd5b506103926104693660046142b8565b611987565b6101f961047c366004614085565b611a64565b34801561048d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b3480156104c057600080fd5b506103376104cf3660046143b3565b611bde565b3480156104e057600080fd5b506101f96104ef36600461447b565b611cd4565b6101f9610502366004614085565b611d4d565b34801561051357600080fd5b506101d2610522366004614500565b611fc7565b34801561053357600080fd5b50610547610542366004614595565b6120ea565b60405162ffffff9091168152602001610203565b6000818042111561058d5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105a5575080515160208201515114155b806105c257506040810151518151516105bf9060016145d7565b14155b156105e05760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610625576106256145ea565b60200260200101516001600160a01b03161461068457604086015186515181518110610653576106536145ea565b602002602001015160405163cfec0e0160e01b815260040161058491906001600160a01b0391909116815260200190565b600061069d876000015188602001518960400151612156565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190614600565b90506107718860400151600081518110610747576107476145ea565b60200260200101513384600081518110610763576107636145ea565b60200260200101518d612266565b6107858289602001518a6040015130612287565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190614600565b6108199190614619565b945084891115610846576040516313fab00360e21b8152600481018a905260248101869052604401610584565b6108508786612706565b5050505095945050505050565b6060818042111561088a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b845151859015806108a2575080515160208201515114155b806108bf57506040810151518151516108bc9060016145d7565b14155b156108dd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061091e5761091e6145ea565b60200260200101516001600160a01b03161461094b578560400151600081518110610653576106536145ea565b6000610964876000015188602001518960400151612156565b905061097a87602001518289604001518b61279a565b93503484600081518110610990576109906145ea565b602002602001015111156109de5734846000815181106109b2576109b26145ea565b602002602001015160405163194ee21960e31b8152600401610584929190918252602082015260400190565b610a1c816000815181106109f4576109f46145ea565b602002602001015185600081518110610a0f57610a0f6145ea565b6020026020010151612ab9565b6000610a338289602001518a60400151888b612b70565b905088811015610a60576040516313fab00360e21b8152600481018a905260248101829052604401610584565b84600081518110610a7357610a736145ea565b6020026020010151341115610ab157610ab13386600081518110610a9957610a996145ea565b602002602001015134610aac9190614619565b612e8d565b50505050949350505050565b60008180421115610aea5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610b02575080515160208201515114155b80610b1f5750604081015151815151610b1c9060016145d7565b14155b15610b3d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b56876000015188602001518960400151612156565b9050610b9c8760400151600081518110610b7257610b726145ea565b60200260200101513383600081518110610b8e57610b8e6145ea565b60200260200101518c612266565b610bb1898289602001518a604001518a612f1f565b935083881115610bde576040516313fab00360e21b81526004810189905260248101859052604401610584565b50505095945050505050565b60608180421115610c175760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610c2f575080515160208201515114155b80610c4c5750604081015151815151610c499060016145d7565b14155b15610c6a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610caf57610caf6145ea565b60200260200101516001600160a01b031614610cdd57604086015186515181518110610653576106536145ea565b6000610cf6876000015188602001518960400151612156565b9050610d0c87602001518289604001518c61279a565b93508784600081518110610d2257610d226145ea565b60200260200101511115610d445787846000815181106109b2576109b26145ea565b610da28760400151600081518110610d5e57610d5e6145ea565b60200260200101513383600081518110610d7a57610d7a6145ea565b602002602001015187600081518110610d9557610d956145ea565b6020026020010151612266565b6000610db98289602001518a604001518830612b70565b905089811015610de6576040516313fab00360e21b8152600481018b905260248101829052604401610584565b6108508782612706565b60008180421115610e1d5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610e35575080515160208201515114155b80610e525750604081015151815151610e4f9060016145d7565b14155b15610e705760405163b91b4d4d60e01b815260040160405180910390fd5b6000610e89876000015188602001518960400151612156565b905060008760400151825181518110610ea457610ea46145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190614600565b9050610f658960400151600081518110610f3b57610f3b6145ea565b60200260200101513385600081518110610f5757610f576145ea565b60200260200101518e612266565b610f79838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190614600565b610ff09190614619565b9550858a111561101d576040516313fab00360e21b8152600481018b905260248101879052604401610584565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad919061462c565b6001600160a01b0316336001600160a01b0316146110de57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661110e5760001981146110fb57806110fd565b475b90506111098282612e8d565b505050565b600019811461111d5780611185565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190614600565b90506111096001600160a01b038416838361328c565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611249919061462c565b95945050505050565b60008082804211156112805760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b60006112b38c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff1660016132f2565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611319919061462c565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611358579899985b600080611369848e8e8e8e306133df565b915091508261137957808261137c565b81815b80975081985050505050506113928c8786613541565b61139c8684612706565b50509850989650505050505050565b6000808080606080826113e06113c460208a018a614649565b6113d460408b0160208c01614649565b8a6040013560016132f2565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611444919061462c565b6001600160a01b031661145a60208a018a614649565b6001600160a01b0316146114815760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166114b860208a018a614649565b6001600160a01b03161480156114d15750348860600135145b15611504576114f56114e960408a0160208b01614649565b33838b60800135612266565b6114ff8134612ab9565b6115db565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661153e60408a0160208b01614649565b6001600160a01b03161480156115575750348860800135145b15611578576114f561156c60208a018a614649565b33838b60600135612266565b6115856020890189614649565b61159560408a0160208b01614649565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a401610584565b6115e58882613562565b949d939c50919a509850965090945092505050565b606081804211156116275760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b8451518590158061163f575080515160208201515114155b8061165c57506040810151518151516116599060016145d7565b14155b1561167a5760405163b91b4d4d60e01b815260040160405180910390fd5b6000611693876000015188602001518960400151612156565b90506116a987602001518289604001518c61279a565b935087846000815181106116bf576116bf6145ea565b602002602001015111156116e15787846000815181106109b2576109b26145ea565b6116fb8760400151600081518110610d5e57610d5e6145ea565b60006117128289602001518a60400151888b612b70565b905089811015610850576040516313fab00360e21b8152600481018b905260248101829052604401610584565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa15801561179c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c09190614666565b91989097509095509350505050565b600081804211156117fc5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611814575080515160208201515114155b80611831575060408101515181515161182e9060016145d7565b14155b1561184f5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110611894576118946145ea565b60200260200101516001600160a01b0316146118c257604086015186515181518110610653576106536145ea565b60006118db876000015188602001518960400151612156565b90506118f78760400151600081518110610b7257610b726145ea565b61190c898289602001518a6040015130612f1f565b935083881115611939576040516313fab00360e21b81526004810189905260248101859052604401610584565b610bde8685612706565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f89060440161177f565b6000808080606080826119a06113c460208a018a614649565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a04919061462c565b6001600160a01b0316611a1a60208a018a614649565b6001600160a01b031614611a415760405163b33f8ab960e01b815260040160405180910390fd5b611a5161156c60208a018a614649565b6115db6114e960408a0160208b01614649565b60008180421115611a915760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611aa9575080515160208201515114155b80611ac65750604081015151815151611ac39060016145d7565b14155b15611ae45760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611b2557611b256145ea565b60200260200101516001600160a01b031614611b52578560400151600081518110610653576106536145ea565b6000611b6b876000015188602001518960400151612156565b9050611b9181600081518110611b8357611b836145ea565b602002602001015134612ab9565b611ba6348289602001518a604001518a612f1f565b935083881115611bd3576040516313fab00360e21b81526004810189905260248101859052604401610584565b505050949350505050565b6000808280421115611c0c5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6000611c1f8d8d8d61ffff1660016132f2565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c85919061462c565b6001600160a01b03168e6001600160a01b0316141590508015611ca6579899985b611cb4828c8c8c8c8c6133df565b90955093508015611cc3579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614600565b90505b92915050565b60008180421115611d7a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611d92575080515160208201515114155b80611daf5750604081015151815151611dac9060016145d7565b14155b15611dcd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611e0e57611e0e6145ea565b60200260200101516001600160a01b031614611e3b578560400151600081518110610653576106536145ea565b6000611e54876000015188602001518960400151612156565b905060008760400151825181518110611e6f57611e6f6145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190614600565b9050611f0283600081518110611b8357611b836145ea565b611f16838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015611f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f839190614600565b611f8d9190614619565b9550858a1115611fba576040516313fab00360e21b8152600481018b905260248101879052604401610584565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061462c565b6001600160a01b0316336001600160a01b03161461207a57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906120b0903090899089908990899089906004016146f3565b600060405180830381600087803b1580156120ca57600080fd5b505af11580156120de573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614733565b6060835167ffffffffffffffff81111561217257612172613d98565b60405190808252806020026020018201604052801561219b578160200160208202803683370190505b509050600080836000815181106121b4576121b46145ea565b6020026020010151905060005b835181101561225c578192508481600101815181106121e2576121e26145ea565b6020026020010151915061222a8383898481518110612203576122036145ea565b602002602001015189858151811061221d5761221d6145ea565b6020026020010151613a06565b84828151811061223c5761223c6145ea565b6001600160a01b03909216602092830291909101909101526001016121c1565b5050509392505050565b8015612281576122816001600160a01b038516848484613b06565b50505050565b6000806000806000866000815181106122a2576122a26145ea565b6020026020010151905060005b89518110156120de578981815181106122ca576122ca6145ea565b602002602001015192508881815181106122e6576122e66145ea565b60200260200101519450819550878160010181518110612308576123086145ea565b602002602001015191508951816001011461233f57898160010181518110612332576123326145ea565b6020026020010151612341565b865b9350600085600181111561235757612357614750565b036125fd57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561239d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c1919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b031610156124f6576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa15801561243d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124619190614600565b0390506000612471828585613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156124d757600080fd5b505af11580156124eb573d6000803e3d6000fd5b5050505050506125f6565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125659190614600565b0390506000612575828486613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156125db57600080fd5b505af11580156125ef573d6000803e3d6000fd5b5050505050505b50506126fe565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561264a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266e919061462c565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af11580156126d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fc9190614600565b505b6001016122af565b80600003612712575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561277457600080fd5b505af1158015612788573d6000803e3d6000fd5b505050506127968282612e8d565b5050565b6060825167ffffffffffffffff8111156127b6576127b6613d98565b6040519080825280602002602001820160405280156127df578160200160208202803683370190505b50905081818551815181106127f6576127f66145ea565b602090810291909101015283515b8015612ab057600084612818600184614619565b81518110612828576128286145ea565b602002602001015190506000876001846128429190614619565b81518110612852576128526145ea565b6020026020010151905060008760018561286c9190614619565b8151811061287c5761287c6145ea565b602002602001015190506000600181111561289957612899614750565b8260018111156128ab576128ab614750565b036129cd57600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612915919061477d565b506001600160701b031691506001600160701b0316915088868151811061293e5761293e6145ea565b60200260200101516001600160a01b0316856001600160a01b0316111561296157905b6000878781518110612975576129756145ea565b60200260200101519050612994838383613c159092919063ffffffff16565b6001600160801b0316886129a960018a614619565b815181106129b9576129b96145ea565b602002602001018181525050505050612a9a565b612a66818686815181106129e3576129e36145ea565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a57919061462c565b6001600160a01b03161461173f565b50506001600160801b031685612a7d600187614619565b81518110612a8d57612a8d6145ea565b6020026020010181815250505b5050508080612aa8906147c2565b915050612804565b50949350505050565b80600003612ac5575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612b2057600080fd5b505af1158015612b34573d6000803e3d6000fd5b506127969350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691508490508361328c565b60008060008060008088600081518110612b8c57612b8c6145ea565b6020026020010151905060005b8b51811015612e7e578b8181518110612bb457612bb46145ea565b602002602001015193508a8181518110612bd057612bd06145ea565b60200260200101519250819550898160010181518110612bf257612bf26145ea565b602002602001015191508b518160010114612c29578b8160010181518110612c1c57612c1c6145ea565b6020026020010151612c2b565b875b94506000836001811115612c4157612c41614750565b03612d4c57888160010181518110612c5b57612c5b6145ea565b60200260200101519650816001600160a01b0316866001600160a01b03161015612cff5760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b50505050612e76565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612cc8565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db0919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612e4a918916906353c059a0906044015b6020604051808303816000875af1158015612e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e369190614600565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612e6e57809950612e72565b8199505b5050505b600101612b99565b50505050505095945050505050565b80600003612e99575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612ee6576040519150601f19603f3d011682016040523d82523d6000602084013e612eeb565b606091505b50509050806111095760405163047b96f760e41b81526001600160a01b038416600482015260248101839052604401610584565b60008060008060008087600081518110612f3b57612f3b6145ea565b602002602001015190508a955060005b8a51811015612e7e578a8181518110612f6657612f666145ea565b60200260200101519250898181518110612f8257612f826145ea565b60200260200101519450819550888160010181518110612fa457612fa46145ea565b602002602001015191508a518160010114612fdb578a8160010181518110612fce57612fce6145ea565b6020026020010151612fdd565b875b93506000856001811115612ff357612ff3614750565b036131ad57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061305d919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561311c57613099898383613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156130ff57600080fd5b505af1158015613113573d6000803e3d6000fd5b505050506131a6565b613127898284613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561318d57600080fd5b505af11580156131a1573d6000803e3d6000fd5b505050505b5050613284565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613211919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052878316602483015292506000918291613258918816906353c059a090604401612df3565b6001600160801b031691506001600160801b03169150821561327c57809950613280565b8199505b5050505b600101612f4b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526122818482613cb4565b60405163704037bd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa15801561336c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339091906147d9565b6020015190506001600160a01b0381166133d757604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b949350505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613416949392919061485e565b6000604051808303816000875af1158015613435573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261345d919081019061489c565b905060005b81518110156134f157613494828281518110613480576134806145ea565b60200260200101516001600160801b031690565b6134a7906001600160801b0316856145d7565b93506134cc8282815181106134be576134be6145ea565b602002602001015160801c90565b6134df906001600160801b0316846145d7565b92506134ea81614922565b9050613462565b50878310806134ff57508682105b15613535576040516318ccfb7760e11b815260048101899052602481018490526044810188905260648101839052608401610584565b50965096945050505050565b8060000361354e57505050565b6111096001600160a01b038416838361328c565b600080600080606080876101c001358042111561359b5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6135a96101408a018a61493b565b90506135b96101208b018b61493b565b90501415806135e657506135d16101608a018a61493b565b90506135e16101208b018b61493b565b905014155b156136045760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613620575062ffffff6101008a0135115b1561364f5760405163197a55c760e11b815260e08a013560048201526101008a01356024820152604401610584565b600061365f6101208b018b61493b565b905067ffffffffffffffff81111561367957613679613d98565b6040519080825280602002602001820160405280156136a2578160200160208202803683370190505b5090506136b36101208b018b61493b565b905067ffffffffffffffff8111156136cd576136cd613d98565b6040519080825280602002602001820160405280156136f6578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375d9190614733565b62ffffff169050808b61010001358c60e0013501108061378757508a60e001358b61010001358201105b156137bd57604051637d50edab60e11b815260e08c013560048201526101008c0135602482015260448101829052606401610584565b60005b82518110156138c05760006137d96101208e018e61493b565b838181106137e9576137e96145ea565b90506020020135830190506000811280613805575062ffffff81115b15613826576040516370a82e6160e11b815260048101829052602401610584565b80878381518110613839576138396145ea565b602090810291909101015261389a6138556101408f018f61493b565b84818110613865576138656145ea565b905060200201358e80610160019061387d919061493b565b8581811061388d5761388d6145ea565b9050602002013583613d24565b8483815181106138ac576138ac6145ea565b6020908102919091010152506001016137c0565b50506000808a6001600160a01b031663383d15c58d6101800160208101906138e89190614649565b858f6101a00160208101906138fd9190614649565b6040518463ffffffff1660e01b815260040161391b93929190614985565b6000604051808303816000875af115801561393a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261396291908101906149e9565b9650909250905060006139758383613d5e565b6001600160801b0381169b50608081901c9a50905060a08d01358b108061399f57508c60c001358a105b156139db576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b9052608401610584565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613a1b57613a1b614750565b03613afa5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ab2919061462c565b90506001600160a01b038116613af557604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b6133d7565b611249858585856132f2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052613b748582613cb4565b5050505050565b600083600003613b9e5760405163b937356b60e01b815260040160405180910390fd5b821580613ba9575081155b15613bc757604051637b03555560e01b815260040160405180910390fd5b6000613bd5856103e5614a8f565b90506000613be38483614a8f565b9050600082613bf4876103e8614a8f565b613bfe91906145d7565b9050613c0a8183614aa6565b979650505050505050565b600083600003613c385760405163b937356b60e01b815260040160405180910390fd5b821580613c43575081155b15613c6157604051637b03555560e01b815260040160405180910390fd5b6000613c6d8585614a8f565b613c79906103e8614a8f565b90506000613c878685614619565b613c93906103e5614a8f565b9050613c9f8183614aa6565b613caa9060016145d7565b9695505050505050565b600080600052602060008351602085016000875af19050808015613cf5573d8015613ce85760016000511483169250613cef565b843b151592505b50613d05565b3d15613d05573d6000803e3d6000fd5b50806111095760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681176133d7565b80820382811180613d7a57506001600160801b03808416908216115b15611d475760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613dd157613dd1613d98565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613e0057613e00613d98565b604052919050565b600067ffffffffffffffff821115613e2257613e22613d98565b5060051b60200190565b600082601f830112613e3d57600080fd5b81356020613e52613e4d83613e08565b613dd7565b82815260059290921b84018101918181019086841115613e7157600080fd5b8286015b84811015613e8c5780358352918301918301613e75565b509695505050505050565b6001600160a01b0381168114613eac57600080fd5b50565b8035613eba81613e97565b919050565b600082601f830112613ed057600080fd5b81356020613ee0613e4d83613e08565b82815260059290921b84018101918181019086841115613eff57600080fd5b8286015b84811015613e8c578035613f1681613e97565b8352918301918301613f03565b600060608284031215613f3557600080fd5b613f3d613dae565b9050813567ffffffffffffffff80821115613f5757600080fd5b613f6385838601613e2c565b8352602091508184013581811115613f7a57600080fd5b8401601f81018613613f8b57600080fd5b8035613f99613e4d82613e08565b81815260059190911b82018401908481019088831115613fb857600080fd5b928501925b82841015613fe457833560028110613fd55760008081fd5b82529285019290850190613fbd565b808688015250505050604084013591508082111561400157600080fd5b5061400e84828501613ebf565b60408301525092915050565b600080600080600060a0868803121561403257600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561405757600080fd5b61406388828901613f23565b935050606086013561407481613e97565b949793965091946080013592915050565b6000806000806080858703121561409b57600080fd5b84359350602085013567ffffffffffffffff8111156140b957600080fd5b6140c587828801613f23565b93505060408501356140d681613e97565b9396929550929360600135925050565b600081518084526020808501945080840160005b83811015614116578151875295820195908201906001016140fa565b509495945050505050565b602081526000611d4460208301846140e6565b60008060006060848603121561414957600080fd5b833561415481613e97565b9250602084013561416481613e97565b929592945050506040919091013590565b62ffffff81168114613eac57600080fd5b61ffff81168114613eac57600080fd5b8035613eba81614186565b600080600080608085870312156141b757600080fd5b84356141c281613e97565b935060208501356141d281613e97565b925060408501356141e281614175565b915060608501356141f281614186565b939692955090935050565b600080600080600080600080610100898b03121561421a57600080fd5b883561422581613e97565b9750602089013561423581614186565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561426057600080fd5b61426c8c838d01613e2c565b955060a08b013591508082111561428257600080fd5b5061428f8b828c01613e2c565b93505060c08901356142a081613e97565b8092505060e089013590509295985092959890939650565b6000602082840312156142ca57600080fd5b813567ffffffffffffffff8111156142e157600080fd5b82016101e081850312156142f457600080fd5b9392505050565b86815285602082015284604082015283606082015260c06080820152600061432660c08301856140e6565b82810360a084015261433881856140e6565b9998505050505050505050565b6001600160801b0381168114613eac57600080fd5b8015158114613eac57600080fd5b60008060006060848603121561437d57600080fd5b833561438881613e97565b9250602084013561439881614345565b915060408401356143a88161435a565b809150509250925092565b60008060008060008060008060006101208a8c0312156143d257600080fd5b89356143dd81613e97565b985060208a01356143ed81613e97565b97506143fb60408b01614196565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561442657600080fd5b6144328d838e01613e2c565b955060c08c013591508082111561444857600080fd5b506144558c828d01613e2c565b93505061446460e08b01613eaf565b91506101008a013590509295985092959850929598565b6000806040838503121561448e57600080fd5b823561449981613e97565b915060208301356144a981614175565b809150509250929050565b60008083601f8401126144c657600080fd5b50813567ffffffffffffffff8111156144de57600080fd5b6020830191508360208260051b85010111156144f957600080fd5b9250929050565b6000806000806000806080878903121561451957600080fd5b863561452481613e97565b9550602087013561453481613e97565b9450604087013567ffffffffffffffff8082111561455157600080fd5b61455d8a838b016144b4565b9096509450606089013591508082111561457657600080fd5b5061458389828a016144b4565b979a9699509497509295939492505050565b600080604083850312156145a857600080fd5b82356145b381613e97565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d4757611d476145c1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561461257600080fd5b5051919050565b81810381811115611d4757611d476145c1565b60006020828403121561463e57600080fd5b81516142f481613e97565b60006020828403121561465b57600080fd5b81356142f481613e97565b60008060006060848603121561467b57600080fd5b835161468681614345565b602085015190935061469781614345565b60408501519092506143a881614345565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156146da57600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b038089168352808816602084015250608060408301526147206080830186886146a8565b82810360608401526143388185876146a8565b60006020828403121561474557600080fd5b81516142f481614175565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613eba57600080fd5b60008060006060848603121561479257600080fd5b61479b84614766565b92506147a960208501614766565b9150604084015163ffffffff811681146143a857600080fd5b6000816147d1576147d16145c1565b506000190190565b6000608082840312156147eb57600080fd5b6040516080810181811067ffffffffffffffff8211171561480e5761480e613d98565b604052825161481c81614186565b8152602083015161482c81613e97565b6020820152604083015161483f8161435a565b604082015260608301516148528161435a565b60608201529392505050565b60006001600160a01b0380871683528086166020840152506080604083015261488a60808301856140e6565b8281036060840152613c0a81856140e6565b600060208083850312156148af57600080fd5b825167ffffffffffffffff8111156148c657600080fd5b8301601f810185136148d757600080fd5b80516148e5613e4d82613e08565b81815260059190911b8201830190838101908783111561490457600080fd5b928401925b82841015613c0a57835182529284019290840190614909565b600060018201614934576149346145c1565b5060010190565b6000808335601e1984360301811261495257600080fd5b83018035915067ffffffffffffffff82111561496d57600080fd5b6020019150600581901b36038213156144f957600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156149d0578551835294830194918301916001016149b4565b5050809450505080851660408501525050949350505050565b6000806000606084860312156149fe57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614a2457600080fd5b8501601f81018713614a3557600080fd5b8051614a43613e4d82613e08565b81815260059190911b82018301908381019089831115614a6257600080fd5b928401925b82841015614a8057835182529284019290840190614a67565b80955050505050509250925092565b8082028115828204841417611d4757611d476145c1565b600082614ac357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122010f7a346d312a09cf5a31b737f60b8ce940d48e58faa22bdd8816f97e4cc66d864736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220ec82eaedbfb8382272723779e6d6d6fdf66ced283e611c61014f68d031dd83d764736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31a2646970667358221220e90b670e39f42189770e57e58969839d6bf6008a3e4499c60ab8b7e30fed135364736f6c63430008140033",
    "sourceMap": "555:19551:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6208:149:123;;;;;;;;;;-1:-1:-1;6208:149:123;;;;;:::i;:::-;-1:-1:-1;;;;;;6309:41:123;-1:-1:-1;;;6309:41:123;;6208:149;;;;470:14:152;;463:22;445:41;;433:2;418:18;6208:149:123;;;;;;;;1791:273:121;;;;;;;;;;;;;:::i;:::-;;611:1174;;;;;;;;;;;;;:::i;2452:134:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17182:2456:121:-;;;;;;;;;;;;;:::i;6465:2158::-;;;;;;;;;;;;;:::i;3221:133:6:-;;;;;;;;;;;;;:::i;14738:2438:121:-;;;;;;;;;;;;;:::i;2922:141:6:-;;;;;;;;;;;;;:::i;4279:2180:121:-;;;;;;;;;;;;;:::i;12628:168:123:-;;;;;;;;;;-1:-1:-1;12628:168:123;;;;;:::i;:::-;;:::i;:::-;;;4180:25:152;;;4168:2;4153:18;12628:168:123;4034:177:152;2738:178:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10409:2113:121:-;;;;;;;;;;;;;:::i;2070:2203::-;;;;;;;;;;;;;:::i;8629:1774::-;;;;;;;;;;;;;:::i;2592:140:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12802:205:123:-;;;;;;;;;;-1:-1:-1;12802:205:123;;;;;:::i;:::-;;:::i;:::-;;;7305:8:152;7293:21;;;7275:40;;7263:2;7248:18;12802:205:123;7131:190:152;12528:2204:121;;;;;;;;;;;;;:::i;3069:146:6:-;;;;;;;;;;;;;:::i;10653:1171:123:-;;;;;;;;;;-1:-1:-1;10653:1171:123;;;;;:::i;:::-;;:::i;2157:141:6:-;;;;;;;;;;;;;:::i;13013:134:123:-;;;;;;;;;;-1:-1:-1;13013:134:123;;;;;:::i;:::-;;:::i;1243:204:2:-;;;;;;;;;;;;;:::i;2304:142:6:-;;;;;;;;;;;;;:::i;11830:792:123:-;;;;;;;;;;-1:-1:-1;11830:792:123;;;;;:::i;:::-;;:::i;1791:273:121:-;1859:7;;;1888:4;;1894;;1859:58;;-1:-1:-1;;;1859:58:121;;-1:-1:-1;;;;;1888:4:121;;;1859:58;;;10030:34:152;1894:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;1844:12:121;;1859:7;;;:28;;9942:18:152;;1859:58:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;1935:6;;:68;;-1:-1:-1;;;1935:68:121;;-1:-1:-1;;;;;11557:55:152;;;1935:68:121;;;11539:74:152;1963:39:121;11629:18:152;;;11622:34;1859:65:121;;-1:-1:-1;1935:6:121;;;:21;;11512:18:152;;1935:68:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2014:6:121;;-1:-1:-1;;;;;2014:6:121;:21;2036:4;2042:14;1185:7:123;2042:5:121;:14;:::i;:::-;2014:43;;-1:-1:-1;;;;;;2014:43:121;;;;;;;-1:-1:-1;;;;;12435:55:152;;;2014:43:121;;;12417:74:152;12539:8;12527:21;12507:18;;;12500:49;12390:18;;2014:43:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1834:230;1791:273::o;611:1174::-;654:13;:11;:13::i;:::-;678:7;;;:50;;-1:-1:-1;;;678:50:121;;1340:2:123;678:50:121;;;12915:38:152;678:7:121;12969:18:152;;;12962:50;;;;-1:-1:-1;;;;;678:7:121;;:26;;12888:18:152;;678:50:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;773:6:121;;793:4;;799;;773:57;;-1:-1:-1;;;773:57:121;;-1:-1:-1;;;;;793:4:121;;;773:57;;;13351:34:152;799:4:121;;;13401:18:152;;;13394:43;1185:7:123;13453:18:152;;;13446:49;1340:2:123;13511:18:152;;;13504:47;773:6:121;;;-1:-1:-1;773:19:121;;-1:-1:-1;13262:19:152;;773:57:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;840:6:121;;860:7;;869:4;;840:60;;-1:-1:-1;;;840:60:121;;-1:-1:-1;;;;;860:7:121;;;840:60;;;13351:34:152;869:4:121;;;13401:18:152;;;13394:43;1185:7:123;13453:18:152;;;13446:49;1340:2:123;13511:18:152;;;13504:47;840:6:121;;;:19;;13262::152;;840:60:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;910:6:121;;930:8;;940:7;;910:64;;-1:-1:-1;;;910:64:121;;-1:-1:-1;;;;;930:8:121;;;910:64;;;13351:34:152;940:7:121;;;13401:18:152;;;13394:43;1185:7:123;13453:18:152;;;13446:49;1340:2:123;13511:18:152;;;13504:47;910:6:121;;;:19;;13262::152;;910:64:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1051:4:121;;1011:17;;1038:51;;-1:-1:-1;;;;;1051:4:121;1066;1011:17;1038:4;:51::i;:::-;1112:4;;1099:51;;-1:-1:-1;;;;;1112:4:121;1127;1134:15;1099:4;:51::i;:::-;1173:8;;1160:55;;-1:-1:-1;;;;;1173:8:121;1192:4;1199:15;1160:4;:55::i;:::-;1320:4;;1326;;1226:56;;1297:57;;-1:-1:-1;;;;;1320:4:121;;;;1326;1332:6;1185:7:123;1348:2:121;1226:56;1297:22;:57::i;:::-;1364:6;;:40;;-1:-1:-1;;;1364:40:121;;1226:128;;-1:-1:-1;;;;;;1364:6:121;;:19;;:40;;1226:128;;1364:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1364:40:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1460:7:121;;1469:4;;1437:60;;-1:-1:-1;;;;;;1460:7:121;;;;-1:-1:-1;1469:4:121;;-1:-1:-1;1475:6:121;;-1:-1:-1;1185:7:123;1491:2:121;1460:7;1437:22;:60::i;:::-;1507:6;;1540:27;;;;1507:82;;-1:-1:-1;;;1507:82:121;;1415;;-1:-1:-1;;;;;;1507:6:121;;;;:25;;1540:27;1507:82;;1415;;1507;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:82:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1645:8:121;;1655:7;;1622:64;;-1:-1:-1;;;;;;1645:8:121;;;;-1:-1:-1;1655:7:121;;-1:-1:-1;1664:6:121;;-1:-1:-1;1185:7:123;1680:2:121;1645:8;1622:22;:64::i;:::-;1696:6;;1729:27;;;;1696:82;;-1:-1:-1;;;1696:82:121;;1600:86;;-1:-1:-1;;;;;;1696:6:121;;;;:25;;1729:27;1696:82;;1600:86;;1696:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1696:82:121;;;;;;;;;;;;:::i;:::-;;;;;;;644:1141;;611:1174::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;17182:2456:121:-;17319:7;;;17348:8;;17358:7;;17319:65;;-1:-1:-1;;;17319:65:121;;-1:-1:-1;;;;;17348:8:121;;;17319:65;;;10030:34:152;17358:7:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;17288:5:121;;17269:16;;17319:7;;;;;:28;;9942:18:152;;17319:65:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;17434:6;;:40;;-1:-1:-1;;;17434:40:121;;-1:-1:-1;;;;;20159:55:152;;;17434:40:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;17404:25:121;20315:18:152;;;20308:50;;;17319:72:121;;-1:-1:-1;17434:6:121;;;;:17;;20114:18:152;;17434:40:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17525:7:121;;17534:8;;17401:73;;-1:-1:-1;17485:26:121;;-1:-1:-1;17514:29:121;;-1:-1:-1;;;;;17525:7:121;;;;17534:8;17514:10;:29::i;:::-;17485:58;-1:-1:-1;;;;;;;;;;;;17612:15:121;-1:-1:-1;;;17733:17:121;17752:21;17772:1;17733:17;17752:21;:::i;:::-;:25;;17776:1;17752:25;:::i;:::-;17641:150;;-1:-1:-1;;;;;21749:15:152;;;17641:150:121;;;21731:34:152;21801:15;;21781:18;;;21774:43;21651:18;;17641:150:121;;;-1:-1:-1;;17641:150:121;;;;;;;;;;;;;;-1:-1:-1;;;;;17641:150:121;-1:-1:-1;;;;;;17641:150:121;;;;;;17612:189;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17811:6:121;;-1:-1:-1;;;;;17811:6:121;;-1:-1:-1;17811:60:121;;-1:-1:-1;;;;;;17811:160:121;;17902:17;17921:4;17935;17942:19;:15;17811:6;17942:19;:::i;:::-;17811:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18006:8:121;;:33;;-1:-1:-1;;;18006:33:121;;18033:4;18006:33;;;24630:74:152;17982:21:121;;-1:-1:-1;;;;;18006:8:121;;:18;;24603::152;;18006:33:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18072:6;;17982:57;;-1:-1:-1;18051:17:121;;-1:-1:-1;;;;;18072:6:121;:60;-1:-1:-1;;;;;18072:164:121;;18163:21;18183:1;18163:17;:21;:::i;:::-;18186:4;18200;18207:19;:15;18225:1;18207:19;:::i;:::-;18072:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18050:186;-1:-1:-1;18247:111:121;18050:186;18267:21;18287:1;18267:17;:21;:::i;:::-;:25;;18291:1;18267:25;:::i;:::-;-1:-1:-1;;;;;18247:111:121;;;;;;;;;;;;;;;;;;:8;:111::i;:::-;18390:8;;:33;;-1:-1:-1;;;18390:33:121;;18417:4;18390:33;;;24630:74:152;18368:181:121;;-1:-1:-1;;;;;18390:8:121;;:18;;24603::152;;18390:33:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18437:25;18453:9;18437:13;:25;:::i;:::-;18368:181;;;;;;;;;;;;;;;;;:8;:181::i;:::-;18624:4;;18604:14;;;;:17;;-1:-1:-1;;;;;18624:4:121;;;;;;18604:17;;;;:::i;:::-;-1:-1:-1;;;;;18604:24:121;;;:17;;;;;;;;;:24;18732:4;;18654:84;;18732:4;;18654:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;18638:15:121;;;-1:-1:-1;;;18677:45:121;24603:18:152;;18654:84:121;;;-1:-1:-1;;18654:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;18654:84:121;-1:-1:-1;;;;;;18654:84:121;;;;;;18638:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18749:6:121;;-1:-1:-1;;;;;18749:6:121;;-1:-1:-1;18749:60:121;;-1:-1:-1;;;;;;18749:160:121;;18840:17;18859:4;18873;18880:19;:15;18749:6;18880:19;:::i;:::-;18749:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;18956:15:121;-1:-1:-1;;;19055:19:121;19073:1;19055:15;:19;:::i;:::-;18985:107;;;;;25154:25:152;;;;19076:15:121;25195:18:152;;;25188:34;25127:18;;18985:107:121;;;-1:-1:-1;;18985:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;18985:107:121;-1:-1:-1;;;;;;18985:107:121;;;;;;18956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19112:6:121;;-1:-1:-1;;;;;19112:6:121;;-1:-1:-1;19112:60:121;;-1:-1:-1;;;;;;19112:160:121;;19203:17;19222:4;19236;19243:19;19112:6;19243:15;:19;:::i;:::-;19112:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19351:15:121;;;19364:1;19351:15;;;;;;;;19334:14;;;:32;;;;19392:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19392:68:121;-1:-1:-1;;;19392:68:121;;;19376:85;;-1:-1:-1;;;19376:85:121;;-1:-1:-1;;;;;;;;;;;19376:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19471:6:121;;-1:-1:-1;;;;;19471:6:121;;-1:-1:-1;19471:60:121;;-1:-1:-1;;;;;;19471:160:121;;19562:17;19581:4;19595;19602:19;:15;19471:6;19602:19;:::i;:::-;19471:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17259:2379;;;;;;17182:2456::o;6465:2158::-;6573:7;;;6602;;6611:4;;6573:61;;-1:-1:-1;;;6573:61:121;;-1:-1:-1;;;;;6602:7:121;;;6573:61;;;10030:34:152;6611:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;6542:5:121;;6523:16;;6573:7;;;;;:28;;9942:18:152;;6573:61:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;6684:6;;:39;;-1:-1:-1;;;6684:39:121;;-1:-1:-1;;;;;20159:55:152;;;6684:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;6684:6:121;20315:18:152;;;20308:50;6573:68:121;;-1:-1:-1;6654:25:121;;6684:6;;;;:17;;20114:18:152;;6684:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6774:7:121;;6783:4;;6651:72;;-1:-1:-1;6734:26:121;;-1:-1:-1;6763:25:121;;-1:-1:-1;;;;;6774:7:121;;;;6783:4;6763:10;:25::i;:::-;6823:4;;:29;;-1:-1:-1;;;6823:29:121;;6846:4;6823:29;;;24630:74:152;6734:54:121;;-1:-1:-1;6799:21:121;;-1:-1:-1;;;;;6823:4:121;;;;:14;;24603:18:152;;6823:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6885:6;;6799:53;;-1:-1:-1;6864:17:121;;-1:-1:-1;;;;;6885:6:121;:31;-1:-1:-1;;;;;6885:131:121;;6947:17;6966:4;6980;6987:19;:15;6885:6;6987:19;:::i;:::-;6885:131;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6863:153;;7027:74;7036:9;7047:17;-1:-1:-1;;;;;7027:74:121;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;7120:4;;:29;;-1:-1:-1;;;7120:29:121;;7143:4;7120:29;;;24630:74:152;7111:102:121;;-1:-1:-1;;;;;7120:4:121;;:14;;24603:18:152;;7120:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7151:25;7167:9;7151:13;:25;:::i;:::-;7111:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;7249:6;;:39;;-1:-1:-1;;;7249:39:121;;-1:-1:-1;;;;;20159:55:152;;;7249:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;7249:6:121;20315:18:152;;;20308:50;7249:6:121;;;;:17;;20114:18:152;;7249:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7224:64:121;-1:-1:-1;;;;;;;;;;;;7357:15:121;-1:-1:-1;7357:15:121;-1:-1:-1;;;7478:21:121;7224:64;7498:1;7478:21;:::i;:::-;7386:146;;-1:-1:-1;;;;;21749:15:152;;;7386:146:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;7386:146:121;;;-1:-1:-1;;7386:146:121;;;;;;;;;;;;;;-1:-1:-1;;;;;7386:146:121;-1:-1:-1;;;;;;7386:146:121;;;;;;7357:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7552:6:121;;-1:-1:-1;;;;;7552:6:121;;-1:-1:-1;7552:31:121;;-1:-1:-1;;;;;;7552:135:121;;7614:21;:17;7552:6;7614:21;:::i;:::-;7637:4;7651;7658:19;:15;7676:1;7658:19;:::i;:::-;7552:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7762:4:121;;7742:14;;;;:17;;-1:-1:-1;;;;;7762:4:121;;;;;;7742:17;;;;:::i;:::-;-1:-1:-1;;;;;7742:24:121;;;:17;;;;;;;;;:24;7870:4;;7792:84;;7870:4;;7792:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;7776:15:121;;;-1:-1:-1;;;7815:45:121;24603:18:152;;7792:84:121;;;-1:-1:-1;;7792:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;7792:84:121;-1:-1:-1;;;;;;7792:84:121;;;;;;7776:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7887:6:121;;-1:-1:-1;;;;;7887:6:121;;-1:-1:-1;7887:31:121;;-1:-1:-1;;;;;;7887:109:121;;7936:17;7955:4;7969;7976:19;:15;7887:6;7976:19;:::i;:::-;7887:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;8043:15:121;-1:-1:-1;;;8142:19:121;8160:1;8142:15;:19;:::i;:::-;8072:107;;;;;25154:25:152;;;;8163:15:121;25195:18:152;;;25188:34;25127:18;;8072:107:121;;;-1:-1:-1;;8072:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;8072:107:121;-1:-1:-1;;;;;;8072:107:121;;;;;;8043:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8199:6:121;;-1:-1:-1;;;;;8199:6:121;;-1:-1:-1;8199:31:121;;-1:-1:-1;;;;;;8199:109:121;;8248:17;8267:4;8281;8288:19;8199:6;8288:15;:19;:::i;:::-;8199:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8387:15:121;;;8400:1;8387:15;;;;;;;;8370:14;;;:32;;;;8428:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8428:68:121;-1:-1:-1;;;8428:68:121;;;8412:85;;-1:-1:-1;;;8412:85:121;;-1:-1:-1;;;;;;;;;;;8412:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8507:6:121;;-1:-1:-1;;;;;8507:6:121;;-1:-1:-1;8507:31:121;;-1:-1:-1;;;;;;8507:109:121;;8556:17;8575:4;8589;8596:19;:15;8507:6;8596:19;:::i;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;14738:2438:121:-;14875:7;;;14904:8;;14914:7;;14875:65;;-1:-1:-1;;;14875:65:121;;-1:-1:-1;;;;;14904:8:121;;;14875:65;;;10030:34:152;14914:7:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;14844:5:121;;14825:16;;14875:7;;;;;:28;;9942:18:152;;14875:65:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;14990:6;;:39;;-1:-1:-1;;;14990:39:121;;-1:-1:-1;;;;;20159:55:152;;;14990:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;14990:6:121;20315:18:152;;;20308:50;14875:72:121;;-1:-1:-1;14960:25:121;;14990:6;;;;:17;;20114:18:152;;14990:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15080:8:121;;15090:7;;14957:72;;-1:-1:-1;15040:26:121;;-1:-1:-1;15069:29:121;;-1:-1:-1;;;;;15080:8:121;;;;15090:7;15069:10;:29::i;:::-;15040:58;-1:-1:-1;;;;;;;;;;;;15167:15:121;-1:-1:-1;;;15288:17:121;15307:21;15327:1;15288:17;15307:21;:::i;:::-;15196:146;;-1:-1:-1;;;;;21749:15:152;;;15196:146:121;;;21731:34:152;21801:15;;21781:18;;;21774:43;21651:18;;15196:146:121;;;-1:-1:-1;;15196:146:121;;;;;;;;;;;;;;-1:-1:-1;;;;;15196:146:121;-1:-1:-1;;;;;;15196:146:121;;;;;;15167:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15362:6:121;;-1:-1:-1;;;;;15362:6:121;;-1:-1:-1;15362:60:121;;-1:-1:-1;15436:8:121;15446:17;15465:4;15487;15495:19;:15;15362:6;15495:19;:::i;:::-;15362:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15613:6:121;;15559:21;;15535;;-1:-1:-1;;;;;15613:6:121;:60;15687:8;15697:21;15717:1;15697:17;:21;:::i;:::-;15720:4;15742;15750:19;:15;15768:1;15750:19;:::i;:::-;15613:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15591:188;-1:-1:-1;15790:107:121;15591:188;15810:21;15830:1;15810:17;:21;:::i;:::-;-1:-1:-1;;;;;15790:107:121;;;;;;;;;;;;;;;;;;:8;:107::i;:::-;15907:169;15929:21;15964:25;15980:9;15964:13;:25;:::i;:::-;15907:169;;;;;;;;;;;;;;;;;:8;:169::i;:::-;16152:4;;16132:14;;;;:17;;-1:-1:-1;;;;;16152:4:121;;;;;;16132:17;;;;;;:::i;:::-;-1:-1:-1;;;;;16132:24:121;;;:17;;;;;;;;;:24;16260:4;;16182:84;;16260:4;;16182:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;16166:15:121;;;-1:-1:-1;;;16205:45:121;24603:18:152;;16182:84:121;;;-1:-1:-1;;16182:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;16182:84:121;-1:-1:-1;;;;;;16182:84:121;;;;;;16166:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16277:6:121;;-1:-1:-1;;;;;16277:6:121;;-1:-1:-1;16277:60:121;;-1:-1:-1;16351:8:121;16361:21;:17;16277:6;16361:21;:::i;:::-;16384:4;16406;16414:19;:15;16432:1;16414:19;:::i;:::-;16277:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;16490:15:121;-1:-1:-1;;;16589:19:121;16607:1;16589:15;:19;:::i;:::-;16519:107;;;;;25154:25:152;;;;16610:15:121;25195:18:152;;;25188:34;25127:18;;16519:107:121;;;-1:-1:-1;;16519:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;16519:107:121;-1:-1:-1;;;;;;16519:107:121;;;;;;16490:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16646:6:121;;-1:-1:-1;;;;;16646:6:121;;-1:-1:-1;16646:60:121;;-1:-1:-1;16720:8:121;16730:17;16749:4;16771;16779:19;16646:6;16779:15;:19;:::i;:::-;16646:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16887:15:121;;;16900:1;16887:15;;;;;;;;16870:14;;;:32;;;;16928:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16928:68:121;-1:-1:-1;;;16928:68:121;;;16912:85;;-1:-1:-1;;;16912:85:121;;-1:-1:-1;;;;;;;;;;;16912:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17007:6:121;;-1:-1:-1;;;;;17007:6:121;;-1:-1:-1;17007:60:121;;-1:-1:-1;17081:8:121;17091:17;17110:4;17132;17140:19;:15;17007:6;17140:19;:::i;:::-;17007:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2922:141:6:-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;4279:2180:121:-;4387:7;;;4416;;4425:4;;4387:61;;-1:-1:-1;;;4387:61:121;;-1:-1:-1;;;;;4416:7:121;;;4387:61;;;10030:34:152;4425:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;4356:5:121;;4337:16;;4387:7;;;;;:28;;9942:18:152;;4387:61:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;4498:6;;:40;;-1:-1:-1;;;4498:40:121;;-1:-1:-1;;;;;20159:55:152;;;4498:40:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;4468:25:121;20315:18:152;;;20308:50;;;4387:68:121;;-1:-1:-1;4498:6:121;;;;:17;;20114:18:152;;4498:40:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4589:4:121;;4595:7;;4465:73;;-1:-1:-1;4549:26:121;;-1:-1:-1;4578:25:121;;-1:-1:-1;;;;;4589:4:121;;;;4595:7;4578:10;:25::i;:::-;4692:6;;4549:54;;-1:-1:-1;4638:21:121;;4614;;-1:-1:-1;;;;;4692:6:121;:31;4737:8;4747:17;4549:54;4788:4;4796:19;:15;4692:6;4796:19;:::i;:::-;4692:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4670:155;;4836:74;4845:9;4856:17;-1:-1:-1;;;;;4836:74:121;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;4920:94;4929:21;4952:25;4968:9;4952:13;:25;:::i;:::-;4920:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;5108:6;;:40;;-1:-1:-1;;;5108:40:121;;-1:-1:-1;;;;;20159:55:152;;;5108:40:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;5108:6:121;20315:18:152;;;20308:50;5108:6:121;;;;:17;;20114:18:152;;5108:40:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5083:65:121;-1:-1:-1;;;;;;;;;;;;5158:15:121;-1:-1:-1;5158:15:121;-1:-1:-1;;;5279:21:121;5083:65;5299:1;5279:21;:::i;:::-;5187:146;;-1:-1:-1;;;;;21749:15:152;;;5187:146:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;5187:146:121;;;-1:-1:-1;;5187:146:121;;;;;;;;;;;;;;-1:-1:-1;;;;;5187:146:121;-1:-1:-1;;;;;;5187:146:121;;;;;;5158:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5353:6:121;;-1:-1:-1;;;;;5353:6:121;;-1:-1:-1;5353:31:121;;-1:-1:-1;5398:8:121;5408:21;:17;5353:6;5408:21;:::i;:::-;5431:4;5453;5461:19;:15;5479:1;5461:19;:::i;:::-;5353:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5566:4:121;;5546:14;;;;:17;;-1:-1:-1;;;;;5566:4:121;;;;;;5546:17;;;;;;:::i;:::-;-1:-1:-1;;;;;5546:24:121;;;:17;;;;;;;;;:24;5674:4;;5596:84;;5674:4;;5596:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;5580:15:121;;;-1:-1:-1;;;5619:45:121;24603:18:152;;5596:84:121;;;-1:-1:-1;;5596:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;5596:84:121;-1:-1:-1;;;;;;5596:84:121;;;;;;5580:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5691:6:121;;-1:-1:-1;;;;;5691:6:121;;-1:-1:-1;5691:31:121;;-1:-1:-1;5736:8:121;5746:21;:17;5691:6;5746:21;:::i;:::-;5769:4;5791;5799:19;:15;5817:1;5799:19;:::i;:::-;5691:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;5875:15:121;-1:-1:-1;;;5974:19:121;5992:1;5974:15;:19;:::i;:::-;5904:107;;;;;25154:25:152;;;;5995:15:121;25195:18:152;;;25188:34;25127:18;;5904:107:121;;;-1:-1:-1;;5904:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;5904:107:121;-1:-1:-1;;;;;;5904:107:121;;;;;;5875:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6031:6:121;;-1:-1:-1;;;;;6031:6:121;;-1:-1:-1;6031:31:121;;-1:-1:-1;6063:8:121;6073:17;6092:4;6114;6122:19;6031:6;6122:15;:19;:::i;:::-;6031:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6221:15:121;;;6234:1;6221:15;;;;;;;;6204:14;;;:32;;;;6262:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6262:68:121;-1:-1:-1;;;6262:68:121;;;6246:85;;-1:-1:-1;;;6246:85:121;;-1:-1:-1;;;;;;;;;;;6246:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6341:6:121;;-1:-1:-1;;;;;6341:6:121;;-1:-1:-1;6341:31:121;;-1:-1:-1;6373:8:121;6383:17;6402:4;6424;6432:19;:15;6341:6;6432:19;:::i;12628:168:123:-;12699:7;12734:1;12725:6;:10;;;:24;;;;;12748:1;12739:6;:10;;;12725:24;:64;;12774:15;12783:6;12774;:15;:::i;:::-;12725:64;;;12770:1;12752:15;12761:6;12752;:15;:::i;:::-;:19;;;;:::i;:::-;12718:71;;;;12628:168;;;;;:::o;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:2113:121;10518:7;;;10547;;10556:4;;10518:61;;-1:-1:-1;;;10518:61:121;;-1:-1:-1;;;;;10547:7:121;;;10518:61;;;10030:34:152;10556:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;10487:5:121;;10467:17;;10518:7;;;;;:28;;9942:18:152;;10518:61:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;10627:6;;:40;;-1:-1:-1;;;10627:40:121;;-1:-1:-1;;;;;20159:55:152;;;10627:40:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;10597:24:121;20315:18:152;;;20308:50;;;10518:68:121;;-1:-1:-1;10627:6:121;;;;:16;;20114:18:152;;10627:40:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10718:4:121;;10724:7;;10596:71;;-1:-1:-1;10678:26:121;;10707:25;;-1:-1:-1;;;;;10718:4:121;;;;10724:7;10707:10;:25::i;:::-;10767:4;;:29;;-1:-1:-1;;;10767:29:121;;10790:4;10767:29;;;24630:74:152;10678:54:121;;-1:-1:-1;10743:21:121;;-1:-1:-1;;;;;10767:4:121;;;;:14;;24603:18:152;;10767:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10838:6;;10743:53;;-1:-1:-1;10808:26:121;;-1:-1:-1;;;;;10838:6:121;:31;10883:9;10894:16;10912:4;10934;10942:19;:15;10838:6;10942:19;:::i;:::-;10838:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10838:133:121;;;;;;;;;;;;:::i;:::-;10807:164;;10982:76;10991:9;11001:1;10991:12;;;;;;;;:::i;:::-;;;;;;;11005:16;-1:-1:-1;;;;;10982:76:121;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;11077:4;;:29;;-1:-1:-1;;;11077:29:121;;11100:4;11077:29;;;24630:74:152;11068:105:121;;-1:-1:-1;;;;;11077:4:121;;:14;;24603:18:152;;11077:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11124:9;11134:1;11124:12;;;;;;;;:::i;:::-;;;;;;;11108:13;:28;;;;:::i;:::-;11068:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;11207:6;;:40;;-1:-1:-1;;;11207:40:121;;-1:-1:-1;;;;;20159:55:152;;;11207:40:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;11207:6:121;20315:18:152;;;20308:50;11207:6:121;;;;:16;;20114:18:152;;11207:40:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11184:63:121;;-1:-1:-1;;;;;;;;;;;;11300:15:121;-1:-1:-1;11300:15:121;-1:-1:-1;;;11419:20:121;11438:1;11184:63;11419:20;:::i;:::-;11329:142;;-1:-1:-1;;;;;21749:15:152;;;11329:142:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;11329:142:121;;;-1:-1:-1;;11329:142:121;;;;;;;;;;;;;;-1:-1:-1;;;;;11329:142:121;-1:-1:-1;;;;;;11329:142:121;;;;;;11300:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:6:121;;-1:-1:-1;;;;;11491:6:121;;-1:-1:-1;11491:31:121;;-1:-1:-1;11523:9:121;11534:20;11491:6;11534:16;:20;:::i;:::-;11556:4;11570;11577:19;:15;11595:1;11577:19;:::i;:::-;11491:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:106:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11673:4:121;;11653:14;;;;:17;;-1:-1:-1;;;;;11673:4:121;;;;;;11653:17;;;;;;:::i;:::-;-1:-1:-1;;;;;11653:24:121;;;:17;;;;;;;;;:24;11781:4;;11703:84;;11781:4;;11703:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;11687:15:121;;;-1:-1:-1;;;11726:45:121;24603:18:152;;11703:84:121;;;-1:-1:-1;;11703:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;11703:84:121;-1:-1:-1;;;;;;11703:84:121;;;;;;11687:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:6:121;;-1:-1:-1;;;;;11798:6:121;;-1:-1:-1;11798:31:121;;-1:-1:-1;11830:9:121;11841:16;11859:4;11881;11889:19;:15;11798:6;11889:19;:::i;:::-;11798:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:111:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;11956:15:121;-1:-1:-1;;;12055:19:121;12073:1;12055:15;:19;:::i;:::-;11985:107;;;;;25154:25:152;;;;12076:15:121;25195:18:152;;;25188:34;25127:18;;11985:107:121;;;-1:-1:-1;;11985:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;11985:107:121;-1:-1:-1;;;;;;11985:107:121;;;;;;11956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:6:121;;-1:-1:-1;;;;;12112:6:121;;-1:-1:-1;12112:31:121;;-1:-1:-1;12144:9:121;12155:16;12173:4;12187;12194:19;12112:6;12194:15;:19;:::i;:::-;12112:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:102:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12293:15:121;;;12306:1;12293:15;;;;;;;;12276:14;;;:32;;;;12334:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12334:68:121;-1:-1:-1;;;12334:68:121;;;12318:85;;-1:-1:-1;;;12318:85:121;;-1:-1:-1;;;;;;;;;;;12318:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:6:121;;-1:-1:-1;;;;;12413:6:121;;-1:-1:-1;12413:31:121;;-1:-1:-1;12445:9:121;12456:16;12474:4;12488;12495:19;:15;12413:6;12495:19;:::i;:::-;12413:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:102:121;;;;;;;;;;;;:::i;2070:2203::-;2178:7;;;2207:4;;2213;;2178:58;;-1:-1:-1;;;2178:58:121;;-1:-1:-1;;;;;2207:4:121;;;2178:58;;;10030:34:152;2213:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;2147:5:121;;2128:16;;2178:7;;;;;:28;;9942:18:152;;2178:58:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;2286:6;;:39;;-1:-1:-1;;;2286:39:121;;-1:-1:-1;;;;;20159:55:152;;;2286:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;2286:6:121;20315:18:152;;;20308:50;2178:65:121;;-1:-1:-1;2256:25:121;;2286:6;;;;:17;;20114:18:152;;2286:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2376:4:121;;2382;;2253:72;;-1:-1:-1;2336:26:121;;-1:-1:-1;2365:22:121;;-1:-1:-1;;;;;2376:4:121;;;;2382;2365:10;:22::i;:::-;2422:4;;:29;;-1:-1:-1;;;2422:29:121;;2445:4;2422:29;;;24630:74:152;2336:51:121;;-1:-1:-1;2398:21:121;;-1:-1:-1;;;;;2422:4:121;;;;:14;;24603:18:152;;2422:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2496:6;;2398:53;;-1:-1:-1;2463:17:121;;-1:-1:-1;;;;;2496:6:121;:31;2528:8;2538:17;2557:4;2571;2578:19;:15;2496:6;2578:19;:::i;:::-;2496:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2462:136;;2609:74;2618:9;2629:17;-1:-1:-1;;;;;2609:74:121;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;2702:4;;:29;;-1:-1:-1;;;2702:29:121;;2725:4;2702:29;;;24630:74:152;2693:102:121;;-1:-1:-1;;;;;2702:4:121;;:14;;24603:18:152;;2702:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:25;2749:9;2733:13;:25;:::i;:::-;2693:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;2889:6;;:39;;-1:-1:-1;;;2889:39:121;;-1:-1:-1;;;;;20159:55:152;;;2889:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;2889:6:121;20315:18:152;;;20308:50;2889:6:121;;;;:17;;20114:18:152;;2889:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2864:64:121;-1:-1:-1;;;;;;;;;;;;2938:15:121;-1:-1:-1;2938:15:121;-1:-1:-1;;;3059:21:121;2864:64;3079:1;3059:21;:::i;:::-;2967:146;;-1:-1:-1;;;;;21749:15:152;;;2967:146:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;2967:146:121;;;-1:-1:-1;;2967:146:121;;;;;;;;;;;;;;-1:-1:-1;;;;;2967:146:121;-1:-1:-1;;;;;;2967:146:121;;;;;;2938:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3133:6:121;;-1:-1:-1;;;;;3133:6:121;;-1:-1:-1;3133:31:121;;-1:-1:-1;3165:8:121;3175:21;:17;3133:6;3175:21;:::i;:::-;3198:4;3212;3219:19;:15;3237:1;3219:19;:::i;:::-;3133:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;3286:15:121;-1:-1:-1;;;3385:19:121;3403:1;3385:15;:19;:::i;:::-;3315:107;;;;;25154:25:152;;;;3406:15:121;25195:18:152;;;25188:34;25127:18;;3315:107:121;;;-1:-1:-1;;3315:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;3315:107:121;-1:-1:-1;;;;;;3315:107:121;;;;;;3286:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3442:6:121;;-1:-1:-1;;;;;3442:6:121;;-1:-1:-1;3442:31:121;;-1:-1:-1;3474:8:121;3484:17;3503:4;3517;3524:19;3442:6;3524:15;:19;:::i;:::-;3442:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3623:15:121;;;3636:1;3623:15;;;;;;;;3606:14;;;:32;;;;3664:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3664:68:121;-1:-1:-1;;;3664:68:121;;;3648:85;;-1:-1:-1;;;3648:85:121;;-1:-1:-1;;;;;;;;;;;3648:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3743:6:121;;-1:-1:-1;;;;;3743:6:121;;-1:-1:-1;3743:31:121;;-1:-1:-1;3775:8:121;3785:17;3804:4;3818;3825:19;:15;3743:6;3825:19;:::i;:::-;3743:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3917:15:121;;;3930:1;3917:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3900:14:121;;;:32;;;3962:4;;3942:17;;-1:-1:-1;;;;;3962:4:121;;;;3900:32;3962:4;;3942:17;;;;:::i;:::-;-1:-1:-1;;;;;3942:24:121;;;:17;;;;;;;;;:24;3996:8;;3976:14;;;;:17;;3996:8;;;;;3976:14;3996:8;;3976:17;;;;;;:::i;:::-;-1:-1:-1;;;;;3976:28:121;;;:17;;;;;;;;;:28;4111:4;;4117:8;;4043:101;;4111:4;;;4043:101;;;10030:34:152;4117:8:121;;;10080:18:152;;;10073:43;1340:2:123;10132:18:152;;;10125:47;-1:-1:-1;;;;;;;;;;;4014:15:121;;;-1:-1:-1;;;4066:43:121;9942:18:152;;4043:101:121;;;-1:-1:-1;;4043:101:121;;;;;;;;;;;;;;-1:-1:-1;;;;;4043:101:121;-1:-1:-1;;;;;;4043:101:121;;;;;;4014:140;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4164:6:121;;-1:-1:-1;;;;;4164:6:121;;-1:-1:-1;4164:31:121;;-1:-1:-1;4196:8:121;4206:17;4225:4;4239;4246:19;:15;4164:6;4246:19;:::i;8629:1774::-;8738:7;;;8767:4;;8773;;8738:58;;-1:-1:-1;;;8738:58:121;;-1:-1:-1;;;;;8767:4:121;;;8738:58;;;10030:34:152;8773:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;8707:5:121;;8687:17;;8738:7;;;;;:28;;9942:18:152;;8738:58:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;8844:6;;:39;;-1:-1:-1;;;8844:39:121;;-1:-1:-1;;;;;20159:55:152;;;8844:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;8844:6:121;20315:18:152;;;20308:50;8738:65:121;;-1:-1:-1;8814:24:121;;8844:6;;;;:16;;20114:18:152;;8844:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;8934:4:121;;8940;;8813:70;;-1:-1:-1;8894:26:121;;8923:22;;-1:-1:-1;;;;;8934:4:121;;;;8940;8923:10;:22::i;:::-;8980:4;;:29;;-1:-1:-1;;;8980:29:121;;9003:4;8980:29;;;24630:74:152;8894:51:121;;-1:-1:-1;8956:21:121;;-1:-1:-1;;;;;8980:4:121;;;;:14;;24603:18:152;;8980:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9063:6;;8956:53;;-1:-1:-1;9021:26:121;;-1:-1:-1;;;;;9063:6:121;:31;9095:9;9106:16;9124:4;9138;9145:19;:15;9063:6;9145:19;:::i;:::-;9063:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9063:102:121;;;;;;;;;;;;:::i;:::-;9020:145;;9176:76;9185:9;9195:1;9185:12;;;;;;;;:::i;:::-;;;;;;;9199:16;-1:-1:-1;;;;;9176:76:121;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;9271:4;;:29;;-1:-1:-1;;;9271:29:121;;9294:4;9271:29;;;24630:74:152;9262:105:121;;-1:-1:-1;;;;;9271:4:121;;:14;;24603:18:152;;9271:29:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9318:9;9328:1;9318:12;;;;;;;;:::i;:::-;;;;;;;9302:13;:28;;;;:::i;:::-;9262:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;9401:6;;:39;;-1:-1:-1;;;9401:39:121;;-1:-1:-1;;;;;20159:55:152;;;9401:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;9401:6:121;20315:18:152;;;20308:50;9401:6:121;;;;:16;;20114:18:152;;9401:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9378:62:121;;-1:-1:-1;;;;;;;;;;;;9493:15:121;-1:-1:-1;9493:15:121;-1:-1:-1;;;9612:20:121;9631:1;9378:62;9612:20;:::i;:::-;9522:142;;-1:-1:-1;;;;;21749:15:152;;;9522:142:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;9522:142:121;;;-1:-1:-1;;9522:142:121;;;;;;;;;;;;;;-1:-1:-1;;;;;9522:142:121;-1:-1:-1;;;;;;9522:142:121;;;;;;9493:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9684:6:121;;-1:-1:-1;;;;;9684:6:121;;-1:-1:-1;9684:31:121;;-1:-1:-1;9716:9:121;9727:20;9684:6;9727:16;:20;:::i;:::-;9749:4;9763;9770:19;:15;9788:1;9770:19;:::i;2592:140:6:-;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12802:205:123;12880:6;;12911:12;12922:1;12911:12;;;;:::i;:::-;12898:25;;12947:1;12938:6;:10;;;:33;;12969:2;12938:33;;;12951:11;;;;:2;:11;:::i;:::-;:15;;12965:1;12951:15;:::i;:::-;12933:38;;12989:11;:2;:9;:11::i;:::-;12982:18;12802:205;-1:-1:-1;;;;;12802:205:123:o;12528:2204:121:-;12637:7;;;12666;;12675:4;;12637:61;;-1:-1:-1;;;12637:61:121;;-1:-1:-1;;;;;12666:7:121;;;12637:61;;;10030:34:152;12675:4:121;;;10080:18:152;;;10073:43;;;;1340:2:123;10132:18:152;;;10125:47;12606:5:121;;12586:17;;12637:7;;;;;:28;;9942:18:152;;12637:61:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;12746:6;;:39;;-1:-1:-1;;;12746:39:121;;-1:-1:-1;;;;;20159:55:152;;;12746:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;12746:6:121;20315:18:152;;;20308:50;12637:68:121;;-1:-1:-1;12716:24:121;;12746:6;;;;:16;;20114:18:152;;12746:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;12836:7:121;;12845:4;;12715:70;;-1:-1:-1;12796:26:121;;12825:25;;-1:-1:-1;;;;;12836:7:121;;;;12845:4;12825:10;:25::i;:::-;13002:6;;12796:54;;-1:-1:-1;12885:21:121;;12861;;-1:-1:-1;;;;;13002:6:121;:31;13041:22;:16;13060:3;13041:22;:::i;:::-;-1:-1:-1;;;;;13002:137:121;13078:9;13089:4;13103;13110:19;:15;13128:1;13110:19;:::i;:::-;13002:137;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13002:137:121;;;;;;;;;;;;:::i;:::-;12971:168;;13150:76;13159:9;13169:1;13159:12;;;;;;;;:::i;:::-;;;;;;;13173:16;-1:-1:-1;;;;;13150:76:121;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;13236:97;13245:21;13284:9;13294:1;13284:12;;;;;;;;:::i;:::-;;;;;;;13268:13;:28;;;;:::i;:::-;13236:97;;;;;;;;;;;;;;;;;:8;:97::i;:::-;13367:6;;:39;;-1:-1:-1;;;13367:39:121;;-1:-1:-1;;;;;20159:55:152;;;13367:39:121;;;20141:74:152;-1:-1:-1;;;;;20251:47:152;;20231:18;;;20224:75;13367:6:121;20315:18:152;;;20308:50;13367:6:121;;;;:16;;20114:18:152;;13367:39:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13344:62:121;;-1:-1:-1;;;;;;;;;;;;13470:15:121;-1:-1:-1;13470:15:121;-1:-1:-1;;;13589:20:121;13608:1;13344:62;13589:20;:::i;:::-;13499:142;;-1:-1:-1;;;;;21749:15:152;;;13499:142:121;;;21731:34:152;21801:15;;;21781:18;;;21774:43;21651:18;;13499:142:121;;;-1:-1:-1;;13499:142:121;;;;;;;;;;;;;;-1:-1:-1;;;;;13499:142:121;-1:-1:-1;;;;;;13499:142:121;;;;;;13470:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:6:121;;-1:-1:-1;;;;;13661:6:121;;-1:-1:-1;13661:31:121;;-1:-1:-1;13700:20:121;13719:1;13700:16;:20;:::i;:::-;-1:-1:-1;;;;;13661:135:121;13735:9;13746:4;13760;13767:19;:15;13785:1;13767:19;:::i;:::-;13661:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:135:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13871:4:121;;13851:14;;;;:17;;-1:-1:-1;;;;;13871:4:121;;;;;;13851:17;;;;:::i;:::-;-1:-1:-1;;;;;13851:24:121;;;:17;;;;;;;;;:24;13979:4;;13901:84;;13979:4;;13901:84;;;24630:74:152;-1:-1:-1;;;;;;;;;;;13885:15:121;;;-1:-1:-1;;;13924:45:121;24603:18:152;;13901:84:121;;;-1:-1:-1;;13901:84:121;;;;;;;;;;;;;;-1:-1:-1;;;;;13901:84:121;-1:-1:-1;;;;;;13901:84:121;;;;;;13885:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:6:121;;-1:-1:-1;;;;;13996:6:121;;-1:-1:-1;13996:31:121;;-1:-1:-1;;;;;;13996:109:121;;14053:9;14064:4;14078;14085:19;:15;13996:6;14085:19;:::i;:::-;13996:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:109:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;14152:15:121;-1:-1:-1;;;14251:19:121;14269:1;14251:15;:19;:::i;:::-;14181:107;;;;;25154:25:152;;;;14272:15:121;25195:18:152;;;25188:34;25127:18;;14181:107:121;;;-1:-1:-1;;14181:107:121;;;;;;;;;;;;;;-1:-1:-1;;;;;14181:107:121;-1:-1:-1;;;;;;14181:107:121;;;;;;14152:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:6:121;;-1:-1:-1;;;;;14308:6:121;;-1:-1:-1;14308:31:121;;-1:-1:-1;;;;;;14308:109:121;;14365:9;14376:4;14390;14397:19;14308:6;14397:15;:19;:::i;:::-;14308:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:109:121;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14496:15:121;;;14509:1;14496:15;;;;;;;;14479:14;;;:32;;;;14537:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14537:68:121;-1:-1:-1;;;14537:68:121;;;14521:85;;-1:-1:-1;;;14521:85:121;;-1:-1:-1;;;;;;;;;;;14521:15:121;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:6:121;;-1:-1:-1;;;;;14616:6:121;;-1:-1:-1;14616:31:121;;-1:-1:-1;;;;;;14616:109:121;;14673:9;14684:4;14698;14705:19;:15;14616:6;14705:19;:::i;:::-;14616:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:109:121;;;;;;;;;;;;:::i;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10653:1171:123;10882:13;10898:6;-1:-1:-1;;;;;10898:16:123;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10882:34;;10926:13;10942:6;-1:-1:-1;;;;;10942:16:123;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10926:34;;10971:36;10984:6;10993:4;10999:7;10971:4;:36::i;:::-;11017;11030:6;11039:4;11045:7;11017:4;:36::i;:::-;11064:13;11080:28;11093:6;11101;11080:12;:28::i;:::-;11064:44;;11119:40;11176:5;11162:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11162:20:123;;11119:63;;11198:9;11193:412;11213:5;11209:1;:9;11193:412;;;11239:9;11251:26;11257:8;11267:1;11270:6;11251:5;:26::i;:::-;11239:38;;11292:15;11316:8;11310:14;;:2;:14;;;;:28;;;;;11337:1;11328:6;:10;;;11310:28;:74;;11383:1;11310:74;;;11341:39;11342:28;;;;363:4:88;11342:28:123;:::i;:::-;11341:37;:39::i;:::-;11292:92;;11398:15;11422:8;11416:14;;:2;:14;;;;:28;;;;;11443:1;11434:6;:10;;;11416:28;:74;;11489:1;11416:74;;;11447:39;11448:28;;;;363:4:88;11448:28:123;:::i;11447:39::-;11398:92;;11534:60;11571:8;11581;11591:2;11534:36;:60::i;:::-;11505:23;11529:1;11505:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11225:380;;;11220:3;;;;:::i;:::-;;;11193:412;;;-1:-1:-1;11615:19:123;;-1:-1:-1;;;11615:19:123;;-1:-1:-1;;;;;24648:55:152;;11615:19:123;;;24630:74:152;-1:-1:-1;;;;;;;;;;;11615:13:123;;;24603:18:152;;11615:19:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11644:41:123;;-1:-1:-1;;;11644:41:123;;-1:-1:-1;;;;;11557:55:152;;;11644:41:123;;;11539:74:152;11629:18;;;11622:34;;;11644:15:123;;;-1:-1:-1;11644:15:123;;-1:-1:-1;11512:18:152;;11644:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11695:41:123;;-1:-1:-1;;;11695:41:123;;-1:-1:-1;;;;;11557:55:152;;;11695:41:123;;;11539:74:152;11629:18;;;11622:34;;;11695:15:123;;;;;11512:18:152;;11695:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11746:12:123;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11771:6;-1:-1:-1;;;;;11771:11:123;;11783:2;11787:23;11812:4;11771:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11771:46:123;;;;;;;;;;;;:::i;:::-;;;;10872:952;;;;10653:1171;;;;;;;;:::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13013:134:123;13114:7;;;:26;;-1:-1:-1;;;13114:26:123;;30945:6:152;30933:19;;13114:26:123;;;30915:38:152;13072:11:123;;-1:-1:-1;;;;;13114:7:123;;;;:17;;30888:18:152;13114:26:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13095:45;13013:134;-1:-1:-1;;;;;;;;;13013:134:123:o;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;11539:74:152;;;1398:17:2;11629:18:152;;;11622:34;1428:1:2;;1377:7;;11512:18:152;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;11830:792:123:-;363:4:88;12051:13:123;:36;;12043:73;;;;-1:-1:-1;;;12043:73:123;;32296:2:152;12043:73:123;;;32278:21:152;32335:2;32315:18;;;32308:30;32374:26;32354:18;;;32347:54;32418:18;;12043:73:123;;;;;;;;;12127:13;12143:28;12156:6;12164;12143:12;:28::i;:::-;12127:44;;12182:20;12219:5;12205:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12205:20:123;;12182:43;;12235:24;12276:5;12262:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12262:20:123;;12235:47;;12298:9;12293:253;12313:5;12309:1;:9;12293:253;;;12339:9;12351:26;12357:8;12367:1;12370:6;12351:5;:26::i;:::-;12403;;-1:-1:-1;;;12403:26:123;;-1:-1:-1;;;;;12435:55:152;;;12403:26:123;;;12417:74:152;12539:8;12527:21;;12507:18;;;12500:49;12339:38:123;;-1:-1:-1;12391:9:123;;12403:16;;;;;12390:18:152;;12403:26:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12391:38;;12453:2;12444:11;;:3;12448:1;12444:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12482:53;:1;12500:13;363:4:88;12482:17:123;:53::i;:::-;12469:7;12477:1;12469:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12325:221;;12320:3;;;;:::i;:::-;;;12293:253;;;-1:-1:-1;12556:14:123;;-1:-1:-1;;;12556:14:123;;-1:-1:-1;;;;;24648:55:152;;12556:14:123;;;24630:74:152;-1:-1:-1;;;;;;;;;;;12556:8:123;;;24603:18:152;;12556:14:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12580:35:123;;-1:-1:-1;;;12580:35:123;;-1:-1:-1;;;;;12580:11:123;;;-1:-1:-1;12580:11:123;;-1:-1:-1;12580:35:123;;12592:4;;12598:2;;12602:3;;12607:7;;12580:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12580:35:123;;;;;;;;;;;;:::i;:::-;;12033:589;;;11830:792;;;;;;;:::o;2759:3443::-;2801:7;:45;;-1:-1:-1;;;;;;2801:45:123;610:42:125;2801:45:123;;;;;;2899:28;2801:7;2899:33;2895:118;;2964:7;;2982:13;;-1:-1:-1;;;;;;;;;;;2948:7:123;;;-1:-1:-1;;;;;2964:7:123;;;;2982:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2974:27:123;;;;;;;;;;;;;;;;;;;;;;;;2948:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:118;3068:1;3054:16;;;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3054:16:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3047:4:123;:23;;-1:-1:-1;;;;;;3047:23:123;-1:-1:-1;;;;;3047:23:123;;;;;;;;;;3087:16;;3101:1;;3087:16;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3087:16:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:4:123;:23;;-1:-1:-1;;;;;;3080:23:123;-1:-1:-1;;;;;3080:23:123;;;;;;;;;;3120:16;;3134:1;;3120:16;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3120:16:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3113:4:123;:23;;-1:-1:-1;;;;;;3113:23:123;-1:-1:-1;;;;;3113:23:123;;;;;;;;;;3153:17;;3167:2;;3153:17;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3153:17:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3146:4:123;:24;;-1:-1:-1;;;;;;3146:24:123;-1:-1:-1;;;;;3146:24:123;;;;;;;;;;3187:17;;3201:2;;3187:17;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3187:17:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3180:4:123;:24;;-1:-1:-1;;;;;;3180:24:123;-1:-1:-1;;;;;3180:24:123;;;;;;;;;;3220:17;;3234:2;;3220:17;;;:::i;:::-;34347:4:152;34335:17;;;34317:36;;34305:2;34290:18;3220:17:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3214:3:123;:23;;-1:-1:-1;;;;;;3214:23:123;-1:-1:-1;;;;;3214:23:123;;;;;;;;;;3258:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3247:8:123;:37;;-1:-1:-1;;;;;;3247:37:123;-1:-1:-1;;;;;3247:37:123;;;;;;3335:7;;3318:37;;;-1:-1:-1;;;3318:37:123;;3335:7;;;;3318:37;;;34975:74:152;35065:18;;;35058:30;;;;35124:1;35104:18;;;35097:29;35162:9;35142:18;;;35135:37;-1:-1:-1;;;;;;;;;;;3318:8:123;;;35189:19:152;;3318:37:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3382:4:123;;3365:31;;;-1:-1:-1;;;3365:31:123;;-1:-1:-1;;;;;3382:4:123;;;3365:31;;;;35431:74:152;;;;35521:18;;;35514:30;;;;35560:18;;;35553:29;-1:-1:-1;;;35598:18:152;;;35591:34;-1:-1:-1;;;;;;;;;;;3365:8:123;-1:-1:-1;3365:8:123;;-1:-1:-1;35642:19:152;;3365:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3423:4:123;;3406:31;;;-1:-1:-1;;;3406:31:123;;-1:-1:-1;;;;;3423:4:123;;;3406:31;;;;35884:74:152;;;;35974:18;;;35967:30;;;;36013:18;;;36006:29;-1:-1:-1;;;36051:18:152;;;36044:34;-1:-1:-1;;;;;;;;;;;3406:8:123;-1:-1:-1;3406:8:123;;-1:-1:-1;36095:19:152;;3406:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3464:4:123;;3447:31;;;-1:-1:-1;;;3447:31:123;;-1:-1:-1;;;;;3464:4:123;;;3447:31;;;;36337:74:152;;;;36427:18;;;36420:30;;;;36466:18;;;36459:29;-1:-1:-1;;;36504:18:152;;;36497:34;-1:-1:-1;;;;;;;;;;;3447:8:123;-1:-1:-1;3447:8:123;;-1:-1:-1;36548:19:152;;3447:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3505:4:123;;3488:31;;;-1:-1:-1;;;3488:31:123;;-1:-1:-1;;;;;3505:4:123;;;3488:31;;;;36790:74:152;;;;36880:18;;;36873:30;;;;36919:18;;;36912:29;-1:-1:-1;;;36957:18:152;;;36950:34;-1:-1:-1;;;;;;;;;;;3488:8:123;-1:-1:-1;3488:8:123;;-1:-1:-1;37001:19:152;;3488:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3546:4:123;;3529:31;;;-1:-1:-1;;;3529:31:123;;-1:-1:-1;;;;;3546:4:123;;;3529:31;;;;37243:74:152;;;;37333:18;;;37326:30;;;;37372:18;;;37365:29;-1:-1:-1;;;37410:18:152;;;37403:34;-1:-1:-1;;;;;;;;;;;3529:8:123;-1:-1:-1;3529:8:123;;-1:-1:-1;37454:19:152;;3529:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3587:3:123;;3570:29;;;-1:-1:-1;;;3570:29:123;;-1:-1:-1;;;;;3587:3:123;;;3570:29;;;37696:74:152;37786:18;;;37779:30;37845:1;37825:18;;;37818:29;-1:-1:-1;;;37863:18:152;;;37856:33;-1:-1:-1;;;;;;;;;;;3570:8:123;-1:-1:-1;3570:8:123;;-1:-1:-1;37906:19:152;;3570:29:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3626:8:123;;3609:39;;;-1:-1:-1;;;3609:39:123;;-1:-1:-1;;;;;3626:8:123;;;3609:39;;;38148:74:152;38238:18;;;38231:30;38297:1;38277:18;;;38270:29;38335:10;38315:18;;;38308:38;-1:-1:-1;;;;;;;;;;;3609:8:123;-1:-1:-1;3609:8:123;;-1:-1:-1;38363:19:152;;3609:39:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3691:8:123;:67;;-1:-1:-1;;;;;;3691:67:123;;;335:42:125;3691:67:123;;;;3768:9;:70;;;;;240:42:125;3768:70:123;;;-1:-1:-1;;3899:15:123;;3691:8;;3899:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3875:39;;3992:11;4006:3;3952:62;;;;;:::i;:::-;-1:-1:-1;;;;;38719:15:152;;;38701:34;;38771:15;;38766:2;38751:18;;38744:43;38823:2;38818;38803:18;;38796:30;;;-1:-1:-1;38842:18:152;;;38835:29;38896:3;38881:19;3952:62:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3924:7:123;:92;;-1:-1:-1;;;;;;3924:92:123;-1:-1:-1;;;;;3924:92:123;;;;;;;;;4056:40;;-1:-1:-1;;3924:92:123;4056:40;;;:::i;:::-;-1:-1:-1;;;;;24648:55:152;;;24630:74;;24618:2;24603:18;4056:40:123;;;;;;;;;;;;;;;;;;;;;;;4026:70;;4106:47;4192:20;4215:3;4228:7;;;;;;;;;-1:-1:-1;;;;;4228:7:123;4156:81;;;;;:::i;:::-;-1:-1:-1;;;;;39451:15:152;;;39433:34;;39503:15;;;39498:2;39483:18;;39476:43;39555:15;;;39550:2;39535:18;;39528:43;39360:2;39345:18;4156:81:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4247:7:123;;;:85;;-1:-1:-1;;;4247:85:123;;-1:-1:-1;;;;;4266:3:123;39908:15:152;;4247:85:123;;;39890:34:152;;;39940:18;;;39933:43;;;;1892:4:123;39992:18:152;;;39985:34;40055:15;;;40035:18;;;40028:43;40055:15;;-1:-1:-1;4247:7:123;;:18;;39801:19:152;;4247:85:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4374:7:123;;4363:19;;-1:-1:-1;;;;;4374:7:123;;;;-1:-1:-1;4363:19:123;;-1:-1:-1;4363:19:123;:::i;:::-;-1:-1:-1;;;;;24648:55:152;;;24630:74;;24618:2;24603:18;4363:19:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4342:18:123;:40;;-1:-1:-1;;;;;;4342:40:123;-1:-1:-1;;;;;4342:40:123;;;;;;;;;4418:7;;;:60;;-1:-1:-1;;;4418:60:123;;;;;24630:74:152;;;;4418:7:123;;;;:31;;24603:18:152;4418:60:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:30;:28;:30::i;:::-;4528:42;1340:2;4528:24;:42::i;:::-;4628:7;;4637:9;;4665:7;;4615:60;;-1:-1:-1;;;;;4628:7:123;;;;4637:9;;;;4665:7;;;;4615:60;;;:::i;:::-;-1:-1:-1;;;;;39451:15:152;;;39433:34;;39503:15;;;39498:2;39483:18;;39476:43;39555:15;;;39550:2;39535:18;;39528:43;39360:2;39345:18;4615:60:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4606:6:123;:69;;-1:-1:-1;;;;;;4606:69:123;-1:-1:-1;;;;;4606:69:123;;;;;;;;;4754:9;;4786:7;;4720:113;;4754:9;;;;4786:7;;4606:69;4720:113;;;:::i;:::-;-1:-1:-1;;;;;39451:15:152;;;39433:34;;39503:15;;;39498:2;39483:18;;39476:43;39555:15;;;39550:2;39535:18;;39528:43;39360:2;39345:18;4720:113:123;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4711:6:123;:122;;-1:-1:-1;;;;;;4711:122:123;-1:-1:-1;;;;;4711:122:123;;;;;;4897:6;;4880:35;;;-1:-1:-1;;;4880:35:123;;4897:6;;;;4880:35;;;41433:74:152;41523:18;;;41516:30;;;;41582:1;41562:18;;;41555:29;41620:8;41600:18;;;41593:36;-1:-1:-1;;;;;;;;;;;4880:8:123;;;41646:19:152;;4880:35:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4942:6:123;;4925:35;;;-1:-1:-1;;;4925:35:123;;-1:-1:-1;;;;;4942:6:123;;;4925:35;;;41888:74:152;41978:18;;;41971:30;42037:1;42017:18;;;42010:29;42075:8;42055:18;;;42048:36;-1:-1:-1;;;;;;;;;;;4925:8:123;-1:-1:-1;4925:8:123;;-1:-1:-1;42101:19:152;;4925:35:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4987:7:123;;;4970:37;;;-1:-1:-1;;;4970:37:123;;-1:-1:-1;;;;;4987:7:123;;;4970:37;;;42343:74:152;42433:18;;;42426:30;;;;42492:1;42472:18;;;42465:29;42530:9;42510:18;;;42503:37;-1:-1:-1;;;;;;;;;;;4970:8:123;-1:-1:-1;4970:8:123;;-1:-1:-1;42557:19:152;;4970:37:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5034:18:123;;5017:59;;;-1:-1:-1;;;5017:59:123;;-1:-1:-1;;;;;5034:18:123;;;5017:59;;;42799:74:152;42889:18;;;42882:30;42948:2;42928:18;;;42921:30;42987:20;42967:18;;;42960:48;-1:-1:-1;;;;;;;;;;;5017:8:123;-1:-1:-1;5017:8:123;;-1:-1:-1;43025:19:152;;5017:59:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5127:8:123;;5110:39;;;-1:-1:-1;;;5110:39:123;;-1:-1:-1;;;;;5127:8:123;;;5110:39;;;43267:74:152;43357:18;;;43350:30;43416:1;43396:18;;;43389:29;43454:10;43434:18;;;43427:38;-1:-1:-1;;;;;;;;;;;5110:8:123;-1:-1:-1;5110:8:123;;-1:-1:-1;43482:19:152;;5110:39:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5176:9:123;;5159:41;;;-1:-1:-1;;;5159:41:123;;-1:-1:-1;;;;;5176:9:123;;;5159:41;;;43724:74:152;43814:18;;;43807:30;43873:1;43853:18;;;43846:29;43911:11;43891:18;;;43884:39;-1:-1:-1;;;;;;;;;;;5159:8:123;-1:-1:-1;5159:8:123;;-1:-1:-1;43940:19:152;;5159:41:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5248:7:123;;5272:8;;5248:53;;-1:-1:-1;;;5248:53:123;;-1:-1:-1;;;;;5272:8:123;;;5248:53;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5248:7:123;;;-1:-1:-1;5248:15:123;;-1:-1:-1;11512:18:152;;5248:53:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5311:4:123;;5332:8;;5311:50;;-1:-1:-1;;;5311:50:123;;-1:-1:-1;;;;;5332:8:123;;;5311:50;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5311:4:123;;;:12;;11512:18:152;;5311:50:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5371:4:123;;5392:8;;5371:50;;-1:-1:-1;;;5371:50:123;;-1:-1:-1;;;;;5392:8:123;;;5371:50;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5371:4:123;;;:12;;11512:18:152;;5371:50:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5431:4:123;;5452:8;;5431:50;;-1:-1:-1;;;5431:50:123;;-1:-1:-1;;;;;5452:8:123;;;5431:50;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5431:4:123;;;:12;;11512:18:152;;5431:50:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5491:4:123;;5512:8;;5491:50;;-1:-1:-1;;;5491:50:123;;-1:-1:-1;;;;;5512:8:123;;;5491:50;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5491:4:123;;;:12;;11512:18:152;;5491:50:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5551:4:123;;5572:8;;5551:50;;-1:-1:-1;;;5551:50:123;;-1:-1:-1;;;;;5572:8:123;;;5551:50;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5551:4:123;;;:12;;11512:18:152;;5551:50:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5611:3:123;;5631:8;;5611:49;;-1:-1:-1;;;5611:49:123;;-1:-1:-1;;;;;5631:8:123;;;5611:49;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5611:3:123;;;:11;;11512:18:152;;5611:49:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5670:8:123;;5695;;5670:54;;-1:-1:-1;;;5670:54:123;;-1:-1:-1;;;;;5695:8:123;;;5670:54;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5670:8:123;;;:16;;11512:18:152;;5670:54:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5735:7:123;;5759:6;;5735:51;;-1:-1:-1;;;5735:51:123;;-1:-1:-1;;;;;5759:6:123;;;5735:51;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5735:7:123;;;:15;;11512:18:152;;5735:51:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5796:4:123;;5817:6;;5796:48;;-1:-1:-1;;;5796:48:123;;-1:-1:-1;;;;;5817:6:123;;;5796:48;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5796:4:123;;;:12;;11512:18:152;;5796:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5854:4:123;;5875:6;;5854:48;;-1:-1:-1;;;5854:48:123;;-1:-1:-1;;;;;5875:6:123;;;5854:48;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5854:4:123;;;:12;;11512:18:152;;5854:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5912:4:123;;5933:6;;5912:48;;-1:-1:-1;;;5912:48:123;;-1:-1:-1;;;;;5933:6:123;;;5912:48;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5912:4:123;;;:12;;11512:18:152;;5912:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5970:4:123;;5991:6;;5970:48;;-1:-1:-1;;;5970:48:123;;-1:-1:-1;;;;;5991:6:123;;;5970:48;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;5970:4:123;;;:12;;11512:18:152;;5970:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6028:4:123;;6049:6;;6028:48;;-1:-1:-1;;;6028:48:123;;-1:-1:-1;;;;;6049:6:123;;;6028:48;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;6028:4:123;;;:12;;11512:18:152;;6028:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6086:3:123;;6106:6;;6086:47;;-1:-1:-1;;;6086:47:123;;-1:-1:-1;;;;;6106:6:123;;;6086:47;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;6086:3:123;;;:11;;11512:18:152;;6086:47:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6143:8:123;;6168:6;;6143:52;;-1:-1:-1;;;6143:52:123;;-1:-1:-1;;;;;6168:6:123;;;6143:52;;;11539:74:152;-1:-1:-1;;11629:18:152;;;11622:34;6143:8:123;;;:16;;11512:18:152;;6143:52:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2791:3411;;;2759:3443::o;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;8380:1036:123:-;8585:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8585:56:123;8654:20;8676:30;8708;8740:17;8773:52;8789:9;8800:7;8809:10;8821:3;8773:15;:52::i;:::-;8653:172;;;;;;;;8858:551;;;;;;;;8910:6;-1:-1:-1;;;;;8858:551:123;;;;;8938:6;-1:-1:-1;;;;;8858:551:123;;;;;1340:2;8858:551;;;;;;9006:9;8858:551;;;;9038:9;8858:551;;;;9073:1;8858:551;;;;9100:1;8858:551;;;;9132:7;8858:551;;;;;;9165:1;8858:551;;;;9190:30;9212:7;9190:3;:21;;:30;;;;:::i;:::-;8858:551;;;;;;;;;;;;;;-1:-1:-1;;;;;9322:3:123;8858:551;;;;;;;;;;;;;9376:22;:15;9394:4;9376:22;:::i;:::-;8858:551;;8836:573;8380:1036;-1:-1:-1;;;;;;;;;;;8380:1036:123:o;19644:425:121:-;19719:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;19719:26:121;19777:16;;;19791:1;19777:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19757:36:121;;;19803:20;;1340:2:123;;19757:36:121;:17;;19803:20;;;;:::i;:::-;;;;;;;;;;:39;19869:26;;;19893:1;19869:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19853:13:121;;;:42;;;19905:16;;19924:20;;19853:42;19919:1;;19905:16;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;19972:15:121;;;19985:1;19972:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19955:14:121;;;:32;;;19997:17;;20017:7;;19955:32;20012:1;;19997:17;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;19997:27:121;;;-1:-1:-1;;;;;19997:27:121;;;;;20054:8;20034:4;:14;;;20049:1;20034:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;20034:28:121;;;-1:-1:-1;;;;;20034:28:121;;;;;19644:425;;;;:::o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10236:135:102;10329:1;10310:20;;;;;10306:58;;10339:25;;-1:-1:-1;;;10339:25:102;;;;;;;;;;;10306:58;10236:135;;;:::o;8711:::-;8804:1;8785:20;;;;;8781:58;;8814:25;;-1:-1:-1;;;8814:25:102;;;;;;;;;;;1214:392:100;674:2;1398:29:99;;;;;731:2:100;1398:29:99;;;;;1383:45;1553:46:100;;;1383:45:99;;1553:46:100;1544:55;1214:392;-1:-1:-1;;;;1214:392:100:o;956:247:106:-;1047:14;1074:13;1089;1106:18;1119:1;1122;1106:12;:18::i;:::-;1073:51;;;;1142:54;1164:1;1167;1170:11;1183:5;1190;1142:21;:54::i;:::-;1135:61;956:247;-1:-1:-1;;;;;;956:247:106:o;6667:628:123:-;6738:7;;-1:-1:-1;;;;;6738:7:123;6730:30;6726:66;;6762:7;;;6784;;6762:30;;-1:-1:-1;;;6762:30:123;;-1:-1:-1;;;;;6784:7:123;;;6762:30;;;24630:74:152;6762:7:123;;;:21;;24603:18:152;6762:30:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6726:66;6814:4;;-1:-1:-1;;;;;6814:4:123;6806:27;6802:60;;6835:7;;;6857:4;;6835:27;;-1:-1:-1;;;6835:27:123;;-1:-1:-1;;;;;6857:4:123;;;6835:27;;;24630:74:152;6835:7:123;;;:21;;24603:18:152;6835:27:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:60;6884:4;;-1:-1:-1;;;;;6884:4:123;6876:27;6872:60;;6905:7;;;6927:4;;6905:27;;-1:-1:-1;;;6905:27:123;;-1:-1:-1;;;;;6927:4:123;;;6905:27;;;24630:74:152;6905:7:123;;;:21;;24603:18:152;6905:27:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6872:60;6954:4;;-1:-1:-1;;;;;6954:4:123;6946:27;6942:60;;6975:7;;;6997:4;;6975:27;;-1:-1:-1;;;6975:27:123;;-1:-1:-1;;;;;6997:4:123;;;6975:27;;;24630:74:152;6975:7:123;;;:21;;24603:18:152;6975:27:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:60;7024:4;;-1:-1:-1;;;;;7024:4:123;7016:27;7012:60;;7045:7;;;7067:4;;7045:27;;-1:-1:-1;;;7045:27:123;;-1:-1:-1;;;;;7067:4:123;;;7045:27;;;24630:74:152;7045:7:123;;;:21;;24603:18:152;7045:27:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7012:60;7094:4;;-1:-1:-1;;;;;7094:4:123;7086:27;7082:60;;7115:7;;;7137:4;;7115:27;;-1:-1:-1;;;7115:27:123;;-1:-1:-1;;;;;7137:4:123;;;7115:27;;;24630:74:152;7115:7:123;;;:21;;24603:18:152;7115:27:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7082:60;7164:3;;-1:-1:-1;;;;;7164:3:123;7156:26;7152:58;;7184:7;;;7206:3;;7184:26;;-1:-1:-1;;;7184:26:123;;-1:-1:-1;;;;;7206:3:123;;;7184:26;;;24630:74:152;7184:7:123;;;:21;;24603:18:152;7184:26:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7152:58;7232:8;;-1:-1:-1;;;;;7232:8:123;7224:31;7220:68;;7257:7;;;7279:8;;7257:31;;-1:-1:-1;;;7257:31:123;;-1:-1:-1;;;;;7279:8:123;;;7257:31;;;24630:74:152;7257:7:123;;;:21;;24603:18:152;7257:31:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:68;6667:628::o;7301:422::-;7370:7;;;:346;;-1:-1:-1;;;7370:346:123;;45458:6:152;45491:15;;7370:346:123;;;45473:34:152;1395:5:123;45523:18:152;;;45516:43;;;1455:2:123;45575:18:152;;;45568:43;1511:3:123;45627:18:152;;;45620:43;45679:19;;;45672:44;;;;1639:6:123;45759:19:152;;;45752:44;1701:5:123;45812:19:152;;;45805:44;1774:7:123;45865:19:152;;;45858:44;7370:7:123;45918:19:152;;;45911:51;-1:-1:-1;;;;;7370:7:123;;:17;;45420:19:152;;7370:346:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7301:422;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;24648:55:152;;;27501:38:4;;;;24630:74:152;;;;27501:38:4;;;;;;;;;;24603:18:152;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;27748:414::-;27416:752;;27331:837;;;;:::o;9422:1225:123:-;9573:20;;;9695:17;9741:14;9754:1;9741:10;:14;:::i;:::-;:19;;9759:1;9741:19;9737:92;;9776:42;;-1:-1:-1;;;9776:42:123;;46653:2:152;9776:42:123;;;46635:21:152;;;46672:18;;;46665:30;46731:34;46711:18;;;46704:62;46783:18;;9776:42:123;46451:356:152;9737:92:123;9839:13;9855:14;9868:1;9855:10;:14;:::i;:::-;9839:30;;9899:10;9885:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9885:25:123;;9879:31;;9951:10;9937:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9937:25:123;;9921:41;;10002:10;9988:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9988:25:123;-1:-1:-1;9972:41:123;-1:-1:-1;10023:23:123;10072:10;:6;10081:1;10072:10;:::i;:::-;10049:34;;;;363:4:88;10049:34:123;:::i;:::-;10023:60;-1:-1:-1;10093:20:123;10129:10;:6;10138:1;10129:10;:::i;:::-;10116:24;;;;:9;:24;:::i;:::-;10093:47;;10156:9;10151:490;10171:10;10167:14;;:1;:14;10151:490;;;10247:7;10251:3;10247:1;:7;:::i;:::-;10242:13;;;;:1;:13;:::i;:::-;10231:7;10235:3;10231:1;:7;:::i;:::-;10221:18;;:6;:18;:::i;:::-;10211:28;;:7;:28;:::i;:::-;:44;;;;;;:::i;:::-;10202:3;10206:1;10202:6;;;;;;;;:::i;:::-;;;;;;:53;;;;;10279:6;10274:11;;:1;:11;10270:84;;10324:15;10305:13;10319:1;10305:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10270:84;10376:6;10371:11;;:1;:11;10367:264;;10421:15;10402:13;10416:1;10402:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10482:1;10467:12;:16;:149;;10615:1;10467:149;;;10506:86;258:3:88;10561:30:123;10583:3;10587:1;10583:6;;;;;;;;:::i;:::-;;;;;;;10561:14;:30::i;:::-;10506:12;;:86;:30;:86::i;:::-;10454:162;;;;:::i;:::-;;;10367:264;10183:3;;;;:::i;:::-;;;;10151:490;;;;9727:920;;;9422:1225;;;;;;;;;:::o;685:365:124:-;805:27;875:11;:18;862:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;862:32:124;;848:46;;909:9;904:140;928:11;:18;924:1;:22;904:140;;;1024:7;1016:16;;991:11;1003:1;991:14;;;;;;;;:::i;:::-;;;;;;;984:49;;;;:::i;:::-;967:11;979:1;967:14;;;;;;;;:::i;:::-;;;;;;;;;;:66;948:3;;;;:::i;:::-;;;;904:140;;;;685:365;;;;:::o;6220:547:106:-;6286:13;;-1:-1:-1;;6654:1:106;6651;6644:20;6693:1;6690;6686:9;6677:18;;6744:5;6740:2;6737:13;6729:5;6725:2;6721:14;6717:34;6708:43;;;6220:547;;;;;:::o;7208:3395::-;7358:14;7450:5;7459:1;7450:10;7446:3151;;7521:11;7513:5;:19;;;;;:::i;:::-;;7504:28;;7446:3151;;;7677:11;7668:5;:20;7664:66;;7697:33;;-1:-1:-1;;;7697:33:106;;;;;;;;;;;7664:66;7829:17;7964:11;7961:1;7958;7951:25;8543:1;8528:12;;:16;;8513:32;;8495:15;8944;;;8940:29;;;8936:37;;;8078:20;;;8067:32;;;9073:15;;;;8125:21;;8775:19;;;9064:24;;;;9459:1;8663:25;;;;9440:1;:15;;9439:21;;9703;;;9699:25;;9688:36;9776:21;;;9772:25;;9761:36;9850:21;;;9846:25;;9835:36;9924:21;;;9920:25;;9909:36;9998:21;;;9994:25;;9983:36;10073:21;;;10069:25;;;10058:36;;;10557:15;;;;;;-1:-1:-1;;;;7208:3395:106:o;9231:156:9:-;4680:12;;;:22;;-1:-1:-1;;;;;;4680:22:9;-1:-1:-1;;;;;4680:22:9;;;;;-1:-1:-1;4680:12:9;9344:36;9337:43;9231:156;-1:-1:-1;;;9231:156:9:o;9393:143::-;4835:9;;;:16;;-1:-1:-1;;4835:16:9;;;;;;;;-1:-1:-1;4835:9:9;9499:30;4736:143;9698:152;5151:10;;;:47;;;;;;;9772:18;5151:47;;;;;;-1:-1:-1;;;;;5175:21:9;;5151:47;;;9833:4;9809:34;5047:179;10474:120;10554:33;10568:4;10582:3;10554:13;:33::i;6363:146:123:-;6421:13;6454:48;6481:2;1340;6454:26;:48::i;4594:437:106:-;4690:14;4771:11;;;;;;;4869:19;4875:3;:12;;;4869:19;;;;;4960:64;;4771:1;;4985;:11;;4998;4771;4869:19;4960:21;:64::i;10966:1095:9:-;11060:12;;;;11096:9;;;;11137:11;;;;11181:10;;;11158:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:12:9;;;;11096:9;;;;;;11046:11;;11158:33;;11181:10;;11158:33;;11181:10;11158:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11202:17;11239:4;11245:12;11253:3;11245:7;:12::i;:::-;11222:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11222:36:9;;;;;;;;;-1:-1:-1;;;;;11273:15:9;;;;;;:10;;;11222:36;11273:15;;;;;;-1:-1:-1;;;;;;11273:21:9;;;;;;;;;11222:36;;-1:-1:-1;11273:21:9;;:15;;11305:34;;11322:3;;11327:11;;11305:34;;:::i;:::-;;;;-1:-1:-1;;11305:34:9;;;;;;;;;11295:45;;11305:34;11295:45;;;;11273:68;;;;;;;;;;-1:-1:-1;11273:68:9;;;;11268:110;;11357:10;11362:4;11357;:10::i;:::-;;11268:110;-1:-1:-1;;;;;11410:15:9;;11387:12;11410:15;;;;;;;;;;;-1:-1:-1;;;;;;11410:21:9;;;;;;;;;11442:34;;11410:21;;11387:12;;11442:34;;11459:3;;11464:11;;11442:34;;:::i;:::-;;;;;;;;;;;;;11432:45;;;;;;11410:68;;;;;;;;;;;;11402:77;;11387:92;;11490:12;11529:17;11550:3;-1:-1:-1;;;;;11550:14:9;11565:4;11550:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11526:44:9;-1:-1:-1;11591:38:9;;-1:-1:-1;11526:44:9;11612:16;11617:11;11612:2;:16;:::i;:::-;11591:14;:38::i;:::-;11664:18;;-1:-1:-1;;;11664:18:9;;-1:-1:-1;;;;;11557:55:152;;11664:18:9;;;11539:74:152;11629:18;;;11622:34;;;11584:45:9;;-1:-1:-1;11649:12:9;;-1:-1:-1;;;;;;;;;;;;11664:7:9;;;11512:18:152;;11664::9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11649:33;;11705:4;11697;:12;11693:218;;11725:175;;-1:-1:-1;;;11725:175:9;;49020:2:152;11725:175:9;;;49002:21:152;49059:3;49039:18;;;49032:31;49099:34;49079:18;;;49072:62;49170:34;49150:18;;;49143:62;49242:34;49221:19;;;49214:63;-1:-1:-1;;;49293:19:152;;;49286:46;49349:19;;11725:175:9;48818:556:152;11725:175:9;11920:24;;-1:-1:-1;;;11920:24:9;;-1:-1:-1;;;;;49599:55:152;;11920:24:9;;;49581:74:152;49671:18;;;49664:34;;;49714:18;;;49707:34;;;-1:-1:-1;;;;;;;;;;;11920:8:9;;;49554:18:152;;11920:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11961:12:9;;;11954:19;;-1:-1:-1;;;;;;11954:19:9;;;-1:-1:-1;11990:9:9;;;11983:16;;-1:-1:-1;;11983:16:9;;;12009:17;-1:-1:-1;12016:10:9;;11961:12;12009:17;:::i;:::-;12043:4;:11;;12036:18;;;11036:1025;;;;;;;;10966:1095;;:::o;812:217:94:-;886:13;623:6:88;1824:42:94;258:3:88;1824:42:94;;;;1823:72;-1:-1:-1;;;1805:90:94;2185:11;;;-1:-1:-1;;2178:35:94;1004:18;1805:90;2178:35;1004:8;:18::i;13395:393:9:-;13454:12;13478:19;13510:1;:8;13521:2;13510:13;;;;:::i;:::-;13500:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13500:24:9;;13478:46;;13539:9;13534:224;13558:1;:8;13554:1;:12;13534:224;;;13587:9;13599:1;13601;13599:4;;;;;;;;:::i;:::-;;;;;;;13587:16;;13732:1;13726;13722:2;13718:10;13714:2;13710:19;13702:6;13698:32;13691:43;13673:75;13568:3;;;;;:::i;:::-;;;;13534:224;;9110:115;9167:7;9193:25;9213:4;9193:19;:25::i;13034:304::-;13112:7;13131:11;13153;13178:2;13167:1;:8;:13;:29;;13188:1;:8;13167:29;;;13183:2;13167:29;13153:43;;13211:9;13206:106;13230:3;13226:1;:7;13206:106;;;13295:5;:1;13299;13295:5;:::i;:::-;13269:1;13271:10;13280:1;13271:6;:10;:::i;:::-;13269:13;;;;;;;;:::i;:::-;;;;;;;13261:40;;13254:47;;;;;13235:3;;;;:::i;:::-;;;;13206:106;;;-1:-1:-1;13328:3:9;;13034:304;-1:-1:-1;;;;13034:304:9:o;4113:3600:105:-;4170:14;4196:11;4217:12;4244:1;4249;4244:6;4240:34;;-1:-1:-1;;;;301:17:88;-1:-1:-1;4252:22:105;;-1:-1:-1;4252:22:105;4240:34;-1:-1:-1;4316:1:105;4343;4333:12;;4330:109;;;4411:14;;;4376:1;4372:12;4330:109;4470:8;4463:4;:15;4459:3060;;;-1:-1:-1;;;301:17:88;-1:-1:-1;4574:1:105;-1:-1:-1;;;;;4595:41:105;;4592:161;;;4721:14;;;-1:-1:-1;;4670:20:105;4592:161;4784:3;4778:4;4774:14;4771:62;;;4810:20;;;4805:3;4801:30;;4771:62;4870:21;;4865:3;4861:31;4922:3;4912:14;;4909:62;;;4948:20;;;4943:3;4939:30;;4909:62;5008:21;;5003:3;4999:31;5060:3;5050:14;;5047:62;;;5086:20;;;5081:3;5077:30;;5047:62;5146:21;;5141:3;5137:31;5198:3;5188:14;;5185:62;;;5224:20;;;5219:3;5215:30;;5185:62;5284:21;;5279:3;5275:31;5336:4;5326:15;;5323:63;;;5363:20;;;5358:3;5354:30;;5323:63;5423:21;;5418:3;5414:31;5475:4;5465:15;;5462:63;;;5502:20;;;5497:3;5493:30;;5462:63;5562:21;;5557:3;5553:31;5614:4;5604:15;;5601:63;;;5641:20;;;5636:3;5632:30;;5601:63;5701:21;;5696:3;5692:31;;;;5743:15;;5740:63;;;5780:20;;;5775:3;5771:30;;5740:63;5840:21;;5835:3;5831:31;5892:5;5882:16;;5879:64;;;5920:20;;;5915:3;5911:30;;5879:64;5980:21;;5975:3;5971:31;6032:5;6022:16;;6019:64;;;6060:20;;;6055:3;6051:30;;6019:64;6120:21;;6115:3;6111:31;6172:5;6162:16;;6159:64;;;6200:20;;;6195:3;6191:30;;6159:64;6260:21;;6255:3;6251:31;6312:5;6302:16;;6299:64;;;6340:20;;;6335:3;6331:30;;6299:64;6400:21;;6395:3;6391:31;6452:6;6442:17;;6439:65;;;6481:20;;;6476:3;6472:30;;6439:65;6541:21;;6536:3;6532:31;6593:6;6583:17;;6580:65;;;6622:20;;;6617:3;6613:30;;6580:65;6682:21;;6677:3;6673:31;6734:6;6724:17;;6721:65;;;6763:20;;;6758:3;6754:30;;6721:65;6823:21;;6818:3;6814:31;6875:6;6865:17;;6862:65;;;6904:20;;;6899:3;6895:30;;6862:65;6964:21;;6959:3;6955:31;7016:7;7006:18;;7003:66;;;7046:20;;;7041:3;7037:30;;7003:66;7106:21;;7101:3;7097:31;7158:7;7148:18;;7145:66;;;7188:20;;;7183:3;7179:30;;7145:66;7248:21;;7243:3;7239:31;7300:7;7290:18;;7287:66;;;7330:20;;;7325:3;7321:30;;7287:66;7390:21;;7385:3;7381:31;7442:7;7432:18;;7429:66;;;7472:20;;;7467:3;7463:30;;7429:66;;4459:3060;7589:6;7599:1;7589:11;7585:59;;7609:35;;-1:-1:-1;;;7609:35:105;;;;;25154:25:152;;;25195:18;;;25188:34;;;25127:18;;7609:35:105;24980:248:152;7585:59:105;7662:6;:44;;7700:6;7662:44;;;7671:26;7691:6;-1:-1:-1;;7671:26:105;:::i;1264:3304:9:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:9;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:9;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:9;:15;;-1:-1:-1;1568:34:9;;-1:-1:-1;1452:33:9;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:9;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:9;;;;1532:174;;;-1:-1:-1;;;;;1627:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:9;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3304;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;588:28;580:37;;-1:-1:-1;;;;;1781:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:9;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:9;-1:-1:-1;1903:38:9;;-1:-1:-1;1838:44:9;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:9;;-1:-1:-1;;;;;24648:55:152;;1990:25:9;;;24630:74:152;1896:45:9;;-1:-1:-1;1963:22:9;;-1:-1:-1;;;;;;;;;;;;1990:11:9;;;24603:18:152;;1990:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:9;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2167;;2062:12;588:28;580:37;;-1:-1:-1;;;;;2077:7:9;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11557:55:152;;;;11539:74;;11644:2;11629:18;;11622:34;11527:2;11512:18;;11302:360;2077:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:9;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;11557:55:152;;;11539:74;;11629:18;;;11622:34;11512:18;2160:44:9;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:9;;49020:2:152;2268:187:9;;;49002:21:152;49059:3;49039:18;;;49032:31;49099:34;49079:18;;;49072:62;49170:34;49150:18;;;49143:62;49242:34;49221:19;;;49214:63;-1:-1:-1;;;49293:19:152;;;49286:46;49349:19;;2268:187:9;48818:556:152;2268:187:9;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2488:86;;;-1:-1:-1;;;;;50869:55:152;;;50851:74;;-1:-1:-1;;;;;;50961:33:152;;;50941:18;;;50934:61;;;;51011:18;;;51004:34;51069:2;51054:18;;51047:34;50838:3;50823:19;2488:86:9;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:9;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:9;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:9;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:9;;;:88;;;;-1:-1:-1;;;;;2690:15:9;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:9;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:9;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:9;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:9;:75;;-1:-1:-1;;2690:75:9;;;;;;;;;;-1:-1:-1;2025:2167:9;;;2801:1;2786:5;:12;:16;2782:1410;;;2823:9;2818:1259;2842:5;:12;2838:1;:16;2818:1259;;;2879:12;588:28;580:37;;-1:-1:-1;;;;;2894:7:9;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;11557:55:152;;;;11539:74;;11644:2;11629:18;;11622:34;11527:2;11512:18;;11302:360;2894:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:9;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;11557:55:152;;;11539:74;;11629:18;;;11622:34;11512:18;2985:44:9;;;;;;;2934:114;3077:4;3069;:12;3065:67;;3105:8;;;3065:67;3229:8;;3167:5;;;-1:-1:-1;;;;;;;;;;;3215:8:9;;;3224:3;;3229:5;;3235:1;;3229:8;;;;;;:::i;:::-;;;;;;;;;;;3215:32;;-1:-1:-1;;;;;;3215:32:9;;;;;;;-1:-1:-1;;;;;49599:55:152;;;3215:32:9;;;49581:74:152;49671:18;;;49664:34;49714:18;;;49707:34;;;49554:18;;3215:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:12;3317:17;3374:3;-1:-1:-1;;;;;3374:14:9;3389:4;3374:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3356:38:9;;-1:-1:-1;3356:38:9;-1:-1:-1;3423:38:9;3356;3444:16;3449:11;3444:2;:16;:::i;3423:38::-;3416:45;;3295:185;3502:7;:26;;;;;3521:7;3513:4;:15;3502:26;3498:518;;;3626:86;3636:3;3641:4;3674:3;3679:11;3657:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3647:45;;;;;;3702:5;3708:1;3702:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3626:86;;;-1:-1:-1;;;;;50869:55:152;;;50851:74;;-1:-1:-1;;;;;;50961:33:152;;;50941:18;;;50934:61;;;;51011:18;;;51004:34;51069:2;51054:18;;51047:34;50838:3;50823:19;3626:86:9;;;;;;;3813:5;3819:1;3813:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3734:15:9;;3805:17;3734:15;;;;;;;;;;-1:-1:-1;;;;;;3734:21:9;;;;;;;;;3766:34;;3813:8;;3734:21;;3766:34;;3783:3;;3788:11;;3766:34;;:::i;:::-;;;;;;;;;;;;;3756:45;;;;;;3734:68;;;;;;;;;;;:88;;;;3915:4;3844;:10;;:15;3855:3;-1:-1:-1;;;;;3844:15:9;-1:-1:-1;;;;;3844:15:9;;;;;;;;;;;;:21;3860:4;-1:-1:-1;;;;;3844:21:9;;-1:-1:-1;;;;;3844:21:9;;;;;;;;;;;;;:68;3893:3;3898:11;3876:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3866:45;;;;;;3844:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;588:28;580:37;;-1:-1:-1;;;;;3941:8:9;;3950:3;3955:5;3961:1;3955:8;;;;;;;;:::i;:::-;;;;;;;;;;;3941:29;;-1:-1:-1;;;;;;3941:29:9;;;;;;;-1:-1:-1;;;;;49599:55:152;;;3941:29:9;;;49581:74:152;49671:18;;;49664:34;49714:18;;;49707:34;;;49554:18;;3941:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:5;;;;;3498:518;588:28;580:37;;-1:-1:-1;;;;;4033:8:9;;4042:3;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;;;;;;4033:29;;-1:-1:-1;;;;;;4033:29:9;;;;;;;-1:-1:-1;;;;;49599:55:152;;;4033:29:9;;;49581:74:152;49671:18;;;49664:34;49714:18;;;49707:34;;;49554:18;;4033:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1216;;;2818:1259;2856:3;;;;:::i;:::-;;;;2818:1259;;;;2782:1410;;;4107:74;;;-1:-1:-1;;;4107:74:9;;51294:2:152;4107:74:9;;;51276:21:152;51313:18;;;51306:30;;;;51372:34;51352:18;;;51345:62;51443:34;51423:18;;;51416:62;51495:19;;4107:74:9;51092:428:152;2782:1410:9;-1:-1:-1;;;;;4223:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4223:21:9;;;;;;;;;4255:34;;4223:21;;:15;4255:34;;4272:3;;4277:11;;4255:34;;:::i;:::-;;;;-1:-1:-1;;4255:34:9;;;;;;;;;4245:45;;4255:34;4245:45;;;;4223:68;;;;;;;;;;-1:-1:-1;4223:68:9;;;;4202:162;;;;-1:-1:-1;;;4202:162:9;;51727:2:152;4202:162:9;;;51709:21:152;51766:2;51746:18;;;51739:30;51805:34;51785:18;;;51778:62;51876:17;51856:18;;;51849:45;51911:19;;4202:162:9;51525:411:152;4202:162:9;4382:12;;;4375:19;;-1:-1:-1;;;;;;4375:19:9;;;4411:9;;;4404:16;;-1:-1:-1;;4404:16:9;;;4430:17;-1:-1:-1;4437:10:9;;4382:12;4430:17;:::i;:::-;4457:18;4464:11;;;4457:18;;;-1:-1:-1;;;;;4493:15:9;;;;;;;;;;;;-1:-1:-1;;;;;;4493:21:9;;;;;;;;;4525:34;;4493:21;;4457:18;4525:34;;4542:3;;4547:11;;4525:34;;:::i;:::-;;;;;;;;;;;;;4515:45;;;;;;4493:68;;;;;;;;;;;;4486:75;;;;;;;;;1264:3304;;;:::o;8473:393::-;8532:12;8556:19;8588:1;:8;8599:2;8588:13;;;;:::i;:::-;8578:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8578:24:9;;8556:46;;8617:9;8612:224;8636:1;:8;8632:1;:12;8612:224;;;8665:9;8677:1;8679;8677:4;;;;;;;;:::i;:::-;;;;;;;8665:16;;8810:1;8804;8800:2;8796:10;8792:2;8788:19;8780:6;8776:32;8769:43;8751:75;8646:3;;;;;:::i;:::-;;;;8612:224;;8163:304;8241:7;8260:11;8282;8307:2;8296:1;:8;:13;:29;;8317:1;:8;8296:29;;;8312:2;8296:29;8282:43;;8340:9;8335:106;8359:3;8355:1;:7;8335:106;;;8424:5;:1;8428;8424:5;:::i;:::-;8398:1;8400:10;8409:1;8400:6;:10;:::i;:::-;8398:13;;;;;;;;:::i;:::-;;;;;;;8390:40;;8383:47;;;;;8364:3;;;;:::i;:::-;;;;8335:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:286:152:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:152;;209:43;;199:71;;266:1;263;256:12;629:681;800:2;852:21;;;922:13;;825:18;;;944:22;;;771:4;;800:2;1023:15;;;;997:2;982:18;;;771:4;1066:218;1080:6;1077:1;1074:13;1066:218;;;1145:13;;-1:-1:-1;;;;;1141:62:152;1129:75;;1259:15;;;;1224:12;;;;1102:1;1095:9;1066:218;;;-1:-1:-1;1301:3:152;;629:681;-1:-1:-1;;;;;;629:681:152:o;1315:250::-;1400:1;1410:113;1424:6;1421:1;1418:13;1410:113;;;1500:11;;;1494:18;1481:11;;;1474:39;1446:2;1439:10;1410:113;;;-1:-1:-1;;1557:1:152;1539:16;;1532:27;1315:250::o;1570:271::-;1612:3;1650:5;1644:12;1677:6;1672:3;1665:19;1693:76;1762:6;1755:4;1750:3;1746:14;1739:4;1732:5;1728:16;1693:76;:::i;:::-;1823:2;1802:15;-1:-1:-1;;1798:29:152;1789:39;;;;1830:4;1785:50;;1570:271;-1:-1:-1;;1570:271:152:o;1846:1765::-;2079:2;2131:21;;;2201:13;;2104:18;;;2223:22;;;2050:4;;2079:2;2264;;2282:18;;;;2319:1;2362:15;;;2347:31;;2343:40;;2406:15;;;2050:4;;2470:1112;2486:6;2481:3;2478:15;2470:1112;;;-1:-1:-1;;2555:22:152;;;2551:36;2539:49;;2611:13;;2698:9;;-1:-1:-1;;;;;2694:58:152;2679:74;;2792:11;;2786:18;2824:15;;;2817:27;;;2905:19;;2651:15;;;2937:24;;;3118:21;;;;2984:2;3066:17;;;3054:30;;3050:39;;;3008:15;;;;3163:1;3177:296;3193:8;3188:3;3185:17;3177:296;;;3299:2;3295:7;3286:6;3278;3274:19;3270:33;3263:5;3256:48;3331:42;3366:6;3355:8;3349:15;3331:42;:::i;:::-;3402:17;;;;3321:52;-1:-1:-1;3445:14:152;;;;3221:1;3212:11;3177:296;;;-1:-1:-1;;;3560:12:152;;;;3496:6;-1:-1:-1;;3525:15:152;;;;2512:1;2503:11;2470:1112;;;-1:-1:-1;3599:6:152;;1846:1765;-1:-1:-1;;;;;;;;;;1846:1765:152:o;3616:156::-;3682:20;;3742:4;3731:16;;3721:27;;3711:55;;3762:1;3759;3752:12;3777:252;3841:6;3849;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3941:27;3958:9;3941:27;:::i;:::-;3931:37;;3987:36;4019:2;4008:9;4004:18;3987:36;:::i;:::-;3977:46;;3777:252;;;;;:::o;4216:1590::-;4418:4;4447:2;4487;4476:9;4472:18;4517:2;4506:9;4499:21;4540:6;4575;4569:13;4606:6;4598;4591:22;4632:2;4622:12;;4665:2;4654:9;4650:18;4643:25;;4727:2;4717:6;4714:1;4710:14;4699:9;4695:30;4691:39;4765:2;4757:6;4753:15;4786:1;4807;4817:960;4833:6;4828:3;4825:15;4817:960;;;4902:22;;;-1:-1:-1;;4898:36:152;4886:49;;4958:13;;5045:9;;-1:-1:-1;;;;;5041:58:152;5026:74;;5139:11;;5133:18;5171:15;;;5164:27;;;5252:19;;4998:15;;;5284:24;;;5374:21;;;;5419:1;;5342:2;5330:15;;;5433:236;5449:8;5444:3;5441:17;5433:236;;;5530:15;;-1:-1:-1;;;;;;5526:42:152;5512:57;;5638:17;;;;5477:1;5468:11;;;;;5595:14;;;;5433:236;;;-1:-1:-1;5755:12:152;;;;5692:5;-1:-1:-1;;;5720:15:152;;;;4859:1;4850:11;4817:960;;;-1:-1:-1;5794:6:152;;4216:1590;-1:-1:-1;;;;;;;;;4216:1590:152:o;5811:803::-;5973:4;6002:2;6042;6031:9;6027:18;6072:2;6061:9;6054:21;6095:6;6130;6124:13;6161:6;6153;6146:22;6199:2;6188:9;6184:18;6177:25;;6261:2;6251:6;6248:1;6244:14;6233:9;6229:30;6225:39;6211:53;;6299:2;6291:6;6287:15;6320:1;6330:255;6344:6;6341:1;6338:13;6330:255;;;6437:2;6433:7;6421:9;6413:6;6409:22;6405:36;6400:3;6393:49;6465:40;6498:6;6489;6483:13;6465:40;:::i;:::-;6455:50;-1:-1:-1;6563:12:152;;;;6528:15;;;;6366:1;6359:9;6330:255;;;-1:-1:-1;6602:6:152;;5811:803;-1:-1:-1;;;;;;;5811:803:152:o;6619:119::-;6704:8;6697:5;6693:20;6686:5;6683:31;6673:59;;6728:1;6725;6718:12;6743:383;6817:6;6825;6833;6886:2;6874:9;6865:7;6861:23;6857:32;6854:52;;;6902:1;6899;6892:12;6854:52;6941:9;6928:23;6960:30;6984:5;6960:30;:::i;:::-;7009:5;-1:-1:-1;7061:2:152;7046:18;;7033:32;;-1:-1:-1;7084:36:152;7116:2;7101:18;;7084:36;:::i;:::-;7074:46;;6743:383;;;;;:::o;7326:154::-;-1:-1:-1;;;;;7405:5:152;7401:54;7394:5;7391:65;7381:93;;7470:1;7467;7460:12;7485:965;7618:6;7626;7634;7642;7650;7658;7666;7674;7727:3;7715:9;7706:7;7702:23;7698:33;7695:53;;;7744:1;7741;7734:12;7695:53;7783:9;7770:23;7802:31;7827:5;7802:31;:::i;:::-;7852:5;-1:-1:-1;7909:2:152;7894:18;;7881:32;7922:33;7881:32;7922:33;:::i;:::-;7974:7;-1:-1:-1;8033:2:152;8018:18;;8005:32;8046:33;8005:32;8046:33;:::i;:::-;8098:7;-1:-1:-1;8157:2:152;8142:18;;8129:32;8170;8129;8170;:::i;:::-;8221:7;-1:-1:-1;8275:3:152;8260:19;;8247:33;;-1:-1:-1;8327:3:152;8312:19;;8299:33;;-1:-1:-1;8351:37:152;8383:3;8368:19;;8351:37;:::i;:::-;8341:47;;8407:37;8439:3;8428:9;8424:19;8407:37;:::i;:::-;8397:47;;7485:965;;;;;;;;;;;:::o;8455:117::-;8540:6;8533:5;8529:18;8522:5;8519:29;8509:57;;8562:1;8559;8552:12;8577:245;8635:6;8688:2;8676:9;8667:7;8663:23;8659:32;8656:52;;;8704:1;8701;8694:12;8656:52;8743:9;8730:23;8762:30;8786:5;8762:30;:::i;8827:896::-;8951:6;8959;8967;8975;8983;8991;8999;9052:3;9040:9;9031:7;9027:23;9023:33;9020:53;;;9069:1;9066;9059:12;9020:53;9108:9;9095:23;9127:31;9152:5;9127:31;:::i;:::-;9177:5;-1:-1:-1;9234:2:152;9219:18;;9206:32;9247:33;9206:32;9247:33;:::i;:::-;9299:7;-1:-1:-1;9358:2:152;9343:18;;9330:32;9371:33;9330:32;9371:33;:::i;:::-;9423:7;-1:-1:-1;9482:2:152;9467:18;;9454:32;9495;9454;9495;:::i;:::-;9546:7;-1:-1:-1;9600:3:152;9585:19;;9572:33;;-1:-1:-1;9624:37:152;9656:3;9641:19;;9624:37;:::i;:::-;9614:47;;9680:37;9712:3;9701:9;9697:19;9680:37;:::i;:::-;9670:47;;8827:896;;;;;;;;;;:::o;10183:127::-;10244:10;10239:3;10235:20;10232:1;10225:31;10275:4;10272:1;10265:15;10299:4;10296:1;10289:15;10315:164;10391:13;;10440;;10433:21;10423:32;;10413:60;;10469:1;10466;10459:12;10484:813;10590:6;10643:3;10631:9;10622:7;10618:23;10614:33;10611:53;;;10660:1;10657;10650:12;10611:53;10693:2;10687:9;10735:3;10727:6;10723:16;10805:6;10793:10;10790:22;10769:18;10757:10;10754:34;10751:62;10748:88;;;10816:18;;:::i;:::-;10852:2;10845:22;10889:16;;10914:30;10889:16;10914:30;:::i;:::-;10953:21;;11019:2;11004:18;;10998:25;11032:33;10998:25;11032:33;:::i;:::-;11093:2;11081:15;;11074:32;11139:46;11181:2;11166:18;;11139:46;:::i;:::-;11134:2;11126:6;11122:15;11115:71;11219:46;11261:2;11250:9;11246:18;11219:46;:::i;:::-;11214:2;11202:15;;11195:71;11206:6;10484:813;-1:-1:-1;;;10484:813:152:o;11667:249::-;11736:6;11789:2;11777:9;11768:7;11764:23;11760:32;11757:52;;;11805:1;11802;11795:12;11757:52;11837:9;11831:16;11856:30;11880:5;11856:30;:::i;11921:127::-;11982:10;11977:3;11973:20;11970:1;11963:31;12013:4;12010:1;12003:15;12037:4;12034:1;12027:15;12053:170;12120:8;12148:10;;;12160;;;12144:27;;12183:11;;;12180:37;;;12197:18;;:::i;12560:184::-;12630:6;12683:2;12671:9;12662:7;12658:23;12654:32;12651:52;;;12699:1;12696;12689:12;12651:52;-1:-1:-1;12722:16:152;;12560:184;-1:-1:-1;12560:184:152:o;13562:268::-;13649:6;13702:2;13690:9;13681:7;13677:23;13673:32;13670:52;;;13718:1;13715;13708:12;13670:52;13750:9;13744:16;13769:31;13794:5;13769:31;:::i;14920:434::-;14972:3;15010:5;15004:12;15037:6;15032:3;15025:19;15063:4;15092:2;15087:3;15083:12;15076:19;;15129:2;15122:5;15118:14;15150:1;15160:169;15174:6;15171:1;15168:13;15160:169;;;15235:13;;15223:26;;15269:12;;;;15304:15;;;;15196:1;15189:9;15160:169;;;-1:-1:-1;15345:3:152;;14920:434;-1:-1:-1;;;;;14920:434:152:o;15359:1945::-;15564:2;15553:9;15546:21;15576:53;15625:2;15614:9;15610:18;15601:6;15595:13;-1:-1:-1;;;;;563:54:152;551:67;;497:127;15576:53;15527:4;15676:2;15668:6;15664:15;15658:22;15689:52;15737:2;15726:9;15722:18;15708:12;-1:-1:-1;;;;;563:54:152;551:67;;497:127;15689:52;;15795:2;15787:6;15783:15;15777:22;15772:2;15761:9;15757:18;15750:50;15855:2;15847:6;15843:15;15837:22;15831:3;15820:9;15816:19;15809:51;15915:3;15907:6;15903:16;15897:23;15891:3;15880:9;15876:19;15869:52;15976:3;15968:6;15964:16;15958:23;15952:3;15941:9;15937:19;15930:52;16037:3;16029:6;16025:16;16019:23;16013:3;16002:9;15998:19;15991:52;16080:3;16072:6;16068:16;16062:23;16104:3;16143:2;16138;16127:9;16123:18;16116:30;16183:2;16175:6;16171:15;16165:22;16155:32;;;16206:3;16245:2;16240;16229:9;16225:18;16218:30;16297:2;16289:6;16285:15;16279:22;16257:44;;;16320:6;16345:3;16384:2;16379;16368:9;16364:18;16357:30;16410:64;16469:3;16458:9;16454:19;16438:14;16410:64;:::i;:::-;16396:78;;16523:2;16515:6;16511:15;16505:22;16483:44;;16550:2;16546:7;16572:3;16639:2;16627:9;16619:6;16615:22;16611:31;16606:2;16595:9;16591:18;16584:59;16666:51;16710:6;16694:14;16666:51;:::i;:::-;16652:65;;16766:2;16758:6;16754:15;16748:22;16726:44;;;16789:3;16856:2;16844:9;16836:6;16832:22;16828:31;16823:2;16812:9;16808:18;16801:59;16883:51;16927:6;16911:14;16883:51;:::i;:::-;16869:65;;16983:2;16975:6;16971:15;16965:22;16943:44;;;;17007:3;17019:55;17069:3;17058:9;17054:19;17038:14;-1:-1:-1;;;;;563:54:152;551:67;;497:127;17019:55;17111:16;;17105:23;;-1:-1:-1;17148:3:152;17160:55;17195:19;;;17105:23;-1:-1:-1;;;;;563:54:152;551:67;;497:127;17160:55;17257:16;;;;17251:23;17231:18;;17224:51;;;;-1:-1:-1;17292:6:152;15359:1945;-1:-1:-1;15359:1945:152:o;17309:899::-;17374:5;17427:3;17420:4;17412:6;17408:17;17404:27;17394:55;;17445:1;17442;17435:12;17394:55;17474:6;17468:13;17500:4;17523:18;17560:2;17556;17553:10;17550:36;;;17566:18;;:::i;:::-;17612:2;17609:1;17605:10;17644:2;17638:9;17707:2;17703:7;17698:2;17694;17690:11;17686:25;17678:6;17674:38;17762:6;17750:10;17747:22;17742:2;17730:10;17727:18;17724:46;17721:72;;;17773:18;;:::i;:::-;17809:2;17802:22;17859:18;;;17935:15;;;17931:24;;;17893:15;;;;-1:-1:-1;17967:15:152;;;17964:35;;;17995:1;17992;17985:12;17964:35;18031:2;18023:6;18019:15;18008:26;;18043:135;18059:6;18054:3;18051:15;18043:135;;;18125:10;;18113:23;;18156:12;;;;18076;;;;18043:135;;;18196:6;17309:899;-1:-1:-1;;;;;;;17309:899:152:o;18213:861::-;18378:6;18386;18394;18402;18410;18418;18471:3;18459:9;18450:7;18446:23;18442:33;18439:53;;;18488:1;18485;18478:12;18439:53;18517:9;18511:16;18501:26;;18567:2;18556:9;18552:18;18546:25;18536:35;;18611:2;18600:9;18596:18;18590:25;18580:35;;18655:2;18644:9;18640:18;18634:25;18624:35;;18703:3;18692:9;18688:19;18682:26;18727:18;18768:2;18760:6;18757:14;18754:34;;;18784:1;18781;18774:12;18754:34;18807:72;18871:7;18862:6;18851:9;18847:22;18807:72;:::i;:::-;18797:82;;18925:3;18914:9;18910:19;18904:26;18888:42;;18955:2;18945:8;18942:16;18939:36;;;18971:1;18968;18961:12;18939:36;;18994:74;19060:7;19049:8;19038:9;19034:24;18994:74;:::i;:::-;18984:84;;;18213:861;;;;;;;;:::o;19079:380::-;19158:1;19154:12;;;;19201;;;19222:61;;19276:4;19268:6;19264:17;19254:27;;19222:61;19329:2;19321:6;19318:14;19298:18;19295:38;19292:161;;19375:10;19370:3;19366:20;19363:1;19356:31;19410:4;19407:1;19400:15;19438:4;19435:1;19428:15;19292:161;;19079:380;;;:::o;20369:192::-;20448:13;;-1:-1:-1;;;;;20490:46:152;;20480:57;;20470:85;;20551:1;20548;20541:12;20566:378;20654:6;20662;20670;20723:2;20711:9;20702:7;20698:23;20694:32;20691:52;;;20739:1;20736;20729:12;20691:52;20762:40;20792:9;20762:40;:::i;:::-;20752:50;;20821:49;20866:2;20855:9;20851:18;20821:49;:::i;:::-;20811:59;;20889:49;20934:2;20923:9;20919:18;20889:49;:::i;20949:127::-;21010:10;21005:3;21001:20;20998:1;20991:31;21041:4;21038:1;21031:15;21065:4;21062:1;21055:15;21081:216;21121:1;-1:-1:-1;;;;;21208:2:152;21205:1;21201:10;21230:3;21220:37;;21237:18;;:::i;:::-;21275:10;;21271:20;;;;;21081:216;-1:-1:-1;;21081:216:152:o;21302:197::-;-1:-1:-1;;;;;21424:10:152;;;21436;;;21420:27;;21459:11;;;21456:37;;;21473:18;;:::i;21828:218::-;21975:2;21964:9;21957:21;21938:4;21995:45;22036:2;22025:9;22021:18;22013:6;21995:45;:::i;22051:125::-;22116:9;;;22137:10;;;22134:36;;;22150:18;;:::i;22181:127::-;22242:10;22237:3;22233:20;22230:1;22223:31;22273:4;22270:1;22263:15;22297:4;22294:1;22287:15;22313:492;22374:3;22412:5;22406:12;22439:6;22434:3;22427:19;22465:4;22494:2;22489:3;22485:12;22478:19;;22531:2;22524:5;22520:14;22552:1;22562:218;22576:6;22573:1;22570:13;22562:218;;;22641:13;;-1:-1:-1;;;;;22637:62:152;22625:75;;22720:12;;;;22755:15;;;;22598:1;22591:9;22562:218;;22810:1108;22857:3;22901:5;22895:12;22928:4;22923:3;22916:17;22954:57;23005:4;23000:3;22996:14;22982:12;22954:57;:::i;:::-;23030:4;23071:14;;;23065:21;23116:14;;;23102:12;;;23095:36;23180:21;;23210:20;;;23284:23;;;;-1:-1:-1;23030:4:152;;-1:-1:-1;;23248:13:152;;;;-1:-1:-1;23356:379:152;23372:6;23367:3;23364:15;23356:379;;;23441:6;23435:13;23478:1;23474:2;23471:9;23461:160;;-1:-1:-1;;;23512:31:152;;23570:4;23567:1;23560:15;23602:4;23519:1;23592:15;23461:160;23634:17;;23710:15;;;;23673:14;;;;23398:1;23389:11;23356:379;;;23360:3;;23783:4;23776:5;23772:16;23766:23;23744:45;;23832:3;23825:5;23821:15;23814:4;23809:3;23805:14;23798:39;23853:59;23906:5;23890:14;23853:59;:::i;23923:556::-;-1:-1:-1;;;;;24186:6:152;24182:47;24171:9;24164:66;24266:3;24261:2;24250:9;24246:18;24239:31;24145:4;24287:51;24333:3;24322:9;24318:19;24310:6;24287:51;:::i;:::-;-1:-1:-1;;;;;24374:55:152;;;;24369:2;24354:18;;24347:83;-1:-1:-1;24461:2:152;24446:18;24439:34;24279:59;23923:556;-1:-1:-1;;23923:556:152:o;24715:127::-;24776:10;24771:3;24767:20;24764:1;24757:31;24807:4;24804:1;24797:15;24831:4;24828:1;24821:15;24847:128;24914:9;;;24935:11;;;24932:37;;;24949:18;;:::i;25686:674::-;25952:4;-1:-1:-1;;;;;26054:2:152;26046:6;26042:15;26031:9;26024:34;26106:2;26098:6;26094:15;26089:2;26078:9;26074:18;26067:43;;26146:3;26141:2;26130:9;26126:18;26119:31;26167:51;26213:3;26202:9;26198:19;26190:6;26167:51;:::i;:::-;-1:-1:-1;;;;;26254:55:152;;;;26249:2;26234:18;;26227:83;-1:-1:-1;26341:3:152;26326:19;26319:35;26159:59;25686:674;-1:-1:-1;;;25686:674:152:o;26365:148::-;26453:4;26432:12;;;26446;;;26428:31;;26471:13;;26468:39;;;26487:18;;:::i;26518:151::-;26608:4;26601:12;;;26587;;;26583:31;;26626:14;;26623:40;;;26643:18;;:::i;26674:363::-;26769:6;26822:2;26810:9;26801:7;26797:23;26793:32;26790:52;;;26838:1;26835;26828:12;26790:52;26871:9;26865:16;26904:18;26896:6;26893:30;26890:50;;;26936:1;26933;26926:12;26890:50;26959:72;27023:7;27014:6;27003:9;26999:22;26959:72;:::i;27042:200::-;-1:-1:-1;;;;;27178:10:152;;;27166;;;27162:27;;27201:12;;;27198:38;;;27216:18;;:::i;28647:120::-;28687:1;28713;28703:35;;28718:18;;:::i;:::-;-1:-1:-1;28752:9:152;;28647:120::o;28772:135::-;28811:3;28832:17;;;28829:43;;28852:18;;:::i;:::-;-1:-1:-1;28899:1:152;28888:13;;28772:135::o;29214:202::-;29281:6;29334:2;29322:9;29313:7;29309:23;29305:32;29302:52;;;29350:1;29347;29340:12;29302:52;29373:37;29400:9;29373:37;:::i;29421:854::-;29619:4;29667:2;29656:9;29652:18;-1:-1:-1;;;;;29770:2:152;29762:6;29758:15;29747:9;29740:34;29793:2;29831;29826;29815:9;29811:18;29804:30;29854:6;29889;29883:13;29920:6;29912;29905:22;29958:3;29947:9;29943:19;29936:26;;29997:2;29989:6;29985:15;29971:29;;30018:1;30028:169;30042:6;30039:1;30036:13;30028:169;;;30103:13;;30091:26;;30172:15;;;;30137:12;;;;30064:1;30057:9;30028:169;;;30032:3;;30214;30206:11;;;;30265:2;30257:6;30253:15;30248:2;30237:9;30233:18;30226:43;;;29421:854;;;;;;:::o;30280:485::-;30393:6;30401;30409;30462:2;30450:9;30441:7;30437:23;30433:32;30430:52;;;30478:1;30475;30468:12;30430:52;30507:9;30501:16;30491:26;;30557:2;30546:9;30542:18;30536:25;30526:35;;30605:2;30594:9;30590:18;30584:25;30632:18;30624:6;30621:30;30618:50;;;30664:1;30661;30654:12;30618:50;30687:72;30751:7;30742:6;30731:9;30727:22;30687:72;:::i;:::-;30677:82;;;30280:485;;;;;:::o;30964:634::-;31094:6;31102;31110;31118;31126;31134;31142;31150;31203:3;31191:9;31182:7;31178:23;31174:33;31171:53;;;31220:1;31217;31210:12;31171:53;31249:9;31243:16;31233:26;;31299:2;31288:9;31284:18;31278:25;31268:35;;31343:2;31332:9;31328:18;31322:25;31312:35;;31387:2;31376:9;31372:18;31366:25;31356:35;;31431:3;31420:9;31416:19;31410:26;31400:36;;31476:3;31465:9;31461:19;31455:26;31445:36;;31521:3;31510:9;31506:19;31500:26;31490:36;;31545:47;31587:3;31576:9;31572:19;31545:47;:::i;32763:686::-;33039:4;-1:-1:-1;;;;;33149:2:152;33141:6;33137:15;33126:9;33119:34;33201:2;33193:6;33189:15;33184:2;33173:9;33169:18;33162:43;;33241:3;33236:2;33225:9;33221:18;33214:31;33268:56;33319:3;33308:9;33304:19;33296:6;33268:56;:::i;:::-;33372:9;33364:6;33360:22;33355:2;33344:9;33340:18;33333:50;33400:43;33436:6;33428;33400:43;:::i;33822:338::-;-1:-1:-1;;;;;34001:6:152;33997:55;33986:9;33979:74;34089:2;34084;34073:9;34069:18;34062:30;33960:4;34109:45;34150:2;34139:9;34135:18;34127:6;34109:45;:::i;43970:362::-;44175:6;44164:9;44157:25;44218:6;44213:2;44202:9;44198:18;44191:34;44261:2;44256;44245:9;44241:18;44234:30;44138:4;44281:45;44322:2;44311:9;44307:18;44299:6;44281:45;:::i;45973:287::-;46102:3;46140:6;46134:13;46156:66;46215:6;46210:3;46203:4;46195:6;46191:17;46156:66;:::i;:::-;46238:16;;;;;45973:287;-1:-1:-1;;45973:287:152:o;46265:181::-;46296:1;46322:8;46357:2;46354:1;46350:10;46379:3;46369:37;;46386:18;;:::i;:::-;46424:10;;46420:20;;;;;46265:181;-1:-1:-1;;46265:181:152:o;46812:189::-;46851:1;46877:8;46912:2;46909:1;46905:10;46934:3;46924:37;;46941:18;;:::i;47006:168::-;47079:9;;;47110;;47127:15;;;47121:22;;47107:37;47097:71;;47148:18;;:::i;47179:247::-;47250:8;47290:10;;;47302;;;47286:27;47333:20;;;;47250:8;47372:24;;;47362:58;;47400:18;;:::i;:::-;47362:58;;47179:247;;;;:::o;47431:173::-;47499:8;47540:10;;;47528;;;47524:27;;47563:12;;;47560:38;;;47578:18;;:::i;47609:200::-;47675:9;;;47648:4;47703:9;;47731:10;;47743:12;;;47727:29;47766:12;;;47758:21;;47724:56;47721:82;;;47783:18;;:::i;47814:384::-;-1:-1:-1;;;;;;47999:33:152;;47987:46;;48056:13;;47969:3;;48078:74;48056:13;48141:1;48132:11;;48125:4;48113:17;;48078:74;:::i;:::-;48172:16;;;;48190:1;48168:24;;47814:384;-1:-1:-1;;;47814:384:152:o;48203:610::-;48449:13;;48392:3;;48423;;48502:4;48529:15;;;48392:3;48572:175;48586:6;48583:1;48580:13;48572:175;;;48649:13;;48635:28;;48685:14;;;;48722:15;;;;48608:1;48601:9;48572:175;;;-1:-1:-1;;48756:21:152;;;-1:-1:-1;48793:14:152;;;;;-1:-1:-1;;;48203:610:152:o;50003:614::-;50132:6;50140;50193:2;50181:9;50172:7;50168:23;50164:32;50161:52;;;50209:1;50206;50199:12;50161:52;50242:9;50236:16;50271:18;50312:2;50304:6;50301:14;50298:34;;;50328:1;50325;50318:12;50298:34;50351:72;50415:7;50406:6;50395:9;50391:22;50351:72;:::i;:::-;50341:82;;50469:2;50458:9;50454:18;50448:25;50432:41;;50498:2;50488:8;50485:16;50482:36;;;50514:1;50511;50504:12;50482:36;;50537:74;50603:7;50592:8;50581:9;50577:24;50537:74;:::i;:::-;50527:84;;;50003:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "101961": [
        {
          "start": 26008,
          "length": 32
        },
        {
          "start": 26223,
          "length": 32
        },
        {
          "start": 26379,
          "length": 32
        },
        {
          "start": 30318,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_GetIdFromPrice()": "061794b3",
    "test_SwapExactNATIVEForTokens()": "38a637ed",
    "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens()": "2debd6fd",
    "test_SwapExactTokensForNATIVE()": "4415cf9d",
    "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens()": "3f6fb2f7",
    "test_SwapExactTokensForTokens()": "72b01c7a",
    "test_SwapNATIVEForExactTokens()": "8f8d57ea",
    "test_SwapTokensForExactNATIVE()": "6d090840",
    "test_SwapTokensForExactTokens()": "7594f3a1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Uint128x128Math__PowUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_GetIdFromPrice\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapNATIVEForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This file only test single hop swaps using V2.1 pairs Test scenarios: 1. swapExactTokensForTokens 2. swapExactTokensForNATIVE 3. swapExactNATIVEForTokens 4. swapTokensForExactTokens 5. swapTokensForExactNATIVE 6. swapNATIVEForExactTokens 7. swapExactTokensForTokensSupportingFeeOnTransferTokens 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBRouter.Swap.t.sol\":\"LiquidityBinRouterSwapTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c\",\"dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x2c67a533e405b77317caffc0d556320a04e58346ed645cefaa9fea5f91a06cb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8b1afdace7d60297379288b4b35310cc81fdd3d013eba888d90c51ba54642c1\",\"dweb:/ipfs/QmeMpyQEKryrVuBGWye6GVqpSNPJUQ6hruMwRBSRSCGg2J\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b\",\"dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4\",\"dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533\",\"dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126\",\"dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x170a9b2acc018657045741a158ebfdf28982c68beeba6ed145169d1a1248cd53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b800466a1598c4d2e94bf973b7335d5d01bb32ae5e6e78c29c809dcda0fc375\",\"dweb:/ipfs/QmeP9CKVtdGiEo7rLNWqRa24XJjefRpSZtsirHuKdPCRqA\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x911b32ef02c5950a9cf6367a508b9930ace9dc5531459a50951bcbec4717bbda\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://b35351a0ec61432596383de0a8d3a65be8f2122fb50a32ebddf66351179b048c\",\"dweb:/ipfs/Qmf43DEDeEwKz8LvqWiAPmqb3CAqMuVUAHXFkgSd3uqN9M\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe\",\"dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980\",\"dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x718ae75ad57a149ff2dec6dcd51f9e406ac52a45865ec97fa79671e67a225713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb67913b2545d5590bb19f1ccbdefa5d479a94a2e3e9a4325c267dbd02a86cf\",\"dweb:/ipfs/QmYbhQwaGewsQKr9KrHqXytXgboYvFFngK6dShw7RYs7AU\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11\",\"dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc\",\"dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf\",\"dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c\",\"dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15\",\"dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51\",\"dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561\",\"dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f\",\"dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6\"]},\"src/libraries/Clone.sol\":{\"keccak256\":\"0x594933ba1ceef90636ac84a1af9cfc5a0be1fcb4340a8a0420fb4505a7012d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ed9aa543e706d2e87f29130c9e40c7b73528138b53dae5c05d664d28fae97b\",\"dweb:/ipfs/QmSiFFQBhxpJdrrdYMRYX3TDhKY7cWgYPjusonV3Srp2ss\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009\",\"dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee\",\"dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156\",\"dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5\",\"dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1\",\"dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e\",\"dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3\",\"dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8\",\"dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de\",\"dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8\",\"dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5\",\"dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4\",\"dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e\",\"dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20\",\"dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1\",\"dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f\",\"dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242\",\"dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY\"]},\"test/LBRouter.Swap.t.sol\":{\"keccak256\":\"0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85\",\"dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x4c5d29fe5d3d45e9b6e81241f12bce21ed5c21ba931ef7b59eb312295ef02192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23dd72e2f9f2e337dae246e5585b1e1c7c5dcd9249155bc96d7c3f2710499dd\",\"dweb:/ipfs/QmWsTHchbEMjBSLFAgFsRZkcuWJG1XpF45HxqXR2Pp8uwe\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f\",\"dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170\",\"dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "Uint128x128Math__PowUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_GetIdFromPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapNATIVEForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBRouter.Swap.t.sol": "LiquidityBinRouterSwapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361",
        "urls": [
          "bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c",
          "dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x2c67a533e405b77317caffc0d556320a04e58346ed645cefaa9fea5f91a06cb5",
        "urls": [
          "bzz-raw://e8b1afdace7d60297379288b4b35310cc81fdd3d013eba888d90c51ba54642c1",
          "dweb:/ipfs/QmeMpyQEKryrVuBGWye6GVqpSNPJUQ6hruMwRBSRSCGg2J"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763",
        "urls": [
          "bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b",
          "dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362",
        "urls": [
          "bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4",
          "dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876",
        "urls": [
          "bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533",
          "dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9",
        "urls": [
          "bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b",
          "dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44",
        "urls": [
          "bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126",
          "dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x170a9b2acc018657045741a158ebfdf28982c68beeba6ed145169d1a1248cd53",
        "urls": [
          "bzz-raw://3b800466a1598c4d2e94bf973b7335d5d01bb32ae5e6e78c29c809dcda0fc375",
          "dweb:/ipfs/QmeP9CKVtdGiEo7rLNWqRa24XJjefRpSZtsirHuKdPCRqA"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x911b32ef02c5950a9cf6367a508b9930ace9dc5531459a50951bcbec4717bbda",
        "urls": [
          "bzz-raw://b35351a0ec61432596383de0a8d3a65be8f2122fb50a32ebddf66351179b048c",
          "dweb:/ipfs/Qmf43DEDeEwKz8LvqWiAPmqb3CAqMuVUAHXFkgSd3uqN9M"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495",
        "urls": [
          "bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe",
          "dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2",
        "urls": [
          "bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980",
          "dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x718ae75ad57a149ff2dec6dcd51f9e406ac52a45865ec97fa79671e67a225713",
        "urls": [
          "bzz-raw://9cb67913b2545d5590bb19f1ccbdefa5d479a94a2e3e9a4325c267dbd02a86cf",
          "dweb:/ipfs/QmYbhQwaGewsQKr9KrHqXytXgboYvFFngK6dShw7RYs7AU"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3",
        "urls": [
          "bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11",
          "dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9",
        "urls": [
          "bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246",
          "dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62",
        "urls": [
          "bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56",
          "dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca",
        "urls": [
          "bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc",
          "dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a",
        "urls": [
          "bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf",
          "dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2",
        "urls": [
          "bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c",
          "dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727",
        "urls": [
          "bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15",
          "dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70",
        "urls": [
          "bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51",
          "dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47",
        "urls": [
          "bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561",
          "dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9",
        "urls": [
          "bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f",
          "dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49",
        "urls": [
          "bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f",
          "dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6"
        ],
        "license": "MIT"
      },
      "src/libraries/Clone.sol": {
        "keccak256": "0x594933ba1ceef90636ac84a1af9cfc5a0be1fcb4340a8a0420fb4505a7012d70",
        "urls": [
          "bzz-raw://25ed9aa543e706d2e87f29130c9e40c7b73528138b53dae5c05d664d28fae97b",
          "dweb:/ipfs/QmSiFFQBhxpJdrrdYMRYX3TDhKY7cWgYPjusonV3Srp2ss"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2",
        "urls": [
          "bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009",
          "dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084",
        "urls": [
          "bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee",
          "dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151",
        "urls": [
          "bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156",
          "dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9",
        "urls": [
          "bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5",
          "dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3",
        "urls": [
          "bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1",
          "dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a",
        "urls": [
          "bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e",
          "dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658",
        "urls": [
          "bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3",
          "dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154",
        "urls": [
          "bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8",
          "dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994",
        "urls": [
          "bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de",
          "dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba",
        "urls": [
          "bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8",
          "dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1",
        "urls": [
          "bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5",
          "dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901",
        "urls": [
          "bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4",
          "dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed",
        "urls": [
          "bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e",
          "dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63",
        "urls": [
          "bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20",
          "dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b",
        "urls": [
          "bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1",
          "dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba",
        "urls": [
          "bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f",
          "dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2",
        "urls": [
          "bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242",
          "dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY"
        ],
        "license": "MIT"
      },
      "test/LBRouter.Swap.t.sol": {
        "keccak256": "0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673",
        "urls": [
          "bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85",
          "dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ"
        ],
        "license": "UNLICENSED"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x4c5d29fe5d3d45e9b6e81241f12bce21ed5c21ba931ef7b59eb312295ef02192",
        "urls": [
          "bzz-raw://f23dd72e2f9f2e337dae246e5585b1e1c7c5dcd9249155bc96d7c3f2710499dd",
          "dweb:/ipfs/QmWsTHchbEMjBSLFAgFsRZkcuWJG1XpF45HxqXR2Pp8uwe"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6",
        "urls": [
          "bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f",
          "dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb",
        "urls": [
          "bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170",
          "dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBRouter.Swap.t.sol",
    "id": 99909,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        45841
      ],
      "AvalancheAddresses": [
        103697
      ],
      "BinHelper": [
        69201
      ],
      "BitMath": [
        72709
      ],
      "Clone": [
        69323
      ],
      "Constants": [
        69361
      ],
      "ERC20": [
        48859
      ],
      "ERC20Mock": [
        119771
      ],
      "ERC20TransferTaxMock": [
        119825
      ],
      "Encoded": [
        72916
      ],
      "EnumerableMap": [
        51848
      ],
      "EnumerableSet": [
        52461
      ],
      "FeeHelper": [
        69554
      ],
      "FlashBorrower": [
        120554
      ],
      "Hooks": [
        70428
      ],
      "IERC20": [
        48937
      ],
      "ILBFactory": [
        64899
      ],
      "ILBFlashLoanCallback": [
        64924
      ],
      "ILBHooks": [
        65097
      ],
      "ILBLegacyFactory": [
        65463
      ],
      "ILBLegacyPair": [
        65879
      ],
      "ILBLegacyRouter": [
        66288
      ],
      "ILBPair": [
        66855
      ],
      "ILBRouter": [
        67387
      ],
      "ILBToken": [
        67510
      ],
      "ISovrynLBFactoryV1": [
        67584
      ],
      "ISovrynLBPairV1": [
        67827
      ],
      "ISovrynLBRouter01": [
        68136
      ],
      "ISovrynLBRouter02": [
        68226
      ],
      "IWNATIVE": [
        68242
      ],
      "ImmutableClone": [
        70506
      ],
      "Initializable": [
        48344
      ],
      "LBFactory": [
        56167
      ],
      "LBPair": [
        58985
      ],
      "LBPairBeaconProxy": [
        59146
      ],
      "LBPairUpgradeableBeacon": [
        59350
      ],
      "LBQuoter": [
        60638
      ],
      "LBRouter": [
        63882
      ],
      "LBToken": [
        64401
      ],
      "LiquidityBinRouterSwapTest": [
        99908
      ],
      "LiquidityConfigurations": [
        73086
      ],
      "OracleHelper": [
        71163
      ],
      "Ownable": [
        47040
      ],
      "Ownable2StepUpgradeable": [
        45978
      ],
      "OwnableUpgradeable": [
        46173
      ],
      "PackedUint128Math": [
        73440
      ],
      "PairParameterHelper": [
        72020
      ],
      "PriceHelper": [
        72194
      ],
      "ReentrancyGuardUpgradeable": [
        72323
      ],
      "SafeCast": [
        74188
      ],
      "SafeERC20": [
        49386
      ],
      "SampleMath": [
        74613
      ],
      "SovrynLBLibrary": [
        72529
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3507
      ],
      "StdCheats": [
        6360
      ],
      "StdInvariant": [
        6685
      ],
      "StdStorage": [
        7451
      ],
      "StdStyle": [
        10301
      ],
      "StdUtils": [
        11087
      ],
      "Test": [
        11134
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        103496
      ],
      "TokenHelper": [
        72615
      ],
      "TransparentUpgradeableProxy": [
        48090
      ],
      "TreeMath": [
        75545
      ],
      "Uint256x256Math": [
        76181
      ],
      "UpgradeableBeacon": [
        47907
      ],
      "Utils": [
        103664
      ],
      "Vm": [
        14564
      ],
      "WNATIVE": [
        120864
      ],
      "console": [
        22628
      ],
      "console2": [
        30753
      ],
      "safeconsole": [
        45478
      ],
      "stdError": [
        6426
      ],
      "stdJson": [
        7277
      ],
      "stdMath": [
        7419
      ],
      "stdStorage": [
        9090
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:20067:121",
    "nodes": [
      {
        "id": 97704,
        "nodeType": "PragmaDirective",
        "src": "40:24:121",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 97705,
        "nodeType": "ImportDirective",
        "src": "66:37:121",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "test/helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99909,
        "sourceUnit": 103497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99908,
        "nodeType": "ContractDefinition",
        "src": "555:19551:121",
        "nodes": [
          {
            "id": 97856,
            "nodeType": "FunctionDefinition",
            "src": "611:1174:121",
            "nodes": [],
            "body": {
              "id": 97855,
              "nodeType": "Block",
              "src": "644:1141:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 97712,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "654:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LiquidityBinRouterSwapTest_$99908_$",
                          "typeString": "type(contract super LiquidityBinRouterSwapTest)"
                        }
                      },
                      "id": 97714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "660:5:121",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102623,
                      "src": "654:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 97715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:13:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97716,
                  "nodeType": "ExpressionStatement",
                  "src": "654:13:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97720,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101925,
                        "src": "705:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 97721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97717,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102004,
                        "src": "678:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$56167",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 97719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "686:18:121",
                      "memberName": "setPresetOpenState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55640,
                      "src": "678:26:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                        "typeString": "function (uint16,bool) external"
                      }
                    },
                    "id": 97722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:50:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97723,
                  "nodeType": "ExpressionStatement",
                  "src": "678:50:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97727,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101986,
                        "src": "793:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97728,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "799:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97729,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101919,
                        "src": "805:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97730,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101925,
                        "src": "813:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97724,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "773:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "780:12:121",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60980,
                      "src": "773:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$66855_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:57:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97732,
                  "nodeType": "ExpressionStatement",
                  "src": "773:57:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97736,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "860:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 97737,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "869:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97738,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101919,
                        "src": "875:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97739,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101925,
                        "src": "883:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97733,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "840:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "847:12:121",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60980,
                      "src": "840:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$66855_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "840:60:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97741,
                  "nodeType": "ExpressionStatement",
                  "src": "840:60:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97745,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102001,
                        "src": "930:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 97746,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "940:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 97747,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101919,
                        "src": "949:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97748,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101925,
                        "src": "957:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97742,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "910:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "917:12:121",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60980,
                      "src": "910:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$66855_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:64:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97750,
                  "nodeType": "ExpressionStatement",
                  "src": "910:64:121"
                },
                {
                  "assignments": [
                    97752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97752,
                      "mutability": "mutable",
                      "name": "startingBalance",
                      "nameLocation": "993:15:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 97855,
                      "src": "985:23:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97758,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1016:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          },
                          "typeName": {
                            "id": 97754,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "1016:7:121",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          }
                        ],
                        "id": 97753,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "1011:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 97756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1011:13:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint112",
                        "typeString": "type(uint112)"
                      }
                    },
                    "id": 97757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1025:3:121",
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "1011:17:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:43:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97762,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101983,
                            "src": "1051:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 97761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1043:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1043:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1043:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97766,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1066:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1058:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1058:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1058:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97768,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97752,
                        "src": "1073:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97759,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1038:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:51:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97770,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:51:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97774,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101986,
                            "src": "1112:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 97773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1104:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1104:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1104:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97778,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1127:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1119:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97776,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1119:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1119:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97780,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97752,
                        "src": "1134:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97771,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1099:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:51:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97782,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:51:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97786,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102001,
                            "src": "1173:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          ],
                          "id": 97785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1165:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1165:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:17:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97790,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1192:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97792,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97752,
                        "src": "1199:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97783,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1160:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:55:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97794,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:55:121"
                },
                {
                  "assignments": [
                    97799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97799,
                      "mutability": "mutable",
                      "name": "liquidityParameters",
                      "nameLocation": "1263:19:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 97855,
                      "src": "1226:56:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters"
                      },
                      "typeName": {
                        "id": 97798,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97797,
                          "name": "ILBRouter.LiquidityParameters",
                          "nameLocations": [
                            "1226:9:121",
                            "1236:19:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67027,
                          "src": "1226:29:121"
                        },
                        "referencedDeclaration": 67027,
                        "src": "1226:29:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_storage_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97808,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97801,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101986,
                        "src": "1320:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97802,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "1326:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 97803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1332:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      },
                      {
                        "id": 97804,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101919,
                        "src": "1340:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 97805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      {
                        "hexValue": "30",
                        "id": 97806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 97800,
                      "name": "getLiquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102967,
                      "src": "1297:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$67027_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                      }
                    },
                    "id": 97807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:57:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:128:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97812,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97799,
                        "src": "1384:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 97809,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "1364:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1371:12:121",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61068,
                      "src": "1364:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$67027_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97814,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:40:121"
                },
                {
                  "expression": {
                    "id": 97824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97815,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97799,
                      "src": "1415:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97817,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "1460:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 97818,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "1469:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "hexValue": "313030653138",
                          "id": 97819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        },
                        {
                          "id": 97820,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101919,
                          "src": "1483:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 97821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1491:2:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 97822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97816,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102967,
                        "src": "1437:22:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$67027_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 97823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1437:60:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1415:82:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 97825,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:82:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97832,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97799,
                        "src": "1569:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 97826,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "1507:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1514:18:121",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61218,
                        "src": "1507:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$67027_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 97831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 97829,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97799,
                            "src": "1540:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 97830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1560:7:121",
                          "memberName": "amountX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67001,
                          "src": "1540:27:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1507:61:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$67027_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:82:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97834,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:82:121"
                },
                {
                  "expression": {
                    "id": 97844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97835,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97799,
                      "src": "1600:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97837,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102001,
                          "src": "1645:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 97838,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "1655:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "hexValue": "323030653138",
                          "id": 97839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1664:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          "value": "200e18"
                        },
                        {
                          "id": 97840,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101919,
                          "src": "1672:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 97841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1680:2:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 97842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1684:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97836,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102967,
                        "src": "1622:22:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$67027_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 97843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1622:64:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1600:86:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 97845,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:86:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97852,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97799,
                        "src": "1758:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 97846,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "1696:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1703:18:121",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61218,
                        "src": "1696:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$67027_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 97851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 97849,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97799,
                            "src": "1729:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$67027_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 97850,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1749:7:121",
                          "memberName": "amountY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67003,
                          "src": "1729:27:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1696:61:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$67027_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:82:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97854,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:82:121"
                }
              ]
            },
            "baseFunctions": [
              102623
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "620:5:121",
            "overrides": {
              "id": 97710,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "635:8:121"
            },
            "parameters": {
              "id": 97709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:121"
            },
            "returnParameters": {
              "id": 97711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97887,
            "nodeType": "FunctionDefinition",
            "src": "1791:273:121",
            "nodes": [],
            "body": {
              "id": 97886,
              "nodeType": "Block",
              "src": "1834:230:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97861,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "1852:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 97886,
                      "src": "1844:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97860,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97859,
                          "name": "ILBPair",
                          "nameLocations": [
                            "1844:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "1844:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "1844:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97869,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97864,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101986,
                          "src": "1888:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97865,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "1894:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97866,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "1900:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97862,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "1859:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1867:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "1859:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1859:58:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97868,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1918:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "1859:65:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1844:80:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97873,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97861,
                        "src": "1957:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "hexValue": "393234353231333036343035333732393037303230303633393038313830323734393536363636",
                        "id": 97874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:39:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        },
                        "value": "924521306405372907020063908180274956666"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        }
                      ],
                      "expression": {
                        "id": 97870,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "1935:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1942:14:121",
                      "memberName": "getIdFromPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60873,
                      "src": "1935:21:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint256_$returns$_t_uint24_$",
                        "typeString": "function (contract ILBPair,uint256) view external returns (uint24)"
                      }
                    },
                    "id": 97875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:68:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 97876,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:68:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97880,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97861,
                        "src": "2036:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 97883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "315f303030",
                          "id": 97881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97882,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101919,
                          "src": "2050:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "src": "2042:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 97877,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "2014:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2021:14:121",
                      "memberName": "getPriceFromId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60891,
                      "src": "2014:21:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint24_$returns$_t_uint256_$",
                        "typeString": "function (contract ILBPair,uint24) view external returns (uint256)"
                      }
                    },
                    "id": 97884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:43:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97885,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:43:121"
                }
              ]
            },
            "functionSelector": "061794b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_GetIdFromPrice",
            "nameLocation": "1800:19:121",
            "parameters": {
              "id": 97857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:121"
            },
            "returnParameters": {
              "id": 97858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:121"
            },
            "scope": 99908,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98143,
            "nodeType": "FunctionDefinition",
            "src": "2070:2203:121",
            "nodes": [],
            "body": {
              "id": 98142,
              "nodeType": "Block",
              "src": "2118:2155:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97891,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "2136:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2128:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97890,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2128:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97893,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 97892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2147:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2128:24:121"
                },
                {
                  "assignments": [
                    97896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97896,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "2171:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2163:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97895,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97894,
                          "name": "ILBPair",
                          "nameLocations": [
                            "2163:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "2163:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "2163:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97904,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97899,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101986,
                          "src": "2207:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97900,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "2213:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97901,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "2219:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97897,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "2178:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2186:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "2178:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2178:58:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97903,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2237:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "2178:65:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:80:121"
                },
                {
                  "assignments": [
                    null,
                    97906,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 97906,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "2264:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2256:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97905,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2256:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 97913,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97909,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97896,
                        "src": "2304:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 97910,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "2310:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 97911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97907,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "2286:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2293:10:121",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60951,
                      "src": "2286:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 97912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:39:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2253:72:121"
                },
                {
                  "assignments": [
                    97918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97918,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2358:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2336:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 97917,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97916,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "2336:9:121",
                            "2346:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "2336:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "2336:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97923,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97920,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101986,
                        "src": "2376:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97921,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "2382:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 97919,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "2365:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 97922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:22:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2336:51:121"
                },
                {
                  "assignments": [
                    97925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97925,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "2406:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2398:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2398:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97930,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2445:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2437:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2437:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 97926,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "2422:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 97927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2427:9:121",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48445,
                      "src": "2422:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 97932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2398:53:121"
                },
                {
                  "assignments": [
                    97935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97935,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2471:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98142,
                      "src": "2463:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2463:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97950,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97938,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "2528:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97939,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97906,
                        "src": "2538:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97940,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "2557:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97943,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2571:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2563:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2563:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97945,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2578:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2584:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2578:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2596:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2578:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97936,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "2496:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2503:24:121",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61490,
                      "src": "2496:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2462:136:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97952,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97935,
                        "src": "2618:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97953,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97906,
                        "src": "2629:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a31",
                        "id": 97954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2648:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        },
                        "value": "test_SwapExactTokensForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        }
                      ],
                      "id": 97951,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2609:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:74:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97956,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:74:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97962,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2725:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2717:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97960,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2717:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 97958,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101983,
                            "src": "2702:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 97959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2707:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48445,
                          "src": "2702:14:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 97964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:29:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97965,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97925,
                          "src": "2733:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97966,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97935,
                          "src": "2749:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2733:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a32",
                        "id": 97968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2760:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        },
                        "value": "test_SwapExactTokensForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        }
                      ],
                      "id": 97957,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2693:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2693:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97970,
                  "nodeType": "ExpressionStatement",
                  "src": "2693:102:121"
                },
                {
                  "expression": {
                    "id": 97979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 97971,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97906,
                          "src": "2867:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 97972,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2864:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97975,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97896,
                          "src": "2907:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 97976,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97891,
                          "src": "2913:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 97977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2923:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 97973,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "2889:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2896:10:121",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60951,
                        "src": "2889:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 97978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2889:39:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "2864:64:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97980,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:64:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97986,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "3007:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3017:31:121",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66960,
                              "src": "3007:41:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 97988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3049:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3007:50:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 97991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 97989,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97906,
                              "src": "3059:17:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 97990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3079:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3059:21:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 97992,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97906,
                            "src": "3082:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 97984,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2967:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2971:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2967:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2967:146:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97981,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2938:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2941:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "2938:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:185:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97995,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:185:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97999,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "3165:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98000,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97906,
                          "src": "3175:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3175:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98003,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "3198:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98006,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3212:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3204:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98004,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3204:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3204:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98008,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3219:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3219:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3237:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3219:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97996,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "3133:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3140:24:121",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61490,
                      "src": "3133:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3133:106:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98013,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:106:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98019,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "3338:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3348:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "3338:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3375:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3338:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98022,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3385:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3391:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3385:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3403:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3385:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98026,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3406:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3412:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3406:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98017,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3315:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3319:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3315:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3315:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98014,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3286:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3289:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "3286:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98030,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98034,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "3474:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98035,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97906,
                        "src": "3484:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98036,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "3503:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98039,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3517:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3509:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3509:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3509:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98041,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3524:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3530:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3524:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3542:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3524:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98031,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "3442:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3449:24:121",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61490,
                      "src": "3442:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3442:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98046,
                  "nodeType": "ExpressionStatement",
                  "src": "3442:102:121"
                },
                {
                  "expression": {
                    "id": 98056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98047,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "3606:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3611:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "3606:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3636:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3623:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98051,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98050,
                              "name": "IERC20",
                              "nameLocations": [
                                "3627:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "3627:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "3627:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98052,
                          "nodeType": "ArrayTypeName",
                          "src": "3627:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3623:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3606:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98057,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98063,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "3687:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3697:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "3687:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3723:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3687:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98061,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3664:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3668:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3664:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3664:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98058,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3648:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "3648:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98068,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98072,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "3775:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98073,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97906,
                        "src": "3785:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98074,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "3804:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98077,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3818:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3810:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98075,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3810:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3810:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98079,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3825:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3831:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3825:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3825:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98069,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "3743:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3750:24:121",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61490,
                      "src": "3743:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98084,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:102:121"
                },
                {
                  "expression": {
                    "id": 98094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98085,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "3900:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98087,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3905:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "3900:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 98092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3930:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 98091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3917:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98089,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98088,
                              "name": "IERC20",
                              "nameLocations": [
                                "3921:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "3921:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "3921:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98090,
                          "nodeType": "ArrayTypeName",
                          "src": "3921:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3917:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3900:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98095,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:32:121"
                },
                {
                  "expression": {
                    "id": 98102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98096,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97918,
                          "src": "3942:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3947:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "3942:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98100,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 98098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3957:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3942:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98101,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "3962:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "3942:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98103,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:24:121"
                },
                {
                  "expression": {
                    "id": 98110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98104,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97918,
                          "src": "3976:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98107,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3981:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "3976:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98108,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 98106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3991:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3976:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98109,
                      "name": "taxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102001,
                      "src": "3996:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                        "typeString": "contract ERC20TransferTaxMock"
                      }
                    },
                    "src": "3976:28:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98111,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:28:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98117,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "4066:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4076:24:121",
                              "memberName": "LBRouter__PairNotCreated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66884,
                              "src": "4066:34:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256) pure"
                              }
                            },
                            "id": 98119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4101:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4066:43:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 98120,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101986,
                            "src": "4111:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          {
                            "id": 98121,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102001,
                            "src": "4117:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          {
                            "id": 98122,
                            "name": "DEFAULT_BIN_STEP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101925,
                            "src": "4127:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                              "typeString": "contract ERC20TransferTaxMock"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 98115,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4043:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4047:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4043:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4043:101:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98112,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4014:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4017:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "4014:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:140:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98125,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:140:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98129,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97891,
                        "src": "4196:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98130,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97906,
                        "src": "4206:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98131,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97918,
                        "src": "4225:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98134,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4239:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4231:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4231:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98136,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4246:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4252:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4246:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4264:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4246:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98126,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "4164:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4171:24:121",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61490,
                      "src": "4164:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98141,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:102:121"
                }
              ]
            },
            "functionSelector": "72b01c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForTokens",
            "nameLocation": "2079:29:121",
            "parameters": {
              "id": 97888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:2:121"
            },
            "returnParameters": {
              "id": 97889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98394,
            "nodeType": "FunctionDefinition",
            "src": "4279:2180:121",
            "nodes": [],
            "body": {
              "id": 98393,
              "nodeType": "Block",
              "src": "4327:2132:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98147,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4345:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4337:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98146,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4337:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98149,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4356:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4337:24:121"
                },
                {
                  "assignments": [
                    98152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98152,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "4380:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4372:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98150,
                          "name": "ILBPair",
                          "nameLocations": [
                            "4372:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "4372:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "4372:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98160,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98155,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "4416:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98156,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "4425:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98157,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "4431:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98153,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "4387:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4395:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "4387:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4387:61:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98159,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4449:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "4387:68:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4372:83:121"
                },
                {
                  "assignments": [
                    null,
                    98162,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 98162,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "4476:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4468:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98161,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4468:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98165,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "4516:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98166,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "4522:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 98167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4532:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98163,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "4498:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4505:10:121",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60951,
                      "src": "4498:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:73:121"
                },
                {
                  "assignments": [
                    98174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98174,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "4571:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4549:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98172,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "4549:9:121",
                            "4559:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "4549:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "4549:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98176,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "4589:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 98177,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "4595:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 98175,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "4578:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:25:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4549:54:121"
                },
                {
                  "assignments": [
                    98181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98181,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4622:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4614:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4614:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98187,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98184,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4646:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 98183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4638:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 98182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4638:7:121",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4638:13:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4652:7:121",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4638:21:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4614:45:121"
                },
                {
                  "assignments": [
                    98189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98189,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4679:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98393,
                      "src": "4671:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98188,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4671:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98207,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98192,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "4737:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98193,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98162,
                        "src": "4747:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98194,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "4766:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98199,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4788:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4780:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98197,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4780:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4780:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4772:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4772:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4772:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98202,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4796:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4802:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4796:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4814:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4796:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98190,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "4692:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4699:24:121",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61595,
                      "src": "4692:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:133:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:155:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98209,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98189,
                        "src": "4845:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98210,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98162,
                        "src": "4856:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a31",
                        "id": 98211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4875:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        }
                      ],
                      "id": 98208,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4836:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:74:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98213,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:74:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 98217,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4937:4:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 98216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4929:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 98215,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4929:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4929:13:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 98219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4943:7:121",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4929:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98220,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98181,
                          "src": "4952:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 98221,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98189,
                          "src": "4968:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4952:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a32",
                        "id": 98223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4979:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        }
                      ],
                      "id": 98214,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4920:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:94:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98225,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:94:121"
                },
                {
                  "expression": {
                    "id": 98234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 98226,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98162,
                          "src": "5086:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 98227,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5083:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98230,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98152,
                          "src": "5126:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98231,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98147,
                          "src": "5132:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 98232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5142:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98228,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "5108:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5115:10:121",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60951,
                        "src": "5108:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5108:40:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "5083:65:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98235,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:65:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98241,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "5227:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5237:31:121",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66960,
                              "src": "5227:41:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5269:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5227:50:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98244,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98162,
                              "src": "5279:17:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5299:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5279:21:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98247,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98162,
                            "src": "5302:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98239,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5187:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5191:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5187:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5187:146:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5158:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5161:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "5158:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:185:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98250,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:185:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98254,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "5398:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98255,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98162,
                          "src": "5408:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5428:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5408:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98258,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "5431:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98263,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5453:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5445:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5445:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5445:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5437:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5437:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5437:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98266,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5461:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5467:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5461:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5461:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98251,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "5353:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5360:24:121",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61595,
                      "src": "5353:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:137:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98271,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:137:121"
                },
                {
                  "expression": {
                    "id": 98278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98272,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98174,
                          "src": "5546:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5551:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "5546:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98276,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 98274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5561:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5546:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98277,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "5566:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "5546:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98279,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98285,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "5619:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5629:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "5619:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5656:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5619:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98290,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "5674:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5666:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98288,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5666:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5666:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98283,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5596:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5600:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5596:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5596:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98280,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5580:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5583:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "5580:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98294,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98298,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "5736:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98299,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98162,
                          "src": "5746:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5766:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5746:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98302,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "5769:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98307,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5791:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5783:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98305,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5783:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5783:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5775:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5775:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98310,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5799:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5805:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5799:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5817:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5799:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98295,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "5691:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5698:24:121",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61595,
                      "src": "5691:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5691:137:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98315,
                  "nodeType": "ExpressionStatement",
                  "src": "5691:137:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98321,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "5927:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5937:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "5927:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5964:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5927:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98324,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5974:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5980:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5974:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5992:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5974:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98328,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5995:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6001:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5995:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98319,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5904:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5908:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5904:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5904:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98316,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5875:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5878:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "5875:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98332,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98336,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "6063:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98337,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98162,
                        "src": "6073:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98338,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "6092:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98343,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6114:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6106:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98341,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6106:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6106:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6098:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6098:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6098:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98346,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6122:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6128:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6122:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6140:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6122:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98333,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "6031:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6038:24:121",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61595,
                      "src": "6031:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:111:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98351,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:111:121"
                },
                {
                  "expression": {
                    "id": 98361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98352,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "6204:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6209:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "6204:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6234:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6221:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98356,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98355,
                              "name": "IERC20",
                              "nameLocations": [
                                "6225:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "6225:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "6225:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98357,
                          "nodeType": "ArrayTypeName",
                          "src": "6225:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6221:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "6204:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98362,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98368,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "6285:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6295:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "6285:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6321:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6285:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98366,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6262:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6266:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6262:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6262:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98363,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6246:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6249:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "6246:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6246:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98373,
                  "nodeType": "ExpressionStatement",
                  "src": "6246:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98377,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98147,
                        "src": "6373:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98378,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98162,
                        "src": "6383:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98379,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98174,
                        "src": "6402:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98384,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6424:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6416:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98382,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6416:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6416:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6408:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6408:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6408:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98387,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6432:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6438:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6432:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6450:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6432:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98374,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "6341:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6348:24:121",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61595,
                      "src": "6341:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:111:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98392,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:111:121"
                }
              ]
            },
            "functionSelector": "4415cf9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVE",
            "nameLocation": "4288:29:121",
            "parameters": {
              "id": 98144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:2:121"
            },
            "returnParameters": {
              "id": 98145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4327:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98637,
            "nodeType": "FunctionDefinition",
            "src": "6465:2158:121",
            "nodes": [],
            "body": {
              "id": 98636,
              "nodeType": "Block",
              "src": "6513:2110:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98398,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6531:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6523:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98397,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6523:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98400,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6542:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6523:24:121"
                },
                {
                  "assignments": [
                    98403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98403,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "6566:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6558:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98401,
                          "name": "ILBPair",
                          "nameLocations": [
                            "6558:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "6558:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "6558:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98411,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98406,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "6602:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98407,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "6611:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98408,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "6617:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98404,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "6573:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6581:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "6573:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6573:61:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98410,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6635:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "6573:68:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6558:83:121"
                },
                {
                  "assignments": [
                    null,
                    98413,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 98413,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "6662:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6654:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98412,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6654:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98416,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98403,
                        "src": "6702:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98417,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98398,
                        "src": "6708:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 98418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6718:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98414,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "6684:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6691:10:121",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60951,
                      "src": "6684:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6684:39:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6651:72:121"
                },
                {
                  "assignments": [
                    98425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98425,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "6756:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6734:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98424,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98423,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "6734:9:121",
                            "6744:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "6734:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "6734:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98427,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "6774:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 98428,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "6783:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 98426,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "6763:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:25:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6734:54:121"
                },
                {
                  "assignments": [
                    98432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98432,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "6807:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6799:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6799:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98440,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98437,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6846:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6838:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98435,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6838:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6838:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98433,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "6823:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 98434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6828:9:121",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48445,
                      "src": "6823:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6823:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6799:53:121"
                },
                {
                  "assignments": [
                    98442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98442,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "6872:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98636,
                      "src": "6864:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6864:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98458,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98447,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98413,
                        "src": "6947:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98448,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "6966:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98451,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6980:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6972:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98449,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6972:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6972:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98453,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6987:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6993:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6987:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7005:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6987:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98443,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "6885:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6892:24:121",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61681,
                        "src": "6885:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98445,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "6924:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "6885:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6885:131:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6863:153:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98460,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98442,
                        "src": "7036:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98461,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98413,
                        "src": "7047:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a31",
                        "id": 98462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7066:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        }
                      ],
                      "id": 98459,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7027:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:74:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98464,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:74:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98470,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7143:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7135:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98468,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7135:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7135:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98466,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101983,
                            "src": "7120:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 98467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7125:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48445,
                          "src": "7120:14:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7120:29:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98473,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98432,
                          "src": "7151:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 98474,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98442,
                          "src": "7167:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7151:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a32",
                        "id": 98476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7178:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        }
                      ],
                      "id": 98465,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7111:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7111:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98478,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:102:121"
                },
                {
                  "expression": {
                    "id": 98487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 98479,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98413,
                          "src": "7227:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 98480,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7224:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98483,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98403,
                          "src": "7267:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98484,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "7273:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 98485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7283:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98481,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "7249:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7256:10:121",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60951,
                        "src": "7249:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:39:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "7224:64:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98488,
                  "nodeType": "ExpressionStatement",
                  "src": "7224:64:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98494,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "7426:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7436:31:121",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66960,
                              "src": "7426:41:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7468:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7426:50:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98497,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98413,
                              "src": "7478:17:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7498:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7478:21:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98500,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98413,
                            "src": "7501:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98492,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7386:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7390:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7386:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7386:146:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98489,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7357:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7360:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "7357:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:185:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98503,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:185:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98509,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98413,
                          "src": "7614:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7634:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7614:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98512,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "7637:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98515,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7651:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7643:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7643:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7643:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98517,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7658:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7664:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7658:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7676:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7658:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98504,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "7552:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7559:24:121",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61681,
                        "src": "7552:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98507,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "7591:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7552:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:135:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98522,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:135:121"
                },
                {
                  "expression": {
                    "id": 98529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98523,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98425,
                          "src": "7742:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98526,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7747:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "7742:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98527,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 98525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7742:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98528,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "7762:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "7742:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98530,
                  "nodeType": "ExpressionStatement",
                  "src": "7742:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98536,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "7815:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7825:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "7815:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7852:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7815:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98541,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "7870:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7862:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98539,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7862:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7862:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98534,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7792:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7796:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7792:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7792:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98531,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7776:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7779:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "7776:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98545,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98551,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98413,
                        "src": "7936:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98552,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "7955:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98555,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7969:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7961:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7961:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7961:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98557,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7976:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7982:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7976:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7994:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7976:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98546,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "7887:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7894:24:121",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61681,
                        "src": "7887:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98549,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "7926:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7887:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7887:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98562,
                  "nodeType": "ExpressionStatement",
                  "src": "7887:109:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98568,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "8095:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8105:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "8095:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8132:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8095:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98571,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8142:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8148:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8142:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8160:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8142:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98575,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8163:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8169:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8163:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98566,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8072:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8076:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8072:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8072:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98563,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8043:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8046:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "8043:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8043:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98579,
                  "nodeType": "ExpressionStatement",
                  "src": "8043:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98585,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98413,
                        "src": "8248:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98586,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "8267:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98589,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8281:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8273:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8273:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8273:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98591,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8288:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8294:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8288:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8306:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8288:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98580,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "8199:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8206:24:121",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61681,
                        "src": "8199:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98583,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "8238:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8199:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8199:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98596,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:109:121"
                },
                {
                  "expression": {
                    "id": 98606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98597,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "8370:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98599,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8375:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "8370:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8400:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8387:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98601,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98600,
                              "name": "IERC20",
                              "nameLocations": [
                                "8391:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "8391:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "8391:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98602,
                          "nodeType": "ArrayTypeName",
                          "src": "8391:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8387:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "8370:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98607,
                  "nodeType": "ExpressionStatement",
                  "src": "8370:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98613,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "8451:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8461:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "8451:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8487:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8451:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98611,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8428:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8432:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8428:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8428:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98608,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8412:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8415:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "8412:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98618,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98624,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98413,
                        "src": "8556:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98625,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98425,
                        "src": "8575:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8589:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8581:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8581:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8581:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98630,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8596:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8602:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8596:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8614:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8596:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98619,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "8507:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8514:24:121",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61681,
                        "src": "8507:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98622,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98398,
                          "src": "8546:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8507:48:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8507:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98635,
                  "nodeType": "ExpressionStatement",
                  "src": "8507:109:121"
                }
              ]
            },
            "functionSelector": "38a637ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokens",
            "nameLocation": "6474:29:121",
            "parameters": {
              "id": 98395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6503:2:121"
            },
            "returnParameters": {
              "id": 98396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6513:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98843,
            "nodeType": "FunctionDefinition",
            "src": "8629:1774:121",
            "nodes": [],
            "body": {
              "id": 98842,
              "nodeType": "Block",
              "src": "8677:1726:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98641,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "8695:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "8687:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98640,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8687:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98643,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8707:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8687:25:121"
                },
                {
                  "assignments": [
                    98646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98646,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "8731:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "8723:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98645,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98644,
                          "name": "ILBPair",
                          "nameLocations": [
                            "8723:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "8723:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "8723:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98654,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98649,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101986,
                          "src": "8767:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98650,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "8773:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98651,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "8779:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98647,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "8738:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8746:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "8738:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8738:58:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98653,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8797:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "8738:65:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8723:80:121"
                },
                {
                  "assignments": [
                    98656,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98656,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "8822:16:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "8814:24:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98655,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8814:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 98663,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98659,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98646,
                        "src": "8861:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98660,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98641,
                        "src": "8867:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 98661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8878:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98657,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "8844:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8851:9:121",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60921,
                      "src": "8844:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:39:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8813:70:121"
                },
                {
                  "assignments": [
                    98668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98668,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "8916:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "8894:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98667,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98666,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "8894:9:121",
                            "8904:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "8894:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "8894:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98673,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98670,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101986,
                        "src": "8934:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 98671,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "8940:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 98669,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "8923:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8923:22:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8894:51:121"
                },
                {
                  "assignments": [
                    98675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98675,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "8964:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "8956:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8956:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98683,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98680,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9003:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8995:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8995:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8995:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98676,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101986,
                        "src": "8980:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 98677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8985:9:121",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48445,
                      "src": "8980:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8980:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8956:53:121"
                },
                {
                  "assignments": [
                    98688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98688,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "9038:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 98842,
                      "src": "9021:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 98686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9021:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98687,
                        "nodeType": "ArrayTypeName",
                        "src": "9021:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98703,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98691,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98641,
                        "src": "9095:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98692,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98656,
                        "src": "9106:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98693,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98668,
                        "src": "9124:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98696,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9138:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9130:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98694,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9130:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9130:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98698,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9145:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9151:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9145:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9163:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9145:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98689,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "9063:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9070:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "9063:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9020:145:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 98705,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98688,
                          "src": "9185:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 98707,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 98706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9195:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9185:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98708,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98656,
                        "src": "9199:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a31",
                        "id": 98709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9217:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        },
                        "value": "test_SwapTokensForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        }
                      ],
                      "id": 98704,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9176:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9176:76:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98711,
                  "nodeType": "ExpressionStatement",
                  "src": "9176:76:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98717,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9294:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9286:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98715,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9286:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9286:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98713,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101986,
                            "src": "9271:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 98714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9276:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48445,
                          "src": "9271:14:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9271:29:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98720,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98675,
                          "src": "9302:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 98721,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98688,
                            "src": "9318:9:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 98723,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 98722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9328:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9318:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9302:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a32",
                        "id": 98725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9332:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        },
                        "value": "test_SwapTokensForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        }
                      ],
                      "id": 98712,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9262:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9262:105:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98727,
                  "nodeType": "ExpressionStatement",
                  "src": "9262:105:121"
                },
                {
                  "expression": {
                    "id": 98736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 98728,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98656,
                          "src": "9379:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 98729,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9378:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98732,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98646,
                          "src": "9418:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98733,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98641,
                          "src": "9424:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 98734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9435:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98730,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "9401:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9408:9:121",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60921,
                        "src": "9401:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9401:39:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "9378:62:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98737,
                  "nodeType": "ExpressionStatement",
                  "src": "9378:62:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98743,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "9562:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9572:29:121",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66966,
                              "src": "9562:39:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9602:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9562:48:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98746,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98656,
                              "src": "9612:16:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9631:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9612:20:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98749,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98656,
                            "src": "9634:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98741,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9522:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9526:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9522:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9522:142:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98738,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9493:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9496:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "9493:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9493:181:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98752,
                  "nodeType": "ExpressionStatement",
                  "src": "9493:181:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98756,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98641,
                        "src": "9716:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98757,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98656,
                          "src": "9727:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9746:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9727:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98760,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98668,
                        "src": "9749:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98763,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9763:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9755:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98761,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9755:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9755:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98765,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9770:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9776:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9770:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9788:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9770:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98753,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "9684:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9691:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "9684:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9684:106:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98770,
                  "nodeType": "ExpressionStatement",
                  "src": "9684:106:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98776,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "9889:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9899:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "9889:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9926:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9889:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98779,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9936:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9942:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9936:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9954:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9936:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98783,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9957:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9963:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9957:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98774,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9866:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9870:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9866:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9866:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98771,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9837:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9840:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "9837:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98787,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98791,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98641,
                        "src": "10025:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98792,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98656,
                        "src": "10036:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98793,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98668,
                        "src": "10054:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98796,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10068:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10060:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10060:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10060:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98798,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10075:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10081:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10075:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10093:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10075:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98788,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "9993:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10000:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "9993:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98803,
                  "nodeType": "ExpressionStatement",
                  "src": "9993:102:121"
                },
                {
                  "expression": {
                    "id": 98813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98804,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98668,
                        "src": "10157:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98806,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10162:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "10157:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10187:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10174:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98808,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98807,
                              "name": "IERC20",
                              "nameLocations": [
                                "10178:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "10178:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "10178:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98809,
                          "nodeType": "ArrayTypeName",
                          "src": "10178:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10174:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "10157:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98814,
                  "nodeType": "ExpressionStatement",
                  "src": "10157:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98820,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "10238:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10248:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "10238:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10274:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10238:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98818,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10215:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10219:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10215:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10215:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98815,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10199:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10202:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "10199:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98825,
                  "nodeType": "ExpressionStatement",
                  "src": "10199:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98829,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98641,
                        "src": "10326:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98830,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98656,
                        "src": "10337:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98831,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98668,
                        "src": "10355:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98834,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10369:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10361:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10361:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10361:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98836,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10376:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10382:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10376:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10394:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10376:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98826,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "10294:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10301:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "10294:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10294:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98841,
                  "nodeType": "ExpressionStatement",
                  "src": "10294:102:121"
                }
              ]
            },
            "functionSelector": "7594f3a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactTokens",
            "nameLocation": "8638:29:121",
            "parameters": {
              "id": 98638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8667:2:121"
            },
            "returnParameters": {
              "id": 98639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8677:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99094,
            "nodeType": "FunctionDefinition",
            "src": "10409:2113:121",
            "nodes": [],
            "body": {
              "id": 99093,
              "nodeType": "Block",
              "src": "10457:2065:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98847,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "10475:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10467:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98846,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10467:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98849,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10487:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10467:25:121"
                },
                {
                  "assignments": [
                    98852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98852,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "10511:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10503:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98851,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98850,
                          "name": "ILBPair",
                          "nameLocations": [
                            "10503:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "10503:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "10503:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98860,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98855,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "10547:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98856,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "10556:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98857,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "10562:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98853,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "10518:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10526:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "10518:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10518:61:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98859,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10580:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "10518:68:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10503:83:121"
                },
                {
                  "assignments": [
                    98862,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98862,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "10605:16:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10597:24:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98861,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10597:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 98869,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98865,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98852,
                        "src": "10644:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98866,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "10650:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 98867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10661:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98863,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "10627:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10634:9:121",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60921,
                      "src": "10627:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10596:71:121"
                },
                {
                  "assignments": [
                    98874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98874,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "10700:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10678:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98873,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98872,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "10678:9:121",
                            "10688:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "10678:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "10678:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98879,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98876,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "10718:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 98877,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "10724:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 98875,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "10707:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10707:25:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10678:54:121"
                },
                {
                  "assignments": [
                    98881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98881,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "10751:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10743:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98880,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10743:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98889,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98886,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10790:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10782:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10782:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98882,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "10767:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 98883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10772:9:121",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48445,
                      "src": "10767:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:53:121"
                },
                {
                  "assignments": [
                    98894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98894,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "10825:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99093,
                      "src": "10808:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 98892,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10808:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98893,
                        "nodeType": "ArrayTypeName",
                        "src": "10808:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98912,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98897,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "10883:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98898,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "10894:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98899,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "10912:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98904,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10934:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10926:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98902,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10926:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10926:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10918:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10918:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10918:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98907,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10942:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10948:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10942:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10960:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10942:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98895,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "10838:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10845:24:121",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61914,
                      "src": "10838:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10838:133:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10807:164:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 98914,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98894,
                          "src": "10991:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 98916,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 98915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11001:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10991:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98917,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "11005:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a31",
                        "id": 98918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11023:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        }
                      ],
                      "id": 98913,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10982:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:76:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98920,
                  "nodeType": "ExpressionStatement",
                  "src": "10982:76:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98926,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11100:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11092:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98924,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11092:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11092:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98922,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101983,
                            "src": "11077:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 98923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11082:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48445,
                          "src": "11077:14:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11077:29:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98929,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98881,
                          "src": "11108:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 98930,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98894,
                            "src": "11124:9:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 98932,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 98931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11134:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11124:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11108:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a32",
                        "id": 98934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11138:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        }
                      ],
                      "id": 98921,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11068:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11068:105:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98936,
                  "nodeType": "ExpressionStatement",
                  "src": "11068:105:121"
                },
                {
                  "expression": {
                    "id": 98945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 98937,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98862,
                          "src": "11185:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 98938,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11184:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98941,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98852,
                          "src": "11224:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98942,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98847,
                          "src": "11230:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 98943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11241:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98939,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "11207:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11214:9:121",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60921,
                        "src": "11207:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11207:40:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "11184:63:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98946,
                  "nodeType": "ExpressionStatement",
                  "src": "11184:63:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98952,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "11369:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11379:29:121",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66966,
                              "src": "11369:39:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11409:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11369:48:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98955,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98862,
                              "src": "11419:16:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11419:20:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98958,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98862,
                            "src": "11441:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98950,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11329:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11333:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11329:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11329:142:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98947,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11300:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11303:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "11300:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11300:181:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98961,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:181:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98965,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "11523:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98966,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98862,
                          "src": "11534:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11553:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11534:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98969,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "11556:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98972,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11570:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11562:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11562:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11562:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98974,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11577:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11583:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11577:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11595:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11577:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98962,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "11491:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11498:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "11491:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:106:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98979,
                  "nodeType": "ExpressionStatement",
                  "src": "11491:106:121"
                },
                {
                  "expression": {
                    "id": 98986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98980,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98874,
                          "src": "11653:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11658:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "11653:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98984,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 98982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11668:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11653:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98985,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "11673:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "11653:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98987,
                  "nodeType": "ExpressionStatement",
                  "src": "11653:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98993,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "11726:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11736:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "11726:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11763:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11726:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98998,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "11781:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11773:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98996,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11773:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11773:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98991,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11703:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11707:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11703:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11703:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98988,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11687:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11690:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "11687:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11687:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99002,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99006,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "11830:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99007,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "11841:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99008,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "11859:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99013,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11881:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11873:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99011,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11873:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11873:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11865:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99009,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11865:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11865:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99016,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11889:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11895:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11889:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11907:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11889:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99003,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "11798:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11805:24:121",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61914,
                      "src": "11798:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 99020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11798:111:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99021,
                  "nodeType": "ExpressionStatement",
                  "src": "11798:111:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99027,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "12008:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12018:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "12008:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12045:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12008:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99030,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12055:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12061:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12055:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12055:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99034,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12076:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12082:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12076:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99025,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11985:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11989:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11985:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11985:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99022,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11956:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11959:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "11956:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11956:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99038,
                  "nodeType": "ExpressionStatement",
                  "src": "11956:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99042,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "12144:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99043,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "12155:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99044,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "12173:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99047,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12187:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12179:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12179:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12179:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99049,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12194:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12200:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12194:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12212:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12194:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99039,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "12112:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12119:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "12112:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 99053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12112:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99054,
                  "nodeType": "ExpressionStatement",
                  "src": "12112:102:121"
                },
                {
                  "expression": {
                    "id": 99064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99055,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "12276:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12281:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "12276:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12306:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12293:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99059,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99058,
                              "name": "IERC20",
                              "nameLocations": [
                                "12297:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "12297:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "12297:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99060,
                          "nodeType": "ArrayTypeName",
                          "src": "12297:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12293:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "12276:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99065,
                  "nodeType": "ExpressionStatement",
                  "src": "12276:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99071,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "12357:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12367:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "12357:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12393:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12357:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99069,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12334:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12338:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12334:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12334:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99066,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "12318:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12321:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "12318:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12318:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99076,
                  "nodeType": "ExpressionStatement",
                  "src": "12318:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99080,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98847,
                        "src": "12445:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99081,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "12456:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99082,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98874,
                        "src": "12474:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99085,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12488:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12480:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12480:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12480:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99087,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12495:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12501:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12495:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12513:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12495:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99077,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "12413:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12420:24:121",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61782,
                      "src": "12413:31:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 99091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:102:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99092,
                  "nodeType": "ExpressionStatement",
                  "src": "12413:102:121"
                }
              ]
            },
            "functionSelector": "6d090840",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactNATIVE",
            "nameLocation": "10418:29:121",
            "parameters": {
              "id": 98844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10447:2:121"
            },
            "returnParameters": {
              "id": 98845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10457:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99342,
            "nodeType": "FunctionDefinition",
            "src": "12528:2204:121",
            "nodes": [],
            "body": {
              "id": 99341,
              "nodeType": "Block",
              "src": "12576:2156:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99098,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "12594:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12586:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99097,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12586:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99100,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 99099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12606:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12586:25:121"
                },
                {
                  "assignments": [
                    99103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99103,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "12630:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12622:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 99102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99101,
                          "name": "ILBPair",
                          "nameLocations": [
                            "12622:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "12622:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "12622:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99111,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99106,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "12666:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 99107,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101983,
                          "src": "12675:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 99108,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "12681:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 99104,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "12637:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 99105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12645:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "12637:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 99109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12637:61:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 99110,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12699:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "12637:68:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12622:83:121"
                },
                {
                  "assignments": [
                    99113,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99113,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "12724:16:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12716:24:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99112,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12716:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 99120,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99116,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99103,
                        "src": "12763:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 99117,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "12769:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 99118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12780:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 99114,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "12746:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12753:9:121",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60921,
                      "src": "12746:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 99119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12746:39:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12715:70:121"
                },
                {
                  "assignments": [
                    99125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99125,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12818:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12796:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 99124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99123,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "12796:9:121",
                            "12806:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "12796:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "12796:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99130,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99127,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "12836:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 99128,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101983,
                        "src": "12845:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 99126,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "12825:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 99129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12825:25:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12796:54:121"
                },
                {
                  "assignments": [
                    99132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99132,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "12869:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12861:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12861:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99138,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99135,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12893:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 99134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12885:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 99133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12885:7:121",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 99136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12885:13:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12899:7:121",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12885:21:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12861:45:121"
                },
                {
                  "assignments": [
                    99143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99143,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "12989:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99341,
                      "src": "12972:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 99141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12972:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 99142,
                        "nodeType": "ArrayTypeName",
                        "src": "12972:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99150,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "13078:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99151,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "13089:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99154,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13103:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13095:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13095:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13095:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99156,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13110:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13116:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13110:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13128:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13110:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99144,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "13002:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13009:24:121",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62045,
                        "src": "13002:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 99149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 99148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99146,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99113,
                            "src": "13041:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 99147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13060:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "13041:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13002:62:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 99160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13002:137:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12971:168:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 99163,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99143,
                          "src": "13159:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 99165,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 99164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13169:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13159:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 99166,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99113,
                        "src": "13173:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a31",
                        "id": 99167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13191:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        }
                      ],
                      "id": 99162,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13150:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13150:76:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99169,
                  "nodeType": "ExpressionStatement",
                  "src": "13150:76:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 99173,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13253:4:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 99172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13245:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13245:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13245:13:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 99175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13259:7:121",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13245:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99176,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99132,
                          "src": "13268:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 99177,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99143,
                            "src": "13284:9:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 99179,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 99178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13294:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13284:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13268:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a32",
                        "id": 99181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13298:34:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        }
                      ],
                      "id": 99170,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13236:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13236:97:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99183,
                  "nodeType": "ExpressionStatement",
                  "src": "13236:97:121"
                },
                {
                  "expression": {
                    "id": 99192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 99184,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99113,
                          "src": "13345:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 99185,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13344:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99188,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99103,
                          "src": "13384:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 99189,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99098,
                          "src": "13390:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 99190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13401:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$66855",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 99186,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "13367:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13374:9:121",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60921,
                        "src": "13367:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 99191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13367:39:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "13344:62:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99193,
                  "nodeType": "ExpressionStatement",
                  "src": "13344:62:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99199,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "13539:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13549:29:121",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66966,
                              "src": "13539:39:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13579:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13539:48:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 99204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99202,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99113,
                              "src": "13589:16:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 99203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13608:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "13589:20:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 99205,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99113,
                            "src": "13611:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 99197,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13499:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13503:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13499:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13499:142:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99194,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13470:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13473:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "13470:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13470:181:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99208,
                  "nodeType": "ExpressionStatement",
                  "src": "13470:181:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99216,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "13735:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99217,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "13746:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99220,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13760:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13752:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13752:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13752:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99222,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13767:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13773:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13767:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13785:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13767:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99209,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "13661:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13668:24:121",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62045,
                        "src": "13661:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 99215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 99214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99212,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99113,
                            "src": "13700:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 99213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13719:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13700:20:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13661:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 99226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13661:135:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99227,
                  "nodeType": "ExpressionStatement",
                  "src": "13661:135:121"
                },
                {
                  "expression": {
                    "id": 99234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99228,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99125,
                          "src": "13851:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99231,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13856:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "13851:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99232,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13866:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13851:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99233,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "13871:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "13851:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99235,
                  "nodeType": "ExpressionStatement",
                  "src": "13851:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99241,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "13924:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13934:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "13924:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 99243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13961:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13924:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 99246,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "13979:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 99245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13971:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99244,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13971:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13971:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99239,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13901:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13905:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13901:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13901:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13885:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13888:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "13885:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13885:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99250,
                  "nodeType": "ExpressionStatement",
                  "src": "13885:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99256,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "14053:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99257,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "14064:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99260,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14078:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14070:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14070:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14070:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99262,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14085:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14091:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14085:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14103:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14085:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99251,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "13996:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14003:24:121",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62045,
                        "src": "13996:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 99255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99254,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99113,
                          "src": "14035:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13996:56:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 99266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13996:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99267,
                  "nodeType": "ExpressionStatement",
                  "src": "13996:109:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99273,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "14204:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14214:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "14204:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14241:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14204:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99276,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14251:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14257:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14251:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14269:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14251:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99280,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14272:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14278:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14272:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99271,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14181:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14185:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14181:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14181:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14152:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14155:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "14152:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14152:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99284,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99290,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "14365:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99291,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "14376:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99294,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14390:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14382:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99292,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14382:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14382:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99296,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14397:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14403:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14397:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14415:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14397:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99285,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "14308:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14315:24:121",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62045,
                        "src": "14308:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 99289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99288,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99113,
                          "src": "14347:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14308:56:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 99300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14308:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99301,
                  "nodeType": "ExpressionStatement",
                  "src": "14308:109:121"
                },
                {
                  "expression": {
                    "id": 99311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99302,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "14479:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99304,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14484:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "14479:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14509:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "14496:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99306,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99305,
                              "name": "IERC20",
                              "nameLocations": [
                                "14500:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "14500:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "14500:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99307,
                          "nodeType": "ArrayTypeName",
                          "src": "14500:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14496:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "14479:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99312,
                  "nodeType": "ExpressionStatement",
                  "src": "14479:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99318,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "14560:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14570:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "14560:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14596:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14560:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99316,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14537:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14541:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14537:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14537:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99313,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14521:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14524:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "14521:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14521:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99323,
                  "nodeType": "ExpressionStatement",
                  "src": "14521:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99329,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99098,
                        "src": "14673:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99330,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99125,
                        "src": "14684:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99333,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14698:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14690:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14690:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14690:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99335,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14705:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14711:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14705:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14723:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14705:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99324,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "14616:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14623:24:121",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62045,
                        "src": "14616:31:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 99328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99327,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99113,
                          "src": "14655:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14616:56:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 99339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14616:109:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99340,
                  "nodeType": "ExpressionStatement",
                  "src": "14616:109:121"
                }
              ]
            },
            "functionSelector": "8f8d57ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapNATIVEForExactTokens",
            "nameLocation": "12537:29:121",
            "parameters": {
              "id": 99095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12566:2:121"
            },
            "returnParameters": {
              "id": 99096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12576:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99585,
            "nodeType": "FunctionDefinition",
            "src": "14738:2438:121",
            "nodes": [],
            "body": {
              "id": 99584,
              "nodeType": "Block",
              "src": "14815:2361:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99346,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "14833:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "14825:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99345,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14825:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99348,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 99347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14844:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14825:24:121"
                },
                {
                  "assignments": [
                    99351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99351,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "14868:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "14860:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 99350,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99349,
                          "name": "ILBPair",
                          "nameLocations": [
                            "14860:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "14860:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "14860:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99359,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99354,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102001,
                          "src": "14904:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 99355,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "14914:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 99356,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "14923:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 99352,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "14875:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 99353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14883:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "14875:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 99357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14875:65:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 99358,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14941:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "14875:72:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14860:87:121"
                },
                {
                  "assignments": [
                    null,
                    99361,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 99361,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "14968:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "14960:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99360,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14960:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 99368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99364,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99351,
                        "src": "15008:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 99365,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "15014:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 99366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15024:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 99362,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "14990:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14997:10:121",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60951,
                      "src": "14990:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 99367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14990:39:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14957:72:121"
                },
                {
                  "assignments": [
                    99373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99373,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "15062:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "15040:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 99372,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99371,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "15040:9:121",
                            "15050:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "15040:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "15040:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99378,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99375,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102001,
                        "src": "15080:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 99376,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "15090:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 99374,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "15069:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 99377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15040:58:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99384,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "15236:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15246:31:121",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66960,
                              "src": "15236:41:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15278:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15236:50:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 99387,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99361,
                            "src": "15288:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 99390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 99388,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99361,
                              "src": "15307:17:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 99389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15327:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "15307:21:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 99382,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15196:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15200:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15196:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15196:146:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99379,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15167:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15170:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "15167:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15167:185:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99393,
                  "nodeType": "ExpressionStatement",
                  "src": "15167:185:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99397,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "15436:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99398,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99361,
                        "src": "15446:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99399,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "15465:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99404,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15487:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15479:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15479:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15479:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15471:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15471:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15471:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99407,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15495:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15501:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15495:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15513:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15495:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99394,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "15362:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15369:53:121",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62264,
                      "src": "15362:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15362:162:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99412,
                  "nodeType": "ExpressionStatement",
                  "src": "15362:162:121"
                },
                {
                  "assignments": [
                    99414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99414,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "15543:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "15535:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99413,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15535:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99420,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99417,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15567:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 99416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15559:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 99415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15559:7:121",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 99418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15559:13:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15573:7:121",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15559:21:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15535:45:121"
                },
                {
                  "assignments": [
                    99422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99422,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "15600:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99584,
                      "src": "15592:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15592:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99442,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99425,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "15687:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99426,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99361,
                          "src": "15697:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 99427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15717:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15697:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99429,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "15720:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99434,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15742:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15734:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99432,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15734:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15734:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15726:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15726:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15726:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99437,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15750:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15756:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15750:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15768:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15750:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99423,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "15613:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15620:53:121",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62264,
                      "src": "15613:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15613:166:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15591:188:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99444,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99422,
                        "src": "15799:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99445,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99361,
                          "src": "15810:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 99446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15830:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15810:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 99448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15833:63:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 99443,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15790:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:107:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99450,
                  "nodeType": "ExpressionStatement",
                  "src": "15790:107:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 99454,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15937:4:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 99453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15929:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15929:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 99455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15929:13:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 99456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15943:7:121",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "15929:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99457,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99414,
                          "src": "15964:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 99458,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99422,
                          "src": "15980:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15964:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 99460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16003:63:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 99451,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15907:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15907:169:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99462,
                  "nodeType": "ExpressionStatement",
                  "src": "15907:169:121"
                },
                {
                  "expression": {
                    "id": 99469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99463,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99373,
                          "src": "16132:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99466,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16137:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "16132:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99467,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 99465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16147:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16132:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99468,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "16152:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "16132:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99470,
                  "nodeType": "ExpressionStatement",
                  "src": "16132:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99476,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "16205:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16215:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "16205:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 99478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16242:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16205:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 99481,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "16260:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 99480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16252:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99479,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16252:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16252:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99474,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16182:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16186:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16182:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16182:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99471,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16166:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16169:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "16166:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16166:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99485,
                  "nodeType": "ExpressionStatement",
                  "src": "16166:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99489,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "16351:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99490,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99361,
                          "src": "16361:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16381:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16361:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99493,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "16384:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99498,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16406:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16398:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99496,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16398:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16398:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16390:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16390:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16390:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99501,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16414:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16420:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16414:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16432:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16414:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99486,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "16277:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16284:53:121",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62264,
                      "src": "16277:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16277:166:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99506,
                  "nodeType": "ExpressionStatement",
                  "src": "16277:166:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99512,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "16542:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16552:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "16542:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16579:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16542:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99515,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "16589:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16595:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "16589:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16607:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16589:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99519,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16610:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16616:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16610:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99510,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16519:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16523:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16519:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16519:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99507,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16490:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16493:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "16490:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16490:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99523,
                  "nodeType": "ExpressionStatement",
                  "src": "16490:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99527,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "16720:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99528,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99361,
                        "src": "16730:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99529,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "16749:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99534,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16771:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16763:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16763:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16763:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16755:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16755:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16755:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99537,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16779:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16785:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16779:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16797:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16779:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99524,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "16646:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16653:53:121",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62264,
                      "src": "16646:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16646:162:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99542,
                  "nodeType": "ExpressionStatement",
                  "src": "16646:162:121"
                },
                {
                  "expression": {
                    "id": 99552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99543,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "16870:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99545,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16875:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "16870:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16900:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "16887:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99547,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99546,
                              "name": "IERC20",
                              "nameLocations": [
                                "16891:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "16891:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "16891:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99548,
                          "nodeType": "ArrayTypeName",
                          "src": "16891:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16887:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "16870:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99553,
                  "nodeType": "ExpressionStatement",
                  "src": "16870:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99559,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "16951:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16961:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "16951:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16987:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16951:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99557,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16928:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16932:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16928:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16928:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99554,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16912:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16915:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "16912:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16912:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99564,
                  "nodeType": "ExpressionStatement",
                  "src": "16912:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99568,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99346,
                        "src": "17081:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99569,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99361,
                        "src": "17091:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99570,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99373,
                        "src": "17110:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99575,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17132:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17124:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99573,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17124:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17124:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17116:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99571,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17116:8:121",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17116:22:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99578,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17140:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17146:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17140:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17158:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17140:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99565,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "17007:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17014:53:121",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62264,
                      "src": "17007:60:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17007:162:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99583,
                  "nodeType": "ExpressionStatement",
                  "src": "17007:162:121"
                }
              ]
            },
            "functionSelector": "3f6fb2f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
            "nameLocation": "14747:58:121",
            "parameters": {
              "id": 99343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14805:2:121"
            },
            "returnParameters": {
              "id": 99344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14815:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99824,
            "nodeType": "FunctionDefinition",
            "src": "17182:2456:121",
            "nodes": [],
            "body": {
              "id": 99823,
              "nodeType": "Block",
              "src": "17259:2379:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99589,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "17277:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "17269:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99588,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17269:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99591,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 99590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17288:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17269:24:121"
                },
                {
                  "assignments": [
                    99594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99594,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "17312:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "17304:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$66855",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 99593,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99592,
                          "name": "ILBPair",
                          "nameLocations": [
                            "17304:7:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66855,
                          "src": "17304:7:121"
                        },
                        "referencedDeclaration": 66855,
                        "src": "17304:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99602,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99597,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102001,
                          "src": "17348:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 99598,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "17358:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 99599,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101925,
                          "src": "17367:16:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$120864",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 99595,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102004,
                          "src": "17319:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$56167",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 99596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17327:20:121",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54818,
                        "src": "17319:28:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$_t_uint256_$returns$_t_struct$_LBPairInformation_$64539_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 99600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17319:65:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$64539_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 99601,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "17385:6:121",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64534,
                    "src": "17319:72:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$66855",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17304:87:121"
                },
                {
                  "assignments": [
                    null,
                    99604,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 99604,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "17412:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "17404:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99603,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17404:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 99611,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99607,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99594,
                        "src": "17452:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 99608,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99589,
                        "src": "17458:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 99609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17468:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$66855",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 99605,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102007,
                        "src": "17434:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$63882",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17441:10:121",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60951,
                      "src": "17434:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$66855_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 99610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17434:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17401:73:121"
                },
                {
                  "assignments": [
                    99616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99616,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "17507:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "17485:26:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 99615,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99614,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "17485:9:121",
                            "17495:4:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67040,
                          "src": "17485:14:121"
                        },
                        "referencedDeclaration": 67040,
                        "src": "17485:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99618,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101980,
                        "src": "17525:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 99619,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102001,
                        "src": "17534:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$120864",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      ],
                      "id": 99617,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99903,
                      "src": "17514:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$48937_$_t_contract$_IERC20_$48937_$returns$_t_struct$_Path_$67040_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 99620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17514:29:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17485:58:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99627,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "17681:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17691:31:121",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66960,
                              "src": "17681:41:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17723:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17681:50:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 99630,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99604,
                            "src": "17733:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 99635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 99633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 99631,
                                "name": "amountOutExpected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99604,
                                "src": "17752:17:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 99632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17772:1:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "17752:21:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17776:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17752:25:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 99625,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17641:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17645:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17641:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17641:150:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99622,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17612:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17615:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "17612:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17612:189:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99638,
                  "nodeType": "ExpressionStatement",
                  "src": "17612:189:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99644,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99604,
                        "src": "17902:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99645,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "17921:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99648,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17935:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17927:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17927:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17927:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99650,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17942:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17948:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17942:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17960:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17942:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99639,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "17811:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17818:53:121",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62371,
                        "src": "17811:60:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99642,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99589,
                          "src": "17879:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "17811:77:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17811:160:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99655,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:160:121"
                },
                {
                  "assignments": [
                    99657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99657,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "17990:13:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "17982:21:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17982:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99665,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99662,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18033:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18025:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99660,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18025:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18025:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 99658,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102001,
                        "src": "18006:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      "id": 99659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18015:9:121",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48445,
                      "src": "18006:18:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 99664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18006:33:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17982:57:121"
                },
                {
                  "assignments": [
                    99667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99667,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "18059:9:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 99823,
                      "src": "18051:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18051:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99685,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99672,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99604,
                          "src": "18163:17:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 99673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18183:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "18163:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99675,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "18186:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99678,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18200:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18192:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18192:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18192:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99680,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18207:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18213:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18207:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18225:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18207:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99668,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "18072:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18079:53:121",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62371,
                        "src": "18072:60:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99670,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99589,
                          "src": "18140:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18072:77:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18072:164:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18050:186:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99687,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99667,
                        "src": "18256:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 99690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99688,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99604,
                            "src": "18267:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 99689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18287:1:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18267:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18291:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18267:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 99693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18294:63:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 99686,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18247:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18247:111:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99695,
                  "nodeType": "ExpressionStatement",
                  "src": "18247:111:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99701,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18417:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18409:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99699,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18409:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18409:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99697,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102001,
                            "src": "18390:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$119825",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          "id": 99698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18399:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48445,
                          "src": "18390:18:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 99703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18390:33:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99704,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99657,
                          "src": "18437:13:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 99705,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99667,
                          "src": "18453:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18437:25:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 99707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18476:63:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 99696,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18368:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18368:181:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99709,
                  "nodeType": "ExpressionStatement",
                  "src": "18368:181:121"
                },
                {
                  "expression": {
                    "id": 99716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99710,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99616,
                          "src": "18604:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18609:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "18604:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99714,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18619:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18604:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99715,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101986,
                      "src": "18624:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "18604:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99717,
                  "nodeType": "ExpressionStatement",
                  "src": "18604:24:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99723,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "18677:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18687:26:121",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66970,
                              "src": "18677:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 99725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18714:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18677:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 99728,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101986,
                                "src": "18732:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$119771",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 99727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18724:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99726,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18724:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18724:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99721,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18654:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18658:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18654:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18654:84:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99718,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18638:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18641:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "18638:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18638:101:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99732,
                  "nodeType": "ExpressionStatement",
                  "src": "18638:101:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99738,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99604,
                        "src": "18840:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99739,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "18859:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99742,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18873:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18865:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99740,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18865:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18865:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99744,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18880:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18886:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18880:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18898:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18880:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99733,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "18749:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18756:53:121",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62371,
                        "src": "18749:60:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99736,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99589,
                          "src": "18817:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18749:77:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18749:160:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99749,
                  "nodeType": "ExpressionStatement",
                  "src": "18749:160:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99755,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "19008:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19018:26:121",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66950,
                              "src": "19008:36:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19045:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19008:45:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99758,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19055:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19061:9:121",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "19055:15:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19073:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "19055:19:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99762,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19076:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19082:9:121",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19076:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99753,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18985:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18989:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18985:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18985:107:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99750,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18956:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18959:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "18956:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18956:146:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99766,
                  "nodeType": "ExpressionStatement",
                  "src": "18956:146:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99772,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99604,
                        "src": "19203:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99773,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "19222:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99776,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19236:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19228:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99774,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19228:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19228:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99778,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19243:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19249:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19243:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19261:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19243:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99767,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "19112:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19119:53:121",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62371,
                        "src": "19112:60:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99770,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99589,
                          "src": "19180:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19112:77:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19112:160:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99783,
                  "nodeType": "ExpressionStatement",
                  "src": "19112:160:121"
                },
                {
                  "expression": {
                    "id": 99793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99784,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "19334:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99786,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19339:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "19334:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19364:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19351:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99788,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99787,
                              "name": "IERC20",
                              "nameLocations": [
                                "19355:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "19355:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "19355:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99789,
                          "nodeType": "ArrayTypeName",
                          "src": "19355:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19351:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19334:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99794,
                  "nodeType": "ExpressionStatement",
                  "src": "19334:32:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99800,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "19415:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19425:25:121",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66912,
                              "src": "19415:35:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19451:8:121",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19415:44:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99798,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19392:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19396:18:121",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19392:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19392:68:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99795,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19376:2:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19379:12:121",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14537,
                      "src": "19376:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19376:85:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99805,
                  "nodeType": "ExpressionStatement",
                  "src": "19376:85:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99811,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99604,
                        "src": "19562:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99812,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99616,
                        "src": "19581:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99815,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19595:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99908",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19587:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19587:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19587:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99817,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19602:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19608:9:121",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19602:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19620:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19602:19:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99806,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102007,
                          "src": "19471:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$63882",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19478:53:121",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62371,
                        "src": "19471:60:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99809,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99589,
                          "src": "19539:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19471:77:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$67040_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19471:160:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99822,
                  "nodeType": "ExpressionStatement",
                  "src": "19471:160:121"
                }
              ]
            },
            "functionSelector": "2debd6fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "17191:58:121",
            "parameters": {
              "id": 99586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17249:2:121"
            },
            "returnParameters": {
              "id": 99587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17259:0:121"
            },
            "scope": 99908,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99903,
            "nodeType": "FunctionDefinition",
            "src": "19644:425:121",
            "nodes": [],
            "body": {
              "id": 99902,
              "nodeType": "Block",
              "src": "19747:322:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 99844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99836,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99834,
                        "src": "19757:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99838,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19762:12:121",
                      "memberName": "pairBinSteps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67031,
                      "src": "19757:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 99842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19791:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 99841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19777:13:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99839,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "19781:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 99840,
                          "nodeType": "ArrayTypeName",
                          "src": "19781:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 99843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19777:16:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "19757:36:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99845,
                  "nodeType": "ExpressionStatement",
                  "src": "19757:36:121"
                },
                {
                  "expression": {
                    "id": 99852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99846,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99834,
                          "src": "19803:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19808:12:121",
                        "memberName": "pairBinSteps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67031,
                        "src": "19803:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 99850,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19821:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19803:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99851,
                      "name": "DEFAULT_BIN_STEP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101925,
                      "src": "19826:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "19803:39:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99853,
                  "nodeType": "ExpressionStatement",
                  "src": "19803:39:121"
                },
                {
                  "expression": {
                    "id": 99863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99854,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99834,
                        "src": "19853:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19858:8:121",
                      "memberName": "versions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67035,
                      "src": "19853:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 99861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19893:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 99860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19869:23:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Version_$66990_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum ILBRouter.Version[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99858,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99857,
                              "name": "ILBRouter.Version",
                              "nameLocations": [
                                "19873:9:121",
                                "19883:7:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 66990,
                              "src": "19873:17:121"
                            },
                            "referencedDeclaration": 66990,
                            "src": "19873:17:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          },
                          "id": 99859,
                          "nodeType": "ArrayTypeName",
                          "src": "19873:19:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_storage_ptr",
                            "typeString": "enum ILBRouter.Version[]"
                          }
                        }
                      },
                      "id": 99862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19869:26:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "src": "19853:42:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                      "typeString": "enum ILBRouter.Version[] memory"
                    }
                  },
                  "id": 99864,
                  "nodeType": "ExpressionStatement",
                  "src": "19853:42:121"
                },
                {
                  "expression": {
                    "id": 99873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99865,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99834,
                          "src": "19905:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99868,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19910:8:121",
                        "memberName": "versions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67035,
                        "src": "19905:13:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                          "typeString": "enum ILBRouter.Version[] memory"
                        }
                      },
                      "id": 99869,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19919:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19905:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$66990",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 99870,
                          "name": "ILBRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67387,
                          "src": "19924:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                            "typeString": "type(contract ILBRouter)"
                          }
                        },
                        "id": 99871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19934:7:121",
                        "memberName": "Version",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66990,
                        "src": "19924:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                          "typeString": "type(enum ILBRouter.Version)"
                        }
                      },
                      "id": 99872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "19942:2:121",
                      "memberName": "V2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66989,
                      "src": "19924:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$66990",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "src": "19905:39:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Version_$66990",
                      "typeString": "enum ILBRouter.Version"
                    }
                  },
                  "id": 99874,
                  "nodeType": "ExpressionStatement",
                  "src": "19905:39:121"
                },
                {
                  "expression": {
                    "id": 99884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99875,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99834,
                        "src": "19955:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19960:9:121",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67039,
                      "src": "19955:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 99882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19985:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 99881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19972:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99879,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99878,
                              "name": "IERC20",
                              "nameLocations": [
                                "19976:6:121"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 48937,
                              "src": "19976:6:121"
                            },
                            "referencedDeclaration": 48937,
                            "src": "19976:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$48937",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99880,
                          "nodeType": "ArrayTypeName",
                          "src": "19976:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19972:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19955:32:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99885,
                  "nodeType": "ExpressionStatement",
                  "src": "19955:32:121"
                },
                {
                  "expression": {
                    "id": 99892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99886,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99834,
                          "src": "19997:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99889,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20002:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "19997:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99890,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20012:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19997:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99891,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99827,
                      "src": "20017:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "19997:27:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99893,
                  "nodeType": "ExpressionStatement",
                  "src": "19997:27:121"
                },
                {
                  "expression": {
                    "id": 99900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99894,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99834,
                          "src": "20034:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99897,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20039:9:121",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67039,
                        "src": "20034:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$48937_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99898,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 99896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20049:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20034:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99899,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99830,
                      "src": "20054:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48937",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "20034:28:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99901,
                  "nodeType": "ExpressionStatement",
                  "src": "20034:28:121"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildPath",
            "nameLocation": "19653:10:121",
            "parameters": {
              "id": 99831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99827,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "19671:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 99903,
                  "src": "19664:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 99826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99825,
                      "name": "IERC20",
                      "nameLocations": [
                        "19664:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "19664:6:121"
                    },
                    "referencedDeclaration": 48937,
                    "src": "19664:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99830,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "19687:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 99903,
                  "src": "19680:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48937",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 99829,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99828,
                      "name": "IERC20",
                      "nameLocations": [
                        "19680:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48937,
                      "src": "19680:6:121"
                    },
                    "referencedDeclaration": 48937,
                    "src": "19680:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48937",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19663:33:121"
            },
            "returnParameters": {
              "id": 99835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99834,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "19741:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 99903,
                  "src": "19719:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Path_$67040_memory_ptr",
                    "typeString": "struct ILBRouter.Path"
                  },
                  "typeName": {
                    "id": 99833,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99832,
                      "name": "ILBRouter.Path",
                      "nameLocations": [
                        "19719:9:121",
                        "19729:4:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67040,
                      "src": "19719:14:121"
                    },
                    "referencedDeclaration": 67040,
                    "src": "19719:14:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$67040_storage_ptr",
                      "typeString": "struct ILBRouter.Path"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19718:28:121"
            },
            "scope": 99908,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 99907,
            "nodeType": "FunctionDefinition",
            "src": "20075:29:121",
            "nodes": [],
            "body": {
              "id": 99906,
              "nodeType": "Block",
              "src": "20102:2:121",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 99904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20082:2:121"
            },
            "returnParameters": {
              "id": 99905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20102:0:121"
            },
            "scope": 99908,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 97707,
              "name": "TestHelper",
              "nameLocations": [
                "594:10:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103496,
              "src": "594:10:121"
            },
            "id": 97708,
            "nodeType": "InheritanceSpecifier",
            "src": "594:10:121"
          }
        ],
        "canonicalName": "LiquidityBinRouterSwapTest",
        "contractDependencies": [
          48090,
          56167,
          58985,
          59350,
          60638,
          63882,
          119771,
          119825,
          120864
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 97706,
          "nodeType": "StructuredDocumentation",
          "src": "105:449:121",
          "text": " This file only test single hop swaps using V2.1 pairs\n Test scenarios:\n 1. swapExactTokensForTokens\n 2. swapExactTokensForNATIVE\n 3. swapExactNATIVEForTokens\n 4. swapTokensForExactTokens\n 5. swapTokensForExactNATIVE\n 6. swapNATIVEForExactTokens\n 7. swapExactTokensForTokensSupportingFeeOnTransferTokens\n 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens\n 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          99908,
          103496,
          11134,
          11087,
          6685,
          6360,
          5567,
          3507,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinRouterSwapTest",
        "nameLocation": "564:26:121",
        "scope": 99909,
        "usedErrors": [
          73491,
          73501,
          75563,
          75780
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7461,
          7467
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 121
}