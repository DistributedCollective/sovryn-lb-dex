{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "Uint128x128Math__PowUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_GetIdFromPrice",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapNATIVEForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:140;1903:54;;2005:17;555:19551:138;2005:17:140;;555:19551:138;2005:17:140;;;-1:-1:-1;;;3126:44:3;2005:17:140;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:140;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:140;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:140;;;555:19551:138;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:169;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:169;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:169:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:169;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:169:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:169;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:169:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:169;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:169:o;:::-;555:19551:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620001df5760003560e01c806372b01c7a11620000ff578063b0464fdc1162000095578063ba414fa6116200006c578063ba414fa61462000503578063e20c9f71146200051b578063fa7626d41462000533578063fecaa223146200054f57600080fd5b8063b0464fdc14620004ae578063b5508aa914620004c6578063b89e023314620004de57600080fd5b8063889be5b711620000d6578063889be5b714620004105780638f8d57ea146200044a578063916a17c61462000462578063a7aa85e9146200048957600080fd5b806372b01c7a14620003b95780637594f3a114620003d157806385226c8114620003e957600080fd5b80633e5e3c2311620001755780634415cf9d116200014c5780634415cf9d146200032e57806349789ef9146200034657806366d9a9a0146200037a5780636d09084014620003a157600080fd5b80633e5e3c2314620002e65780633f6fb2f714620002fe5780633f7286f4146200031657600080fd5b80631ed7831c11620001b65780631ed7831c14620002685780632ade3880146200028f5780632debd6fd14620002b657806338a637ed14620002ce57600080fd5b806301ffc9a714620001ec578063061794b314620002365780630a9254e4146200025057600080fd5b36620001e757005b600080fd5b348015620001f957600080fd5b50620002216200020b36600462009fd5565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b3480156200024357600080fd5b506200024e62000574565b005b3480156200025d57600080fd5b506200024e62000729565b3480156200027557600080fd5b506200028062000bef565b6040516200022d91906200a001565b3480156200029c57600080fd5b50620002a762000c53565b6040516200022d91906200a0a4565b348015620002c357600080fd5b506200024e62000da1565b348015620002db57600080fd5b506200024e6200165e565b348015620002f357600080fd5b506200028062001f4d565b3480156200030b57600080fd5b506200024e62001faf565b3480156200032357600080fd5b506200028062002753565b3480156200033b57600080fd5b506200024e620027b5565b3480156200035357600080fd5b506200036b620003653660046200a17c565b62002fa9565b6040519081526020016200022d565b3480156200038757600080fd5b506200039262002ffe565b6040516200022d91906200a1fb565b348015620003ae57600080fd5b506200024e62003177565b348015620003c657600080fd5b506200024e62003af7565b348015620003de57600080fd5b506200024e62004420565b348015620003f657600080fd5b506200040162004935565b6040516200022d91906200a286565b3480156200041d57600080fd5b50620004356200042f3660046200a2fe565b62004a0f565b60405162ffffff90911681526020016200022d565b3480156200045757600080fd5b506200024e62004a6a565b3480156200046f57600080fd5b506200047a6200533d565b6040516200022d91906200a341565b3480156200049657600080fd5b506200024e620004a83660046200a3ca565b62005427565b348015620004bb57600080fd5b506200047a620058c8565b348015620004d357600080fd5b5062000401620059b2565b348015620004eb57600080fd5b5062000221620004fd3660046200a479565b62005a8c565b3480156200051057600080fd5b506200022162005b0e565b3480156200052857600080fd5b506200028062005bc8565b3480156200054057600080fd5b50601f54620002219060ff1681565b3480156200055c57600080fd5b506200024e6200056e3660046200a499565b62005c2a565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a6044820152600092919091169063704037bd90606401608060405180830381865afa158015620005d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005fe91906200a588565b6020015160285460405163f96fe92560e01b81526001600160a01b0380841660048301527002b78853aaac41bff0c3916eff1037c97a602483015292935091169063f96fe92590604401602060405180830381865afa15801562000666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068c91906200a615565b506028546001600160a01b031663d0e380f282620006b0628000006103e86200a64b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015262ffffff166024820152604401602060405180830381865afa158015620006ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200072591906200a66a565b5050565b6200073362005f2f565b602754604051634cd161d360e01b8152600a6004820152600160248201526001600160a01b0390911690634cd161d390604401600060405180830381600087803b1580156200078157600080fd5b505af115801562000796573d6000803e3d6000fd5b505060285460215460205460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a60648201529116925063659ac74b91506084016020604051808303816000875af115801562000804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200082a91906200a684565b50602854601f5460205460405163659ac74b60e01b81526001600160a01b03610100909304831660048201529082166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af11580156200089a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c091906200a684565b50602854602654601f5460405163659ac74b60e01b81526001600160a01b03928316600482015261010090910482166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af115801562000930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095691906200a684565b506020546dffffffffffffffffffffffffffff9062000980906001600160a01b03163083620077cf565b60215462000999906001600160a01b03163083620077cf565b602654620009b2906001600160a01b03163083620077cf565b602154602054600091620009e4916001600160a01b03918216911668056bc75e2d6310000062800000600f86620077e3565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000a179084906004016200a6d6565b6000604051808303816000875af115801562000a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000a6191908101906200a89c565b5050601f5460205462000a9e95506001600160a01b036101009092048216945016915068056bc75e2d63100000905062800000600f6000620077e3565b60285460608201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000ad99085906004016200a6d6565b60006040518083038185885af115801562000af8573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000b2391908101906200a89c565b5050602654601f5462000b6095506001600160a01b0391821694506101009004169150680ad78ebc5ac6200000905062800000600f6000620077e3565b60285460808201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000b9b9085906004016200a6d6565b60006040518083038185885af115801562000bba573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000be591908101906200a89c565b5050505050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562000c4957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000c2a575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b8282101562000d9857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000d8057838290600052602060002001805462000cec906200a92c565b80601f016020809104026020016040519081016040528092919081815260200182805462000d1a906200a92c565b801562000d6b5780601f1062000d3f5761010080835404028352916020019162000d6b565b820191906000526020600020905b81548152906001019060200180831162000d4d57829003601f168201915b50505050508152602001906001019062000cca565b50505050815250508152602001906001019062000c77565b50505050905090565b602754602654601f5460405163704037bd60e01b81526001600160a01b03928316600482015261010090910482166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562000e12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3891906200a588565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa15801562000ea2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec891906200a980565b50601f546026549193506000925062000ef3916001600160a01b03610100909204821691166200797b565b905060008051602062020e0a83398151915263f28dceb36313fab00360e21b8462000f206002826200a9d7565b62000f2d9060016200aa00565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262000f91916004016200aa23565b600060405180830381600087803b15801562000fac57600080fd5b505af115801562000fc1573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b03861684843062000ff24260016200aa38565b6040518663ffffffff1660e01b81526004016200101394939291906200ab30565b60206040518083038185885af115801562001032573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200105991906200a66a565b506026546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620010a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ca91906200a66a565b6028549091506000906001600160a01b031663e038e6dc6001600160801b038816620010f86002886200a9d7565b8630620011074260016200aa38565b6040518663ffffffff1660e01b81526004016200112894939291906200ab30565b60206040518083038185885af115801562001147573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200116e91906200a66a565b9050620011b881620011826002876200a9d7565b6200118f9060016200aa00565b6001600160801b03166040518060600160405280603d815260200162020ee1603d913962007af2565b6026546040516370a0823160e01b815230600482015262001256916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200122a91906200a66a565b6200123683856200aa38565b6040518060600160405280603d815260200162020ea4603d913962007af2565b602154604084015180516001600160a01b03909216916000906200127e576200127e6200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200130b916004016200aa23565b600060405180830381600087803b1580156200132657600080fd5b505af11580156200133b573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b0388168686306200136c4260016200aa38565b6040518663ffffffff1660e01b81526004016200138d94939291906200ab30565b60206040518083038185885af1158015620013ac573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620013d391906200a66a565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b620013fe6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001459916004016200aa23565b600060405180830381600087803b1580156200147457600080fd5b505af115801562001489573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b038816868630620014ba6001426200ab86565b6040518663ffffffff1660e01b8152600401620014db94939291906200ab30565b60206040518083038185885af1158015620014fa573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200152191906200a66a565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb3926200158d92016200aa23565b600060405180830381600087803b158015620015a857600080fd5b505af1158015620015bd573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b038816868630620015ee4260016200aa38565b6040518663ffffffff1660e01b81526004016200160f94939291906200ab30565b60206040518083038185885af11580156200162e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200165591906200a66a565b50505050505050565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa158015620016cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016f591906200a588565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa15801562001760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178691906200a980565b50601f5460205491935060009250620017b1916001600160a01b03610100909204821691166200797b565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200182691906200a66a565b6028549091506000906001600160a01b031663b066ea7c6001600160801b038816868630620018574260016200aa38565b6040518663ffffffff1660e01b81526004016200187894939291906200ab30565b60206040518083038185885af115801562001897573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620018be91906200a66a565b90506200190b81856001600160801b03166040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3181525062007af2565b6020546040516370a0823160e01b8152306004820152620019c5916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001957573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200197d91906200a66a565b6200198983856200aa38565b6040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3281525062007af2565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa15801562001a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a4c91906200a980565b50945060008051602062020e0a833981519152905063f28dceb36313fab00360e21b62001a7b8760016200aa00565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001ae0916004016200aa23565b600060405180830381600087803b15801562001afb57600080fd5b505af115801562001b10573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881662001b3e8760016200aa00565b863062001b4d4260016200aa38565b6040518663ffffffff1660e01b815260040162001b6e94939291906200ab30565b60206040518083038185885af115801562001b8d573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001bb491906200a66a565b50602154604084015180516001600160a01b039092169160009062001bdd5762001bdd6200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001c6a916004016200aa23565b600060405180830381600087803b15801562001c8557600080fd5b505af115801562001c9a573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001ccb4260016200aa38565b6040518663ffffffff1660e01b815260040162001cec94939291906200ab30565b60206040518083038185885af115801562001d0b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001d3291906200a66a565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b62001d5d6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001db8916004016200aa23565b600060405180830381600087803b15801562001dd357600080fd5b505af115801562001de8573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001e196001426200ab86565b6040518663ffffffff1660e01b815260040162001e3a94939291906200ab30565b60206040518083038185885af115801562001e59573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001e8091906200a66a565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb39262001eec92016200aa23565b600060405180830381600087803b15801562001f0757600080fd5b505af115801562001f1c573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b038816868630620015ee4260016200aa38565b6060601880548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b602754602654601f5460405163704037bd60e01b81526001600160a01b03928316600482015261010090910482166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562002020573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204691906200a588565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa158015620020b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020d791906200a980565b50602654601f549193506000925062002103916001600160a01b0391821691610100909104166200797b565b905060008051602062020e0a83398151915263f28dceb36313fab00360e21b84620021306002826200a9d7565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002194916004016200aa23565b600060405180830381600087803b158015620021af57600080fd5b505af1158015620021c4573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905085848430620021ec4260016200aa38565b6040518663ffffffff1660e01b81526004016200220e9594939291906200ab9c565b6020604051808303816000875af11580156200222e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200225491906200a66a565b5060285447906000906001600160a01b0316631a24f9a987620022796002886200a9d7565b8630620022884260016200aa38565b6040518663ffffffff1660e01b8152600401620022aa9594939291906200ab9c565b6020604051808303816000875af1158015620022ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022f091906200a66a565b90506200232d81620023046002876200a9d7565b6001600160801b03166040518060600160405280603d815260200162020e67603d913962007af2565b6200235e476200233e83856200aa38565b6040518060600160405280603d815260200162020e2a603d913962007af2565b602154604084015180516001600160a01b039092169160019081106200238857620023886200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002415916004016200aa23565b600060405180830381600087803b1580156200243057600080fd5b505af115801562002445573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a99050876200246a8760016200aa00565b8630620024794260016200aa38565b6040518663ffffffff1660e01b81526004016200249b9594939291906200ab9c565b6020604051808303816000875af1158015620024bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024e191906200a66a565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b6200250c6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002567916004016200aa23565b600060405180830381600087803b1580156200258257600080fd5b505af115801562002597573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905087868630620025bf6001426200ab86565b6040518663ffffffff1660e01b8152600401620025e19594939291906200ab9c565b6020604051808303816000875af115801562002601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200262791906200a66a565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb3926200269392016200aa23565b600060405180830381600087803b158015620026ae57600080fd5b505af1158015620026c3573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905087868630620026eb4260016200aa38565b6040518663ffffffff1660e01b81526004016200270d9594939291906200ab9c565b6020604051808303816000875af11580156200272d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200165591906200a66a565b6060601780548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562002826573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200284c91906200a588565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa158015620028b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028dc91906200a980565b50602054601f549193506000925062002908916001600160a01b0391821691610100909104166200797b565b60285490915047906000906001600160a01b0316639ab6156b87868630620029324260016200aa38565b6040518663ffffffff1660e01b8152600401620029549594939291906200ab9c565b6020604051808303816000875af115801562002974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200299a91906200a66a565b9050620029e781856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3181525062007af2565b62002a3447620029f883856200aa38565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3281525062007af2565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063a0d376cf90606401606060405180830381865afa15801562002a95573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002abb91906200a980565b50945060008051602062020e0a833981519152905063f28dceb36313fab00360e21b62002aea8760016200aa00565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002b4f916004016200aa23565b600060405180830381600087803b15801562002b6a57600080fd5b505af115801562002b7f573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508762002ba48760016200aa00565b863062002bb34260016200aa38565b6040518663ffffffff1660e01b815260040162002bd59594939291906200ab9c565b6020604051808303816000875af115801562002bf5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c1b91906200a66a565b50602154604084015180516001600160a01b0390921691600190811062002c465762002c466200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002cd3916004016200aa23565b600060405180830381600087803b15801562002cee57600080fd5b505af115801562002d03573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508762002d288760016200aa00565b863062002d374260016200aa38565b6040518663ffffffff1660e01b815260040162002d599594939291906200ab9c565b6020604051808303816000875af115801562002d79573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d9f91906200a66a565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b62002dca6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002e25916004016200aa23565b600060405180830381600087803b15801562002e4057600080fd5b505af115801562002e55573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508786863062002e7d6001426200ab86565b6040518663ffffffff1660e01b815260040162002e9f9594939291906200ab9c565b6020604051808303816000875af115801562002ebf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ee591906200a66a565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb39262002f5192016200aa23565b600060405180830381600087803b15801562002f6c57600080fd5b505af115801562002f81573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b905087868630620026eb4260016200aa38565b6000808360ff1611801562002fc1575060008260ff16115b62002fd85762002fd282846200abe7565b62002ff2565b600162002fe683856200abe7565b62002ff291906200ac03565b60ff1690505b92915050565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000d98578382906000526020600020906002020160405180604001604052908160008201805462003058906200a92c565b80601f016020809104026020016040519081016040528092919081815260200182805462003086906200a92c565b8015620030d75780601f10620030ab57610100808354040283529160200191620030d7565b820191906000526020600020905b815481529060010190602001808311620030b957829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200315e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200311f5790505b5050505050815250508152602001906001019062003022565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa158015620031e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320e91906200a588565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063964f987c90606401606060405180830381865afa15801562003278573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200329e91906200a980565b5050602054601f54919250600091620032c9916001600160a01b03908116916101009004166200797b565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003318573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200333e91906200a66a565b6028549091506000906001600160a01b0316633dc8f8ec87868630620033664260016200aa38565b6040518663ffffffff1660e01b8152600401620033889594939291906200ab9c565b6000604051808303816000875af1158015620033a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620033d291908101906200ac1f565b90506200343c81600081518110620033ee57620033ee6200ab70565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3181525062007af2565b6020546040516370a0823160e01b815230600482015262003515916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003488573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034ae91906200a66a565b82600081518110620034c457620034c46200ab70565b602002602001015184620034d991906200ab86565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3281525062007af2565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063964f987c90606401606060405180830381865afa15801562003576573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200359c91906200a980565b5090945060008051602062020e0a833981519152905063f28dceb363194ee21960e31b620035cc6001886200ac58565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003631916004016200aa23565b600060405180830381600087803b1580156200364c57600080fd5b505af115801562003661573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e70905087620036866001886200ac58565b8630620036954260016200aa38565b6040518663ffffffff1660e01b8152600401620036b79594939291906200ab9c565b6000604051808303816000875af1158015620036d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200370191908101906200ac1f565b50602154604084015180516001600160a01b039092169160019081106200372c576200372c6200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620037b9916004016200aa23565b600060405180830381600087803b158015620037d457600080fd5b505af1158015620037e9573d6000803e3d6000fd5b50506028546001600160a01b03169150633dc8f8ec905087868630620038114260016200aa38565b6040518663ffffffff1660e01b8152600401620038339594939291906200ab9c565b6000604051808303816000875af115801562003853573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200387d91908101906200ac1f565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b620038a86001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003903916004016200aa23565b600060405180830381600087803b1580156200391e57600080fd5b505af115801562003933573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e709050878686306200395b6001426200ab86565b6040518663ffffffff1660e01b81526004016200397d9594939291906200ab9c565b6000604051808303816000875af11580156200399d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620039c791908101906200ac1f565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb39262003a3392016200aa23565b600060405180830381600087803b15801562003a4e57600080fd5b505af115801562003a63573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e7090508786863062003a8b4260016200aa38565b6040518663ffffffff1660e01b815260040162003aad9594939291906200ab9c565b6000604051808303816000875af115801562003acd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200165591908101906200ac1f565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562003b63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b8991906200a588565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa15801562003bf4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c1a91906200a980565b506021546020549193506000925062003c40916001600160a01b0391821691166200797b565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003c8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003cb591906200a66a565b6028549091506000906001600160a01b0316632a443fae8786863062003cdd4260016200aa38565b6040518663ffffffff1660e01b815260040162003cff9594939291906200ab9c565b6020604051808303816000875af115801562003d1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d4591906200a66a565b905062003d9281856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3181525062007af2565b6020546040516370a0823160e01b815230600482015262003e4c916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003dde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e0491906200a66a565b62003e1083856200aa38565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3281525062007af2565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa15801562003ead573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ed391906200a980565b50945060008051602062020e0a833981519152905063f28dceb36313fab00360e21b62003f028760016200aa00565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003f67916004016200aa23565b600060405180830381600087803b15801562003f8257600080fd5b505af115801562003f97573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae90508762003fbc8760016200aa00565b863062003fcb4260016200aa38565b6040518663ffffffff1660e01b815260040162003fed9594939291906200ab9c565b6020604051808303816000875af11580156200400d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200403391906200a66a565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b6200405e6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620040b9916004016200aa23565b600060405180830381600087803b158015620040d457600080fd5b505af1158015620040e9573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae905087868630620041116001426200ab86565b6040518663ffffffff1660e01b8152600401620041339594939291906200ab9c565b6020604051808303816000875af115801562004153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200417991906200a66a565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb392620041e592016200aa23565b600060405180830381600087803b1580156200420057600080fd5b505af115801562004215573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae9050878686306200423d4260016200aa38565b6040518663ffffffff1660e01b81526004016200425f9594939291906200ab9c565b6020604051808303816000875af11580156200427f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042a591906200a66a565b5060408051600280825260608201835290916020830190803683375050506040840181905260215481516001600160a01b039091169190600090620042ee57620042ee6200ab70565b6001600160a01b0392831660209182029290920101526026546040850151805191909216919060019081106200432857620043286200ab70565b6001600160a01b03928316602091820292909201015260215460265460405191831660248301529091166044820152600a606482015260008051602062020e0a8339815191529063f28dceb390636b2471d160e11b9060840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620043c8916004016200aa23565b600060405180830381600087803b158015620043e357600080fd5b505af1158015620043f8573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae905087868630620026eb4260016200aa38565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa1580156200448c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620044b291906200a588565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa1580156200451d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200454391906200a980565b505060215460205491925060009162004569916001600160a01b0390811691166200797b565b6021546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015620045b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045de91906200a66a565b6028549091506000906001600160a01b03166392fe8e7087868630620046064260016200aa38565b6040518663ffffffff1660e01b8152600401620046289594939291906200ab9c565b6000604051808303816000875af115801562004648573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200467291908101906200ac1f565b9050620046dc816000815181106200468e576200468e6200ab70565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3181525062007af2565b6021546040516370a0823160e01b8152306004820152620047b5916001600160a01b0316906370a0823190602401602060405180830381865afa15801562004728573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200474e91906200a66a565b826000815181106200476457620047646200ab70565b6020026020010151846200477991906200ab86565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3281525062007af2565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004816573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200483c91906200a980565b5090945060008051602062020e0a833981519152905063f28dceb363194ee21960e31b6200486c6001886200ac58565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620048d1916004016200aa23565b600060405180830381600087803b158015620048ec57600080fd5b505af115801562004901573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e70905087620049266001886200ac58565b8630620038114260016200aa38565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000d985783829060005260206000200180546200497b906200a92c565b80601f0160208091040260200160405190810160405280929190818152602001828054620049a9906200a92c565b8015620049fa5780601f10620049ce57610100808354040283529160200191620049fa565b820191906000526020600020905b815481529060010190602001808311620049dc57829003601f168201915b50505050508152602001906001019062004959565b60008062004a238462ffffff87166200aa38565b905060008360ff161162004a38578062004a54565b62004a4760ff8416826200ab86565b62004a549060016200aa38565b905062004a618162007b58565b95945050505050565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562004adb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b0191906200a588565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa15801562004b6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b9291906200a980565b5050601f5460205491925060009162004bbd916001600160a01b03610100909104811691166200797b565b60285490915047906000906001600160a01b0316632075ad2262004be38660646200aa00565b6001600160801b031688863062004bfc4260016200aa38565b6040518663ffffffff1660e01b815260040162004c1d94939291906200ab30565b60006040518083038185885af115801562004c3c573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004c6791908101906200ac1f565b905062004cd18160008151811062004c835762004c836200ab70565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3181525062007af2565b62004d3d478260008151811062004cec5762004cec6200ab70565b60200260200101518462004d0191906200ab86565b6040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3281525062007af2565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004d9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dc491906200a980565b5090945060008051602062020e0a833981519152905063f28dceb363194ee21960e31b62004df46002886200a9d7565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004e59916004016200aa23565b600060405180830381600087803b15801562004e7457600080fd5b505af115801562004e89573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad22905062004ead6002876200a9d7565b6001600160801b031688863062004ec64260016200aa38565b6040518663ffffffff1660e01b815260040162004ee794939291906200ab30565b60006040518083038185885af115801562004f06573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004f3191908101906200ac1f565b50602154604084015180516001600160a01b039092169160009062004f5a5762004f5a6200ab70565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020e0a8339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004fe7916004016200aa23565b600060405180830381600087803b1580156200500257600080fd5b505af115801562005017573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b038616888630620050484260016200aa38565b6040518663ffffffff1660e01b81526004016200506994939291906200ab30565b60006040518083038185885af115801562005088573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052620050b391908101906200ac1f565b5060008051602062020e0a83398151915263f28dceb363dae7ca7d60e01b620050de6001426200ab86565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262005139916004016200aa23565b600060405180830381600087803b1580156200515457600080fd5b505af115801562005169573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b0386168886306200519a6001426200ab86565b6040518663ffffffff1660e01b8152600401620051bb94939291906200ab30565b60006040518083038185885af1158015620051da573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526200520591908101906200ac1f565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020e0a8339815191529263f28dceb3926200527192016200aa23565b600060405180830381600087803b1580156200528c57600080fd5b505af1158015620052a1573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b038616888630620052d24260016200aa38565b6040518663ffffffff1660e01b8152600401620052f394939291906200ab30565b60006040518083038185885af115801562005312573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526200165591908101906200ac1f565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562000d985760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200540e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620053cf5790505b5050505050815250508152602001906001019062005361565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005468573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200548e91906200a684565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620054d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620054f791906200a684565b905062005506828b88620077cf565b62005513818b87620077cf565b600062005521858562002fa9565b905060008167ffffffffffffffff8111156200554157620055416200a52d565b6040519080825280602002602001820160405280156200556b578160200160208202803683370190505b50905060005b828110156200566a576000620055898b838962004a0f565b905060008b62ffffff168262ffffff1610158015620055ab575060008960ff16115b620055b8576000620055d9565b620055d9620055d360ff8b16670de0b6b3a76400006200ac7b565b62007b84565b905060008c62ffffff168362ffffff1611158015620055fb575060008960ff16115b6200560857600062005623565b62005623620055d360ff8b16670de0b6b3a76400006200ac7b565b90506200563282828562007bb0565b8585815181106200564757620056476200ab70565b6020026020010181815250505050508062005662906200ac92565b905062005571565b506040516303223eab60e11b81526001600160a01b038d16600482015260008051602062020e0a833981519152906306447d5690602401600060405180830381600087803b158015620056bc57600080fd5b505af1158015620056d1573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af115801562005725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200574b91906200acae565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af11580156200579c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057c291906200acae565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200582257600080fd5b505af115801562005837573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b81526004016200586d939291906200accc565b6000604051808303816000875af11580156200588d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620058b791908101906200ad32565b505050505050505050505050505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101562000d985760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200599957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200595a5790505b50505050508152505081526020019060010190620058ec565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000d98578382906000526020600020018054620059f8906200a92c565b80601f016020809104026020016040519081016040528092919081815260200182805462005a26906200a92c565b801562005a775780601f1062005a4b5761010080835404028352916020019162005a77565b820191906000526020600020905b81548152906001019060200180831162005a5957829003601f168201915b505050505081526020019060010190620059d6565b602754604051632aaf12cf60e21b815261ffff831660048201526000916001600160a01b03169063aabc4b3c9060240161010060405180830381865afa15801562005adb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b0191906200ad86565b9998505050505050505050565b60085460009060ff161562005b27575060085460ff1690565b604051630667f9d760e41b815260008051602062020e0a833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562005b9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bc191906200a66a565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b670de0b6b3a764000083111562005c885760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062005c96838362002fa9565b905060008167ffffffffffffffff81111562005cb65762005cb66200a52d565b60405190808252806020026020018201604052801562005ce0578160200160208202803683370190505b50905060008267ffffffffffffffff81111562005d015762005d016200a52d565b60405190808252806020026020018201604052801562005d2b578160200160208202803683370190505b50905060005b8381101562005e3957600062005d4989838862004a0f565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562005d9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005dc591906200a66a565b90508162ffffff1685848151811062005de25762005de26200ab70565b602090810291909101015262005e02818a670de0b6b3a764000062007bee565b84848151811062005e175762005e176200ab70565b60200260200101818152505050508062005e31906200ac92565b905062005d31565b5060405163ca669fa760e01b81526001600160a01b038b16600482015260008051602062020e0a8339815191529063ca669fa790602401600060405180830381600087803b15801562005e8b57600080fd5b505af115801562005ea0573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062005ed8908d908d90879087906004016200ade0565b6000604051808303816000875af115801562005ef8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005f2291908101906200ac1f565b5050505050505050505050565b601f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1674b31f66aa3c1e785363f0875a1b74e27b85fd66c70017908190556001600160a01b03610100909104163b6000036200605757601f5460405160008051602062020e0a8339815191529163b4d6c782916101009091046001600160a01b03169062005fc09062009ee2565b604051809103906000f08015801562005fdd573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b8152600401620060229291906200ae22565b600060405180830381600087803b1580156200603d57600080fd5b505af115801562006052573d6000803e3d6000fd5b505050505b6006604051620060679062009ef0565b60ff9091168152602001604051809103906000f0801580156200608e573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392909216919091179055604051600690620060c09062009ef0565b60ff9091168152602001604051809103906000f080158015620060e7573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b0392909216919091179055604051600890620061199062009ef0565b60ff9091168152602001604051809103906000f08015801562006140573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055604051601290620061729062009ef0565b60ff9091168152602001604051809103906000f08015801562006199573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b0392909216919091179055604051601290620061cb9062009ef0565b60ff9091168152602001604051809103906000f080158015620061f2573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b0392909216919091179055604051601290620062249062009ef0565b60ff9091168152602001604051809103906000f0801580156200624b573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169190911790556040516200627a9062009efe565b604051809103906000f08015801562006297573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03928316179055601f54604080516318caf8e360e31b815261010090920490921660048201526024810191909152600760448201527f776e617469766500000000000000000000000000000000000000000000000000606482015260008051602062020e0a8339815191529063c657c71890608401600060405180830381600087803b1580156200633d57600080fd5b505af115801562006352573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b158015620063ca57600080fd5b505af1158015620063df573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b1580156200645757600080fd5b505af11580156200646c573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b158015620064e457600080fd5b505af1158015620064f9573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b1580156200657157600080fd5b505af115801562006586573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b158015620065fe57600080fd5b505af115801562006613573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600360448201526231373160e91b606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b1580156200668857600080fd5b505af11580156200669d573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e000000000000000000000000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b1580156200672957600080fd5b505af11580156200673e573d6000803e3d6000fd5b5050602d80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602e8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040516000906200679b9062009f0c565b604051809103906000f080158015620067b8573d6000803e3d6000fd5b509050807f0000000000000000000000000000000000000000000000000000000000000000604051620067eb9062009f1a565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156200682e573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b0392909216918217905560405160009190620068609062009f28565b6001600160a01b039091168152602001604051809103906000f0801580156200688d573d6000803e3d6000fd5b5090506000817f0000000000000000000000000000000000000000000000000000000000000000602760009054906101000a90046001600160a01b0316604051620068d89062009f36565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006915573d6000803e3d6000fd5b50602754604051632f880c2560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830181905260248301526602d79883d200006044830152838116606483015292935091169063be20309490608401600060405180830381600087803b1580156200699c57600080fd5b505af1158015620069b1573d6000803e3d6000fd5b50506027546040516001600160a01b039091169250620069d2915062009f28565b6001600160a01b039091168152602001604051809103906000f080158015620069ff573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b0392831690811790915560275460405163b038478160e01b815260048101929092529091169063b038478190602401600060405180830381600087803b15801562006a5f57600080fd5b505af115801562006a74573d6000803e3d6000fd5b5050505062006a8262007c1c565b62006a8e600a62007fd7565b602754602e54601f546040516000936001600160a01b03908116938116926101009004169062006abe9062009f44565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006afb573d6000803e3d6000fd5b5060408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905191925082917f0000000000000000000000000000000000000000000000000000000000000000919062006b599062009f1a565b62006b67939291906200ae46565b604051809103906000f08015801562006b84573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316908117909155602e546027546040519184169316919062006bbf9062009f52565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006bfc573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b03928316179055602854604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f757465720000000000000000000000000000000000000000000000000000606482015260008051602062020e0a8339815191529063c657c71890608401600060405180830381600087803b15801562006c9d57600080fd5b505af115801562006cb2573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f7465720000000000000000000000000000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b15801562006d3e57600080fd5b505af115801562006d53573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201527f666163746f727900000000000000000000000000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b15801562006ddf57600080fd5b505af115801562006df4573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e0000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b15801562006e8057600080fd5b505af115801562006e95573d6000803e3d6000fd5b5050602d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f757465725631000000000000000000000000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b15801562006f2157600080fd5b505af115801562006f36573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f727956310000000000000000000000000000000000000000000000606482015260008051602062020e0a833981519152925063c657c7189150608401600060405180830381600087803b15801562006fc257600080fd5b505af115801562006fd7573d6000803e3d6000fd5b5050601f54602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015261010090920416925063095ea7b391506044016020604051808303816000875af115801562007037573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200705d91906200acae565b50602054602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620070b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620070db91906200acae565b50602154602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200715991906200acae565b50602254602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620071b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620071d791906200acae565b50602554602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200722f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200725591906200acae565b50602354602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620072ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620072d391906200acae565b5060248054602d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200732d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200735391906200acae565b50602654602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620073ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620073d191906200acae565b50601f5460285460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152610100909204169063095ea7b3906044016020604051808303816000875af11580156200742e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200745491906200acae565b5060205460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620074ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620074d291906200acae565b5060215460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200752a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200755091906200acae565b5060225460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620075a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620075ce91906200acae565b5060255460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007626573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200764c91906200acae565b5060235460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620076a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620076ca91906200acae565b506024805460285460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af115801562007724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200774a91906200acae565b5060265460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620077a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620077c891906200acae565b5050505050565b620077de838383600062008076565b505050565b62007881604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600080600080620078958989898962008279565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620079138a876200858890919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a0016200796a426103e86200aa38565b90529b9a5050505050505050505050565b620079a060405180606001604052806060815260200160608152602001606081525090565b60408051600180825281830190925290602080830190803683375050508082528051600a9190600090620079d857620079d86200ab70565b6020908102919091010152604080516001808252818301909252908160200160208202803683375050506020820181905280516001919060009062007a215762007a216200ab70565b6020026020010190600181111562007a3d5762007a3d6200aa4e565b9081600181111562007a535762007a536200aa4e565b905250604080516002808252606082018352909160208301908036833750505060408201819052805184919060009062007a915762007a916200ab70565b60200260200101906001600160a01b031690816001600160a01b03168152505081816040015160018151811062007acc5762007acc6200ab70565b60200260200101906001600160a01b031690816001600160a01b03168152505092915050565b6040516388b44c8560e01b815260008051602062020e0a833981519152906388b44c859062007b2a908690869086906004016200ae74565b60006040518083038186803b15801562007b4357600080fd5b505afa15801562001655573d6000803e3d6000fd5b8062ffffff8116811462007b7f57604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff8116811462007b7f5760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b600080600062007bff86866200864c565b9150915062007c1286868685856200866b565b9695505050505050565b601f5461010090046001600160a01b03161562007c9c57602754601f54604051635a44092360e01b81526001600160a01b0361010090920482166004820152911690635a44092390602401600060405180830381600087803b15801562007c8257600080fd5b505af115801562007c97573d6000803e3d6000fd5b505050505b6020546001600160a01b03161562007d1257602754602054604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007cf857600080fd5b505af115801562007d0d573d6000803e3d6000fd5b505050505b6021546001600160a01b03161562007d8857602754602154604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007d6e57600080fd5b505af115801562007d83573d6000803e3d6000fd5b505050505b6022546001600160a01b03161562007dfe57602754602254604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007de457600080fd5b505af115801562007df9573d6000803e3d6000fd5b505050505b6025546001600160a01b03161562007e7457602754602554604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007e5a57600080fd5b505af115801562007e6f573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562007eea57602754602354604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007ed057600080fd5b505af115801562007ee5573d6000803e3d6000fd5b505050505b6024546001600160a01b03161562007f5f5760275460248054604051635a44092360e01b81526001600160a01b039182166004820152921691635a4409239101600060405180830381600087803b15801562007f4557600080fd5b505af115801562007f5a573d6000803e3d6000fd5b505050505b6026546001600160a01b03161562007fd557602754602654604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007fbb57600080fd5b505af115801562007fd0573d6000803e3d6000fd5b505050505b565b60275460405163379ee80360e01b815261ffff8316600482015261138860248201819052601e604483015261025860648301526084820152619c4060a48201526103e860c48201526205573060e482015260006101048201526001600160a01b039091169063379ee8039061012401600060405180830381600087803b1580156200806157600080fd5b505af1158015620077c8573d6000803e3d6000fd5b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620080cc916200ae95565b600060405180830381855afa9150503d806000811462008109576040519150601f19603f3d011682016040523d82523d6000602084013e6200810e565b606091505b509150506000818060200190518101906200812a91906200a66a565b905062008164846200815d87620081566370a0823160e01b6200814f600d8d6200871d565b9062008745565b9062008763565b906200878f565b8215620082715760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620081af91906200ae95565b600060405180830381855afa9150503d8060008114620081ec576040519150601f19603f3d011682016040523d82523d6000602084013e620081f1565b606091505b509150506000818060200190518101906200820d91906200a66a565b90508286101562008238576200822486846200ab86565b6200823090826200ab86565b905062008253565b6200824483876200ab86565b6200825090826200aa38565b90505b62000be5816200815d6318160ddd60e01b6200814f600d8d6200871d565b505050505050565b6060808060006200828c6002876200aeb3565b62ffffff16600003620082e25760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e73604482015260640162005c7f565b6000620082f16002886200aed8565b90508662ffffff1667ffffffffffffffff8111156200831457620083146200a52d565b6040519080825280602002602001820160405280156200833e578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff8111156200836257620083626200a52d565b6040519080825280602002602001820160405280156200838c578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff811115620083b057620083b06200a52d565b604051908082528060200260200182016040528015620083da578160200160208202803683370190505b5092506000620083ec8260016200a64b565b620084059062ffffff16670de0b6b3a76400006200ac7b565b90506000620084168360016200a64b565b620084279062ffffff168c6200ac7b565b905060005b8962ffffff168110156200857957620084478960016200a64b565b620084589062ffffff16826200aef1565b620084658a60016200a64b565b6200847190866200af0b565b6200847d908d6200af35565b62ffffff166200848e91906200aa38565b888281518110620084a357620084a36200ab70565b6020026020010181815250508362ffffff168111620084df5782868281518110620084d257620084d26200ab70565b6020026020010181815250505b8362ffffff1681106200856457828782815181106200850257620085026200ab70565b602002602001018181525050600082116200851f57600062008555565b6200855560806200854c8a84815181106200853e576200853e6200ab70565b60200260200101516200879b565b849190620087aa565b6200856190866200aa38565b94505b8062008570816200ac92565b9150506200842c565b50505050945094509450949050565b6060825167ffffffffffffffff811115620085a757620085a76200a52d565b604051908082528060200260200182016040528015620085d1578160200160208202803683370190505b50905060005b835181101562008645578262ffffff16848281518110620085fc57620085fc6200ab70565b60200260200101516200861091906200af54565b8282815181106200862557620086256200ab70565b6020908102919091010152806200863c816200ac92565b915050620085d7565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b60008160000362008691578383816200868857620086886200a9c1565b04905062004a61565b838210620086b2576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6004820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60028201805463ffffffff191660e083901c1790556000826200873e565b6001808301805491820181556000908152602081206001600160a01b038416920191909155826200873e565b620007258282620087d6565b600062002ff882600a62008c4d565b600060ff831684811b9061ffff6101008290031686901c9062007c129087906001901b8685856200866b565b6004820154600283015460038401546001600160a01b039092169160e09190911b906000620088058662008c8a565b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905193945092620088469185918791016200af77565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff1662008886576200888486600062008da2565b505b6001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190918391620088c79186918891016200af77565b60405160208183030381529060405280519060200120815260200190815260200160002090506000816002015482600101546200890591906200aa38565b111562008a01576000816002015482600101546200892491906200aa38565b62008932906101006200ab86565b6200893f9060026200b098565b60405163348051d760e11b8152600481018290529091508188109060008051602062020e0a83398151915290636900a3ae90602401600060405180830381865afa15801562008992573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620089bc91908101906200b0a6565b604051602001620089ce91906200b145565b60405160208183030381529060405290620089fe5760405162461bcd60e51b815260040162005c7f91906200aa23565b50505b8054604051630667f9d760e41b81526001600160a01b0387166004820152602481019190915260009060008051602062020e0a8339815191529063667f9d7090604401602060405180830381865afa15801562008a62573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008a8891906200a66a565b6001838101546002850154929350600092908101610100039190911b60001901811b1983169089901b1783546040516370ca10bb60e01b81526001600160a01b038a16600482015260248101919091526044810182905290915060008051602062020e0a833981519152906370ca10bb90606401600060405180830381600087803b15801562008b1757600080fd5b505af115801562008b2c573d6000803e3d6000fd5b5050505060008062008b3e8b62008db8565b9150915081158062008b505750898114155b1562008c425784546040516370ca10bb60e01b81526001600160a01b038b16600482015260248101919091526044810185905260008051602062020e0a833981519152906370ca10bb90606401600060405180830381600087803b15801562008bb857600080fd5b505af115801562008bcd573d6000803e3d6000fd5b505060405162461bcd60e51b815260206004820152603360248201527f73746453746f726167652066696e642853746453746f72616765293a2046616960448201527f6c656420746f2077726974652076616c75652e000000000000000000000000006064820152608401915062005c7f9050565b62005f228b62008e8f565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff190162004a61828262008e9d565b606081600701805462008c9d906200a92c565b905060000362008d065762002ff88260010180548060200260200160405190810160405280929190818152602001828054801562008cfb57602002820191906000526020600020905b81548152602001906001019080831162008ce6575b50505050506200911c565b81600701805462008d17906200a92c565b80601f016020809104026020016040519081016040528092919081815260200182805462008d45906200a92c565b801562008d965780601f1062008d6a5761010080835404028352916020019162008d96565b820191906000526020600020905b81548152906001019060200180831162008d7857829003601f168201915b50505050509050919050565b600062008db08383620091c9565b549392505050565b60028101546000908190819060e01b62008dd28562008c8a565b60405160200162008de59291906200b1d8565b60408051601f1981840301815290829052600486015490925060009182916001600160a01b03169062008e1a9085906200ae95565b600060405180830381855afa9150503d806000811462008e57576040519150601f19603f3d011682016040523d82523d6000602084013e62008e5c565b606091505b5091509150600062008e81828860030154602062008e7b91906200aef1565b6200998c565b929792965091945050505050565b62008e9a8162009a2e565b50565b60008060008360000362008ebb5750600160801b915062002ff89050565b5082600081121562008ece579015906000035b62100000811015620090d457600160801b9250846001600160801b0381111562008efa57911591600019045b600182161562008f0c5792830260801c925b800260801c600282161562008f235792830260801c925b800260801c600482161562008f3a5792830260801c925b800260801c600882161562008f515792830260801c925b800260801c601082161562008f685792830260801c925b800260801c602082161562008f7f5792830260801c925b800260801c604082161562008f965792830260801c925b8002608090811c9082161562008fae5792830260801c925b800260801c61010082161562008fc65792830260801c925b800260801c61020082161562008fde5792830260801c925b800260801c61040082161562008ff65792830260801c925b800260801c6108008216156200900e5792830260801c925b800260801c611000821615620090265792830260801c925b800260801c6120008216156200903e5792830260801c925b800260801c614000821615620090565792830260801c925b800260801c6180008216156200906e5792830260801c925b800260801c62010000821615620090875792830260801c925b800260801c62020000821615620090a05792830260801c925b800260801c62040000821615620090b95792830260801c925b800260801c62080000821615620090d25792830260801c925b505b826000036200910157604051631dba598d60e11b8152600481018690526024810185905260440162005c7f565b816200910e578262004a61565b62004a61836000196200ac7b565b60606000825160206200913091906200aef1565b67ffffffffffffffff8111156200914b576200914b6200a52d565b6040519080825280601f01601f19166020018201604052801562009176576020820181803683370190505b50905060005b8351811015620086455760008482815181106200919d576200919d6200ab70565b602002602001015190508082602002602001840152508080620091c0906200ac92565b9150506200917c565b6004820154600283015460038401546000926001600160a01b03169160e01b9083620091f58762008c8a565b6001600160a01b0385166000908152602089815260408083206001600160e01b0319881684528252808320905193945092620092369185918791016200af77565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff1615620092ea5785156200927a576200927a8762009a2e565b6001600160a01b0384166000908152602088815260408083206001600160e01b03198716845282528083209051909291620092ba9185918791016200af77565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062002ff8565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200934957600080fd5b505af11580156200935e573d6000803e3d6000fd5b5050505060006200936f8862008db8565b6040516365bc948160e01b81526001600160a01b03881660048201529092506000915060008051602062020e0a833981519152906365bc9481906024016000604051808303816000875af1158015620093cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620093f691908101906200b20b565b509050805160000362009474576040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005c7f565b60005b8151811015620098275760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d7089858581518110620094cb57620094cb6200ab70565b60200260200101516040518363ffffffff1660e01b8152600401620095059291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562009523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200954991906200a66a565b905080620095b3577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888484815181106200958857620095886200ab70565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b620095db8b848481518110620095cd57620095cd6200ab70565b602002602001015162009a84565b620095e7575062009812565b60068b0154600090819060ff16156200963d576000620096248e8787815181106200961657620096166200ab70565b602002602001015162009c6d565b90945092509050806200963b575050505062009812565b505b6001828201610100031b60001901811b8316811c86811462009663575050505062009812565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200969b9291906200af77565b60405160208183030381529060405280519060200120898981518110620096c657620096c66200ab70565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a160405180608001604052808787815181106200972a576200972a6200ab70565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620097b09291906200af77565b60408051808303601f190181529181528151602092830120835282820193909352908201600020835181559083015160018201559082015160028201556060909101516003909101805460ff1916911515919091179055506200982792505050565b806200981e816200ac92565b91505062009477565b506001600160a01b038616600090815260208a815260408083206001600160e01b03198916845282528083209051909291620098689187918991016200af77565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff16620099085760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162005c7f565b87156200991a576200991a8962009a2e565b6001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200995a9187918991016200af77565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b60008060006020855111620099a3578451620099a6565b60205b905060005b8181101562009a2457620099c18160086200aef1565b86620099ce83886200aa38565b81518110620099e157620099e16200ab70565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c92909217918062009a1b816200ac92565b915050620099ab565b5090949350505050565b6004810180546001600160a01b031916905560028101805463ffffffff1916905562009a5f60018201600062009f60565b60006003820181905560068201805460ff1916905562008e9a90600783019062009f80565b600482810154604051630667f9d760e41b81526001600160a01b039091169181019190915260248101829052600090819060008051602062020e0a8339815191529063667f9d7090604401602060405180830381865afa15801562009aed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009b1391906200a66a565b905060008062009b238662008db8565b90925090506000811562009b3957600062009b3d565b6000195b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062020e0a833981519152906370ca10bb90606401600060405180830381600087803b15801562009ba857600080fd5b505af115801562009bbd573d6000803e3d6000fd5b50505050600062009bce8862008db8565b60048a8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018a90526044810188905290925060008051602062020e0a83398151915291506370ca10bb90606401600060405180830381600087803b15801562009c3a57600080fd5b505af115801562009c4f573d6000803e3d6000fd5b5050505083801562009c615750808314155b98975050505050505050565b600482810154604051630667f9d760e41b81526001600160a01b03909116918101919091526024810182905260009081908190819060008051602062020e0a8339815191529063667f9d7090604401602060405180830381865afa15801562009cda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009d0091906200a66a565b905060008062009d138888600162009dc9565b9150915060008062009d288a8a600062009dc9565b60048c8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018c905260448101889052919350915060008051602062020e0a833981519152906370ca10bb90606401600060405180830381600087803b15801562009d9557600080fd5b505af115801562009daa573d6000803e3d6000fd5b5050505083801562009db95750815b9a92995097509095505050505050565b60008060005b61010081101562009ed15760008462009dec576001821b62009dfe565b62009df98260ff6200ab86565b6001901b5b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062020e0a833981519152906370ca10bb90606401600060405180830381600087803b15801562009e6957600080fd5b505af115801562009e7e573d6000803e3d6000fd5b5050505060008062009e908962008db8565b9150915081801562009ea157508015155b1562009eb857600184955095505050505062009eda565b505050808062009ec8906200ac92565b91505062009dcf565b50600080915091505b935093915050565b610b08806200b27783390190565b610bfd806200bd7f83390190565b610c18806200c97c83390190565b613f50806200d59483390190565b610f1f80620114e483390190565b61666b806201240383390190565b6109178062018a6e83390190565b614e72806201938583390190565b612c13806201e1f783390190565b508054600082559060005260206000209081019062008e9a919062009fba565b50805462009f8e906200a92c565b6000825580601f1062009f9f575050565b601f01602090049060005260206000209081019062008e9a91905b5b8082111562009fd1576000815560010162009fbb565b5090565b60006020828403121562009fe857600080fd5b81356001600160e01b0319811681146200873e57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156200a0445783516001600160a01b0316835292840192918401916001016200a01d565b50909695505050505050565b60005b838110156200a06d5781810151838201526020016200a053565b50506000910152565b600081518084526200a0908160208601602086016200a050565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200a15a57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200a14357605f198985030183526200a1308486516200a076565b948e01949350918d01916001016200a111565b505050978a0197945050918801916001016200a0cb565b50919a9950505050505050505050565b803560ff8116811462007b7f57600080fd5b600080604083850312156200a19057600080fd5b6200a19b836200a16a565b91506200a1ab602084016200a16a565b90509250929050565b600081518084526020808501945080840160005b838110156200a1f05781516001600160e01b031916875295820195908201906001016200a1c8565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200a27857888303603f19018552815180518785526200a249888601826200a076565b91890151858303868b01529190506200a26381836200a1b4565b9689019694505050908601906001016200a222565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200a2df57603f198886030184526200a2cc8583516200a076565b945092850192908501906001016200a2ad565b5092979650505050505050565b62ffffff8116811462008e9a57600080fd5b6000806000606084860312156200a31457600080fd5b83356200a321816200a2ec565b9250602084013591506200a338604085016200a16a565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200a27857888303603f19018552815180516001600160a01b031684528701518784018790526200a3a0878501826200a1b4565b95880195935050908601906001016200a368565b6001600160a01b038116811462008e9a57600080fd5b600080600080600080600080610100898b0312156200a3e857600080fd5b88356200a3f5816200a3b4565b975060208901356200a407816200a3b4565b965060408901356200a419816200a3b4565b955060608901356200a42b816200a2ec565b94506080890135935060a089013592506200a44960c08a016200a16a565b91506200a45960e08a016200a16a565b90509295985092959890939650565b61ffff8116811462008e9a57600080fd5b6000602082840312156200a48c57600080fd5b81356200873e816200a468565b600080600080600080600060e0888a0312156200a4b557600080fd5b87356200a4c2816200a3b4565b965060208801356200a4d4816200a3b4565b955060408801356200a4e6816200a3b4565b945060608801356200a4f8816200a2ec565b9350608088013592506200a50f60a089016200a16a565b91506200a51f60c089016200a16a565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200a56f576200a56f6200a52d565b604052919050565b8051801515811462007b7f57600080fd5b6000608082840312156200a59b57600080fd5b6040516080810181811067ffffffffffffffff821117156200a5c1576200a5c16200a52d565b60405282516200a5d1816200a468565b815260208301516200a5e3816200a3b4565b60208201526200a5f6604084016200a577565b60408201526200a609606084016200a577565b60608201529392505050565b6000602082840312156200a62857600080fd5b81516200873e816200a2ec565b634e487b7160e01b600052601160045260246000fd5b62ffffff8181168382160190808211156200864557620086456200a635565b6000602082840312156200a67d57600080fd5b5051919050565b6000602082840312156200a69757600080fd5b81516200873e816200a3b4565b600081518084526020808501945080840160005b838110156200a1f0578151875295820195908201906001016200a6b8565b602081526200a6f16020820183516001600160a01b03169052565b600060208301516200a70e60408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e061014081818601526200a77f6102008601846200a6a4565b9250808601519050601f196101608187860301818801526200a7a285846200a6a4565b9450808801519250506101808187860301818801526200a7c385846200a6a4565b945080880151925050506101a06200a7e5818701836001600160a01b03169052565b86015190506101c06200a802868201836001600160a01b03169052565b959095015193019290925250919050565b600082601f8301126200a82557600080fd5b8151602067ffffffffffffffff8211156200a844576200a8446200a52d565b8160051b6200a8558282016200a543565b92835284810182019282810190878511156200a87057600080fd5b83870192505b848310156200a891578251825291830191908301906200a876565b979650505050505050565b60008060008060008060c087890312156200a8b657600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200a8eb57600080fd5b6200a8f98a838b016200a813565b935060a08901519150808211156200a91057600080fd5b506200a91f89828a016200a813565b9150509295509295509295565b600181811c908216806200a94157607f821691505b6020821081036200a96257634e487b7160e01b600052602260045260246000fd5b50919050565b80516001600160801b038116811462007b7f57600080fd5b6000806000606084860312156200a99657600080fd5b6200a9a1846200a968565b92506200a9b1602085016200a968565b91506200a338604085016200a968565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b03808416806200a9f4576200a9f46200a9c1565b92169190910492915050565b6001600160801b038181168382160190808211156200864557620086456200a635565b6020815260006200873e60208301846200a076565b8082018082111562002ff85762002ff86200a635565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b838110156200a1f05781516001600160a01b0316875295820195908201906001016200aa78565b60008151606084526200aab660608501826200a6a4565b6020848101518683038783015280518084529082019350909160009190830190825b818110156200ab13578551600281106200ab0057634e487b7160e01b85526021600452602485fd5b835294840194918401916001016200aad8565b50506040860151935086810360408801526200a89181856200aa64565b6001600160801b03851681526080602082015260006200ab5460808301866200aa9f565b6001600160a01b03949094166040830152506060015292915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111562002ff85762002ff86200a635565b60006001600160801b03808816835280871660208401525060a060408301526200abca60a08301866200aa9f565b6001600160a01b0394909416606083015250608001529392505050565b60ff818116838216019081111562002ff85762002ff86200a635565b60ff828116828216039081111562002ff85762002ff86200a635565b6000602082840312156200ac3257600080fd5b815167ffffffffffffffff8111156200ac4a57600080fd5b62007be6848285016200a813565b6001600160801b038281168282160390808211156200864557620086456200a635565b6000826200ac8d576200ac8d6200a9c1565b500490565b6000600182016200aca7576200aca76200a635565b5060010190565b6000602082840312156200acc157600080fd5b6200873e826200a577565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156200ad19578551835294830194918301916001016200acfb565b5050809450505080851660408501525050949350505050565b6000806000606084860312156200ad4857600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156200ad6e57600080fd5b6200ad7c868287016200a813565b9150509250925092565b600080600080600080600080610100898b0312156200ada457600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200a45960e08a016200a577565b60006001600160a01b038087168352808616602084015250608060408301526200ae0e60808301856200a6a4565b82810360608401526200a89181856200a6a4565b6001600160a01b038316815260406020820152600062007be660408301846200a076565b60006001600160a01b0380861683528085166020840152506060604083015262004a6160608301846200a076565b83815282602082015260606040820152600062004a6160608301846200a076565b600082516200aea98184602087016200a050565b9190910192915050565b600062ffffff808416806200aecc576200aecc6200a9c1565b92169190910692915050565b600062ffffff808416806200a9f4576200a9f46200a9c1565b808202811582820484141762002ff85762002ff86200a635565b62ffffff8181168382160280821691908281146200af2d576200af2d6200a635565b505092915050565b62ffffff8281168282160390808211156200864557620086456200a635565b81810360008312801583831316838312821617156200864557620086456200a635565b600083516200af8b8184602088016200a050565b9190910191825250602001919050565b600181815b808511156200afdc5781600019048211156200afc0576200afc06200a635565b808516156200afce57918102915b93841c93908002906200afa0565b509250929050565b6000826200aff55750600162002ff8565b816200b0045750600062002ff8565b81600181146200b01d57600281146200b028576200b048565b600191505062002ff8565b60ff8411156200b03c576200b03c6200a635565b50506001821b62002ff8565b5060208310610133831016604e8410600b84101617156200b06d575081810a62002ff8565b6200b07983836200af9b565b80600019048211156200b090576200b0906200a635565b029392505050565b60006200873e83836200afe4565b6000602082840312156200b0b957600080fd5b815167ffffffffffffffff808211156200b0d257600080fd5b818401915084601f8301126200b0e757600080fd5b8151818111156200b0fc576200b0fc6200a52d565b6200b111601f8201601f19166020016200a543565b91508082528560208285010111156200b12957600080fd5b6200b13c8160208401602086016200a050565b50949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a2050616381527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e20000000000000000000000000000000000000000000006040820152600082516200b1cb81604a8501602087016200a050565b91909101604a0192915050565b6001600160e01b03198316815281516000906200b1fd8160048501602087016200a050565b919091016004019392505050565b600080604083850312156200b21f57600080fd5b825167ffffffffffffffff808211156200b23857600080fd5b6200b246868387016200a813565b935060208501519150808211156200b25d57600080fd5b506200b26c858286016200a813565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212203676dca41fe70116d022466cee8163b666c31da9d26a6ab943091f2051f816da64736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea2646970667358221220140e0dc3f318a2e0bf53d0b6d4925ccbdeb1a8f044c863155735b72d740aff7364736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea26469706673582212203128554588a242534b7d180e6bcef67cd97e91abb99161df7c218c6a9eccb86064736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613e6a80620000e66000396000f3fe60806040523480156200001157600080fd5b50600436106200033d5760003560e01c8063704037bd11620001bd578063b03847811162000101578063e30c397811620000a3578063e92d0d5d116200007a578063e92d0d5d146200077a578063f2fde38b1462000791578063fd90c2be14620007a857600080fd5b8063e30c39781462000731578063e63ab1e9146200073b578063e74b981b146200076357600080fd5b8063d547741f11620000d8578063d547741f14620006ec578063ddbfd9411462000703578063e203a31f146200071a57600080fd5b8063b03847811462000697578063be20309414620006ae578063c1b931be14620006c557600080fd5b80638ce9aa1c116200016b578063a217fddf1162000142578063a217fddf1462000627578063aabc4b3c1462000630578063af371065146200068557600080fd5b80638ce9aa1c14620005f75780638da5cb5b146200060657806391d14854146200061057600080fd5b806379ba509711620001a057806379ba509714620005cc5780637daf5d6614620005d657806380c5061e14620005ed57600080fd5b8063704037bd146200059c578063715018a614620005c257600080fd5b80633a2f1a9111620002855780635a44092311620002335780636622e0d7116200020a5780636622e0d7146200055757806369d56ea3146200057d578063701ab8c1146200059457600080fd5b80635a440923146200051f5780635b35875c1462000536578063659ac74b146200054057600080fd5b80634ccb20c011620002685780634ccb20c014620004ed5780634cd161d314620004ff5780634e937c3a146200051657600080fd5b80633a2f1a9114620004bf5780633c78a94114620004d657600080fd5b8063248a9ca311620002ef5780632f2ff15d11620002c65780632f2ff15d146200047a57806336568abe1462000491578063379ee80314620004a857600080fd5b8063248a9ca3146200040757806327721842146200044c5780632cc06b8c146200046357600080fd5b80630752092b11620003245780630752092b1462000387578063093ff76914620003b75780631af5bacc14620003d057600080fd5b806301ffc9a714620003425780630282c9c1146200036e575b600080fd5b620003596200035336600462002e46565b620007b1565b60405190151581526020015b60405180910390f35b62000378620007e9565b60405162000365919062002e72565b6200039e6200039836600462002eb8565b620008d9565b6040516001600160a01b03909116815260200162000365565b620003ce620003c836600462002f0f565b620008e8565b005b620003f87fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000365565b620003f86200041836600462002eb8565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b620003596200045d36600462002fe2565b620009f5565b620003ce6200047436600462003002565b62000a04565b620003ce6200048b36600462003050565b62000a57565b620003ce620004a236600462003050565b62000a9f565b620003ce620004b936600462003094565b62000ada565b620003ce620004d03660046200314f565b62000c01565b620003ce620004e736600462002fe2565b62000cb9565b6000546001600160a01b03166200039e565b620003ce620005103660046200320b565b62000d1b565b600354620003f8565b620003ce6200053036600462002fe2565b62000df3565b6200037862000e6b565b6200039e6200055136600462003243565b62000e7e565b6200056e62000568366004620032a4565b6200140d565b604051620003659190620032d7565b620003ce6200058e3660046200334e565b620015b8565b6001620003f8565b620005b3620005ad366004620033a4565b62001765565b604051620003659190620033ea565b620003ce6200179e565b620003ce620017b6565b6200039e620005e736600462002eb8565b62001804565b620003f862001837565b67016345785d8a0000620003f8565b6200039e62001845565b620003596200062136600462003050565b6200187a565b620003f8600081565b620006476200064136600462002eb8565b620018f5565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000365565b6002546001600160a01b03166200039e565b620003ce620006a836600462002fe2565b620019ca565b620003ce620006bf36600462003427565b62001b14565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620003f8565b620003ce620006fd36600462003050565b62001ce4565b620003ce6200071436600462002fe2565b62001d2c565b620003ce6200072b36600462003481565b62001da4565b6200039e62001e16565b620003f87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b620003ce6200077436600462002fe2565b62001e40565b620003ce6200078b36600462002eb8565b62001e55565b620003ce620007a236600462002fe2565b62001eff565b600154620003f8565b60006001600160e01b03198216637965db0b60e01b1480620007e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007f9600562001f88565b90508015620008d5578067ffffffffffffffff8111156200081e576200081e6200349f565b60405190808252806020026020018201604052801562000848578160200160208202803683370190505b5091506000805b82811015620008c5576000806200086860058462001f95565b9092509050620008788162001fb3565b15620008af5781868581518110620008945762000894620034b5565b602090810291909101015283620008ab81620034e1565b9450505b505080620008bd90620034e1565b90506200084f565b5081811015620008d3578083525b505b5090565b6000620007e360088362001fc0565b620008f262001fce565b6000620009058b8b8b61ffff1662002004565b6020015190506001600160a01b038116620009555760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009cf57600080fd5b505af1158015620009e4573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007e3600883620020b0565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a3081620020d3565b6040805160008082526020820190925262000a5191869186918691620020df565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a9381620020d3565b62000a51838362002233565b6001600160a01b038116331462000ac95760405163334bd91960e11b815260040160405180910390fd5b62000ad5828262002260565b505050565b62000ae462001fce565b60018961ffff16101562000b1257604051634f958e7160e01b815261ffff8a1660048201526024016200094c565b600062000b26818a8a8a8a8a8a8a620022fd565b9050811562000b415762000b3e81600160ff62002402565b90505b62000b53600561ffff8c16836200242c565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c2d81620020d3565b6001600160a01b038416158062000c4c5750836001600160a01b031916155b1562000c6b5760405163d43a15d160e01b815260040160405180910390fd5b62000cb08787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620020df92505050565b50505050505050565b62000cc362001fce565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cff57600080fd5b505af115801562000d14573d6000803e3d6000fd5b5050505050565b62000d2562001fce565b62000d36600561ffff84166200243b565b62000d5b57604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000d6e600561ffff851662002449565b905081151560ff82901c15150362000d99576040516311be38db60e11b815260040160405180910390fd5b62000dba61ffff841662000db0838560ff62002402565b600591906200242c565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dfd62001fce565b62000e0a60088262002457565b62000e34576040516303ce0ad960e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e7960056200246e565b905090565b600062000e91600561ffff84166200243b565b62000eb657604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000ec9600561ffff851662002449565b9050600062000ed762001845565b6001600160a01b0316336001600160a01b031614905062000ef88262001fb3565b15801562000f04575080155b1562000f30576040516304fc2fe760e11b815233600482015261ffff851660248201526044016200094c565b62000f3d600887620020b0565b62000f6757604051638e888ef360e01b81526001600160a01b03871660048201526024016200094c565b856001600160a01b0316876001600160a01b03160362000fa657604051632f9b185360e01b81526001600160a01b03881660048201526024016200094c565b62000fb285856200247d565b5060008062000fc28989620024c3565b90925090506001600160a01b03821662000fef57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010665760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff871660448201526064016200094c565b6002546001600160a01b03168062001091576040516328b4fcf960e21b815260040160405180910390fd5b60006200109e86620024ed565b620010a987620024fa565b620010b4886200250b565b620010bf896200251c565b620010ca8a6200252d565b620010d58b6200253f565b620010e08c62002550565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e4820152908a166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b179052600b5490519192506001600160a01b0316908c908c908b908590620011919062002e38565b620011a195949392919062003545565b604051809103906000f080158015620011be573d6000803e3d6000fd5b509650505060405180608001604052808761ffff168152602001866001600160a01b0316815260200184151581526020016000151581525060046000846001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008861ffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160000160166101000a81548160ff02191690831515021790555060608201518160000160176101000a81548160ff0219169083151502179055509050506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506200138f8661ffff16600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b031681526020019081526020016000206200256290919063ffffffff16565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff886001600380549050620013df919062003590565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200141e8585620024c3565b6001600160a01b038083166000908152600a602090815260408083209385168352929052908120929450909250620014568262002570565b90508015620015ae578067ffffffffffffffff8111156200147b576200147b6200349f565b604051908082528060200260200182016040528015620014cf57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816200149a5790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620015ab5760006200151c62001516868462001fc0565b6200257b565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620015965762001596620034b5565b602090810291909101015250600101620014fb565b50505b5050505092915050565b620015c262001fce565b600080620015d18686620024c3565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b90920490911615156060830152929450909250906200168d5760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff861660448201526064016200094c565b8315158160600151151503620016b557604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff90911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200175490871515815260200190565b60405180910390a250505050505050565b6040805160808101825260008082526020820181905291810182905260608101919091526200179684848462002004565b949350505050565b620017a862001fce565b620017b46000620025a6565b565b3380620017c262001e16565b6001600160a01b031614620017f65760405163118cdaa760e01b81526001600160a01b03821660048201526024016200094c565b6200180181620025a6565b50565b6000600382815481106200181c576200181c620034b5565b6000918252602090912001546001600160a01b031692915050565b600062000e79600862002570565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620018a8576200188c62001845565b6001600160a01b0316826001600160a01b0316149050620007e3565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200190b60058a6200243b565b6200192d57604051637d9160bf60e11b8152600481018a90526024016200094c565b60006200193c60058b62002449565b90506200194981620024ed565b61ffff1698506200195a81620024fa565b61ffff1697506200196b816200250b565b61ffff1696506200197c816200251c565b61ffff1695506200198d816200252d565b62ffffff1694506200199f816200253f565b61ffff169350620019b08162002550565b62ffffff16925060ff81901c915050919395975091939597565b620019d462001fce565b306001600160a01b0316816001600160a01b03166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001a1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a439190620035a6565b6001600160a01b03161462001a7757604051630a3e70af60e11b81526001600160a01b03821660048201526024016200094c565b6002546001600160a01b03908116908216810362001ab457604051630ded3b9560e31b81526001600160a01b03831660048201526024016200094c565b600280546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff1660008115801562001b605750825b905060008267ffffffffffffffff16600114801562001b7e5750303b155b90508115801562001b8d575080155b1562001bac5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831562001be157845468ff00000000000000001916680100000000000000001785555b62001bec88620025e4565b67016345785d8a000087111562001c2857604051635e8988c160e01b81526004810188905267016345785d8a000060248201526044016200094c565b62001c3389620025f9565b6001879055600b80546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001cd957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001d2081620020d3565b62000a51838362002260565b62001d3662001fce565b62001d43600882620026bb565b62001d6d57604051638e888ef360e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001dae62001fce565b62001dbf600561ffff8316620026d2565b62001de457604051637d9160bf60e11b815261ffff821660048201526024016200094c565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006200186a565b62001e4a62001fce565b6200180181620025f9565b62001e5f62001fce565b60015481810362001e8757604051631baa31e960e21b8152600481018390526024016200094c565b67016345785d8a000082111562001ec357604051635e8988c160e01b81526004810183905267016345785d8a000060248201526044016200094c565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910162001b08565b62001f0962001fce565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001f4f62001845565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007e382620026e0565b600080808062001fa68686620026ed565b9097909650945050505050565b600060ff82901c620007e3565b6000620018ee83836200271a565b3362001fd962001845565b6001600160a01b031614620017b45760405163118cdaa760e01b81523360048201526024016200094c565b604080516080810182526000808252602082018190529181018290526060810191909152620020348484620024c3565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620018ee565b62001801813362002747565b6000620020f286868661ffff1662002004565b6020015190506001600160a01b0381166200213e5760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff851660448201526064016200094c565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200217e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a49190620035c6565b03620021c75760405163b70cd0db60e01b8152600481018490526024016200094c565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d90620021f79086908690600401620035e0565b600060405180830381600087803b1580156200221257600080fd5b505af115801562002227573d6000803e3d6000fd5b50505050505050505050565b6000826200225457604051633e3253cf60e11b815260040160405180910390fd5b620018ee838362002784565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200228f84846200187a565b15620022f2576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007e3565b6000915050620007e3565b60008561ffff168761ffff1611806200231b5750610fff8661ffff16115b806200232c57506127108561ffff16115b806200233d57506109c48361ffff16115b80620023505750620fffff8262ffffff16115b156200236f57604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620017968484620024175760006200241a565b60015b600180861b19929092169116841b1790565b60006200179684848462002836565b6000620018ee838362002855565b6000620018ee838362002863565b6000620018ee836001600160a01b038416620028af565b60606000620018ee8362002901565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620024ba82826200290e565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620024e5579192915b509192909150565b600061ffff8216620007e3565b6000620007e38260101c610fff1690565b6000620007e382601c1c610fff1690565b6000620007e38260281c613fff1690565b6000620007e38260361c62ffffff1690565b6000620007e382604e1c613fff1690565b6000620007e382605c1c620fffff1690565b6000620018ee8383620028af565b6000620007e3825490565b8061ffff81168114620025a1576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620025e08262002b96565b5050565b620025ee62002c07565b620018018162002c56565b6001600160a01b0381166200262157604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200266257600054604051634fcea97160e01b81526001600160a01b0390911660048201526024016200094c565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001b08565b6000620018ee836001600160a01b03841662002c8c565b6000620018ee838362002d85565b6000620007e38262002570565b60008080620026fd858562001fc0565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620027345762002734620034b5565b9060005260206000200154905092915050565b6200275382826200187a565b620025e05760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016200094c565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800620027b384846200187a565b620022f2576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620027eb3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007e3565b6000828152600284016020526040812082905562001796848462002562565b6000620018ee838362002da4565b6000818152600283016020526040812054801580156200288c57506200288a848462002855565b155b15620018ee5760405163015ab34360e11b8152600481018490526024016200094c565b6000818152600183016020526040812054620028f857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007e3565b506000620007e3565b6060620007e38262002dbd565b6000806000836000036200292c5750600160801b9150620007e39050565b508260008112156200293f579015906000035b6210000081101562002b4e57600160801b9250846fffffffffffffffffffffffffffffffff8111156200297457911591600019045b6001821615620029865792830260801c925b800260801c60028216156200299d5792830260801c925b800260801c6004821615620029b45792830260801c925b800260801c6008821615620029cb5792830260801c925b800260801c6010821615620029e25792830260801c925b800260801c6020821615620029f95792830260801c925b800260801c604082161562002a105792830260801c925b8002608090811c9082161562002a285792830260801c925b800260801c61010082161562002a405792830260801c925b800260801c61020082161562002a585792830260801c925b800260801c61040082161562002a705792830260801c925b800260801c61080082161562002a885792830260801c925b800260801c61100082161562002aa05792830260801c925b800260801c61200082161562002ab85792830260801c925b800260801c61400082161562002ad05792830260801c925b800260801c61800082161562002ae85792830260801c925b800260801c6201000082161562002b015792830260801c925b800260801c6202000082161562002b1a5792830260801c925b800260801c6204000082161562002b335792830260801c925b800260801c6208000082161562002b4c5792830260801c925b505b8260000362002b7b57604051631dba598d60e11b815260048101869052602481018590526044016200094c565b8162002b885782620024ba565b620024ba83600019620035fb565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620017b457604051631afcd79f60e31b815260040160405180910390fd5b62002c6062002c07565b6001600160a01b038116620017f657604051631e4fbdf760e01b8152600060048201526024016200094c565b60008181526001830160205260408120548015620022f257600062002cb360018362003590565b855490915060009062002cc99060019062003590565b905080821462002d3557600086600001828154811062002ced5762002ced620034b5565b906000526020600020015490508087600001848154811062002d135762002d13620034b5565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002d495762002d496200361e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007e3565b60008181526002830160205260408120819055620018ee838362002dcc565b60008181526001830160205260408120541515620018ee565b60606000620018ee8362002dda565b6000620018ee838362002c8c565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002e2c57602002820191906000526020600020905b81548152602001906001019080831162002e17575b50505050509050919050565b610800806200363583390190565b60006020828403121562002e5957600080fd5b81356001600160e01b031981168114620018ee57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002eac5783518352928401929184019160010162002e8e565b50909695505050505050565b60006020828403121562002ecb57600080fd5b5035919050565b6001600160a01b03811681146200180157600080fd5b803561ffff81168114620025a157600080fd5b803562ffffff81168114620025a157600080fd5b6000806000806000806000806000806101408b8d03121562002f3057600080fd5b8a3562002f3d8162002ed2565b995060208b013562002f4f8162002ed2565b985062002f5f60408c0162002ee8565b975062002f6f60608c0162002ee8565b965062002f7f60808c0162002ee8565b955062002f8f60a08c0162002ee8565b945062002f9f60c08c0162002ee8565b935062002faf60e08c0162002efb565b925062002fc06101008c0162002ee8565b915062002fd16101208c0162002efb565b90509295989b9194979a5092959850565b60006020828403121562002ff557600080fd5b8135620018ee8162002ed2565b6000806000606084860312156200301857600080fd5b8335620030258162002ed2565b92506020840135620030378162002ed2565b9150620030476040850162002ee8565b90509250925092565b600080604083850312156200306457600080fd5b823591506020830135620030788162002ed2565b809150509250929050565b80358015158114620025a157600080fd5b60008060008060008060008060006101208a8c031215620030b457600080fd5b620030bf8a62002ee8565b9850620030cf60208b0162002ee8565b9750620030df60408b0162002ee8565b9650620030ef60608b0162002ee8565b9550620030ff60808b0162002ee8565b94506200310f60a08b0162002efb565b93506200311f60c08b0162002ee8565b92506200312f60e08b0162002efb565b9150620031406101008b0162003083565b90509295985092959850929598565b60008060008060008060a087890312156200316957600080fd5b8635620031768162002ed2565b95506020870135620031888162002ed2565b9450620031986040880162002ee8565b935060608701359250608087013567ffffffffffffffff80821115620031bd57600080fd5b818901915089601f830112620031d257600080fd5b813581811115620031e257600080fd5b8a6020828501011115620031f557600080fd5b6020830194508093505050509295509295509295565b600080604083850312156200321f57600080fd5b6200322a8362002ee8565b91506200323a6020840162003083565b90509250929050565b600080600080608085870312156200325a57600080fd5b8435620032678162002ed2565b93506020850135620032798162002ed2565b9250620032896040860162002efb565b9150620032996060860162002ee8565b905092959194509250565b60008060408385031215620032b857600080fd5b8235620032c58162002ed2565b91506020830135620030788162002ed2565b6020808252825182820181905260009190848201906040850190845b8181101562002eac576200333a83855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620032f3565b600080600080608085870312156200336557600080fd5b8435620033728162002ed2565b93506020850135620033848162002ed2565b9250620033946040860162002ee8565b9150620032996060860162003083565b600080600060608486031215620033ba57600080fd5b8335620033c78162002ed2565b92506020840135620033d98162002ed2565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007e3565b600080600080608085870312156200343e57600080fd5b84356200344b8162002ed2565b935060208501356200345d8162002ed2565b9250604085013591506060850135620034768162002ed2565b939692955090935050565b6000602082840312156200349457600080fd5b620018ee8262002ee8565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620034f657620034f6620034cb565b5060010190565b6000815180845260005b81811015620035255760208185018101518683018201520162003507565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200358560a0830184620034fd565b979650505050505050565b81810381811115620007e357620007e3620034cb565b600060208284031215620035b957600080fd5b8151620018ee8162002ed2565b600060208284031215620035d957600080fd5b5051919050565b828152604060208201526000620017966040830184620034fd565b6000826200361957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a0604052604051610800380380610800833981016040819052610022916104c4565b604080516020810190915260008152859061003d8282610179565b506001600160a01b0316608052600061007760017f73ef95b1b141b4aeb11976757a225324c423bf4634f4361553b9b059a82050bb6105bf565b60405160200161008991815260200190565b60408051601f198184030181529190528051602090910120905060006100d060017f039c6157caeca9b57df712b1365b48c637c526ae0a75b2c95cd3622e6ffda4fd6105bf565b6040516020016100e291815260200190565b60408051601f1981840301815291905280516020909101209050600061012960017fd1a1c4c8365fed7323947e7cb6a7be46aba18d67bc4a4c5418b50b8bbf5a31856105bf565b60405160200161013b91815260200190565b60405160208183030381529060405280519060200120905086835585825584815561016c888561017960201b60201c565b5050505050505050610617565b61018282610239565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a280511561022d57610228826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906105e0565b8261034c565b505050565b6102356103c5565b5050565b806001600160a01b03163b60000361027457604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031491906105e0565b9050806001600160a01b03163b60000361023557604051634c9c8ce360e01b81526001600160a01b038216600482015260240161026b565b6060600080846001600160a01b03168460405161036991906105fb565b600060405180830381855af49150503d80600081146103a4576040519150601f19603f3d011682016040523d82523d6000602084013e6103a9565b606091505b5090925090506103ba8583836103e6565b925050505b92915050565b34156103e45760405163b398979f60e01b815260040160405180910390fd5b565b6060826103fb576103f682610445565b61043e565b815115801561041257506001600160a01b0384163b155b1561043b57604051639996b31560e01b81526001600160a01b038516600482015260240161026b565b50805b9392505050565b8051156104555780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461048557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156104bb5781810151838201526020016104a3565b50506000910152565b600080600080600060a086880312156104dc57600080fd5b6104e58661046e565b94506104f36020870161046e565b93506105016040870161046e565b9250606086015161ffff8116811461051857600080fd5b60808701519092506001600160401b038082111561053557600080fd5b818801915088601f83011261054957600080fd5b81518181111561055b5761055b61048a565b604051601f8201601f19908116603f011681019083821181831017156105835761058361048a565b816040528281528b602084870101111561059c57600080fd5b6105ad8360208301602088016104a0565b80955050505050509295509295909350565b818103818111156103bf57634e487b7160e01b600052601160045260246000fd5b6000602082840312156105f257600080fd5b61043e8261046e565b6000825161060d8184602087016104a0565b9190910192915050565b6080516101c9610637600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea26469706673582212202f3820ba5b815a6459143880dd49910e4fbff5fbfaa6b8c2f3fb3d7ec3964eb064736f6c63430008140033a2646970667358221220f140b977106ff6d85e5d4f0ac895567f5d06196c8c3b023a07183d04e0a3b48f64736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220007cf27b93d4d99a0e50a460fd5dd9899916fcdfcfaa03803d2c821c78b19ad564736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea264697066735822122009c44af5988384f46804759913ec6c7012105d278f0ccba385192cd92bf1dd6e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360a06040523480156200001157600080fd5b506040516200666b3803806200666b833981016040819052620000349162000106565b6001600160a01b0381166080526200004b62000052565b5062000138565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011957600080fd5b81516001600160a01b03811681146200013157600080fd5b9392505050565b608051616502620001696000396000818161048d0152818161159b0152818161241601526138f301526165026000f3fe608060405234801561001057600080fd5b506004361061025b5760003560e01c80638940a16a11610145578063d3b9fbe4116100bd578063e584b6541161008c578063e985e9c511610071578063e985e9c51461062a578063ea3446bf1461064d578063f5e293291461066057600080fd5b8063e584b65414610604578063e77366f81461061757600080fd5b8063d3b9fbe4146105e4578063d8dfcea0146105ec578063da10610c146105f4578063dbe65edc146105fc57600080fd5b8063a41a01fb11610114578063bd85b039116100f9578063bd85b0391461059e578063c7bd6586146105be578063c9939f5e146105d157600080fd5b8063a41a01fb1461053a578063abcd78301461056157600080fd5b80638940a16a146104b15780638d7024e5146104ef57806395d89b411461052a578063a1af5b9a1461053257600080fd5b806347973bff116101d857806355182894116101a7578063781a89151161018c578063781a89151461042f5780637ca0de301461043957806388cc58e41461048b57600080fd5b806355182894146103d75780636653851a1461041c57600080fd5b806347973bff1461037e5780634c7cffbd146103915780634e1273f4146103a457806353c059a0146103c457600080fd5b80630abe96881161022f57806317fad7fc1161021457806317fad7fc146103345780631b057f6d14610349578063383d15c51461035c57600080fd5b80630abe9688146102e357806317f11ecc1461031957600080fd5b8062fdd58e1461026057806305e8746d1461028657806306fdde03146102a65780630902f1ac146102bb575b600080fd5b61027361026e3660046157ba565b610673565b6040519081526020015b60405180910390f35b61028e61069c565b6040516001600160a01b03909116815260200161027d565b6102ae6106b9565b60405161027d919061580a565b6102c361074d565b604080516001600160801b0393841681529290911660208301520161027d565b6102c36102f1366004615850565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610321610787565b60405161ffff909116815260200161027d565b6103476103423660046158b0565b6107b1565b005b610347610357366004615987565b61080c565b61036f61036a3660046159d3565b61092b565b60405161027d93929190615a76565b61034761038c366004615aa7565b610bcd565b61027361039f366004615850565b610e91565b6103b76103b2366004615b3e565b610eca565b60405161027d9190615baa565b6102736103d2366004615bcd565b610fa0565b6103df6112f4565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a00161027d565b61034761042a366004615c04565b61139e565b6201000954610273565b6104416113d7565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e00161027d565b7f000000000000000000000000000000000000000000000000000000000000000061028e565b6104c46104bf366004615c8a565b61143f565b6040805167ffffffffffffffff9485168152928416602084015292169181019190915260600161027d565b6104f761153e565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff909116606082015260800161027d565b6102ae61157e565b61027361158f565b61054d610548366004615cb1565b611755565b60405162ffffff909116815260200161027d565b61057461056f366004615cdb565b611768565b604080516001600160801b039485168152928416602084015292169181019190915260600161027d565b6102736105ac366004615d13565b60009081526001602052604090205490565b6103476105cc366004615d2c565b611916565b6103b76105df3660046158b0565b6119ac565b610347611ce4565b6102c3611d78565b61028e611d93565b61054d611dab565b610347610612366004615d47565b611db8565b610574610625366004615cdb565b611dc7565b61063d610638366004615d65565b611f16565b604051901515815260200161027d565b61034761065b366004615d83565b611f22565b61054d61066e366004615d13565b612220565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006106b460008051602061648d8339815191525490565b905090565b60606201000a80546106ca90615dd3565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690615dd3565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061077e61076a60055460045461225490919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b60006106b47fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b6107b961228e565b62010009546107ce81338989898989896122c6565b6107dc878787878787612366565b6107f360016000805160206164ad83398151915255565b61080381338989898989896123c4565b50505050505050565b61081461228e565b61081c61240b565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108e55750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190615e07565b6001600160a01b031614155b1561090357604051631b5de6eb60e01b815260040160405180910390fd5b61090e848484612454565b5061092660016000805160206164ad83398151915255565b505050565b60008060608661093a8161247b565b61094261228e565b60008690036109645760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561099157610991615e24565b6040519080825280602002602001820160405280156109ba578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109d9576109d9615e24565b604051908082528060200260200182016040528015610a02578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a2157610a21615e24565b604051908082528060200260200182016040528015610a4a578160200160208202803683370190505b509052600454909150610a84610a6c60008051602061648d8339815191525490565b60008051602061646d833981519152548391906124b7565b9650610a9483338d8d8d8c6124f7565b610aa18a8a898e86612541565b9550610ab7610ab08888612254565b829061267f565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610b0591908b90615e3a565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b51929190615e3a565b60405180910390a38515610b9157610b91610b7860008051602061648d8339815191525490565b60008051602061646d833981519152548891908b6126b9565b610ba860016000805160206164ad83398151915255565b610bbf83338d8d8d610bba8d8d612254565b612717565b505050509450945094915050565b610bd561240b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c205750825b905060008267ffffffffffffffff166001148015610c3d5750303b155b905081158015610c4b575080155b15610c695760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c9d57845468ff00000000000000001916680100000000000000001785555b610ca5612759565b610cd1610cc5610cc08860035461276990919063ffffffff16565b6127b8565b8e8e8e8e8e8e8e61280c565b6000610ce960008051602061648d8339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d4e9190810190615e5f565b90506000610d6860008051602061646d8339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610da5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dcd9190810190615e5f565b90508181604051602001610de2929190615f01565b6040516020818303038152906040526201000a9081610e019190615fae565b508181604051602001610e1592919061606e565b6040516020818303038152906040526201000b9081610e349190615fae565b5050508315610e8257845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610696610ebe7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b62ffffff84169061299c565b60608382610ed882826129d3565b8567ffffffffffffffff811115610ef157610ef1615e24565b604051908082528060200260200182016040528015610f1a578160200160208202803683370190505b50925060005b86811015610f9557610f70888883818110610f3d57610f3d6160ba565b9050602002016020810190610f5291906160d0565b878784818110610f6457610f646160ba565b90506020020135610673565b848281518110610f8257610f826160ba565b6020908102919091010152600101610f20565b505050949350505050565b6000610faa61228e565b6201000954600454600554600086610fe157610fdc610fd560008051602061646d8339815191525490565b84906129f3565b611001565b611001610ffa60008051602061648d8339815191525490565b8490612a28565b9050600081900361102557604051637df801c760e01b815260040160405180910390fd5b866110338533898486612a57565b61103d848361267f565b600354909450600061106d7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b9050600061107a83612abb565b90506110868342612ac7565b92505b62ffffff81166000908152600660205260409020546110a9818615612b3d565b6111cd576110b78483612b6c565b9350600080806110cb8488888b898e612bf4565b9194509250905082156111c9576110e28984612254565b98506110ee8d8361267f565b9c5060006111096110fe89612e1a565b839061ffff16612e2a565b9050801561112a5761111b8b8261267f565b9a506111278482612254565b93505b61113e83611138878761267f565b90612254565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca7088878761118b8e612ea0565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036111dc5750611226565b60006111e88684612eb1565b905062ffffff81161580611200575062ffffff818116145b1561121e57604051631a6d7fb160e31b815260040160405180910390fd5b915050611089565b60008990036112485760405163439df85d60e11b815260040160405180910390fd5b611252878a612254565b6004556005869055611266600a8483612ed3565b92506112728382612769565b60035583156112a15761129c61129460008051602061646d8339815191525490565b8a908c612fee565b6112c2565b6112c26112ba60008051602061648d8339815191525490565b8a908c61302e565b6112d960016000805160206164ad83398151915255565b6112e688338c878d61303f565b505050505050505092915050565b6003546078906000908190819081908161130d8261309c565b905061ffff811615611395576000611326600a836130ac565b965090506113338161310a565b965061133e81613116565b94508464ffffffffff1660000361135457600095505b61ffff861615611393576113858661ffff168361ffff1681611378576113786160ed565b600a916001910601613137565b905061139081613116565b93505b505b50509091929394565b6113a661228e565b6113ae61240b565b6113c06003548888888888888861280c565b61080360016000805160206164ad83398151915255565b60008060008060008060008060035490506113f18161310a565b97506113fc81613167565b965061140781613177565b955061141281613187565b945061141d81613197565b935061142881612e1a565b9250611433816131a8565b91505090919293949596565b600080600080600354905060006114558261309c565b905061ffff8116158061146e5750428664ffffffffff16115b156114855760008060009450945094505050611537565b6000611493600a83896131b9565b91985096509450905064ffffffffff8088169082161015611533576114c96114ba84612abb565b849064ffffffffff8a166132dc565b925060006114d78289616119565b90508064ffffffffff166114ea85612abb565b62ffffff166114f99190616137565b6115039088616163565b96508064ffffffffff1661151685612ea0565b62ffffff166115259190616137565b61152f9087616163565b9550505b5050505b9193909250565b6000806000806000600354905061155481612ea0565b945061155f816132f4565b935061156a81613305565b925061157581613316565b91505090919293565b60606201000b80546106ca90615dd3565b600061159961228e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161b9190615e07565b6001600160a01b0316336001600160a01b03161461164c57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c60006116a78261166f576000611672565b60015b60ff166000856001600160801b03161161168d576000611690565b60015b60ff169060801b6001600160801b03919091161790565b90506116b38482612254565b945084156117375760058190556004546116cd9086612254565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261173761171e60008051602061648d8339815191525490565b60008051602061646d83398151915254879190336126b9565b5050505061175260016000805160206164ad83398151915255565b90565b60006117618383612eb1565b9392505050565b600354600090839082908161179b7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b905060006117a883612abb565b90506117b48342612ac7565b92505b62ffffff81166000908152600660205260408120546117d7908915613329565b90506001600160801b038116156118bd5760006117f962ffffff84168561299c565b90506000876001600160801b0316836001600160801b03161161181c578261181e565b875b905061182a8685612b6c565b955060008a61184d576118486001600160801b038316846080613349565b611862565b6118626001600160801b03831660808561337f565b9050600061187088886133b5565b905060006118876001600160801b038416836133d4565b90506118938184616184565b61189d908d616184565b9b506118a9848c6161a4565b9a506118b5818b616184565b995050505050505b856001600160801b03166000036118d4575061190c565b60006118e08984612eb1565b905062ffffff811615806118f8575062ffffff818116145b1561190457505061190c565b9150506117b7565b5050509250925092565b61191e61228e565b600354600061192c8261309c565b90508061ffff1660000361194b57506001611947828261341d565b6003555b611957600a828561346c565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a250506119a960016000805160206164ad83398151915255565b50565b606086336119ba8282613555565b6119ef5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b6119f761228e565b851580611a045750858414155b15611a2257604051633ab7870760e01b815260040160405180910390fd5b6201000954611a3781338c8c8c8c8c8c6135a1565b898767ffffffffffffffff811115611a5157611a51615e24565b604051908082528060200260200182016040528015611a7a578160200160208202803683370190505b5094506000805b89811015611bce576000611aac8c8c84818110611aa057611aa06160ba565b905060200201356135e7565b905060008a8a84818110611ac257611ac26160ba565b90506020020135905080600003611af357604051636996a92560e01b815262ffffff831660048201526024016119e6565b62ffffff82166000818152600660209081526040808320546001909252909120549091611b2290889085613612565b6000611b2f838584613693565b90506000819003611b5a5760405163fd44792960e01b815262ffffff861660048201526024016119e6565b611b648382612254565b9250838203611b7a57611b7860078661370b565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611ba757611ba76160ba565b6020908102919091010152611bbc878261267f565b96508560010195505050505050611a81565b50600454611bdc9082612254565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611c25908f908f908f908f9061620f565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611c7493929190616236565b60405180910390a3611cae611c9560008051602061648d8339815191525490565b60008051602061646d833981519152548391908e6126b9565b611cc560016000805160206164ad83398151915255565b611cd58333848e8e8e8e8e6137ad565b50505050509695505050505050565b611cec61228e565b611cf461240b565b600354611d08611d03826127b8565b6137f3565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611d3683613305565b611d3f846132f4565b6040805162ffffff93841681529290911660208301520160405180910390a250611d7660016000805160206164ad83398151915255565b565b60055460009081906001600160801b0381169060801c61077e565b60006106b460008051602061646d8339815191525490565b60006106b4600354612abb565b611dc3338383613828565b5050565b6000808080611ddf6001600160801b038716866138dd565b6003549091506000611e0f7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b90506000611e1c83612abb565b9050611e288342612ac7565b92505b62ffffff8116600090815260066020526040902054611e4b818a15612b3d565b611eb857611e598483612b6c565b935060008080611e6d8488888f898d612bf4565b919450925090508215611eb457611e848884612254565b9750611e91828d15613329565b611e9b908b616184565b9950611ea7818d613329565b611eb1908a616184565b98505b5050505b6000859003611ec75750611eff565b6000611ed38a84612eb1565b905062ffffff81161580611eeb575062ffffff818116145b15611ef7575050611eff565b915050611e2b565b611f098489613329565b9650505050509250925092565b60006117618383613555565b611f2a61228e565b6000839003611f4c5760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611f5f866138ee565b9050611f6d833389896139f6565b611f9f611f8660008051602061648d8339815191525490565b60008051602061646d833981519152548891908a6126b9565b6000806001600160a01b038916631faa6b8760e01b33611fcb60008051602061648d8339815191525490565b60008051602061646d833981519152548c888d8d604051602401611ff59796959493929190616285565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161204b91906162c6565b6000604051808303816000865af19150503d8060008114612088576040519150601f19603f3d011682016040523d82523d6000602084013e61208d565b606091505b50915091508115806120a157508051602014155b806120df57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2818060200190518101906120dc91906162e2565b14155b156120fd57604051634a57011360e01b815260040160405180910390fd5b600061213161211860008051602061648d8339815191525490565b60008051602061646d83398151915254600091906124b7565b9050612147612140868661267f565b8290613a4b565b1561216557604051630e3c717160e11b815260040160405180910390fd5b60006121718287612254565b6004839055600554909150612186908261267f565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d906121c490612abb565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a361220660016000805160206164ad83398151915255565b61221387338d8885613a8f565b5050505050505050505050565b600061069661224d7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b8390613aeb565b8082038281118061227057506001600160801b03808416908216115b156106965760405163e599af5560e01b815260040160405180910390fd5b6000805160206164ad8339815191528054600119016122c057604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561235c5761235c886379c8ccf760e01b8989898989898960405160240161230d97969594939291906162fb565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613b30565b5050505050505050565b85336123728282613555565b6123a25760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044016119e6565b61235c888888888888613b94565b60016000805160206164ad83398151915255565b750200000000000000000000000000000000000000000088161561235c5761235c886367ddb27860e01b8989898989898960405160240161230d97969594939291906162fb565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d7657604051632486085360e01b815260040160405180910390fd5b82156109265761092683634e430b5a60e01b85858560405160240161230d93929190616351565b6001600160a01b038116158061249957506001600160a01b03811630145b156119a9576040516345c210e760e11b815260040160405180910390fd5b60006124ef846111386124c985613cf7565b6124d287613cf7565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156125395761253986630d4abdb360e01b878787878760405160240161230d95949392919061636b565b505050505050565b60008061256c7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b600354909150600061257d82612abb565b905086935060005b88811015612672576000806125bb8a8d8d868181106125a6576125a66160ba565b90506020020135613d6690919063ffffffff16565b9150915060008060006125d1898886888c613daf565b919450925090506125e28a83612254565b99508362ffffff168b600001518781518110612600576126006160ba565b602002602001018181525050808b602001518781518110612623576126236160ba565b602002602001018181525050828b604001518781518110612646576126466160ba565b6020026020010181815250506126628c8562ffffff1685613fbd565b8560010195505050505050612585565b5050505095945050505050565b8181018281108061269b57506001600160801b03808416908216105b15610696576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c81156126eb576126eb6001600160a01b038616846001600160801b03851661400a565b6001600160801b03811615612539576125396001600160a01b038516846001600160801b03841661400a565b742000000000000000000000000000000000000000008616156125395761253986637a51a4c660e01b878787878760405160240161230d95949392919061636b565b61276161405b565b611d766140a9565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611761565b6000806127c483612abb565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611761565b61ffff8716158015612820575061ffff8616155b801561282e575061ffff8516155b801561283c575061ffff8416155b801561284b575062ffffff8316155b8015612859575061ffff8216155b8015612868575062ffffff8116155b15612886576040516331375e0360e11b815260040160405180910390fd5b61289688888888888888886140b1565b975060006128c27fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b905060006128d08a846141ca565b905060006128de8284614228565b6128e88385614268565b6128f291906163aa565b905067016345785d8a000081111561291d576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff19016129ca828261428c565b95945050505050565b808214611dc3576040516340311ffd60e11b815260040160405180910390fd5b600080612a008460801c90565b90506124ef81612a0f85613cf7565b612a1991906161a4565b6001600160801b031660801b90565b60006001600160801b0383166124ef81612a4185613cf7565b612a4b91906161a4565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612ab4576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612ab490869063feee373560e01b9060a40161230d565b5050505050565b600060e882901c610696565b600080612ad384613316565b612ae49064ffffffffff16846163bd565b9050612aef84613167565b61ffff168110612b3357612b02846127b8565b9350612b0d84613177565b61ffff168110612b2757612b228460006144ec565b612b30565b612b30846137f3565b93505b6124ef848461455a565b600081612b5d57612b4e8360801c90565b6001600160801b031615611761565b50506001600160801b03161590565b600080612b7884613305565b62ffffff169050600080828562ffffff1611612b9b578462ffffff168303612ba4565b828562ffffff16035b91506127108202612bb4876132f4565b62ffffff160190506000612bc7876131a8565b62ffffff169050808211612bdb5781612bdd565b805b9150612be987836141ca565b979650505050505050565b6000808080612c0862ffffff87168961299c565b90506000612c178b8915613329565b9050600088612c4257612c3d612c386001600160801b038416856080613349565b6145b3565b612c5a565b612c5a612c386001600160801b03841660808661337f565b90506000612c688c8c6133b5565b90506000612c7f6001600160801b038416836133d4565b9050612c8b8184616184565b92506000612c998a8d613329565b9050600080856001600160801b0316836001600160801b031610612cc4575084915082905085612d3a565b612cd76001600160801b038416866145dd565b91506000612ce583856161a4565b6001600160801b031690508e612d0957612d04612c388260808c614614565b612d18565b612d18612c38828b608061463e565b9150876001600160801b0316826001600160801b03161115612d38578791505b505b8d612d7457612d52836001600160801b031660801b90565b6001600160801b038216612d6f846001600160801b031660801b90565b612d9c565b6001600160801b038316612d91826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612dee612de885611138888f61267f90919063ffffffff16565b836146ac565b1115612e0d5760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061069682604e1c613fff1690565b6000816001600160801b0316600003612e4557506000610696565b6127106001600160801b038316811015612e7257604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006106968260701c620fffff1690565b600082612ec857612ec36007836146c8565b611761565b611761600783614814565b600080612edf8461309c565b90508061ffff16600003612ef65783915050611761565b6000612f028683613137565b90506000612f0f82614944565b90506000612f1c83614950565b612f299060ff16836163d0565b90508064ffffffffff16612f3c4261495f565b64ffffffffff161115612fe2576000806000612f818464ffffffffff164203612f648c612abb565b612f6d8d612ea0565b612f778e8e614987565b8a939291906149b7565b9250925092506000612f928761310a565b905064ffffffffff861642036078811115612fc2575096879006600101964295506000612fbf8c8a61341d565b9b505b612fd082868686858c614a1c565b97505050505050612fe2888585614ac0565b50949695505050505050565b6000612ffa8460801c90565b90506001600160801b03811615613028576130286001600160a01b038416836001600160801b03841661400a565b50505050565b60006001600160801b038416612ffa565b74020000000000000000000000000000000000000000851615612ab4576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612ab49086906353e8079b60e01b9060a40161230d565b60006106968260d81c61ffff1690565b6000806130b98484613137565b91506130c48261310a565b90508061ffff168361ffff1614613103576130e76130e28583613137565b61310a565b90508061ffff168361ffff16116130fe5780613100565b825b90505b9250929050565b600061ffff8216610696565b600061312182614950565b60ff1661312d83614944565b61069691906163d0565b60008161314381614aed565b8361ffff6000198501811690811061315d5761315d6160ba565b0154949350505050565b60006106968260101c610fff1690565b600061069682601c1c610fff1690565b60006106968260281c613fff1690565b60006106968260361c62ffffff1690565b600061069682605c1c620fffff1690565b6000806000806000806131cc89896130ac565b909250905064ffffffffff87166132038a6131e7848c6163ee565b61ffff1661ffff81106131fc576131fc6160ba565b0154613116565b64ffffffffff16111561322957604051631c4e7f9560e21b815260040160405180910390fd5b61323282613116565b95508664ffffffffff168664ffffffffff1611613274578561325383614b12565b61325c84614b28565b61326585614b3e565b955095509550955050506132d3565b8695506000806132868b8b8b86614b54565b9150915060008961329683613116565b6132a09190616119565b905060006132ad84613116565b6132b7908c616119565b90506132c584848484614ca6565b919a50985096505050505050505b93509350935093565b60006132e88483612ac7565b93506124ef8484612b6c565b60006106968260841c620fffff1690565b60006106968260981c62ffffff1690565b60006106968260b01c64ffffffffff1690565b60008161333a57612ec38360801c90565b6001600160801b038316611761565b600061335684848461463e565b9050600160ff83161b8061336c5761336c6160ed565b83850915611761576124ef6001826163aa565b600061338c848484614614565b9050818061339c5761339c6160ed565b600160ff85161b850915611761576124ef6001826163aa565b60006117616133c48484614228565b6133ce8585614268565b016145b3565b6000816133e081614e0a565b6001600160801b03808416670de0b6b3a76400008190039182916000199188160282010181613411576134116160ed565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611761565b60006134788484613137565b905060006134858261310a565b90508261ffff168161ffff16106134af57604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146134e05761ffff8216156134d9576134d48683613137565b6134e2565b60006134e2565b825b905060006134ef8261310a565b61ffff169050808661ffff1611613506578061350c565b8561ffff165b905061ffff83165b8561ffff1681101561353e5781888261ffff8110613534576135346160ba565b0155600101613514565b50610803878761ffff868116881890891617614ac0565b6000816001600160a01b0316836001600160a01b031614806117615750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b7440000000000000000000000000000000000000000088161561235c5761235c8863ea9db9d360e01b8989898989898960405160240161230d97969594939291906162fb565b8062ffffff8116811461360d57604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561366f57604051625b387760e31b81526001600160a01b038616600482015260248101859052604481018490526064016119e6565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c828083156136c6576136c3612c38886001600160801b03871689614e3c565b91505b6001600160801b038316156136ef576136ec612c38886001600160801b03861689614e3c565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b1981168082146137a157600083815260028701602052604081208290558190036137955750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613793578654600160ff83161b191687555b505b60019350505050610696565b50600095945050505050565b7480000000000000000000000000000000000000000088161561235c5761235c8863fdc2725760e01b8989898989898960405160240161230d97969594939291906162fb565b6000806137ff83612ea0565b62ffffff169050600061381184613187565b61ffff169050612710828202046129ca85826144ec565b826138328161247b565b826001600160a01b0316846001600160a01b03160361386f5760405163782ee70760e01b81526001600160a01b03851660048201526024016119e6565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b60008161333a57612ec38360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561394f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397391906162e2565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff906139ac90670de0b6b3a7640000908616850283015b046145b3565b92506139de670de0b6b3a764000082866001600160801b0316856001600160801b03160201816139a6576139a66160ed565b915050608081901b6001600160801b038316176129ca565b74040000000000000000000000000000000000000000841615613028576040516001600160a01b038085166024830152831660448201526064810182905261302890859063505d903360e01b9060840161230d565b60006001600160801b0383811690608085811c9185169085901c81841080612be95750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612ab4576040516001600160a01b038086166024830152841660448201526064810183905260848101829052612ab49086906360bed5f360e01b9060a40161230d565b600061271061ffff60801b608084901b1604600160801b0181613b0d82614e5c565b613b1686614e5c565b613b20919061640f565b90506129ca8162800000016135e7565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613b64573d6000803e3d6000fd5b8060005160e01c14601f3d111683169250508161302857604051636c93cb9b60e01b815260040160405180910390fd5b8281613ba082826129d3565b86613baa8161247b565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613c8e5760008a8a83818110613be957613be96160ba565b9050602002013590506000898984818110613c0657613c066160ba565b600085815260208981526040909120549102929092013592505081811015613c63578e83836040516358b4690f60e01b81526004016119e6939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613bcd565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613ce2949392919061620f565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610696906001600160a01b038416906370a0823190602401602060405180830381865afa158015613d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c3891906162e2565b6000806000806000613d7787614f69565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613dd6908b61299c565b90506000613df58962ffffff1660009081526001602052604090205490565b9050613e038389848461500c565b909650945084935062ffffff808b16908a1603613f3b57613e25878a426132dc565b96506000613e3784898e89868c615192565b90508015613f35576000613e5584613e4f8985612254565b906146ac565b90506000613e70613e658b612e1a565b849061ffff16612e2a565b90508015613e9657613e828782612254565b600554909750613e92908261267f565b6005555b6000613eb086613e4f613ea98786612254565b8a9061267f565b9050613ebd838683614e3c565b9950613ecb600a8c8f612ed3565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613f299392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b50613f46565b613f46858b8b615287565b851580613f51575083155b15613f7657604051634c98d35760e11b815262ffffff8a1660048201526024016119e6565b80600003613f8b57613f8960078a6152ed565b505b613f95838561267f565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b60008281526001602052604081208054839290613fdb9084906163aa565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613028848261537a565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611d7657604051631afcd79f60e31b815260040160405180910390fd5b6123b061405b565b60008561ffff168761ffff1611806140ce5750610fff8661ffff16115b806140de57506127108561ffff16115b806140ee57506109c48361ffff16115b806141005750620fffff8262ffffff16115b1561411e57604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff1611156141f557604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611761565b60008061423484613197565b62ffffff16905080156134165760008361ffff1661425186612ea0565b62ffffff1602905060646063828002840201613411565b60008161ffff166142788461310a565b61ffff16026402540be40002905092915050565b6000806000836000036142a85750600160801b91506106969050565b508260008112156142ba579015906000035b621000008110156144aa57600160801b9250846001600160801b038111156142e457911591600019045b60018216156142f55792830260801c925b800260801c600282161561430b5792830260801c925b800260801c60048216156143215792830260801c925b800260801c60088216156143375792830260801c925b800260801c601082161561434d5792830260801c925b800260801c60208216156143635792830260801c925b800260801c60408216156143795792830260801c925b8002608090811c908216156143905792830260801c925b800260801c6101008216156143a75792830260801c925b800260801c6102008216156143be5792830260801c925b800260801c6104008216156143d55792830260801c925b800260801c6108008216156143ec5792830260801c925b800260801c6110008216156144035792830260801c925b800260801c61200082161561441a5792830260801c925b800260801c6140008216156144315792830260801c925b800260801c6180008216156144485792830260801c925b800260801c620100008216156144605792830260801c925b800260801c620200008216156144785792830260801c925b800260801c620400008216156144905792830260801c925b800260801c620800008216156144a85792830260801c925b505b826000036144d557604051631dba598d60e11b815260048101869052602481018590526044016119e6565b816144e057826129ca565b6129ca8360001961643d565b6000620fffff8262ffffff16111561451757604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611761565b6000806145668361495f565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176124ef565b806001600160801b038116811461360d57604051632f45db3d60e21b815260040160405180910390fd5b6000816145e981614e0a565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612e969087906001901b8685856153ea565b600080600061464d8686615496565b9150915081600014614663578360ff1682901c92505b80156146a357600160ff85161b811061468f57604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c6129ca8282866154b5565b60008061ffff600884901c1660ff80851690811461471d57600082815260028701602052604081205493506146fd8483615520565b9050600019811461471b5760089290921b9091179250610696915050565b505b5060ff80821690600883901c908214614797576000818152600188016020526040812054945061474d8584615520565b9050600019811461479557600882901b8117600081815260028a0160205260409020549550935061477d8561552f565b60ff1660088560001c901b1795505050505050610696565b505b60ff81811692508214614807578654935060006147b48584615520565b9050600019811461480557600081815260018901602052604090205494509050806147de8561552f565b60ff16600883901b17600081815260028a0160205260409020549550935061477d8561552f565b505b5060009695505050505050565b60008061ffff600884901c1660ff84168015614867576000828152600287016020526040812054935061484784836155cb565b905060001981146148655760089290921b9091179250610696915050565b505b5060ff8116600882901c81156148c6576000818152600188016020526040812054945061489485846155cb565b905060001981146148c457600882901b8117600081815260028a0160205260409020549550935061477d856155db565b505b60ff811691508115614935578654935060006148e285846155cb565b90506000198114614933576000818152600189016020526040902054945090508061490c856155db565b60ff16600883901b17600081815260028a0160205260409020549550935061477d856155db565b505b5062ffffff9695505050505050565b600060d882901c610696565b60006106968260d01c60ff1690565b8064ffffffffff8116811461360d576040516350dbfc8760e11b815260040160405180910390fd5b60008061499384612abb565b90508062ffffff168362ffffff16116149ae578281036124ef565b90910392915050565b64ffffffffff841662ffffff8481168202918482168102918416026149db88614b12565b6149e59084616163565b92506149f088614b28565b6149fa9083616163565b9150614a0588614b3e565b614a0f9082616163565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612be9565b81614aca81614aed565b818461ffff60001986018116908110614ae557614ae56160ba565b015550505050565b8061ffff166000036119a95760405163944e113960e01b815260040160405180910390fd5b60006106968260101c67ffffffffffffffff1690565b60006106968260501c67ffffffffffffffff1690565b60006106968260901c67ffffffffffffffff1690565b6000808080614b64600186616451565b61ffff16905060008060008961ffff1690505b838511614c225760006001614b8c86886163aa565b901c9050888183089a508b61ffff808d16908110614bac57614bac6160ba565b01549350614bb984613116565b92508964ffffffffff168364ffffffffff161115614be357614bdc6001826163bd565b9450614c1c565b8964ffffffffff168364ffffffffff161015614c0b57614c048160016163aa565b9550614c1c565b838497509750505050505050614c9d565b50614b77565b8164ffffffffff168964ffffffffff161015614c73578961ffff16600003614c48578799505b8a61ffff6000198c018116908110614c6257614c626160ba565b015483965096505050505050614c9d565b8760018b089950828b61ffff808d16908110614c9157614c916160ba565b01549650965050505050505b94509492505050565b600080600080614cb588614b12565b67ffffffffffffffff1690506000614ccc89614b28565b67ffffffffffffffff1690506000614ce38a614b3e565b67ffffffffffffffff1690508664ffffffffff16600003614d0a5791945092509050614e00565b6000614d158a614b12565b67ffffffffffffffff1690506000614d2c8b614b28565b67ffffffffffffffff1690506000614d438c614b3e565b67ffffffffffffffff1690508a64ffffffffff16600003614d6e5791975095509350614e0092505050565b6000614d8464ffffffffff808d16908e166163aa565b9050808b64ffffffffff1685028d64ffffffffff1689020181614da957614da96160ed565b049950808b64ffffffffff1684028d64ffffffffff1688020181614dcf57614dcf6160ed565b049850808b64ffffffffff1683028d64ffffffffff1687020181614df557614df56160ed565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b031611156119a957604051638630bc6b60e01b815260040160405180910390fd5b6000806000614e4b8686615496565b91509150612e9686868685856153ea565b600081600103614e6f5750607f19919050565b81600003614e905760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614eb857506001614ed3565b5060001982600160fe1b81614ecf57614ecf6160ed565b0492505b6000614ee2607f85901c6155db565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114614f5e576f400000000000000000000000000000005b6000811315614f5c57908002607f1c90600160801b8210614f54579384019360019190911c905b60011d614f2d565b505b50500260011b919050565b60008080614f818460581c67ffffffffffffffff1690565b9250614f978460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff841180614fd25750670de0b6b3a76400008367ffffffffffffffff16115b80614fee5750670de0b6b3a76400008267ffffffffffffffff16115b1561153757604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c8261502a8383896154b5565b905080600003615044575060009350839250614c9d915050565b60006150508a896146ac565b905080158061505d575086155b156150795761506b82615676565b899550955050505050614c9d565b615084828883614e3c565b9550600061509387838a6156e8565b9050808311156151325760006150a982856163bd565b9050600160801b81106150ea57608081901c8581116150c857806150ca565b855b90506150d681876163bd565b95506150e6608082901b836163bd565b9150505b89811061511e5760006150fd8b8361643d565b905086811161510c578061510e565b865b905061511a81886163bd565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b61161516461515e8d8d61267f565b8b6146ac565b11156151835760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b6000816000036151a457506000612e96565b6001600160801b038416608085901c6000806151d661076a6151c68d8b61267f565b886151d1818c6163aa565b613693565b91509150836001600160801b0316826001600160801b0316111561523957600061521c6152038c8c6133b5565b61520d84876161a4565b6001600160801b031690615705565b9050615231816001600160801b031660801b90565b955050615279565b826001600160801b0316816001600160801b0316111561527957600061526c6152628c8c6133b5565b61520d85886161a4565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156152a35750608083901b15155b806152c857508162ffffff168162ffffff161180156152c857506001600160801b0383115b156109265760405163227bd87160e21b815262ffffff821660048201526024016119e6565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b81178082146137a1576000838152600287016020526040812082905582900361379557600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613793578654600160ff83161b1787555060019350505050610696565b600080600052602060008351602085016000875af190508080156153bb573d80156153ae57600160005114831692506153b5565b843b151592505b506153cb565b3d156153cb573d6000803e3d6000fd5b50806109265760405163197138bd60e11b815260040160405180910390fd5b60008160000361540b57838381615403576154036160ed565b0490506129ca565b83821061542b576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156154f05750808302818482816154d1576154d16160ed565b04146154f0576040516363f1e01f60e01b815260040160405180910390fd5b82156117615760809290921b91820182811015611761576040516363f1e01f60e01b815260040160405180910390fd5b60006117618360018401615746565b60008160801b801561554357608091508092505b8260401b90508015615556579150604001815b8260201b90508015615569579150602001815b8260101b9050801561557c579150601001815b8260081b9050801561558f579150600801815b8260041b905080156155a2579150600401815b8260021b905080156155b5579150600201815b508160011b156155c3576001015b60ff03919050565b6000611761836000198401615774565b60006001600160801b038211156155f45750608090811c905b67ffffffffffffffff82111561560c57604091821c91015b63ffffffff82111561562057602091821c91015b61ffff82111561563257601091821c91015b60ff82111561564357600891821c91015b600f82111561565457600491821c91015b600382111561566557600291821c91015b600182111561360d57600101919050565b60008160000361568857506000919050565b6000615693836155db565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106156e25782611761565b50919050565b60006156f5848484614e3c565b9050818061336c5761336c6160ed565b60008161571181614e0a565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a76400009190910102613411565b60ff81169190911c906000821561576a57816157618461552f565b0160ff16611761565b5060001992915050565b60ff8181031691821b91600090831561579a5780615791856155db565b60ff16036124ef565b506000199392505050565b6001600160a01b03811681146119a957600080fd5b600080604083850312156157cd57600080fd5b82356157d8816157a5565b946020939093013593505050565b60005b838110156158015781810151838201526020016157e9565b50506000910152565b60208152600082518060208401526158298160408501602087016157e6565b601f01601f19169190910160400192915050565b803562ffffff8116811461360d57600080fd5b60006020828403121561586257600080fd5b6117618261583d565b60008083601f84011261587d57600080fd5b50813567ffffffffffffffff81111561589557600080fd5b6020830191508360208260051b850101111561310357600080fd5b600080600080600080608087890312156158c957600080fd5b86356158d4816157a5565b955060208701356158e4816157a5565b9450604087013567ffffffffffffffff8082111561590157600080fd5b61590d8a838b0161586b565b9096509450606089013591508082111561592657600080fd5b5061593389828a0161586b565b979a9699509497509295939492505050565b60008083601f84011261595757600080fd5b50813567ffffffffffffffff81111561596f57600080fd5b60208301915083602082850101111561310357600080fd5b60008060006040848603121561599c57600080fd5b83359250602084013567ffffffffffffffff8111156159ba57600080fd5b6159c686828701615945565b9497909650939450505050565b600080600080606085870312156159e957600080fd5b84356159f4816157a5565b9350602085013567ffffffffffffffff811115615a1057600080fd5b615a1c8782880161586b565b9094509250506040850135615a30816157a5565b939692955090935050565b600081518084526020808501945080840160005b83811015615a6b57815187529582019590820190600101615a4f565b509495945050505050565b8381528260208201526060604082015260006129ca6060830184615a3b565b803561ffff8116811461360d57600080fd5b600080600080600080600080610100898b031215615ac457600080fd5b615acd89615a95565b9750615adb60208a01615a95565b9650615ae960408a01615a95565b9550615af760608a01615a95565b9450615b0560808a0161583d565b9350615b1360a08a01615a95565b9250615b2160c08a0161583d565b9150615b2f60e08a0161583d565b90509295985092959890939650565b60008060008060408587031215615b5457600080fd5b843567ffffffffffffffff80821115615b6c57600080fd5b615b788883890161586b565b90965094506020870135915080821115615b9157600080fd5b50615b9e8782880161586b565b95989497509550505050565b6020815260006117616020830184615a3b565b8035801515811461360d57600080fd5b60008060408385031215615be057600080fd5b615be983615bbd565b91506020830135615bf9816157a5565b809150509250929050565b600080600080600080600060e0888a031215615c1f57600080fd5b615c2888615a95565b9650615c3660208901615a95565b9550615c4460408901615a95565b9450615c5260608901615a95565b9350615c606080890161583d565b9250615c6e60a08901615a95565b9150615c7c60c0890161583d565b905092959891949750929550565b600060208284031215615c9c57600080fd5b813564ffffffffff8116811461176157600080fd5b60008060408385031215615cc457600080fd5b615ccd83615bbd565b91506131006020840161583d565b60008060408385031215615cee57600080fd5b82356001600160801b0381168114615d0557600080fd5b915061310060208401615bbd565b600060208284031215615d2557600080fd5b5035919050565b600060208284031215615d3e57600080fd5b61176182615a95565b60008060408385031215615d5a57600080fd5b8235615d05816157a5565b60008060408385031215615d7857600080fd5b8235615be9816157a5565b60008060008060608587031215615d9957600080fd5b8435615da4816157a5565b935060208501359250604085013567ffffffffffffffff811115615dc757600080fd5b615b9e87828801615945565b600181811c90821680615de757607f821691505b6020821081036156e257634e487b7160e01b600052602260045260246000fd5b600060208284031215615e1957600080fd5b8151611761816157a5565b634e487b7160e01b600052604160045260246000fd5b604081526000615e4d6040830185615a3b565b82810360208401526129ca8185615a3b565b600060208284031215615e7157600080fd5b815167ffffffffffffffff80821115615e8957600080fd5b818401915084601f830112615e9d57600080fd5b815181811115615eaf57615eaf615e24565b604051601f8201601f19908116603f01168101908382118183101715615ed757615ed7615e24565b81604052828152876020848701011115615ef057600080fd5b612be98360208301602088016157e6565b7f4c697175696469747920426f6f6b20546f6b656e200000000000000000000000815260008351615f398160158501602088016157e6565b6201016960ed1b6015918401918201528351615f5c8160188401602088016157e6565b01601801949350505050565b601f82111561092657600081815260208120601f850160051c81016020861015615f8f5750805b601f850160051c820191505b8181101561253957828155600101615f9b565b815167ffffffffffffffff811115615fc857615fc8615e24565b615fdc81615fd68454615dd3565b84615f68565b602080601f8311600181146160115760008415615ff95750858301515b600019600386901b1c1916600185901b178555612539565b600085815260208120601f198616915b8281101561604057888601518255948401946001909101908401616021565b508582101561605e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b81526000835161608d8160048501602088016157e6565b602d60f81b60049184019182015283516160ae8160058401602088016157e6565b01600501949350505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156160e257600080fd5b8135611761816157a5565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff82811682821603908082111561341657613416616103565b67ffffffffffffffff81811683821602808216919082811461615b5761615b616103565b505092915050565b67ffffffffffffffff81811683821601908082111561341657613416616103565b6001600160801b0381811683821601908082111561341657613416616103565b6001600160801b0382811682821603908082111561341657613416616103565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156161f657600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006162236040830186886161c4565b8281036020840152612be98185876161c4565b60408152600061624a6040830185876161c4565b8281036020840152612e968185615a3b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a08301526141bd60c08301848661625c565b600082516162d88184602087016157e6565b9190910192915050565b6000602082840312156162f457600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a0606083015261633060a0830186886161c4565b82810360808401526163438185876161c4565b9a9950505050505050505050565b8381526040602082015260006129ca60408301848661625c565b60006001600160a01b038088168352808716602084015250608060408301526163986080830185876161c4565b90508260608301529695505050505050565b8082018082111561069657610696616103565b8181038181111561069657610696616103565b64ffffffffff81811683821601908082111561341657613416616103565b600061ffff80841680616403576164036160ed565b92169190910692915050565b60008261641e5761641e6160ed565b600160ff1b82146000198414161561643857616438616103565b500590565b60008261644c5761644c6160ed565b500490565b61ffff8281168282160390808211156134165761341661610356fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582643441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122022e41827a1d530f291cb2c5caf2ee6c94f69297e4c61c802092d1636b82dde8064736f6c63430008140033608060405234801561001057600080fd5b5060405161091738038061091783398101604081905261002f916101a2565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a816100b6565b5061007482610106565b50506001600160a01b0382161561008e5761008e826100b6565b600380546001600160a01b0319166001600160a01b0392909216919091179055506101e59050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b60000361013c5760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461019d57600080fd5b919050565b6000806000606084860312156101b757600080fd5b6101c084610186565b92506101ce60208501610186565b91506101dc60408501610186565b90509250925092565b610723806101f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73576a05e4080c23a653c3c2240da4437e83dd50bf81565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73576a05e4080c23a653c3c2240da4437e83dd50bf6105b2565b600073576a05e4080c23a653c3c2240da4437e83dd50bf6105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea2646970667358221220040315c1d734cc32caf9162268b5a371b13992b3cfa9f9c500ea1c348c4536b964736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004e7238038062004e7283398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614c31620002416000396000818161019f015281816102fe01528181610602015281816106e0015281816107bc015281816108ff01528181610c8c015281816113c20152818161145e015281816115c5015281816116480152818161198b01528181611c2001528181611f090152818161286201528181612c010152612c7f0152600081816104b00152613b8101526000818161037b0152818161104d015281816111fa01528181612103015261345d0152614c316000f3fe60806040526004361061018f5760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc14610514578063e9361c0814610527578063f96fe9251461054757600080fd5b8063bb558a9f146104a1578063c22159b6146104d4578063d0e380f2146104f457600080fd5b8063a0d376cf116100b0578063a0d376cf1461044e578063a3c7271a1461046e578063b066ea7c1461048e57600080fd5b806392fe8e70146103c4578063964f987c146103e45780639ab6156b1461042e57600080fd5b8063659ac74b1161013857806381c2fdfb1161011257806381c2fdfb1461033757806388cc58e41461036c5780638efc2b2c1461039f57600080fd5b8063659ac74b146102b75780636c9c0078146102ef5780638129fc1c1461032257600080fd5b80633dc8f8ec116101695780633dc8f8ec146102575780634b8018701461027757806362c067671461029757600080fd5b80631a24f9a9146101e45780632075ad22146102175780632a443fae1461023757600080fd5b366101df57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd57604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101f057600080fd5b506102046101ff36600461414d565b61057b565b6040519081526020015b60405180910390f35b61022a6102253660046141b8565b61087d565b60405161020e9190614254565b34801561024357600080fd5b5061020461025236600461414d565b610add565b34801561026357600080fd5b5061022a61027236600461414d565b610c0a565b34801561028357600080fd5b5061020461029236600461414d565b610e10565b3480156102a357600080fd5b506101dd6102b2366004614267565b61104b565b3480156102c357600080fd5b506102d76102d23660046142d4565b6111bb565b6040516001600160a01b03909116815260200161020e565b3480156102fb57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561032e57600080fd5b506101dd611272565b34801561034357600080fd5b50610357610352366004614330565b61138c565b6040805192835260208301919091520161020e565b34801561037857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b6103b26103ad3660046143eb565b6114e5565b60405161020e9695949392919061442e565b3480156103d057600080fd5b5061022a6103df36600461414d565b611734565b3480156103f057600080fd5b506104046103ff36600461449b565b611879565b604080516001600160801b039485168152928416602084015292169181019190915260600161020e565b34801561043a57600080fd5b5061020461044936600461414d565b611909565b34801561045a57600080fd5b5061040461046936600461449b565b611a7d565b34801561047a57600080fd5b506103b26104893660046143eb565b611ac1565b61020461049c3660046141b8565b611b9e565b3480156104ad57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156104e057600080fd5b506103576104ef3660046144e6565b611d18565b34801561050057600080fd5b5061020461050f3660046145ae565b611e0e565b6102046105223660046141b8565b611e87565b34801561053357600080fd5b506101dd610542366004614633565b612101565b34801561055357600080fd5b506105676105623660046146c8565b612224565b60405162ffffff909116815260200161020e565b600081804211156105ad5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105c5575080515160208201515114155b806105e257506040810151518151516105df90600161470a565b14155b156106005760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106106455761064561471d565b60200260200101516001600160a01b0316146106a4576040860151865151815181106106735761067361471d565b602002602001015160405163cfec0e0160e01b81526004016105a491906001600160a01b0391909116815260200190565b60006106bd876000015188602001518960400151612290565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190614733565b905061079188604001516000815181106107675761076761471d565b602002602001015133846000815181106107835761078361471d565b60200260200101518d6123a0565b6107a58289602001518a60400151306123c1565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190614733565b610839919061474c565b945084891115610866576040516313fab00360e21b8152600481018a9052602481018690526044016105a4565b6108708786612840565b5050505095945050505050565b606081804211156108aa5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b845151859015806108c2575080515160208201515114155b806108df57506040810151518151516108dc90600161470a565b14155b156108fd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061093e5761093e61471d565b60200260200101516001600160a01b03161461096b5785604001516000815181106106735761067361471d565b6000610984876000015188602001518960400151612290565b905061099a87602001518289604001518b6128d4565b935034846000815181106109b0576109b061471d565b602002602001015111156109fe5734846000815181106109d2576109d261471d565b602002602001015160405163194ee21960e31b81526004016105a4929190918252602082015260400190565b610a3c81600081518110610a1457610a1461471d565b602002602001015185600081518110610a2f57610a2f61471d565b6020026020010151612bf3565b6000610a538289602001518a60400151888b612caa565b905088811015610a80576040516313fab00360e21b8152600481018a9052602481018290526044016105a4565b84600081518110610a9357610a9361471d565b6020026020010151341115610ad157610ad13386600081518110610ab957610ab961471d565b602002602001015134610acc919061474c565b612fc7565b50505050949350505050565b60008180421115610b0a5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610b22575080515160208201515114155b80610b3f5750604081015151815151610b3c90600161470a565b14155b15610b5d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b76876000015188602001518960400151612290565b9050610bbc8760400151600081518110610b9257610b9261471d565b60200260200101513383600081518110610bae57610bae61471d565b60200260200101518c6123a0565b610bd1898289602001518a604001518a613059565b935083881115610bfe576040516313fab00360e21b815260048101899052602481018590526044016105a4565b50505095945050505050565b60608180421115610c375760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610c4f575080515160208201515114155b80610c6c5750604081015151815151610c6990600161470a565b14155b15610c8a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610ccf57610ccf61471d565b60200260200101516001600160a01b031614610cfd576040860151865151815181106106735761067361471d565b6000610d16876000015188602001518960400151612290565b9050610d2c87602001518289604001518c6128d4565b93508784600081518110610d4257610d4261471d565b60200260200101511115610d645787846000815181106109d2576109d261471d565b610dc28760400151600081518110610d7e57610d7e61471d565b60200260200101513383600081518110610d9a57610d9a61471d565b602002602001015187600081518110610db557610db561471d565b60200260200101516123a0565b6000610dd98289602001518a604001518830612caa565b905089811015610e06576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b6108708782612840565b60008180421115610e3d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610e55575080515160208201515114155b80610e725750604081015151815151610e6f90600161470a565b14155b15610e905760405163b91b4d4d60e01b815260040160405180910390fd5b6000610ea9876000015188602001518960400151612290565b905060008760400151825181518110610ec457610ec461471d565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190614733565b9050610f858960400151600081518110610f5b57610f5b61471d565b60200260200101513385600081518110610f7757610f7761471d565b60200260200101518e6123a0565b610f99838a602001518b604001518b6123c1565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190614733565b611010919061474c565b9550858a111561103d576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd919061475f565b6001600160a01b0316336001600160a01b0316146110fe57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661112e57600019811461111b578061111d565b475b90506111298282612fc7565b505050565b600019811461113d57806111a5565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a59190614733565b90506111296001600160a01b03841683836133c6565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611269919061475f565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156112bd5750825b905060008267ffffffffffffffff1660011480156112da5750303b155b9050811580156112e8575080155b156113065760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561133a57845468ff00000000000000001916680100000000000000001785555b831561138557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60008082804211156113ba5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b60006113ed8c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff16600161342c565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611453919061475f565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611492579899985b6000806114a3848e8e8e8e30613519565b91509150826114b35780826114b6565b81815b80975081985050505050506114cc8c878661367b565b6114d68684612840565b50509850989650505050505050565b60008080806060808261151a6114fe60208a018a61477c565b61150e60408b0160208c0161477c565b8a60400135600161342c565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e919061475f565b6001600160a01b031661159460208a018a61477c565b6001600160a01b0316146115bb5760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115f260208a018a61477c565b6001600160a01b031614801561160b5750348860600135145b1561163e5761162f61162360408a0160208b0161477c565b33838b608001356123a0565b6116398134612bf3565b611715565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661167860408a0160208b0161477c565b6001600160a01b03161480156116915750348860800135145b156116b25761162f6116a660208a018a61477c565b33838b606001356123a0565b6116bf602089018961477c565b6116cf60408a0160208b0161477c565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a4016105a4565b61171f888261369c565b949d939c50919a509850965090945092505050565b606081804211156117615760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611779575080515160208201515114155b80611796575060408101515181515161179390600161470a565b14155b156117b45760405163b91b4d4d60e01b815260040160405180910390fd5b60006117cd876000015188602001518960400151612290565b90506117e387602001518289604001518c6128d4565b935087846000815181106117f9576117f961471d565b6020026020010151111561181b5787846000815181106109d2576109d261471d565b6118358760400151600081518110610d7e57610d7e61471d565b600061184c8289602001518a60400151888b612caa565b905089811015610870576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190614799565b91989097509095509350505050565b600081804211156119365760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b8451518590158061194e575080515160208201515114155b8061196b575060408101515181515161196890600161470a565b14155b156119895760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106119ce576119ce61471d565b60200260200101516001600160a01b0316146119fc576040860151865151815181106106735761067361471d565b6000611a15876000015188602001518960400151612290565b9050611a318760400151600081518110610b9257610b9261471d565b611a46898289602001518a6040015130613059565b935083881115611a73576040516313fab00360e21b815260048101899052602481018590526044016105a4565b610bfe8685612840565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f8906044016118b9565b600080808060608082611ada6114fe60208a018a61477c565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3e919061475f565b6001600160a01b0316611b5460208a018a61477c565b6001600160a01b031614611b7b5760405163b33f8ab960e01b815260040160405180910390fd5b611b8b6116a660208a018a61477c565b61171561162360408a0160208b0161477c565b60008180421115611bcb5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611be3575080515160208201515114155b80611c005750604081015151815151611bfd90600161470a565b14155b15611c1e5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611c5f57611c5f61471d565b60200260200101516001600160a01b031614611c8c5785604001516000815181106106735761067361471d565b6000611ca5876000015188602001518960400151612290565b9050611ccb81600081518110611cbd57611cbd61471d565b602002602001015134612bf3565b611ce0348289602001518a604001518a613059565b935083881115611d0d576040516313fab00360e21b815260048101899052602481018590526044016105a4565b505050949350505050565b6000808280421115611d465760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6000611d598d8d8d61ffff16600161342c565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbf919061475f565b6001600160a01b03168e6001600160a01b0316141590508015611de0579899985b611dee828c8c8c8c8c613519565b90955093508015611dfd579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190614733565b90505b92915050565b60008180421115611eb45760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611ecc575080515160208201515114155b80611ee95750604081015151815151611ee690600161470a565b14155b15611f075760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611f4857611f4861471d565b60200260200101516001600160a01b031614611f755785604001516000815181106106735761067361471d565b6000611f8e876000015188602001518960400151612290565b905060008760400151825181518110611fa957611fa961471d565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015612000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120249190614733565b905061203c83600081518110611cbd57611cbd61471d565b612050838a602001518b604001518b6123c1565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd9190614733565b6120c7919061474c565b9550858a11156120f4576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612183919061475f565b6001600160a01b0316336001600160a01b0316146121b457604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906121ea90309089908990899089908990600401614826565b600060405180830381600087803b15801561220457600080fd5b505af1158015612218573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa15801561226c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190614866565b6060835167ffffffffffffffff8111156122ac576122ac613ecb565b6040519080825280602002602001820160405280156122d5578160200160208202803683370190505b509050600080836000815181106122ee576122ee61471d565b6020026020010151905060005b83518110156123965781925084816001018151811061231c5761231c61471d565b60200260200101519150612364838389848151811061233d5761233d61471d565b60200260200101518985815181106123575761235761471d565b6020026020010151613b40565b8482815181106123765761237661471d565b6001600160a01b03909216602092830291909101909101526001016122fb565b5050509392505050565b80156123bb576123bb6001600160a01b038516848484613c40565b50505050565b6000806000806000866000815181106123dc576123dc61471d565b6020026020010151905060005b8951811015612218578981815181106124045761240461471d565b602002602001015192508881815181106124205761242061471d565b602002602001015194508195508781600101815181106124425761244261471d565b60200260200101519150895181600101146124795789816001018151811061246c5761246c61471d565b602002602001015161247b565b865b9350600085600181111561249157612491614883565b0361273757600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156124d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fb91906148b0565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015612630576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa158015612577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259b9190614733565b03905060006125ab828585613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561261157600080fd5b505af1158015612625573d6000803e3d6000fd5b505050505050612730565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa15801561267b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269f9190614733565b03905060006126af828486613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561271557600080fd5b505af1158015612729573d6000803e3d6000fd5b5050505050505b5050612838565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a8919061475f565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af1158015612812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128369190614733565b505b6001016123e9565b8060000361284c575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156128ae57600080fd5b505af11580156128c2573d6000803e3d6000fd5b505050506128d08282612fc7565b5050565b6060825167ffffffffffffffff8111156128f0576128f0613ecb565b604051908082528060200260200182016040528015612919578160200160208202803683370190505b50905081818551815181106129305761293061471d565b602090810291909101015283515b8015612bea5760008461295260018461474c565b815181106129625761296261471d565b6020026020010151905060008760018461297c919061474c565b8151811061298c5761298c61471d565b602002602001015190506000876001856129a6919061474c565b815181106129b6576129b661471d565b60200260200101519050600060018111156129d3576129d3614883565b8260018111156129e5576129e5614883565b03612b0757600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4f91906148b0565b506001600160701b031691506001600160701b03169150888681518110612a7857612a7861471d565b60200260200101516001600160a01b0316856001600160a01b03161115612a9b57905b6000878781518110612aaf57612aaf61471d565b60200260200101519050612ace838383613d489092919063ffffffff16565b6001600160801b031688612ae360018a61474c565b81518110612af357612af361471d565b602002602001018181525050505050612bd4565b612ba081868681518110612b1d57612b1d61471d565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b91919061475f565b6001600160a01b031614611879565b50506001600160801b031685612bb760018761474c565b81518110612bc757612bc761471d565b6020026020010181815250505b5050508080612be2906148f5565b91505061293e565b50949350505050565b80600003612bff575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c5a57600080fd5b505af1158015612c6e573d6000803e3d6000fd5b506128d09350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150849050836133c6565b60008060008060008088600081518110612cc657612cc661471d565b6020026020010151905060005b8b51811015612fb8578b8181518110612cee57612cee61471d565b602002602001015193508a8181518110612d0a57612d0a61471d565b60200260200101519250819550898160010181518110612d2c57612d2c61471d565b602002602001015191508b518160010114612d63578b8160010181518110612d5657612d5661471d565b6020026020010151612d65565b875b94506000836001811115612d7b57612d7b614883565b03612e8657888160010181518110612d9557612d9561471d565b60200260200101519650816001600160a01b0316866001600160a01b03161015612e395760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b50505050612fb0565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612e02565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eea919061475f565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612f84918916906353c059a0906044015b6020604051808303816000875af1158015612f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f709190614733565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612fa857809950612fac565b8199505b5050505b600101612cd3565b50505050505095945050505050565b80600003612fd3575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613020576040519150601f19603f3d011682016040523d82523d6000602084013e613025565b606091505b50509050806111295760405163047b96f760e41b81526001600160a01b0384166004820152602481018390526044016105a4565b600080600080600080876000815181106130755761307561471d565b602002602001015190508a955060005b8a51811015612fb8578a81815181106130a0576130a061471d565b602002602001015192508981815181106130bc576130bc61471d565b602002602001015194508195508881600101815181106130de576130de61471d565b602002602001015191508a518160010114613115578a81600101815181106131085761310861471d565b6020026020010151613117565b875b9350600085600181111561312d5761312d614883565b036132e757600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319791906148b0565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015613256576131d3898383613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561323957600080fd5b505af115801561324d573d6000803e3d6000fd5b505050506132e0565b613261898284613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156132c757600080fd5b505af11580156132db573d6000803e3d6000fd5b505050505b50506133be565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061334b919061475f565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052878316602483015292506000918291613392918816906353c059a090604401612f2d565b6001600160801b031691506001600160801b0316915082156133b6578099506133ba565b8199505b5050505b600101613085565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123bb8482613de7565b60405163704037bd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa1580156134a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134ca919061490c565b6020015190506001600160a01b03811661351157604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b949350505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b81526004016135509493929190614991565b6000604051808303816000875af115801561356f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261359791908101906149cf565b905060005b815181101561362b576135ce8282815181106135ba576135ba61471d565b60200260200101516001600160801b031690565b6135e1906001600160801b03168561470a565b93506136068282815181106135f8576135f861471d565b602002602001015160801c90565b613619906001600160801b03168461470a565b925061362481614a55565b905061359c565b508783108061363957508682105b1561366f576040516318ccfb7760e11b8152600481018990526024810184905260448101889052606481018390526084016105a4565b50965096945050505050565b8060000361368857505050565b6111296001600160a01b03841683836133c6565b600080600080606080876101c00135804211156136d55760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6136e36101408a018a614a6e565b90506136f36101208b018b614a6e565b9050141580613720575061370b6101608a018a614a6e565b905061371b6101208b018b614a6e565b905014155b1561373e5760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a0135118061375a575062ffffff6101008a0135115b156137895760405163197a55c760e11b815260e08a013560048201526101008a013560248201526044016105a4565b60006137996101208b018b614a6e565b905067ffffffffffffffff8111156137b3576137b3613ecb565b6040519080825280602002602001820160405280156137dc578160200160208202803683370190505b5090506137ed6101208b018b614a6e565b905067ffffffffffffffff81111561380757613807613ecb565b604051908082528060200260200182016040528015613830578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138979190614866565b62ffffff169050808b61010001358c60e001350110806138c157508a60e001358b61010001358201105b156138f757604051637d50edab60e11b815260e08c013560048201526101008c01356024820152604481018290526064016105a4565b60005b82518110156139fa5760006139136101208e018e614a6e565b838181106139235761392361471d565b9050602002013583019050600081128061393f575062ffffff81115b15613960576040516370a82e6160e11b8152600481018290526024016105a4565b808783815181106139735761397361471d565b60209081029190910101526139d461398f6101408f018f614a6e565b8481811061399f5761399f61471d565b905060200201358e8061016001906139b79190614a6e565b858181106139c7576139c761471d565b9050602002013583613e57565b8483815181106139e6576139e661471d565b6020908102919091010152506001016138fa565b50506000808a6001600160a01b031663383d15c58d610180016020810190613a22919061477c565b858f6101a0016020810190613a37919061477c565b6040518463ffffffff1660e01b8152600401613a5593929190614ab8565b6000604051808303816000875af1158015613a74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a9c9190810190614b1c565b965090925090506000613aaf8383613e91565b6001600160801b0381169b50608081901c9a50905060a08d01358b1080613ad957508c60c001358a105b15613b15576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b90526084016105a4565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613b5557613b55614883565b03613c345760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bec919061475f565b90506001600160a01b038116613c2f57604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b613511565b6112698585858561342c565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526113858582613de7565b600083600003613cd15760405163b937356b60e01b815260040160405180910390fd5b821580613cdc575081155b15613cfa57604051637b03555560e01b815260040160405180910390fd5b6000613d08856103e5614bc2565b90506000613d168483614bc2565b9050600082613d27876103e8614bc2565b613d31919061470a565b9050613d3d8183614bd9565b979650505050505050565b600083600003613d6b5760405163b937356b60e01b815260040160405180910390fd5b821580613d76575081155b15613d9457604051637b03555560e01b815260040160405180910390fd5b6000613da08585614bc2565b613dac906103e8614bc2565b90506000613dba868561474c565b613dc6906103e5614bc2565b9050613dd28183614bd9565b613ddd90600161470a565b9695505050505050565b600080600052602060008351602085016000875af19050808015613e28573d8015613e1b5760016000511483169250613e22565b843b151592505b50613e38565b3d15613e38573d6000803e3d6000fd5b50806111295760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff82168117613511565b80820382811180613ead57506001600160801b03808416908216115b15611e815760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613f0457613f04613ecb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613f3357613f33613ecb565b604052919050565b600067ffffffffffffffff821115613f5557613f55613ecb565b5060051b60200190565b600082601f830112613f7057600080fd5b81356020613f85613f8083613f3b565b613f0a565b82815260059290921b84018101918181019086841115613fa457600080fd5b8286015b84811015613fbf5780358352918301918301613fa8565b509695505050505050565b6001600160a01b0381168114613fdf57600080fd5b50565b8035613fed81613fca565b919050565b600082601f83011261400357600080fd5b81356020614013613f8083613f3b565b82815260059290921b8401810191818101908684111561403257600080fd5b8286015b84811015613fbf57803561404981613fca565b8352918301918301614036565b60006060828403121561406857600080fd5b614070613ee1565b9050813567ffffffffffffffff8082111561408a57600080fd5b61409685838601613f5f565b83526020915081840135818111156140ad57600080fd5b8401601f810186136140be57600080fd5b80356140cc613f8082613f3b565b81815260059190911b820184019084810190888311156140eb57600080fd5b928501925b82841015614117578335600281106141085760008081fd5b825292850192908501906140f0565b808688015250505050604084013591508082111561413457600080fd5b5061414184828501613ff2565b60408301525092915050565b600080600080600060a0868803121561416557600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561418a57600080fd5b61419688828901614056565b93505060608601356141a781613fca565b949793965091946080013592915050565b600080600080608085870312156141ce57600080fd5b84359350602085013567ffffffffffffffff8111156141ec57600080fd5b6141f887828801614056565b935050604085013561420981613fca565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156142495781518752958201959082019060010161422d565b509495945050505050565b602081526000611e7e6020830184614219565b60008060006060848603121561427c57600080fd5b833561428781613fca565b9250602084013561429781613fca565b929592945050506040919091013590565b62ffffff81168114613fdf57600080fd5b61ffff81168114613fdf57600080fd5b8035613fed816142b9565b600080600080608085870312156142ea57600080fd5b84356142f581613fca565b9350602085013561430581613fca565b92506040850135614315816142a8565b91506060850135614325816142b9565b939692955090935050565b600080600080600080600080610100898b03121561434d57600080fd5b883561435881613fca565b97506020890135614368816142b9565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561439357600080fd5b61439f8c838d01613f5f565b955060a08b01359150808211156143b557600080fd5b506143c28b828c01613f5f565b93505060c08901356143d381613fca565b8092505060e089013590509295985092959890939650565b6000602082840312156143fd57600080fd5b813567ffffffffffffffff81111561441457600080fd5b82016101e0818503121561442757600080fd5b9392505050565b86815285602082015284604082015283606082015260c06080820152600061445960c0830185614219565b82810360a084015261446b8185614219565b9998505050505050505050565b6001600160801b0381168114613fdf57600080fd5b8015158114613fdf57600080fd5b6000806000606084860312156144b057600080fd5b83356144bb81613fca565b925060208401356144cb81614478565b915060408401356144db8161448d565b809150509250925092565b60008060008060008060008060006101208a8c03121561450557600080fd5b893561451081613fca565b985060208a013561452081613fca565b975061452e60408b016142c9565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561455957600080fd5b6145658d838e01613f5f565b955060c08c013591508082111561457b57600080fd5b506145888c828d01613f5f565b93505061459760e08b01613fe2565b91506101008a013590509295985092959850929598565b600080604083850312156145c157600080fd5b82356145cc81613fca565b915060208301356145dc816142a8565b809150509250929050565b60008083601f8401126145f957600080fd5b50813567ffffffffffffffff81111561461157600080fd5b6020830191508360208260051b850101111561462c57600080fd5b9250929050565b6000806000806000806080878903121561464c57600080fd5b863561465781613fca565b9550602087013561466781613fca565b9450604087013567ffffffffffffffff8082111561468457600080fd5b6146908a838b016145e7565b909650945060608901359150808211156146a957600080fd5b506146b689828a016145e7565b979a9699509497509295939492505050565b600080604083850312156146db57600080fd5b82356146e681613fca565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e8157611e816146f4565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561474557600080fd5b5051919050565b81810381811115611e8157611e816146f4565b60006020828403121561477157600080fd5b815161442781613fca565b60006020828403121561478e57600080fd5b813561442781613fca565b6000806000606084860312156147ae57600080fd5b83516147b981614478565b60208501519093506147ca81614478565b60408501519092506144db81614478565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561480d57600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b038089168352808816602084015250608060408301526148536080830186886147db565b828103606084015261446b8185876147db565b60006020828403121561487857600080fd5b8151614427816142a8565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613fed57600080fd5b6000806000606084860312156148c557600080fd5b6148ce84614899565b92506148dc60208501614899565b9150604084015163ffffffff811681146144db57600080fd5b600081614904576149046146f4565b506000190190565b60006080828403121561491e57600080fd5b6040516080810181811067ffffffffffffffff8211171561494157614941613ecb565b604052825161494f816142b9565b8152602083015161495f81613fca565b602082015260408301516149728161448d565b604082015260608301516149858161448d565b60608201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526149bd6080830185614219565b8281036060840152613d3d8185614219565b600060208083850312156149e257600080fd5b825167ffffffffffffffff8111156149f957600080fd5b8301601f81018513614a0a57600080fd5b8051614a18613f8082613f3b565b81815260059190911b82018301908381019087831115614a3757600080fd5b928401925b82841015613d3d57835182529284019290840190614a3c565b600060018201614a6757614a676146f4565b5060010190565b6000808335601e19843603018112614a8557600080fd5b83018035915067ffffffffffffffff821115614aa057600080fd5b6020019150600581901b360382131561462c57600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015614b0357855183529483019491830191600101614ae7565b5050809450505080851660408501525050949350505050565b600080600060608486031215614b3157600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614b5757600080fd5b8501601f81018713614b6857600080fd5b8051614b76613f8082613f3b565b81815260059190911b82018301908381019089831115614b9557600080fd5b928401925b82841015614bb357835182529284019290840190614b9a565b80955050505050509250925092565b8082028115828204841417611e8157611e816146f4565b600082614bf657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207e9d01fc860e5f66611c55f5d328d5c94eed1101c3e84e9bdd64b7604c76cfab64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220280ce5c3a51df51d3532758a7092160825971fe28e518b459a6000be2ec6a44064736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31a264697066735822122056cd070d072103f71db12c4ceb1f05f138b75a10243956bd9345eaea55f67ad164736f6c63430008140033",
    "sourceMap": "555:19551:138:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6366:149:140;;;;;;;;;;-1:-1:-1;6366:149:140;;;;;:::i;:::-;-1:-1:-1;;;;;;6467:41:140;-1:-1:-1;;;6467:41:140;;6366:149;;;;470:14:169;;463:22;445:41;;433:2;418:18;6366:149:140;;;;;;;;1791:273:138;;;;;;;;;;;;;:::i;:::-;;611:1174;;;;;;;;;;;;;:::i;2907:134:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3823:151::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17182:2456:138:-;;;;;;;;;;;;;:::i;6465:2158::-;;;;;;;;;;;;;:::i;3684:133:6:-;;;;;;;;;;;;;:::i;14738:2438:138:-;;;;;;;;;;;;;:::i;3385:141:6:-;;;;;;;;;;;;;:::i;4279:2180:138:-;;;;;;;;;;;;;:::i;12786:168:140:-;;;;;;;;;;-1:-1:-1;12786:168:140;;;;;:::i;:::-;;:::i;:::-;;;4180:25:169;;;4168:2;4153:18;12786:168:140;4034:177:169;3193:186:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10409:2113:138:-;;;;;;;;;;;;;:::i;2070:2203::-;;;;;;;;;;;;;:::i;8629:1774::-;;;;;;;;;;;;;:::i;3047:140:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12960:205:140:-;;;;;;;;;;-1:-1:-1;12960:205:140;;;;;:::i;:::-;;:::i;:::-;;;7366:8:169;7354:21;;;7336:40;;7324:2;7309:18;12960:205:140;7192:190:169;12528:2204:138;;;;;;;;;;;;;:::i;3532:146:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10811:1171:140:-;;;;;;;;;;-1:-1:-1;10811:1171:140;;;;;:::i;:::-;;:::i;2754:147:6:-;;;;;;;;;;;;;:::i;2459:141::-;;;;;;;;;;;;;:::i;13171:134:140:-;;;;;;;;;;-1:-1:-1;13171:134:140;;;;;:::i;:::-;;:::i;1243:204:2:-;;;;;;;;;;;;;:::i;2606:142:6:-;;;;;;;;;;;;;:::i;1016:26:13:-;;;;;;;;;;-1:-1:-1;1016:26:13;;;;;;;;11988:792:140;;;;;;;;;;-1:-1:-1;11988:792:140;;;;;:::i;:::-;;:::i;1791:273:138:-;1859:7;;1888:4;;1894;;1859:58;;-1:-1:-1;;;1859:58:138;;-1:-1:-1;;;;;1888:4:138;;;1859:58;;;11192:34:169;1894:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;1844:12:138;;1859:7;;;;;:28;;11104:18:169;;1859:58:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;1935:6;;:68;;-1:-1:-1;;;1935:68:138;;-1:-1:-1;;;;;12999:55:169;;;1935:68:138;;;12981:74:169;1963:39:138;13071:18:169;;;13064:34;1859:65:138;;-1:-1:-1;1935:6:138;;;:21;;12954:18:169;;1935:68:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2014:6:138;;-1:-1:-1;;;;;2014:6:138;:21;2036:4;2042:14;1185:7:140;2042:5:138;:14;:::i;:::-;2014:43;;-1:-1:-1;;;;;;2014:43:138;;;;;;;-1:-1:-1;;;;;13877:55:169;;;2014:43:138;;;13859:74:169;13981:8;13969:21;13949:18;;;13942:49;13832:18;;2014:43:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1834:230;1791:273::o;611:1174::-;654:13;:11;:13::i;:::-;678:7;;:50;;-1:-1:-1;;;678:50:138;;1340:2:140;678:50:138;;;14357:38:169;678:7:138;14411:18:169;;;14404:50;-1:-1:-1;;;;;678:7:138;;;;:26;;14330:18:169;;678:50:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;773:6:138;;793:4;;799;;773:57;;-1:-1:-1;;;773:57:138;;-1:-1:-1;;;;;793:4:138;;;773:57;;;14793:34:169;799:4:138;;;14843:18:169;;;14836:43;1185:7:140;14895:18:169;;;14888:49;1340:2:140;14953:18:169;;;14946:47;773:6:138;;;-1:-1:-1;773:19:138;;-1:-1:-1;14704:19:169;;773:57:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;840:6:138;;860:7;;869:4;;840:60;;-1:-1:-1;;;840:60:138;;-1:-1:-1;;;;;840:6:138;860:7;;;;;840:60;;;14793:34:169;869:4:138;;;14843:18:169;;;14836:43;1185:7:140;14895:18:169;;;14888:49;1340:2:140;14953:18:169;;;14946:47;840:6:138;;;:19;;14704::169;;840:60:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;910:6:138;;930:8;;940:7;;910:64;;-1:-1:-1;;;910:64:138;;-1:-1:-1;;;;;930:8:138;;;910:64;;;14793:34:169;910:6:138;940:7;;;;;14843:18:169;;;14836:43;1185:7:140;14895:18:169;;;14888:49;1340:2:140;14953:18:169;;;14946:47;910:6:138;;;:19;;14704::169;;910:64:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1051:4:138;;1011:17;;1038:51;;-1:-1:-1;;;;;1051:4:138;1066;1011:17;1038:4;:51::i;:::-;1112:4;;1099:51;;-1:-1:-1;;;;;1112:4:138;1127;1134:15;1099:4;:51::i;:::-;1173:8;;1160:55;;-1:-1:-1;;;;;1173:8:138;1192:4;1199:15;1160:4;:55::i;:::-;1320:4;;1326;;1226:56;;1297:57;;-1:-1:-1;;;;;1320:4:138;;;;1326;1332:6;1185:7:140;1348:2:138;1226:56;1297:22;:57::i;:::-;1364:6;;:40;;-1:-1:-1;;;1364:40:138;;1226:128;;-1:-1:-1;;;;;;1364:6:138;;:19;;:40;;1226:128;;1364:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1364:40:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1460:7:138;;1469:4;;1437:60;;-1:-1:-1;;;;;;1460:7:138;;;;;;;-1:-1:-1;1469:4:138;;-1:-1:-1;1475:6:138;;-1:-1:-1;1185:7:140;1491:2:138;1469:4;1437:22;:60::i;:::-;1507:6;;1540:27;;;;1507:82;;-1:-1:-1;;;1507:82:138;;1415;;-1:-1:-1;;;;;;1507:6:138;;;;:25;;1540:27;1507:82;;1415;;1507;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:82:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1645:8:138;;1655:7;;1622:64;;-1:-1:-1;;;;;;1645:8:138;;;;-1:-1:-1;1645:8:138;1655:7;;;;-1:-1:-1;1664:6:138;;-1:-1:-1;1185:7:140;1680:2:138;1645:8;1622:22;:64::i;:::-;1696:6;;1729:27;;;;1696:82;;-1:-1:-1;;;1696:82:138;;1600:86;;-1:-1:-1;;;;;;1696:6:138;;;;:25;;1729:27;1696:82;;1600:86;;1696:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1696:82:138;;;;;;;;;;;;:::i;:::-;;;;;;;644:1141;;611:1174::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;17182:2456:138:-;17319:7;;17348:8;;17358:7;;17319:65;;-1:-1:-1;;;17319:65:138;;-1:-1:-1;;;;;17348:8:138;;;17319:65;;;11192:34:169;17319:7:138;17358;;;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;17288:5:138;;17269:16;;17319:7;;:28;;11104:18:169;;17319:65:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;17434:6;;:40;;-1:-1:-1;;;17434:40:138;;-1:-1:-1;;;;;21411:55:169;;;17434:40:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;17404:25:138;21567:18:169;;;21560:50;;;17319:72:138;;-1:-1:-1;17434:6:138;;;;:17;;21366:18:169;;17434:40:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17525:7:138;;17534:8;;17401:73;;-1:-1:-1;17485:26:138;;-1:-1:-1;17514:29:138;;-1:-1:-1;;;;;17525:7:138;;;;;;;17534:8;17514:10;:29::i;:::-;17485:58;-1:-1:-1;;;;;;;;;;;;17612:15:138;-1:-1:-1;;;17733:17:138;17752:21;17772:1;17733:17;17752:21;:::i;:::-;:25;;17776:1;17752:25;:::i;:::-;17641:150;;-1:-1:-1;;;;;23001:15:169;;;17641:150:138;;;22983:34:169;23053:15;;23033:18;;;23026:43;22903:18;;17641:150:138;;;-1:-1:-1;;17641:150:138;;;;;;;;;;;;;;-1:-1:-1;;;;;17641:150:138;-1:-1:-1;;;;;;17641:150:138;;;;;;17612:189;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17811:6:138;;-1:-1:-1;;;;;17811:6:138;;-1:-1:-1;17811:60:138;;-1:-1:-1;;;;;;17811:160:138;;17902:17;17921:4;17935;17942:19;:15;17811:6;17942:19;:::i;:::-;17811:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18006:8:138;;:33;;-1:-1:-1;;;18006:33:138;;18033:4;18006:33;;;25882:74:169;17982:21:138;;-1:-1:-1;;;;;18006:8:138;;:18;;25855::169;;18006:33:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18072:6;;17982:57;;-1:-1:-1;18051:17:138;;-1:-1:-1;;;;;18072:6:138;:60;-1:-1:-1;;;;;18072:164:138;;18163:21;18183:1;18163:17;:21;:::i;:::-;18186:4;18200;18207:19;:15;18225:1;18207:19;:::i;:::-;18072:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18050:186;-1:-1:-1;18247:111:138;18050:186;18267:21;18287:1;18267:17;:21;:::i;:::-;:25;;18291:1;18267:25;:::i;:::-;-1:-1:-1;;;;;18247:111:138;;;;;;;;;;;;;;;;;;:8;:111::i;:::-;18390:8;;:33;;-1:-1:-1;;;18390:33:138;;18417:4;18390:33;;;25882:74:169;18368:181:138;;-1:-1:-1;;;;;18390:8:138;;:18;;25855::169;;18390:33:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18437:25;18453:9;18437:13;:25;:::i;:::-;18368:181;;;;;;;;;;;;;;;;;:8;:181::i;:::-;18624:4;;18604:14;;;;:17;;-1:-1:-1;;;;;18624:4:138;;;;;;18604:17;;;;:::i;:::-;-1:-1:-1;;;;;18604:24:138;;;:17;;;;;;;;;:24;18732:4;;18654:84;;18732:4;;18654:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;18638:15:138;;;-1:-1:-1;;;18677:45:138;25855:18:169;;18654:84:138;;;-1:-1:-1;;18654:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;18654:84:138;-1:-1:-1;;;;;;18654:84:138;;;;;;18638:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18749:6:138;;-1:-1:-1;;;;;18749:6:138;;-1:-1:-1;18749:60:138;;-1:-1:-1;;;;;;18749:160:138;;18840:17;18859:4;18873;18880:19;:15;18749:6;18880:19;:::i;:::-;18749:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;18956:15:138;-1:-1:-1;;;19055:19:138;19073:1;19055:15;:19;:::i;:::-;18985:107;;;;;26406:25:169;;;;19076:15:138;26447:18:169;;;26440:34;26379:18;;18985:107:138;;;-1:-1:-1;;18985:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;18985:107:138;-1:-1:-1;;;;;;18985:107:138;;;;;;18956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19112:6:138;;-1:-1:-1;;;;;19112:6:138;;-1:-1:-1;19112:60:138;;-1:-1:-1;;;;;;19112:160:138;;19203:17;19222:4;19236;19243:19;19112:6;19243:15;:19;:::i;:::-;19112:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19351:15:138;;;19364:1;19351:15;;;;;;;;19334:14;;;:32;;;;19392:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19392:68:138;-1:-1:-1;;;19392:68:138;;;19376:85;;-1:-1:-1;;;19376:85:138;;-1:-1:-1;;;;;;;;;;;19376:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19471:6:138;;-1:-1:-1;;;;;19471:6:138;;-1:-1:-1;19471:60:138;;-1:-1:-1;;;;;;19471:160:138;;19562:17;19581:4;19595;19602:19;:15;19471:6;19602:19;:::i;:::-;19471:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17259:2379;;;;;;17182:2456::o;6465:2158::-;6573:7;;6602;;6611:4;;6573:61;;-1:-1:-1;;;6573:61:138;;-1:-1:-1;;;;;6573:7:138;6602;;;;;6573:61;;;11192:34:169;6611:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;6542:5:138;;-1:-1:-1;;6573:7:138;;:28;;11104:18:169;;6573:61:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;6684:6;;:39;;-1:-1:-1;;;6684:39:138;;-1:-1:-1;;;;;21411:55:169;;;6684:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;6684:6:138;21567:18:169;;;21560:50;6573:68:138;;-1:-1:-1;6654:25:138;;6684:6;;;;:17;;21366:18:169;;6684:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6774:7:138;;6783:4;;6651:72;;-1:-1:-1;6734:26:138;;-1:-1:-1;6763:25:138;;-1:-1:-1;;;;;6774:7:138;;;;;;;6783:4;6763:10;:25::i;:::-;6823:4;;:29;;-1:-1:-1;;;6823:29:138;;6846:4;6823:29;;;25882:74:169;6734:54:138;;-1:-1:-1;6799:21:138;;-1:-1:-1;;;;;6823:4:138;;;;:14;;25855:18:169;;6823:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6885:6;;6799:53;;-1:-1:-1;6864:17:138;;-1:-1:-1;;;;;6885:6:138;:31;-1:-1:-1;;;;;6885:131:138;;6947:17;6966:4;6980;6987:19;:15;6885:6;6987:19;:::i;:::-;6885:131;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6863:153;;7027:74;7036:9;7047:17;-1:-1:-1;;;;;7027:74:138;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;7120:4;;:29;;-1:-1:-1;;;7120:29:138;;7143:4;7120:29;;;25882:74:169;7111:102:138;;-1:-1:-1;;;;;7120:4:138;;:14;;25855:18:169;;7120:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7151:25;7167:9;7151:13;:25;:::i;:::-;7111:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;7249:6;;:39;;-1:-1:-1;;;7249:39:138;;-1:-1:-1;;;;;21411:55:169;;;7249:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;7249:6:138;21567:18:169;;;21560:50;7249:6:138;;;;:17;;21366:18:169;;7249:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7224:64:138;-1:-1:-1;;;;;;;;;;;;7357:15:138;-1:-1:-1;7357:15:138;-1:-1:-1;;;7478:21:138;7224:64;7498:1;7478:21;:::i;:::-;7386:146;;-1:-1:-1;;;;;23001:15:169;;;7386:146:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;7386:146:138;;;-1:-1:-1;;7386:146:138;;;;;;;;;;;;;;-1:-1:-1;;;;;7386:146:138;-1:-1:-1;;;;;;7386:146:138;;;;;;7357:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7552:6:138;;-1:-1:-1;;;;;7552:6:138;;-1:-1:-1;7552:31:138;;-1:-1:-1;;;;;;7552:135:138;;7614:21;:17;7552:6;7614:21;:::i;:::-;7637:4;7651;7658:19;:15;7676:1;7658:19;:::i;:::-;7552:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7762:4:138;;7742:14;;;;:17;;-1:-1:-1;;;;;7762:4:138;;;;;;7742:17;;;;:::i;:::-;-1:-1:-1;;;;;7742:24:138;;;:17;;;;;;;;;:24;7870:4;;7792:84;;7870:4;;7792:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;7776:15:138;;;-1:-1:-1;;;7815:45:138;25855:18:169;;7792:84:138;;;-1:-1:-1;;7792:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;7792:84:138;-1:-1:-1;;;;;;7792:84:138;;;;;;7776:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7887:6:138;;-1:-1:-1;;;;;7887:6:138;;-1:-1:-1;7887:31:138;;-1:-1:-1;;;;;;7887:109:138;;7936:17;7955:4;7969;7976:19;:15;7887:6;7976:19;:::i;:::-;7887:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;8043:15:138;-1:-1:-1;;;8142:19:138;8160:1;8142:15;:19;:::i;:::-;8072:107;;;;;26406:25:169;;;;8163:15:138;26447:18:169;;;26440:34;26379:18;;8072:107:138;;;-1:-1:-1;;8072:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;8072:107:138;-1:-1:-1;;;;;;8072:107:138;;;;;;8043:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8199:6:138;;-1:-1:-1;;;;;8199:6:138;;-1:-1:-1;8199:31:138;;-1:-1:-1;;;;;;8199:109:138;;8248:17;8267:4;8281;8288:19;8199:6;8288:15;:19;:::i;:::-;8199:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8387:15:138;;;8400:1;8387:15;;;;;;;;8370:14;;;:32;;;;8428:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8428:68:138;-1:-1:-1;;;8428:68:138;;;8412:85;;-1:-1:-1;;;8412:85:138;;-1:-1:-1;;;;;;;;;;;8412:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8507:6:138;;-1:-1:-1;;;;;8507:6:138;;-1:-1:-1;8507:31:138;;-1:-1:-1;;;;;;8507:109:138;;8556:17;8575:4;8589;8596:19;:15;8507:6;8596:19;:::i;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;14738:2438:138:-;14875:7;;14904:8;;14914:7;;14875:65;;-1:-1:-1;;;14875:65:138;;-1:-1:-1;;;;;14904:8:138;;;14875:65;;;11192:34:169;14875:7:138;14914;;;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;14844:5:138;;14825:16;;14875:7;;:28;;11104:18:169;;14875:65:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;14990:6;;:39;;-1:-1:-1;;;14990:39:138;;-1:-1:-1;;;;;21411:55:169;;;14990:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;14990:6:138;21567:18:169;;;21560:50;14875:72:138;;-1:-1:-1;14960:25:138;;14990:6;;;;:17;;21366:18:169;;14990:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15080:8:138;;15090:7;;14957:72;;-1:-1:-1;15040:26:138;;-1:-1:-1;15069:29:138;;-1:-1:-1;;;;;15080:8:138;;;;;15090:7;;;;15069:10;:29::i;:::-;15040:58;-1:-1:-1;;;;;;;;;;;;15167:15:138;-1:-1:-1;;;15288:17:138;15307:21;15327:1;15288:17;15307:21;:::i;:::-;15196:146;;-1:-1:-1;;;;;23001:15:169;;;15196:146:138;;;22983:34:169;23053:15;;23033:18;;;23026:43;22903:18;;15196:146:138;;;-1:-1:-1;;15196:146:138;;;;;;;;;;;;;;-1:-1:-1;;;;;15196:146:138;-1:-1:-1;;;;;;15196:146:138;;;;;;15167:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15362:6:138;;-1:-1:-1;;;;;15362:6:138;;-1:-1:-1;15362:60:138;;-1:-1:-1;15436:8:138;15446:17;15465:4;15487;15495:19;:15;15362:6;15495:19;:::i;:::-;15362:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15613:6:138;;15559:21;;15535;;-1:-1:-1;;;;;15613:6:138;:60;15687:8;15697:21;15717:1;15697:17;:21;:::i;:::-;15720:4;15742;15750:19;:15;15768:1;15750:19;:::i;:::-;15613:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15591:188;-1:-1:-1;15790:107:138;15591:188;15810:21;15830:1;15810:17;:21;:::i;:::-;-1:-1:-1;;;;;15790:107:138;;;;;;;;;;;;;;;;;;:8;:107::i;:::-;15907:169;15929:21;15964:25;15980:9;15964:13;:25;:::i;:::-;15907:169;;;;;;;;;;;;;;;;;:8;:169::i;:::-;16152:4;;16132:14;;;;:17;;-1:-1:-1;;;;;16152:4:138;;;;;;16132:17;;;;;;:::i;:::-;-1:-1:-1;;;;;16132:24:138;;;:17;;;;;;;;;:24;16260:4;;16182:84;;16260:4;;16182:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;16166:15:138;;;-1:-1:-1;;;16205:45:138;25855:18:169;;16182:84:138;;;-1:-1:-1;;16182:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;16182:84:138;-1:-1:-1;;;;;;16182:84:138;;;;;;16166:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16277:6:138;;-1:-1:-1;;;;;16277:6:138;;-1:-1:-1;16277:60:138;;-1:-1:-1;16351:8:138;16361:21;:17;16277:6;16361:21;:::i;:::-;16384:4;16406;16414:19;:15;16432:1;16414:19;:::i;:::-;16277:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;16490:15:138;-1:-1:-1;;;16589:19:138;16607:1;16589:15;:19;:::i;:::-;16519:107;;;;;26406:25:169;;;;16610:15:138;26447:18:169;;;26440:34;26379:18;;16519:107:138;;;-1:-1:-1;;16519:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;16519:107:138;-1:-1:-1;;;;;;16519:107:138;;;;;;16490:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16646:6:138;;-1:-1:-1;;;;;16646:6:138;;-1:-1:-1;16646:60:138;;-1:-1:-1;16720:8:138;16730:17;16749:4;16771;16779:19;16646:6;16779:15;:19;:::i;:::-;16646:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16887:15:138;;;16900:1;16887:15;;;;;;;;16870:14;;;:32;;;;16928:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16928:68:138;-1:-1:-1;;;16928:68:138;;;16912:85;;-1:-1:-1;;;16912:85:138;;-1:-1:-1;;;;;;;;;;;16912:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17007:6:138;;-1:-1:-1;;;;;17007:6:138;;-1:-1:-1;17007:60:138;;-1:-1:-1;17081:8:138;17091:17;17110:4;17132;17140:19;:15;17007:6;17140:19;:::i;:::-;17007:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3385:141:6:-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;4279:2180:138:-;4387:7;;4416;;4425:4;;4387:61;;-1:-1:-1;;;4387:61:138;;-1:-1:-1;;;;;4387:7:138;4416;;;;;4387:61;;;11192:34:169;4425:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;4356:5:138;;-1:-1:-1;;4387:7:138;;:28;;11104:18:169;;4387:61:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;4498:6;;:40;;-1:-1:-1;;;4498:40:138;;-1:-1:-1;;;;;21411:55:169;;;4498:40:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;4468:25:138;21567:18:169;;;21560:50;;;4387:68:138;;-1:-1:-1;4498:6:138;;;;:17;;21366:18:169;;4498:40:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4589:4:138;;4595:7;;4465:73;;-1:-1:-1;4549:26:138;;-1:-1:-1;4578:25:138;;-1:-1:-1;;;;;4589:4:138;;;;;4595:7;;;;4578:10;:25::i;:::-;4692:6;;4549:54;;-1:-1:-1;4638:21:138;;4614;;-1:-1:-1;;;;;4692:6:138;:31;4737:8;4747:17;4549:54;4788:4;4796:19;:15;4692:6;4796:19;:::i;:::-;4692:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4670:155;;4836:74;4845:9;4856:17;-1:-1:-1;;;;;4836:74:138;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;4920:94;4929:21;4952:25;4968:9;4952:13;:25;:::i;:::-;4920:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;5108:6;;:40;;-1:-1:-1;;;5108:40:138;;-1:-1:-1;;;;;21411:55:169;;;5108:40:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;5108:6:138;21567:18:169;;;21560:50;5108:6:138;;;;:17;;21366:18:169;;5108:40:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5083:65:138;-1:-1:-1;;;;;;;;;;;;5158:15:138;-1:-1:-1;5158:15:138;-1:-1:-1;;;5279:21:138;5083:65;5299:1;5279:21;:::i;:::-;5187:146;;-1:-1:-1;;;;;23001:15:169;;;5187:146:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;5187:146:138;;;-1:-1:-1;;5187:146:138;;;;;;;;;;;;;;-1:-1:-1;;;;;5187:146:138;-1:-1:-1;;;;;;5187:146:138;;;;;;5158:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5353:6:138;;-1:-1:-1;;;;;5353:6:138;;-1:-1:-1;5353:31:138;;-1:-1:-1;5398:8:138;5408:21;:17;5353:6;5408:21;:::i;:::-;5431:4;5453;5461:19;:15;5479:1;5461:19;:::i;:::-;5353:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5566:4:138;;5546:14;;;;:17;;-1:-1:-1;;;;;5566:4:138;;;;;;5546:17;;;;;;:::i;:::-;-1:-1:-1;;;;;5546:24:138;;;:17;;;;;;;;;:24;5674:4;;5596:84;;5674:4;;5596:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;5580:15:138;;;-1:-1:-1;;;5619:45:138;25855:18:169;;5596:84:138;;;-1:-1:-1;;5596:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;5596:84:138;-1:-1:-1;;;;;;5596:84:138;;;;;;5580:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5691:6:138;;-1:-1:-1;;;;;5691:6:138;;-1:-1:-1;5691:31:138;;-1:-1:-1;5736:8:138;5746:21;:17;5691:6;5746:21;:::i;:::-;5769:4;5791;5799:19;:15;5817:1;5799:19;:::i;:::-;5691:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;5875:15:138;-1:-1:-1;;;5974:19:138;5992:1;5974:15;:19;:::i;:::-;5904:107;;;;;26406:25:169;;;;5995:15:138;26447:18:169;;;26440:34;26379:18;;5904:107:138;;;-1:-1:-1;;5904:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;5904:107:138;-1:-1:-1;;;;;;5904:107:138;;;;;;5875:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6031:6:138;;-1:-1:-1;;;;;6031:6:138;;-1:-1:-1;6031:31:138;;-1:-1:-1;6063:8:138;6073:17;6092:4;6114;6122:19;6031:6;6122:15;:19;:::i;:::-;6031:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6221:15:138;;;6234:1;6221:15;;;;;;;;6204:14;;;:32;;;;6262:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6262:68:138;-1:-1:-1;;;6262:68:138;;;6246:85;;-1:-1:-1;;;6246:85:138;;-1:-1:-1;;;;;;;;;;;6246:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6341:6:138;;-1:-1:-1;;;;;6341:6:138;;-1:-1:-1;6341:31:138;;-1:-1:-1;6373:8:138;6383:17;6402:4;6424;6432:19;:15;6341:6;6432:19;:::i;12786:168:140:-;12857:7;12892:1;12883:6;:10;;;:24;;;;;12906:1;12897:6;:10;;;12883:24;:64;;12932:15;12941:6;12932;:15;:::i;:::-;12883:64;;;12928:1;12910:15;12919:6;12910;:15;:::i;:::-;:19;;;;:::i;:::-;12876:71;;;;12786:168;;;;;:::o;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:2113:138;10518:7;;10547;;10556:4;;10518:61;;-1:-1:-1;;;10518:61:138;;-1:-1:-1;;;;;10518:7:138;10547;;;;;10518:61;;;11192:34:169;10556:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;10487:5:138;;-1:-1:-1;;10518:7:138;;:28;;11104:18:169;;10518:61:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;10627:6;;:40;;-1:-1:-1;;;10627:40:138;;-1:-1:-1;;;;;21411:55:169;;;10627:40:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;10597:24:138;21567:18:169;;;21560:50;;;10518:68:138;;-1:-1:-1;10627:6:138;;;;:16;;21366:18:169;;10627:40:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10718:4:138;;10724:7;;10596:71;;-1:-1:-1;10678:26:138;;10707:25;;-1:-1:-1;;;;;10718:4:138;;;;;10724:7;;;10707:10;:25::i;:::-;10767:4;;:29;;-1:-1:-1;;;10767:29:138;;10790:4;10767:29;;;25882:74:169;10678:54:138;;-1:-1:-1;10743:21:138;;-1:-1:-1;;;;;10767:4:138;;;;:14;;25855:18:169;;10767:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10838:6;;10743:53;;-1:-1:-1;10808:26:138;;-1:-1:-1;;;;;10838:6:138;:31;10883:9;10894:16;10912:4;10934;10942:19;:15;10838:6;10942:19;:::i;:::-;10838:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10838:133:138;;;;;;;;;;;;:::i;:::-;10807:164;;10982:76;10991:9;11001:1;10991:12;;;;;;;;:::i;:::-;;;;;;;11005:16;-1:-1:-1;;;;;10982:76:138;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;11077:4;;:29;;-1:-1:-1;;;11077:29:138;;11100:4;11077:29;;;25882:74:169;11068:105:138;;-1:-1:-1;;;;;11077:4:138;;:14;;25855:18:169;;11077:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11124:9;11134:1;11124:12;;;;;;;;:::i;:::-;;;;;;;11108:13;:28;;;;:::i;:::-;11068:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;11207:6;;:40;;-1:-1:-1;;;11207:40:138;;-1:-1:-1;;;;;21411:55:169;;;11207:40:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;11207:6:138;21567:18:169;;;21560:50;11207:6:138;;;;:16;;21366:18:169;;11207:40:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11184:63:138;;-1:-1:-1;;;;;;;;;;;;11300:15:138;-1:-1:-1;11300:15:138;-1:-1:-1;;;11419:20:138;11438:1;11184:63;11419:20;:::i;:::-;11329:142;;-1:-1:-1;;;;;23001:15:169;;;11329:142:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;11329:142:138;;;-1:-1:-1;;11329:142:138;;;;;;;;;;;;;;-1:-1:-1;;;;;11329:142:138;-1:-1:-1;;;;;;11329:142:138;;;;;;11300:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:6:138;;-1:-1:-1;;;;;11491:6:138;;-1:-1:-1;11491:31:138;;-1:-1:-1;11523:9:138;11534:20;11491:6;11534:16;:20;:::i;:::-;11556:4;11570;11577:19;:15;11595:1;11577:19;:::i;:::-;11491:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:106:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11673:4:138;;11653:14;;;;:17;;-1:-1:-1;;;;;11673:4:138;;;;;;11653:17;;;;;;:::i;:::-;-1:-1:-1;;;;;11653:24:138;;;:17;;;;;;;;;:24;11781:4;;11703:84;;11781:4;;11703:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;11687:15:138;;;-1:-1:-1;;;11726:45:138;25855:18:169;;11703:84:138;;;-1:-1:-1;;11703:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;11703:84:138;-1:-1:-1;;;;;;11703:84:138;;;;;;11687:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:6:138;;-1:-1:-1;;;;;11798:6:138;;-1:-1:-1;11798:31:138;;-1:-1:-1;11830:9:138;11841:16;11859:4;11881;11889:19;:15;11798:6;11889:19;:::i;:::-;11798:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:111:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;11956:15:138;-1:-1:-1;;;12055:19:138;12073:1;12055:15;:19;:::i;:::-;11985:107;;;;;26406:25:169;;;;12076:15:138;26447:18:169;;;26440:34;26379:18;;11985:107:138;;;-1:-1:-1;;11985:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;11985:107:138;-1:-1:-1;;;;;;11985:107:138;;;;;;11956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:6:138;;-1:-1:-1;;;;;12112:6:138;;-1:-1:-1;12112:31:138;;-1:-1:-1;12144:9:138;12155:16;12173:4;12187;12194:19;12112:6;12194:15;:19;:::i;:::-;12112:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:102:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12293:15:138;;;12306:1;12293:15;;;;;;;;12276:14;;;:32;;;;12334:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12334:68:138;-1:-1:-1;;;12334:68:138;;;12318:85;;-1:-1:-1;;;12318:85:138;;-1:-1:-1;;;;;;;;;;;12318:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:6:138;;-1:-1:-1;;;;;12413:6:138;;-1:-1:-1;12413:31:138;;-1:-1:-1;12445:9:138;12456:16;12474:4;12488;12495:19;:15;12413:6;12495:19;:::i;:::-;12413:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:102:138;;;;;;;;;;;;:::i;2070:2203::-;2178:7;;2207:4;;2213;;2178:58;;-1:-1:-1;;;2178:58:138;;-1:-1:-1;;;;;2207:4:138;;;2178:58;;;11192:34:169;2213:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;2147:5:138;;2128:16;;2178:7;;:28;;11104:18:169;;2178:58:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;2286:6;;:39;;-1:-1:-1;;;2286:39:138;;-1:-1:-1;;;;;21411:55:169;;;2286:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;2286:6:138;21567:18:169;;;21560:50;2178:65:138;;-1:-1:-1;2256:25:138;;2286:6;;;;:17;;21366:18:169;;2286:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2376:4:138;;2382;;2253:72;;-1:-1:-1;2336:26:138;;-1:-1:-1;2365:22:138;;-1:-1:-1;;;;;2376:4:138;;;;2382;2365:10;:22::i;:::-;2422:4;;:29;;-1:-1:-1;;;2422:29:138;;2445:4;2422:29;;;25882:74:169;2336:51:138;;-1:-1:-1;2398:21:138;;-1:-1:-1;;;;;2422:4:138;;;;:14;;25855:18:169;;2422:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2496:6;;2398:53;;-1:-1:-1;2463:17:138;;-1:-1:-1;;;;;2496:6:138;:31;2528:8;2538:17;2557:4;2571;2578:19;:15;2496:6;2578:19;:::i;:::-;2496:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2462:136;;2609:74;2618:9;2629:17;-1:-1:-1;;;;;2609:74:138;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;2702:4;;:29;;-1:-1:-1;;;2702:29:138;;2725:4;2702:29;;;25882:74:169;2693:102:138;;-1:-1:-1;;;;;2702:4:138;;:14;;25855:18:169;;2702:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:25;2749:9;2733:13;:25;:::i;:::-;2693:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;2889:6;;:39;;-1:-1:-1;;;2889:39:138;;-1:-1:-1;;;;;21411:55:169;;;2889:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;2889:6:138;21567:18:169;;;21560:50;2889:6:138;;;;:17;;21366:18:169;;2889:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2864:64:138;-1:-1:-1;;;;;;;;;;;;2938:15:138;-1:-1:-1;2938:15:138;-1:-1:-1;;;3059:21:138;2864:64;3079:1;3059:21;:::i;:::-;2967:146;;-1:-1:-1;;;;;23001:15:169;;;2967:146:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;2967:146:138;;;-1:-1:-1;;2967:146:138;;;;;;;;;;;;;;-1:-1:-1;;;;;2967:146:138;-1:-1:-1;;;;;;2967:146:138;;;;;;2938:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3133:6:138;;-1:-1:-1;;;;;3133:6:138;;-1:-1:-1;3133:31:138;;-1:-1:-1;3165:8:138;3175:21;:17;3133:6;3175:21;:::i;:::-;3198:4;3212;3219:19;:15;3237:1;3219:19;:::i;:::-;3133:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;3286:15:138;-1:-1:-1;;;3385:19:138;3403:1;3385:15;:19;:::i;:::-;3315:107;;;;;26406:25:169;;;;3406:15:138;26447:18:169;;;26440:34;26379:18;;3315:107:138;;;-1:-1:-1;;3315:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;3315:107:138;-1:-1:-1;;;;;;3315:107:138;;;;;;3286:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3442:6:138;;-1:-1:-1;;;;;3442:6:138;;-1:-1:-1;3442:31:138;;-1:-1:-1;3474:8:138;3484:17;3503:4;3517;3524:19;3442:6;3524:15;:19;:::i;:::-;3442:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3623:15:138;;;3636:1;3623:15;;;;;;;;3606:14;;;:32;;;;3664:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3664:68:138;-1:-1:-1;;;3664:68:138;;;3648:85;;-1:-1:-1;;;3648:85:138;;-1:-1:-1;;;;;;;;;;;3648:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3743:6:138;;-1:-1:-1;;;;;3743:6:138;;-1:-1:-1;3743:31:138;;-1:-1:-1;3775:8:138;3785:17;3804:4;3818;3825:19;:15;3743:6;3825:19;:::i;:::-;3743:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3917:15:138;;;3930:1;3917:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3900:14:138;;;:32;;;3962:4;;3942:17;;-1:-1:-1;;;;;3962:4:138;;;;3900:32;3962:4;;3942:17;;;;:::i;:::-;-1:-1:-1;;;;;3942:24:138;;;:17;;;;;;;;;:24;3996:8;;3976:14;;;;:17;;3996:8;;;;;3976:14;3996:8;;3976:17;;;;;;:::i;:::-;-1:-1:-1;;;;;3976:28:138;;;:17;;;;;;;;;:28;4111:4;;4117:8;;4043:101;;4111:4;;;4043:101;;;11192:34:169;4117:8:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;-1:-1:-1;;;;;;;;;;;4014:15:138;;;-1:-1:-1;;;4066:43:138;11104:18:169;;4043:101:138;;;-1:-1:-1;;4043:101:138;;;;;;;;;;;;;;-1:-1:-1;;;;;4043:101:138;-1:-1:-1;;;;;;4043:101:138;;;;;;4014:140;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4164:6:138;;-1:-1:-1;;;;;4164:6:138;;-1:-1:-1;4164:31:138;;-1:-1:-1;4196:8:138;4206:17;4225:4;4239;4246:19;:15;4164:6;4246:19;:::i;8629:1774::-;8738:7;;8767:4;;8773;;8738:58;;-1:-1:-1;;;8738:58:138;;-1:-1:-1;;;;;8767:4:138;;;8738:58;;;11192:34:169;8773:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;8707:5:138;;8687:17;;8738:7;;:28;;11104:18:169;;8738:58:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;8844:6;;:39;;-1:-1:-1;;;8844:39:138;;-1:-1:-1;;;;;21411:55:169;;;8844:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;8844:6:138;21567:18:169;;;21560:50;8738:65:138;;-1:-1:-1;8814:24:138;;8844:6;;;;:16;;21366:18:169;;8844:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;8934:4:138;;8940;;8813:70;;-1:-1:-1;8894:26:138;;8923:22;;-1:-1:-1;;;;;8934:4:138;;;;8940;8923:10;:22::i;:::-;8980:4;;:29;;-1:-1:-1;;;8980:29:138;;9003:4;8980:29;;;25882:74:169;8894:51:138;;-1:-1:-1;8956:21:138;;-1:-1:-1;;;;;8980:4:138;;;;:14;;25855:18:169;;8980:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9063:6;;8956:53;;-1:-1:-1;9021:26:138;;-1:-1:-1;;;;;9063:6:138;:31;9095:9;9106:16;9124:4;9138;9145:19;:15;9063:6;9145:19;:::i;:::-;9063:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9063:102:138;;;;;;;;;;;;:::i;:::-;9020:145;;9176:76;9185:9;9195:1;9185:12;;;;;;;;:::i;:::-;;;;;;;9199:16;-1:-1:-1;;;;;9176:76:138;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;9271:4;;:29;;-1:-1:-1;;;9271:29:138;;9294:4;9271:29;;;25882:74:169;9262:105:138;;-1:-1:-1;;;;;9271:4:138;;:14;;25855:18:169;;9271:29:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9318:9;9328:1;9318:12;;;;;;;;:::i;:::-;;;;;;;9302:13;:28;;;;:::i;:::-;9262:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;9401:6;;:39;;-1:-1:-1;;;9401:39:138;;-1:-1:-1;;;;;21411:55:169;;;9401:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;9401:6:138;21567:18:169;;;21560:50;9401:6:138;;;;:16;;21366:18:169;;9401:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9378:62:138;;-1:-1:-1;;;;;;;;;;;;9493:15:138;-1:-1:-1;9493:15:138;-1:-1:-1;;;9612:20:138;9631:1;9378:62;9612:20;:::i;:::-;9522:142;;-1:-1:-1;;;;;23001:15:169;;;9522:142:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;9522:142:138;;;-1:-1:-1;;9522:142:138;;;;;;;;;;;;;;-1:-1:-1;;;;;9522:142:138;-1:-1:-1;;;;;;9522:142:138;;;;;;9493:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9684:6:138;;-1:-1:-1;;;;;9684:6:138;;-1:-1:-1;9684:31:138;;-1:-1:-1;9716:9:138;9727:20;9684:6;9727:16;:20;:::i;:::-;9749:4;9763;9770:19;:15;9788:1;9770:19;:::i;3047:140:6:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12960:205:140;13038:6;;13069:12;13080:1;13069:12;;;;:::i;:::-;13056:25;;13105:1;13096:6;:10;;;:33;;13127:2;13096:33;;;13109:11;;;;:2;:11;:::i;:::-;:15;;13123:1;13109:15;:::i;:::-;13091:38;;13147:11;:2;:9;:11::i;:::-;13140:18;12960:205;-1:-1:-1;;;;;12960:205:140:o;12528:2204:138:-;12637:7;;12666;;12675:4;;12637:61;;-1:-1:-1;;;12637:61:138;;-1:-1:-1;;;;;12637:7:138;12666;;;;;12637:61;;;11192:34:169;12675:4:138;;;11242:18:169;;;11235:43;1340:2:140;11294:18:169;;;11287:47;12606:5:138;;-1:-1:-1;;12637:7:138;;:28;;11104:18:169;;12637:61:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;12746:6;;:39;;-1:-1:-1;;;12746:39:138;;-1:-1:-1;;;;;21411:55:169;;;12746:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;12746:6:138;21567:18:169;;;21560:50;12637:68:138;;-1:-1:-1;12716:24:138;;12746:6;;;;:16;;21366:18:169;;12746:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;12836:7:138;;12845:4;;12715:70;;-1:-1:-1;12796:26:138;;12825:25;;-1:-1:-1;;;;;12836:7:138;;;;;;;12845:4;12825:10;:25::i;:::-;13002:6;;12796:54;;-1:-1:-1;12885:21:138;;12861;;-1:-1:-1;;;;;13002:6:138;:31;13041:22;:16;13060:3;13041:22;:::i;:::-;-1:-1:-1;;;;;13002:137:138;13078:9;13089:4;13103;13110:19;:15;13128:1;13110:19;:::i;:::-;13002:137;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13002:137:138;;;;;;;;;;;;:::i;:::-;12971:168;;13150:76;13159:9;13169:1;13159:12;;;;;;;;:::i;:::-;;;;;;;13173:16;-1:-1:-1;;;;;13150:76:138;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;13236:97;13245:21;13284:9;13294:1;13284:12;;;;;;;;:::i;:::-;;;;;;;13268:13;:28;;;;:::i;:::-;13236:97;;;;;;;;;;;;;;;;;:8;:97::i;:::-;13367:6;;:39;;-1:-1:-1;;;13367:39:138;;-1:-1:-1;;;;;21411:55:169;;;13367:39:138;;;21393:74:169;-1:-1:-1;;;;;21503:47:169;;21483:18;;;21476:75;13367:6:138;21567:18:169;;;21560:50;13367:6:138;;;;:16;;21366:18:169;;13367:39:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13344:62:138;;-1:-1:-1;;;;;;;;;;;;13470:15:138;-1:-1:-1;13470:15:138;-1:-1:-1;;;13589:20:138;13608:1;13344:62;13589:20;:::i;:::-;13499:142;;-1:-1:-1;;;;;23001:15:169;;;13499:142:138;;;22983:34:169;23053:15;;;23033:18;;;23026:43;22903:18;;13499:142:138;;;-1:-1:-1;;13499:142:138;;;;;;;;;;;;;;-1:-1:-1;;;;;13499:142:138;-1:-1:-1;;;;;;13499:142:138;;;;;;13470:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:6:138;;-1:-1:-1;;;;;13661:6:138;;-1:-1:-1;13661:31:138;;-1:-1:-1;13700:20:138;13719:1;13700:16;:20;:::i;:::-;-1:-1:-1;;;;;13661:135:138;13735:9;13746:4;13760;13767:19;:15;13785:1;13767:19;:::i;:::-;13661:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:135:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13871:4:138;;13851:14;;;;:17;;-1:-1:-1;;;;;13871:4:138;;;;;;13851:17;;;;:::i;:::-;-1:-1:-1;;;;;13851:24:138;;;:17;;;;;;;;;:24;13979:4;;13901:84;;13979:4;;13901:84;;;25882:74:169;-1:-1:-1;;;;;;;;;;;13885:15:138;;;-1:-1:-1;;;13924:45:138;25855:18:169;;13901:84:138;;;-1:-1:-1;;13901:84:138;;;;;;;;;;;;;;-1:-1:-1;;;;;13901:84:138;-1:-1:-1;;;;;;13901:84:138;;;;;;13885:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:6:138;;-1:-1:-1;;;;;13996:6:138;;-1:-1:-1;13996:31:138;;-1:-1:-1;;;;;;13996:109:138;;14053:9;14064:4;14078;14085:19;:15;13996:6;14085:19;:::i;:::-;13996:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:109:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;14152:15:138;-1:-1:-1;;;14251:19:138;14269:1;14251:15;:19;:::i;:::-;14181:107;;;;;26406:25:169;;;;14272:15:138;26447:18:169;;;26440:34;26379:18;;14181:107:138;;;-1:-1:-1;;14181:107:138;;;;;;;;;;;;;;-1:-1:-1;;;;;14181:107:138;-1:-1:-1;;;;;;14181:107:138;;;;;;14152:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:6:138;;-1:-1:-1;;;;;14308:6:138;;-1:-1:-1;14308:31:138;;-1:-1:-1;;;;;;14308:109:138;;14365:9;14376:4;14390;14397:19;14308:6;14397:15;:19;:::i;:::-;14308:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:109:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14496:15:138;;;14509:1;14496:15;;;;;;;;14479:14;;;:32;;;;14537:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14537:68:138;-1:-1:-1;;;14537:68:138;;;14521:85;;-1:-1:-1;;;14521:85:138;;-1:-1:-1;;;;;;;;;;;14521:15:138;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:6:138;;-1:-1:-1;;;;;14616:6:138;;-1:-1:-1;14616:31:138;;-1:-1:-1;;;;;;14616:109:138;;14673:9;14684:4;14698;14705:19;:15;14616:6;14705:19;:::i;:::-;14616:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:109:138;;;;;;;;;;;;:::i;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10811:1171:140;11040:13;11056:6;-1:-1:-1;;;;;11056:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11040:34;;11084:13;11100:6;-1:-1:-1;;;;;11100:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11084:34;;11129:36;11142:6;11151:4;11157:7;11129:4;:36::i;:::-;11175;11188:6;11197:4;11203:7;11175:4;:36::i;:::-;11222:13;11238:28;11251:6;11259;11238:12;:28::i;:::-;11222:44;;11277:40;11334:5;11320:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11320:20:140;;11277:63;;11356:9;11351:412;11371:5;11367:1;:9;11351:412;;;11397:9;11409:26;11415:8;11425:1;11428:6;11409:5;:26::i;:::-;11397:38;;11450:15;11474:8;11468:14;;:2;:14;;;;:28;;;;;11495:1;11486:6;:10;;;11468:28;:74;;11541:1;11468:74;;;11499:39;11500:28;;;;363:4:105;11500:28:140;:::i;:::-;11499:37;:39::i;:::-;11450:92;;11556:15;11580:8;11574:14;;:2;:14;;;;:28;;;;;11601:1;11592:6;:10;;;11574:28;:74;;11647:1;11574:74;;;11605:39;11606:28;;;;363:4:105;11606:28:140;:::i;11605:39::-;11556:92;;11692:60;11729:8;11739;11749:2;11692:36;:60::i;:::-;11663:23;11687:1;11663:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11383:380;;;11378:3;;;;:::i;:::-;;;11351:412;;;-1:-1:-1;11773:19:140;;-1:-1:-1;;;11773:19:140;;-1:-1:-1;;;;;25900:55:169;;11773:19:140;;;25882:74:169;-1:-1:-1;;;;;;;;;;;11773:13:140;;;25855:18:169;;11773:19:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11802:41:140;;-1:-1:-1;;;11802:41:140;;-1:-1:-1;;;;;12999:55:169;;;11802:41:140;;;12981:74:169;13071:18;;;13064:34;;;11802:15:140;;;-1:-1:-1;11802:15:140;;-1:-1:-1;12954:18:169;;11802:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11853:41:140;;-1:-1:-1;;;11853:41:140;;-1:-1:-1;;;;;12999:55:169;;;11853:41:140;;;12981:74:169;13071:18;;;13064:34;;;11853:15:140;;;;;12954:18:169;;11853:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11904:12:140;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11929:6;-1:-1:-1;;;;;11929:11:140;;11941:2;11945:23;11970:4;11929:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11929:46:140;;;;;;;;;;;;:::i;:::-;;;;11030:952;;;;10811:1171;;;;;;;;:::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13171:134:140;13272:7;;:26;;-1:-1:-1;;;13272:26:140;;32197:6:169;32185:19;;13272:26:140;;;32167:38:169;13230:11:140;;-1:-1:-1;;;;;13272:7:140;;:17;;32140:18:169;;13272:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13253:45;13171:134;-1:-1:-1;;;;;;;;;13171:134:140:o;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;12981:74:169;;;1398:17:2;13071:18:169;;;13064:34;1428:1:2;;1377:7;;12954:18:169;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;11988:792:140:-;363:4:105;12209:13:140;:36;;12201:73;;;;-1:-1:-1;;;12201:73:140;;33548:2:169;12201:73:140;;;33530:21:169;33587:2;33567:18;;;33560:30;33626:26;33606:18;;;33599:54;33670:18;;12201:73:140;;;;;;;;;12285:13;12301:28;12314:6;12322;12301:12;:28::i;:::-;12285:44;;12340:20;12377:5;12363:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12363:20:140;;12340:43;;12393:24;12434:5;12420:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12420:20:140;;12393:47;;12456:9;12451:253;12471:5;12467:1;:9;12451:253;;;12497:9;12509:26;12515:8;12525:1;12528:6;12509:5;:26::i;:::-;12561;;-1:-1:-1;;;12561:26:140;;-1:-1:-1;;;;;13877:55:169;;;12561:26:140;;;13859:74:169;13981:8;13969:21;;13949:18;;;13942:49;12497:38:140;;-1:-1:-1;12549:9:140;;12561:16;;;;;13832:18:169;;12561:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12549:38;;12611:2;12602:11;;:3;12606:1;12602:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12640:53;:1;12658:13;363:4:105;12640:17:140;:53::i;:::-;12627:7;12635:1;12627:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12483:221;;12478:3;;;;:::i;:::-;;;12451:253;;;-1:-1:-1;12714:14:140;;-1:-1:-1;;;12714:14:140;;-1:-1:-1;;;;;25900:55:169;;12714:14:140;;;25882:74:169;-1:-1:-1;;;;;;;;;;;12714:8:140;;;25855:18:169;;12714:14:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;-1:-1:-1;;;12738:35:140;;-1:-1:-1;;;;;12738:11:140;;;-1:-1:-1;12738:11:140;;-1:-1:-1;12738:35:140;;12750:4;;12756:2;;12760:3;;12765:7;;12738:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;;;;;;;;;;;:::i;:::-;;12191:589;;;11988:792;;;;;;;:::o;2759:3601::-;2801:7;:45;;;;;;;;;;-1:-1:-1;;;;;2801:45:140;2907:7;;;;2899:28;-1:-1:-1;2899:33:140;2895:118;;2964:7;;2982:13;;-1:-1:-1;;;;;;;;;;;2948:7:140;;;2964;;;;-1:-1:-1;;;;;2964:7:140;;2982:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2974:27:140;;;;;;;;;;;;;;;;;;;;;;;;2948:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:118;3068:1;3054:16;;;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3054:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3047:4:140;:23;;-1:-1:-1;;;;;;3047:23:140;-1:-1:-1;;;;;3047:23:140;;;;;;;;;;3087:16;;3101:1;;3087:16;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3087:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:4:140;:23;;-1:-1:-1;;;;;;3080:23:140;-1:-1:-1;;;;;3080:23:140;;;;;;;;;;3120:16;;3134:1;;3120:16;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3120:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3113:4:140;:23;;-1:-1:-1;;;;;;3113:23:140;-1:-1:-1;;;;;3113:23:140;;;;;;;;;;3153:17;;3167:2;;3153:17;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3153:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3146:4:140;:24;;-1:-1:-1;;;;;;3146:24:140;-1:-1:-1;;;;;3146:24:140;;;;;;;;;;3187:17;;3201:2;;3187:17;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3187:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3180:4:140;:24;;-1:-1:-1;;;;;;3180:24:140;-1:-1:-1;;;;;3180:24:140;;;;;;;;;;3220:17;;3234:2;;3220:17;;;:::i;:::-;35599:4:169;35587:17;;;35569:36;;35557:2;35542:18;3220:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3214:3:140;:23;;-1:-1:-1;;;;;;3214:23:140;-1:-1:-1;;;;;3214:23:140;;;;;;;;;;3258:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3247:8:140;:37;;-1:-1:-1;;;;;;3247:37:140;-1:-1:-1;;;;;3247:37:140;;;;;;3335:7;;3318:37;;;-1:-1:-1;;;3318:37:140;;3247;3335:7;;;;;;3318:37;;;36227:74:169;36317:18;;;36310:30;;;;36376:1;36356:18;;;36349:29;36414:9;36394:18;;;36387:37;-1:-1:-1;;;;;;;;;;;3318:8:140;;;36441:19:169;;3318:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3382:4:140;;3365:31;;;-1:-1:-1;;;3365:31:140;;-1:-1:-1;;;;;3382:4:140;;;3365:31;;;;36683:74:169;;;;36773:18;;;36766:30;;;;36812:18;;;36805:29;-1:-1:-1;;;36850:18:169;;;36843:34;-1:-1:-1;;;;;;;;;;;3365:8:140;-1:-1:-1;3365:8:140;;-1:-1:-1;36894:19:169;;3365:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3423:4:140;;3406:31;;;-1:-1:-1;;;3406:31:140;;-1:-1:-1;;;;;3423:4:140;;;3406:31;;;;37136:74:169;;;;37226:18;;;37219:30;;;;37265:18;;;37258:29;-1:-1:-1;;;37303:18:169;;;37296:34;-1:-1:-1;;;;;;;;;;;3406:8:140;-1:-1:-1;3406:8:140;;-1:-1:-1;37347:19:169;;3406:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3464:4:140;;3447:31;;;-1:-1:-1;;;3447:31:140;;-1:-1:-1;;;;;3464:4:140;;;3447:31;;;;37589:74:169;;;;37679:18;;;37672:30;;;;37718:18;;;37711:29;-1:-1:-1;;;37756:18:169;;;37749:34;-1:-1:-1;;;;;;;;;;;3447:8:140;-1:-1:-1;3447:8:140;;-1:-1:-1;37800:19:169;;3447:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3505:4:140;;3488:31;;;-1:-1:-1;;;3488:31:140;;-1:-1:-1;;;;;3505:4:140;;;3488:31;;;;38042:74:169;;;;38132:18;;;38125:30;;;;38171:18;;;38164:29;-1:-1:-1;;;38209:18:169;;;38202:34;-1:-1:-1;;;;;;;;;;;3488:8:140;-1:-1:-1;3488:8:140;;-1:-1:-1;38253:19:169;;3488:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3546:4:140;;3529:31;;;-1:-1:-1;;;3529:31:140;;-1:-1:-1;;;;;3546:4:140;;;3529:31;;;;38495:74:169;;;;38585:18;;;38578:30;;;;38624:18;;;38617:29;-1:-1:-1;;;38662:18:169;;;38655:34;-1:-1:-1;;;;;;;;;;;3529:8:140;-1:-1:-1;3529:8:140;;-1:-1:-1;38706:19:169;;3529:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3587:3:140;;;3570:29;;;-1:-1:-1;;;3570:29:140;;-1:-1:-1;;;;;3587:3:140;;;3570:29;;;38948:74:169;39038:18;;;39031:30;;;;39097:1;39077:18;;;39070:29;-1:-1:-1;;;39115:18:169;;;39108:33;-1:-1:-1;;;;;;;;;;;3570:8:140;-1:-1:-1;3570:8:140;;-1:-1:-1;39158:19:169;;3570:29:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3626:8:140;;3609:39;;;-1:-1:-1;;;3609:39:140;;-1:-1:-1;;;;;3626:8:140;;;3609:39;;;39400:74:169;39490:18;;;39483:30;39549:1;39529:18;;;39522:29;39587:10;39567:18;;;39560:38;-1:-1:-1;;;;;;;;;;;3609:8:140;-1:-1:-1;3609:8:140;;-1:-1:-1;39615:19:169;;3609:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3691:8:140;:67;;-1:-1:-1;;;;;;3691:67:140;;;335:42:142;3691:67:140;;;;3768:9;:70;;;;;240:42:142;3768:70:140;;;-1:-1:-1;;3899:15:140;;3691:8;;3899:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3875:39;;3992:11;4006:3;3952:62;;;;;:::i;:::-;-1:-1:-1;;;;;39971:15:169;;;39953:34;;40023:15;;40018:2;40003:18;;39996:43;40075:2;40070;40055:18;;40048:30;;;-1:-1:-1;40094:18:169;;;40087:29;40148:3;40133:19;3952:62:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3924:7:140;:92;;-1:-1:-1;;;;;;3924:92:140;-1:-1:-1;;;;;3924:92:140;;;;;;;;;4056:40;;-1:-1:-1;;3924:92:140;4056:40;;;:::i;:::-;-1:-1:-1;;;;;25900:55:169;;;25882:74;;25870:2;25855:18;4056:40:140;;;;;;;;;;;;;;;;;;;;;;;4026:70;;4106:47;4192:20;4215:3;4228:7;;;;;;;;;-1:-1:-1;;;;;4228:7:140;4156:81;;;;;:::i;:::-;-1:-1:-1;;;;;40703:15:169;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4156:81:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4247:7:140;;:85;;-1:-1:-1;;;4247:85:140;;-1:-1:-1;;;;;4266:3:140;41160:15:169;;4247:85:140;;;41142:34:169;;;41192:18;;;41185:43;1892:4:140;41244:18:169;;;41237:34;41307:15;;;41287:18;;;41280:43;41307:15;;-1:-1:-1;4247:7:140;;;:18;;41053:19:169;;4247:85:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4374:7:140;;4363:19;;-1:-1:-1;;;;;4374:7:140;;;;-1:-1:-1;4363:19:140;;-1:-1:-1;4363:19:140;:::i;:::-;-1:-1:-1;;;;;25900:55:169;;;25882:74;;25870:2;25855:18;4363:19:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4342:18:140;:40;;-1:-1:-1;;;;;;4342:40:140;-1:-1:-1;;;;;4342:40:140;;;;;;;;;4418:7;;:60;;-1:-1:-1;;;4418:60:140;;;;;25882:74:169;;;;4418:7:140;;;;:31;;25855:18:169;;4418:60:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:30;:28;:30::i;:::-;4528:42;1340:2;4528:24;:42::i;:::-;4641:7;;4650:9;;4678:7;;4628:60;;4606:19;;-1:-1:-1;;;;;4641:7:140;;;;4650:9;;;4641:7;4678;;;;4628:60;;;:::i;:::-;-1:-1:-1;;;;;40703:15:169;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4628:60:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4790:39:140;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4790:39:140;-1:-1:-1;;;4790:39:140;;;4732:98;;4606:82;;-1:-1:-1;4606:82:140;;4785:3;;4790:39;4732:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4698:6:140;:135;;-1:-1:-1;;;;;;4698:135:140;-1:-1:-1;;;;;4698:135:140;;;;;;;;;4912:9;;4944:7;;4878:113;;4912:9;;;;4944:7;;4698:135;4878:113;;;:::i;:::-;-1:-1:-1;;;;;40703:15:169;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4878:113:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4869:6:140;:122;;-1:-1:-1;;;;;;4869:122:140;-1:-1:-1;;;;;4869:122:140;;;;;;5055:6;;5038:35;;;-1:-1:-1;;;5038:35:140;;5055:6;;;;5038:35;;;43137:74:169;43227:18;;;43220:30;;;;43286:1;43266:18;;;43259:29;43324:8;43304:18;;;43297:36;-1:-1:-1;;;;;;;;;;;5038:8:140;;;43350:19:169;;5038:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:6:140;;5083:35;;;-1:-1:-1;;;5083:35:140;;-1:-1:-1;;;;;5100:6:140;;;5083:35;;;43592:74:169;43682:18;;;43675:30;43741:1;43721:18;;;43714:29;43779:8;43759:18;;;43752:36;-1:-1:-1;;;;;;;;;;;5083:8:140;-1:-1:-1;5083:8:140;;-1:-1:-1;43805:19:169;;5083:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5145:7:140;;5128:37;;;-1:-1:-1;;;5128:37:140;;-1:-1:-1;;;;;5145:7:140;;;5128:37;;;44047:74:169;44137:18;;;44130:30;44196:1;44176:18;;;44169:29;44234:9;44214:18;;;44207:37;-1:-1:-1;;;;;;;;;;;5128:8:140;-1:-1:-1;5128:8:140;;-1:-1:-1;44261:19:169;;5128:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5192:18:140;;5175:59;;;-1:-1:-1;;;5175:59:140;;-1:-1:-1;;;;;5192:18:140;;;5175:59;;;44503:74:169;44593:18;;;44586:30;44652:2;44632:18;;;44625:30;44691:20;44671:18;;;44664:48;-1:-1:-1;;;;;;;;;;;5175:8:140;-1:-1:-1;5175:8:140;;-1:-1:-1;44729:19:169;;5175:59:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5285:8:140;;5268:39;;;-1:-1:-1;;;5268:39:140;;-1:-1:-1;;;;;5285:8:140;;;5268:39;;;44971:74:169;45061:18;;;45054:30;45120:1;45100:18;;;45093:29;45158:10;45138:18;;;45131:38;-1:-1:-1;;;;;;;;;;;5268:8:140;-1:-1:-1;5268:8:140;;-1:-1:-1;45186:19:169;;5268:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5334:9:140;;5317:41;;;-1:-1:-1;;;5317:41:140;;-1:-1:-1;;;;;5334:9:140;;;5317:41;;;45428:74:169;45518:18;;;45511:30;45577:1;45557:18;;;45550:29;45615:11;45595:18;;;45588:39;-1:-1:-1;;;;;;;;;;;5317:8:140;-1:-1:-1;5317:8:140;;-1:-1:-1;45644:19:169;;5317:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5406:7:140;;5430:8;;5406:53;;-1:-1:-1;;;5406:53:140;;-1:-1:-1;;;;;5430:8:140;;;5406:53;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5406:7:140;;;;;;-1:-1:-1;5406:15:140;;-1:-1:-1;12954:18:169;;5406:53:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5469:4:140;;5490:8;;5469:50;;-1:-1:-1;;;5469:50:140;;-1:-1:-1;;;;;5490:8:140;;;5469:50;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5469:4:140;;;:12;;12954:18:169;;5469:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5529:4:140;;5550:8;;5529:50;;-1:-1:-1;;;5529:50:140;;-1:-1:-1;;;;;5550:8:140;;;5529:50;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5529:4:140;;;:12;;12954:18:169;;5529:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5589:4:140;;5610:8;;5589:50;;-1:-1:-1;;;5589:50:140;;-1:-1:-1;;;;;5610:8:140;;;5589:50;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5589:4:140;;;:12;;12954:18:169;;5589:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5649:4:140;;5670:8;;5649:50;;-1:-1:-1;;;5649:50:140;;-1:-1:-1;;;;;5670:8:140;;;5649:50;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5649:4:140;;;:12;;12954:18:169;;5649:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5709:4:140;;5730:8;;5709:50;;-1:-1:-1;;;5709:50:140;;-1:-1:-1;;;;;5730:8:140;;;5709:50;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5709:4:140;;;:12;;12954:18:169;;5709:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5769:3:140;;;5789:8;;5769:49;;-1:-1:-1;;;5769:49:140;;-1:-1:-1;;;;;5789:8:140;;;5769:49;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;;;;5769:3:140;;:11;;12954:18:169;;5769:49:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5828:8:140;;5853;;5828:54;;-1:-1:-1;;;5828:54:140;;-1:-1:-1;;;;;5853:8:140;;;5828:54;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5828:8:140;;;:16;;12954:18:169;;5828:54:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5893:7:140;;5917:6;;5893:51;;-1:-1:-1;;;5893:51:140;;-1:-1:-1;;;;;5917:6:140;;;5893:51;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5893:7:140;;;;;;:15;;12954:18:169;;5893:51:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5954:4:140;;5975:6;;5954:48;;-1:-1:-1;;;5954:48:140;;-1:-1:-1;;;;;5975:6:140;;;5954:48;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;5954:4:140;;;:12;;12954:18:169;;5954:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6012:4:140;;6033:6;;6012:48;;-1:-1:-1;;;6012:48:140;;-1:-1:-1;;;;;6033:6:140;;;6012:48;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;6012:4:140;;;:12;;12954:18:169;;6012:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6070:4:140;;6091:6;;6070:48;;-1:-1:-1;;;6070:48:140;;-1:-1:-1;;;;;6091:6:140;;;6070:48;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;6070:4:140;;;:12;;12954:18:169;;6070:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6128:4:140;;6149:6;;6128:48;;-1:-1:-1;;;6128:48:140;;-1:-1:-1;;;;;6149:6:140;;;6128:48;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;6128:4:140;;;:12;;12954:18:169;;6128:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6186:4:140;;6207:6;;6186:48;;-1:-1:-1;;;6186:48:140;;-1:-1:-1;;;;;6207:6:140;;;6186:48;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;6186:4:140;;;:12;;12954:18:169;;6186:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6244:3:140;;;6264:6;;6244:47;;-1:-1:-1;;;6244:47:140;;-1:-1:-1;;;;;6264:6:140;;;6244:47;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;;;;6244:3:140;;:11;;12954:18:169;;6244:47:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6301:8:140;;6326:6;;6301:52;;-1:-1:-1;;;6301:52:140;;-1:-1:-1;;;;;6326:6:140;;;6301:52;;;12981:74:169;-1:-1:-1;;13071:18:169;;;13064:34;6301:8:140;;;:16;;12954:18:169;;6301:52:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2791:3569;;;;2759:3601::o;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;8538:1036:140:-;8743:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8743:56:140;8812:20;8834:30;8866;8898:17;8931:52;8947:9;8958:7;8967:10;8979:3;8931:15;:52::i;:::-;8811:172;;;;;;;;9016:551;;;;;;;;9068:6;-1:-1:-1;;;;;9016:551:140;;;;;9096:6;-1:-1:-1;;;;;9016:551:140;;;;;1340:2;9016:551;;;;;;9164:9;9016:551;;;;9196:9;9016:551;;;;9231:1;9016:551;;;;9258:1;9016:551;;;;9290:7;9016:551;;;;;;9323:1;9016:551;;;;9348:30;9370:7;9348:3;:21;;:30;;;;:::i;:::-;9016:551;;;;;;;;;;;;;;-1:-1:-1;;;;;9480:3:140;9016:551;;;;;;;;;;;;;9534:22;:15;9552:4;9534:22;:::i;:::-;9016:551;;8994:573;8538:1036;-1:-1:-1;;;;;;;;;;;8538:1036:140:o;19644:425:138:-;19719:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;19719:26:138;19777:16;;;19791:1;19777:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19757:36:138;;;19803:20;;1340:2:140;;19757:36:138;:17;;19803:20;;;;:::i;:::-;;;;;;;;;;:39;19869:26;;;19893:1;19869:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19853:13:138;;;:42;;;19905:16;;19924:20;;19853:42;19919:1;;19905:16;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;19972:15:138;;;19985:1;19972:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19955:14:138;;;:32;;;19997:17;;20017:7;;19955:32;20012:1;;19997:17;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;19997:27:138;;;-1:-1:-1;;;;;19997:27:138;;;;;20054:8;20034:4;:14;;;20049:1;20034:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;20034:28:138;;;-1:-1:-1;;;;;20034:28:138;;;;;19644:425;;;;:::o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10236:135:119;10329:1;10310:20;;;;;10306:58;;10339:25;;-1:-1:-1;;;10339:25:119;;;;;;;;;;;10306:58;10236:135;;;:::o;8711:::-;8804:1;8785:20;;;;;8781:58;;8814:25;;-1:-1:-1;;;8814:25:119;;;;;;;;;;;1214:392:117;674:2;1398:29:116;;;;;731:2:117;1398:29:116;;;;;1383:45;1553:46:117;;;1383:45:116;;1553:46:117;1544:55;1214:392;-1:-1:-1;;;;1214:392:117:o;956:247:123:-;1047:14;1074:13;1089;1106:18;1119:1;1122;1106:12;:18::i;:::-;1073:51;;;;1142:54;1164:1;1167;1170:11;1183:5;1190;1142:21;:54::i;:::-;1135:61;956:247;-1:-1:-1;;;;;;956:247:123:o;6825:628:140:-;6896:7;;;;;-1:-1:-1;;;;;6896:7:140;6888:30;6884:66;;6920:7;;6942;;6920:30;;-1:-1:-1;;;6920:30:140;;-1:-1:-1;;;;;6920:7:140;6942;;;;;6920:30;;;25882:74:169;6920:7:140;;;:21;;25855:18:169;;6920:30:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6884:66;6972:4;;-1:-1:-1;;;;;6972:4:140;6964:27;6960:60;;6993:7;;7015:4;;6993:27;;-1:-1:-1;;;6993:27:140;;-1:-1:-1;;;;;7015:4:140;;;6993:27;;;25882:74:169;6993:7:140;;;:21;;25855:18:169;;6993:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6960:60;7042:4;;-1:-1:-1;;;;;7042:4:140;7034:27;7030:60;;7063:7;;7085:4;;7063:27;;-1:-1:-1;;;7063:27:140;;-1:-1:-1;;;;;7085:4:140;;;7063:27;;;25882:74:169;7063:7:140;;;:21;;25855:18:169;;7063:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7030:60;7112:4;;-1:-1:-1;;;;;7112:4:140;7104:27;7100:60;;7133:7;;7155:4;;7133:27;;-1:-1:-1;;;7133:27:140;;-1:-1:-1;;;;;7155:4:140;;;7133:27;;;25882:74:169;7133:7:140;;;:21;;25855:18:169;;7133:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7100:60;7182:4;;-1:-1:-1;;;;;7182:4:140;7174:27;7170:60;;7203:7;;7225:4;;7203:27;;-1:-1:-1;;;7203:27:140;;-1:-1:-1;;;;;7225:4:140;;;7203:27;;;25882:74:169;7203:7:140;;;:21;;25855:18:169;;7203:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:60;7252:4;;-1:-1:-1;;;;;7252:4:140;7244:27;7240:60;;7273:7;;7295:4;;7273:27;;-1:-1:-1;;;7273:27:140;;-1:-1:-1;;;;;7295:4:140;;;7273:27;;;25882:74:169;7273:7:140;;;:21;;25855:18:169;;7273:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:60;7322:3;;-1:-1:-1;;;;;7322:3:140;7314:26;7310:58;;7342:7;;7364:3;;;7342:26;;-1:-1:-1;;;7342:26:140;;-1:-1:-1;;;;;7364:3:140;;;7342:26;;;25882:74:169;7342:7:140;;;:21;;25855:18:169;7342:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:58;7390:8;;-1:-1:-1;;;;;7390:8:140;7382:31;7378:68;;7415:7;;7437:8;;7415:31;;-1:-1:-1;;;7415:31:140;;-1:-1:-1;;;;;7437:8:140;;;7415:31;;;25882:74:169;7415:7:140;;;:21;;25855:18:169;;7415:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7378:68;6825:628::o;7459:422::-;7528:7;;:346;;-1:-1:-1;;;7528:346:140;;47162:6:169;47195:15;;7528:346:140;;;47177:34:169;1395:5:140;47227:18:169;;;47220:43;;;1455:2:140;47279:18:169;;;47272:43;1511:3:140;47331:18:169;;;47324:43;47383:19;;;47376:44;1639:6:140;47463:19:169;;;47456:44;1701:5:140;47516:19:169;;;47509:44;1774:7:140;47569:19:169;;;47562:44;7528:7:140;47622:19:169;;;47615:51;-1:-1:-1;;;;;7528:7:140;;;;:17;;47124:19:169;;7528:346:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27331:837:4;27501:38;;;-1:-1:-1;;;;;25900:55:169;;;27501:38:4;;;;25882:74:169;;;;27501:38:4;;;;;;;;;;25855:18:169;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;27748:414::-;27416:752;;27331:837;;;;:::o;9580:1225:140:-;9731:20;;;9853:17;9899:14;9912:1;9899:10;:14;:::i;:::-;:19;;9917:1;9899:19;9895:92;;9934:42;;-1:-1:-1;;;9934:42:140;;48357:2:169;9934:42:140;;;48339:21:169;;;48376:18;;;48369:30;48435:34;48415:18;;;48408:62;48487:18;;9934:42:140;48155:356:169;9895:92:140;9997:13;10013:14;10026:1;10013:10;:14;:::i;:::-;9997:30;;10057:10;10043:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10043:25:140;;10037:31;;10109:10;10095:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10095:25:140;;10079:41;;10160:10;10146:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10146:25:140;-1:-1:-1;10130:41:140;-1:-1:-1;10181:23:140;10230:10;:6;10239:1;10230:10;:::i;:::-;10207:34;;;;363:4:105;10207:34:140;:::i;:::-;10181:60;-1:-1:-1;10251:20:140;10287:10;:6;10296:1;10287:10;:::i;:::-;10274:24;;;;:9;:24;:::i;:::-;10251:47;;10314:9;10309:490;10329:10;10325:14;;:1;:14;10309:490;;;10405:7;10409:3;10405:1;:7;:::i;:::-;10400:13;;;;:1;:13;:::i;:::-;10389:7;10393:3;10389:1;:7;:::i;:::-;10379:18;;:6;:18;:::i;:::-;10369:28;;:7;:28;:::i;:::-;:44;;;;;;:::i;:::-;10360:3;10364:1;10360:6;;;;;;;;:::i;:::-;;;;;;:53;;;;;10437:6;10432:11;;:1;:11;10428:84;;10482:15;10463:13;10477:1;10463:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10428:84;10534:6;10529:11;;:1;:11;10525:264;;10579:15;10560:13;10574:1;10560:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10640:1;10625:12;:16;:149;;10773:1;10625:149;;;10664:86;258:3:105;10719:30:140;10741:3;10745:1;10741:6;;;;;;;;:::i;:::-;;;;;;;10719:14;:30::i;:::-;10664:12;;:86;:30;:86::i;:::-;10612:162;;;;:::i;:::-;;;10525:264;10341:3;;;;:::i;:::-;;;;10309:490;;;;9885:920;;;9580:1225;;;;;;;;;:::o;685:365:141:-;805:27;875:11;:18;862:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;862:32:141;;848:46;;909:9;904:140;928:11;:18;924:1;:22;904:140;;;1024:7;1016:16;;991:11;1003:1;991:14;;;;;;;;:::i;:::-;;;;;;;984:49;;;;:::i;:::-;967:11;979:1;967:14;;;;;;;;:::i;:::-;;;;;;;;;;:66;948:3;;;;:::i;:::-;;;;904:140;;;;685:365;;;;:::o;6220:547:123:-;6286:13;;-1:-1:-1;;6654:1:123;6651;6644:20;6693:1;6690;6686:9;6677:18;;6744:5;6740:2;6737:13;6729:5;6725:2;6721:14;6717:34;6708:43;;;6220:547;;;;;:::o;7208:3395::-;7358:14;7450:5;7459:1;7450:10;7446:3151;;7521:11;7513:5;:19;;;;;:::i;:::-;;7504:28;;7446:3151;;;7677:11;7668:5;:20;7664:66;;7697:33;;-1:-1:-1;;;7697:33:123;;;;;;;;;;;7664:66;7829:17;7964:11;7961:1;7958;7951:25;8543:1;8528:12;;:16;;8513:32;;8495:15;8944;;;8940:29;;;8936:37;;;8078:20;;;8067:32;;;9073:15;;;;8125:21;;8775:19;;;9064:24;;;;9459:1;8663:25;;;;9440:1;:15;;9439:21;;9703;;;9699:25;;9688:36;9776:21;;;9772:25;;9761:36;9850:21;;;9846:25;;9835:36;9924:21;;;9920:25;;9909:36;9998:21;;;9994:25;;9983:36;10073:21;;;10069:25;;;10058:36;;;10557:15;;;;;;-1:-1:-1;;;;7208:3395:123:o;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;13365:43;13259:156;-1:-1:-1;;;13259:156:9:o;13421:143::-;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;6521:146:140:-;6579:13;6612:48;6639:2;1340;6612:26;:48::i;4594:437:123:-;4690:14;4771:11;;;;;;;4869:19;4875:3;:12;;;4869:19;;;;;4960:64;;4771:1;;4985;:11;;4998;4771;4869:19;4960:21;:64::i;15439:1484:9:-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;4180:25:169;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;4153:18:169;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;12999:55:169;;16424:32:9;;;12981:74:169;13071:18;;;13064:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;12954:18:169;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;53024:55:169;;16587:43:9;;;53006:74:169;53096:18;;;53089:34;;;;53139:18;;;53132:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;52979:18:169;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;53024:55:169;;16769:41:9;;;53006:74:169;53096:18;;;53089:34;;;;53139:18;;;53132:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;52979:18:169;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;53379:2:169;16824:61:9;;;53361:21:169;53418:2;53398:18;;;53391:30;53457:34;53437:18;;;53430:62;53528:21;53508:18;;;53501:49;53567:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;53177:415:169;16720:176:9;16905:11;16911:4;16905:5;:11::i;812:217:111:-;886:13;623:6:105;1824:42:111;258:3:105;1824:42:111;;;;1823:72;-1:-1:-1;;;1805:90:111;2185:11;;;-1:-1:-1;;2178:35:111;1004:18;1805:90;2178:35;1004:8;:18::i;953:236:9:-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;4113:3600:122:-;4170:14;4196:11;4217:12;4244:1;4249;4244:6;4240:34;;-1:-1:-1;;;;301:17:105;-1:-1:-1;4252:22:122;;-1:-1:-1;4252:22:122;4240:34;-1:-1:-1;4316:1:122;4343;4333:12;;4330:109;;;4411:14;;;4376:1;4372:12;4330:109;4470:8;4463:4;:15;4459:3060;;;-1:-1:-1;;;301:17:105;-1:-1:-1;4574:1:122;-1:-1:-1;;;;;4595:41:122;;4592:161;;;4721:14;;;-1:-1:-1;;4670:20:122;4592:161;4784:3;4778:4;4774:14;4771:62;;;4810:20;;;4805:3;4801:30;;4771:62;4870:21;;4865:3;4861:31;4922:3;4912:14;;4909:62;;;4948:20;;;4943:3;4939:30;;4909:62;5008:21;;5003:3;4999:31;5060:3;5050:14;;5047:62;;;5086:20;;;5081:3;5077:30;;5047:62;5146:21;;5141:3;5137:31;5198:3;5188:14;;5185:62;;;5224:20;;;5219:3;5215:30;;5185:62;5284:21;;5279:3;5275:31;5336:4;5326:15;;5323:63;;;5363:20;;;5358:3;5354:30;;5323:63;5423:21;;5418:3;5414:31;5475:4;5465:15;;5462:63;;;5502:20;;;5497:3;5493:30;;5462:63;5562:21;;5557:3;5553:31;5614:4;5604:15;;5601:63;;;5641:20;;;5636:3;5632:30;;5601:63;5701:21;;5696:3;5692:31;;;;5743:15;;5740:63;;;5780:20;;;5775:3;5771:30;;5740:63;5840:21;;5835:3;5831:31;5892:5;5882:16;;5879:64;;;5920:20;;;5915:3;5911:30;;5879:64;5980:21;;5975:3;5971:31;6032:5;6022:16;;6019:64;;;6060:20;;;6055:3;6051:30;;6019:64;6120:21;;6115:3;6111:31;6172:5;6162:16;;6159:64;;;6200:20;;;6195:3;6191:30;;6159:64;6260:21;;6255:3;6251:31;6312:5;6302:16;;6299:64;;;6340:20;;;6335:3;6331:30;;6299:64;6400:21;;6395:3;6391:31;6452:6;6442:17;;6439:65;;;6481:20;;;6476:3;6472:30;;6439:65;6541:21;;6536:3;6532:31;6593:6;6583:17;;6580:65;;;6622:20;;;6617:3;6613:30;;6580:65;6682:21;;6677:3;6673:31;6734:6;6724:17;;6721:65;;;6763:20;;;6758:3;6754:30;;6721:65;6823:21;;6818:3;6814:31;6875:6;6865:17;;6862:65;;;6904:20;;;6899:3;6895:30;;6862:65;6964:21;;6959:3;6955:31;7016:7;7006:18;;7003:66;;;7046:20;;;7041:3;7037:30;;7003:66;7106:21;;7101:3;7097:31;7158:7;7148:18;;7145:66;;;7188:20;;;7183:3;7179:30;;7145:66;7248:21;;7243:3;7239:31;7300:7;7290:18;;7287:66;;;7330:20;;;7325:3;7321:30;;7287:66;7390:21;;7385:3;7381:31;7442:7;7432:18;;7429:66;;;7472:20;;;7467:3;7463:30;;7429:66;;4459:3060;7589:6;7599:1;7589:11;7585:59;;7609:35;;-1:-1:-1;;;7609:35:122;;;;;26406:25:169;;;26447:18;;;26440:34;;;26379:18;;7609:35:122;26232:248:169;7585:59:122;7662:6;:44;;7700:6;7662:44;;;7671:26;7691:6;-1:-1:-1;;7671:26:122;:::i;11187:393:9:-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;4249:2493;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;25900:55:169;;4911:25:9;;;25882:74:169;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;25855:18:169;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;55058:2:169;4984:74:9;;;55040:21:169;55077:18;;;55070:30;;;;55136:34;55116:18;;;55109:62;55207:34;55187:18;;;55180:62;55259:19;;4984:74:9;54856:428:169;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;12999:55:169;;;;12981:74;;13086:2;13071:18;;13064:34;12969:2;12954:18;;12744:360;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;12999:55:169;;;12981:74;;13071:18;;;13064:34;12954:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;55536:55:169;;;55518:74;;-1:-1:-1;;;;;;55628:33:169;;;55608:18;;;55601:61;;;;55678:18;;;55671:34;55736:2;55721:18;;55714:34;55505:3;55490:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;55961:2:169;6418:171:9;;;55943:21:169;56000:2;55980:18;;;55973:30;56039:34;56019:18;;;56012:62;56110:17;56090:18;;;56083:45;56145:19;;6418:171:9;55759:411:169;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;12981:74:169;;;;13071:18;;;13064:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;12954:18:169;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;53006:74:169;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;52979:18:169;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;53006:74:169;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;52979:18:169;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;12981:74:169;;;;13071:18;;;13064:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;12954:18:169;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;53006:74:169;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;52979:18:169;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;53006:74:169;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;52979:18:169;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:169:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:169;;209:43;;199:71;;266:1;263;256:12;629:681;800:2;852:21;;;922:13;;825:18;;;944:22;;;771:4;;800:2;1023:15;;;;997:2;982:18;;;771:4;1066:218;1080:6;1077:1;1074:13;1066:218;;;1145:13;;-1:-1:-1;;;;;1141:62:169;1129:75;;1259:15;;;;1224:12;;;;1102:1;1095:9;1066:218;;;-1:-1:-1;1301:3:169;;629:681;-1:-1:-1;;;;;;629:681:169:o;1315:250::-;1400:1;1410:113;1424:6;1421:1;1418:13;1410:113;;;1500:11;;;1494:18;1481:11;;;1474:39;1446:2;1439:10;1410:113;;;-1:-1:-1;;1557:1:169;1539:16;;1532:27;1315:250::o;1570:271::-;1612:3;1650:5;1644:12;1677:6;1672:3;1665:19;1693:76;1762:6;1755:4;1750:3;1746:14;1739:4;1732:5;1728:16;1693:76;:::i;:::-;1823:2;1802:15;-1:-1:-1;;1798:29:169;1789:39;;;;1830:4;1785:50;;1570:271;-1:-1:-1;;1570:271:169:o;1846:1765::-;2079:2;2131:21;;;2201:13;;2104:18;;;2223:22;;;2050:4;;2079:2;2264;;2282:18;;;;2319:1;2362:15;;;2347:31;;2343:40;;2406:15;;;2050:4;;2470:1112;2486:6;2481:3;2478:15;2470:1112;;;-1:-1:-1;;2555:22:169;;;2551:36;2539:49;;2611:13;;2698:9;;-1:-1:-1;;;;;2694:58:169;2679:74;;2792:11;;2786:18;2824:15;;;2817:27;;;2905:19;;2651:15;;;2937:24;;;3118:21;;;;2984:2;3066:17;;;3054:30;;3050:39;;;3008:15;;;;3163:1;3177:296;3193:8;3188:3;3185:17;3177:296;;;3299:2;3295:7;3286:6;3278;3274:19;3270:33;3263:5;3256:48;3331:42;3366:6;3355:8;3349:15;3331:42;:::i;:::-;3402:17;;;;3321:52;-1:-1:-1;3445:14:169;;;;3221:1;3212:11;3177:296;;;-1:-1:-1;;;3560:12:169;;;;3496:6;-1:-1:-1;;3525:15:169;;;;2512:1;2503:11;2470:1112;;;-1:-1:-1;3599:6:169;;1846:1765;-1:-1:-1;;;;;;;;;;1846:1765:169:o;3616:156::-;3682:20;;3742:4;3731:16;;3721:27;;3711:55;;3762:1;3759;3752:12;3777:252;3841:6;3849;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3941:27;3958:9;3941:27;:::i;:::-;3931:37;;3987:36;4019:2;4008:9;4004:18;3987:36;:::i;:::-;3977:46;;3777:252;;;;;:::o;4216:461::-;4268:3;4306:5;4300:12;4333:6;4328:3;4321:19;4359:4;4388:2;4383:3;4379:12;4372:19;;4425:2;4418:5;4414:14;4446:1;4456:196;4470:6;4467:1;4464:13;4456:196;;;4535:13;;-1:-1:-1;;;;;;4531:40:169;4519:53;;4592:12;;;;4627:15;;;;4492:1;4485:9;4456:196;;;-1:-1:-1;4668:3:169;;4216:461;-1:-1:-1;;;;;4216:461:169:o;4682:1185::-;4900:4;4929:2;4969;4958:9;4954:18;4999:2;4988:9;4981:21;5022:6;5057;5051:13;5088:6;5080;5073:22;5114:2;5104:12;;5147:2;5136:9;5132:18;5125:25;;5209:2;5199:6;5196:1;5192:14;5181:9;5177:30;5173:39;5247:2;5239:6;5235:15;5268:1;5278:560;5292:6;5289:1;5286:13;5278:560;;;5357:22;;;-1:-1:-1;;5353:36:169;5341:49;;5413:13;;5459:9;;5481:18;;;5526:48;5558:15;;;5459:9;5526:48;:::i;:::-;5615:11;;;5609:18;5664:19;;;5647:15;;;5640:44;5609:18;5512:62;-1:-1:-1;5707:51:169;5512:62;5609:18;5707:51;:::i;:::-;5816:12;;;;5697:61;-1:-1:-1;;;5781:15:169;;;;5314:1;5307:9;5278:560;;;-1:-1:-1;5855:6:169;;4682:1185;-1:-1:-1;;;;;;;;4682:1185:169:o;5872:803::-;6034:4;6063:2;6103;6092:9;6088:18;6133:2;6122:9;6115:21;6156:6;6191;6185:13;6222:6;6214;6207:22;6260:2;6249:9;6245:18;6238:25;;6322:2;6312:6;6309:1;6305:14;6294:9;6290:30;6286:39;6272:53;;6360:2;6352:6;6348:15;6381:1;6391:255;6405:6;6402:1;6399:13;6391:255;;;6498:2;6494:7;6482:9;6474:6;6470:22;6466:36;6461:3;6454:49;6526:40;6559:6;6550;6544:13;6526:40;:::i;:::-;6516:50;-1:-1:-1;6624:12:169;;;;6589:15;;;;6427:1;6420:9;6391:255;;;-1:-1:-1;6663:6:169;;5872:803;-1:-1:-1;;;;;;;5872:803:169:o;6680:119::-;6765:8;6758:5;6754:20;6747:5;6744:31;6734:59;;6789:1;6786;6779:12;6804:383;6878:6;6886;6894;6947:2;6935:9;6926:7;6922:23;6918:32;6915:52;;;6963:1;6960;6953:12;6915:52;7002:9;6989:23;7021:30;7045:5;7021:30;:::i;:::-;7070:5;-1:-1:-1;7122:2:169;7107:18;;7094:32;;-1:-1:-1;7145:36:169;7177:2;7162:18;;7145:36;:::i;:::-;7135:46;;6804:383;;;;;:::o;7387:1096::-;7589:4;7618:2;7658;7647:9;7643:18;7688:2;7677:9;7670:21;7711:6;7746;7740:13;7777:6;7769;7762:22;7803:2;7793:12;;7836:2;7825:9;7821:18;7814:25;;7898:2;7888:6;7885:1;7881:14;7870:9;7866:30;7862:39;7936:2;7928:6;7924:15;7957:1;7967:487;7981:6;7978:1;7975:13;7967:487;;;8046:22;;;-1:-1:-1;;8042:36:169;8030:49;;8102:13;;8147:9;;-1:-1:-1;;;;;8143:58:169;8128:74;;8241:11;;8235:18;8273:15;;;8266:27;;;8316:58;8358:15;;;8235:18;8316:58;:::i;:::-;8432:12;;;;8306:68;-1:-1:-1;;8397:15:169;;;;8003:1;7996:9;7967:487;;8488:154;-1:-1:-1;;;;;8567:5:169;8563:54;8556:5;8553:65;8543:93;;8632:1;8629;8622:12;8647:965;8780:6;8788;8796;8804;8812;8820;8828;8836;8889:3;8877:9;8868:7;8864:23;8860:33;8857:53;;;8906:1;8903;8896:12;8857:53;8945:9;8932:23;8964:31;8989:5;8964:31;:::i;:::-;9014:5;-1:-1:-1;9071:2:169;9056:18;;9043:32;9084:33;9043:32;9084:33;:::i;:::-;9136:7;-1:-1:-1;9195:2:169;9180:18;;9167:32;9208:33;9167:32;9208:33;:::i;:::-;9260:7;-1:-1:-1;9319:2:169;9304:18;;9291:32;9332;9291;9332;:::i;:::-;9383:7;-1:-1:-1;9437:3:169;9422:19;;9409:33;;-1:-1:-1;9489:3:169;9474:19;;9461:33;;-1:-1:-1;9513:37:169;9545:3;9530:19;;9513:37;:::i;:::-;9503:47;;9569:37;9601:3;9590:9;9586:19;9569:37;:::i;:::-;9559:47;;8647:965;;;;;;;;;;;:::o;9617:117::-;9702:6;9695:5;9691:18;9684:5;9681:29;9671:57;;9724:1;9721;9714:12;9739:245;9797:6;9850:2;9838:9;9829:7;9825:23;9821:32;9818:52;;;9866:1;9863;9856:12;9818:52;9905:9;9892:23;9924:30;9948:5;9924:30;:::i;9989:896::-;10113:6;10121;10129;10137;10145;10153;10161;10214:3;10202:9;10193:7;10189:23;10185:33;10182:53;;;10231:1;10228;10221:12;10182:53;10270:9;10257:23;10289:31;10314:5;10289:31;:::i;:::-;10339:5;-1:-1:-1;10396:2:169;10381:18;;10368:32;10409:33;10368:32;10409:33;:::i;:::-;10461:7;-1:-1:-1;10520:2:169;10505:18;;10492:32;10533:33;10492:32;10533:33;:::i;:::-;10585:7;-1:-1:-1;10644:2:169;10629:18;;10616:32;10657;10616;10657;:::i;:::-;10708:7;-1:-1:-1;10762:3:169;10747:19;;10734:33;;-1:-1:-1;10786:37:169;10818:3;10803:19;;10786:37;:::i;:::-;10776:47;;10842:37;10874:3;10863:9;10859:19;10842:37;:::i;:::-;10832:47;;9989:896;;;;;;;;;;:::o;11345:127::-;11406:10;11401:3;11397:20;11394:1;11387:31;11437:4;11434:1;11427:15;11461:4;11458:1;11451:15;11477:275;11548:2;11542:9;11613:2;11594:13;;-1:-1:-1;;11590:27:169;11578:40;;11648:18;11633:34;;11669:22;;;11630:62;11627:88;;;11695:18;;:::i;:::-;11731:2;11724:22;11477:275;;-1:-1:-1;11477:275:169:o;11757:164::-;11833:13;;11882;;11875:21;11865:32;;11855:60;;11911:1;11908;11901:12;11926:813;12032:6;12085:3;12073:9;12064:7;12060:23;12056:33;12053:53;;;12102:1;12099;12092:12;12053:53;12135:2;12129:9;12177:3;12169:6;12165:16;12247:6;12235:10;12232:22;12211:18;12199:10;12196:34;12193:62;12190:88;;;12258:18;;:::i;:::-;12294:2;12287:22;12331:16;;12356:30;12331:16;12356:30;:::i;:::-;12395:21;;12461:2;12446:18;;12440:25;12474:33;12440:25;12474:33;:::i;:::-;12535:2;12523:15;;12516:32;12581:46;12623:2;12608:18;;12581:46;:::i;:::-;12576:2;12568:6;12564:15;12557:71;12661:46;12703:2;12692:9;12688:18;12661:46;:::i;:::-;12656:2;12644:15;;12637:71;12648:6;11926:813;-1:-1:-1;;;11926:813:169:o;13109:249::-;13178:6;13231:2;13219:9;13210:7;13206:23;13202:32;13199:52;;;13247:1;13244;13237:12;13199:52;13279:9;13273:16;13298:30;13322:5;13298:30;:::i;13363:127::-;13424:10;13419:3;13415:20;13412:1;13405:31;13455:4;13452:1;13445:15;13479:4;13476:1;13469:15;13495:170;13562:8;13590:10;;;13602;;;13586:27;;13625:11;;;13622:37;;;13639:18;;:::i;14002:184::-;14072:6;14125:2;14113:9;14104:7;14100:23;14096:32;14093:52;;;14141:1;14138;14131:12;14093:52;-1:-1:-1;14164:16:169;;14002:184;-1:-1:-1;14002:184:169:o;15004:268::-;15091:6;15144:2;15132:9;15123:7;15119:23;15115:32;15112:52;;;15160:1;15157;15150:12;15112:52;15192:9;15186:16;15211:31;15236:5;15211:31;:::i;16362:434::-;16414:3;16452:5;16446:12;16479:6;16474:3;16467:19;16505:4;16534:2;16529:3;16525:12;16518:19;;16571:2;16564:5;16560:14;16592:1;16602:169;16616:6;16613:1;16610:13;16602:169;;;16677:13;;16665:26;;16711:12;;;;16746:15;;;;16638:1;16631:9;16602:169;;16801:1945;17006:2;16995:9;16988:21;17018:53;17067:2;17056:9;17052:18;17043:6;17037:13;-1:-1:-1;;;;;563:54:169;551:67;;497:127;17018:53;16969:4;17118:2;17110:6;17106:15;17100:22;17131:52;17179:2;17168:9;17164:18;17150:12;-1:-1:-1;;;;;563:54:169;551:67;;497:127;17131:52;;17237:2;17229:6;17225:15;17219:22;17214:2;17203:9;17199:18;17192:50;17297:2;17289:6;17285:15;17279:22;17273:3;17262:9;17258:19;17251:51;17357:3;17349:6;17345:16;17339:23;17333:3;17322:9;17318:19;17311:52;17418:3;17410:6;17406:16;17400:23;17394:3;17383:9;17379:19;17372:52;17479:3;17471:6;17467:16;17461:23;17455:3;17444:9;17440:19;17433:52;17522:3;17514:6;17510:16;17504:23;17546:3;17585:2;17580;17569:9;17565:18;17558:30;17625:2;17617:6;17613:15;17607:22;17597:32;;;17648:3;17687:2;17682;17671:9;17667:18;17660:30;17739:2;17731:6;17727:15;17721:22;17699:44;;;17762:6;17787:3;17826:2;17821;17810:9;17806:18;17799:30;17852:64;17911:3;17900:9;17896:19;17880:14;17852:64;:::i;:::-;17838:78;;17965:2;17957:6;17953:15;17947:22;17925:44;;17992:2;17988:7;18014:3;18081:2;18069:9;18061:6;18057:22;18053:31;18048:2;18037:9;18033:18;18026:59;18108:51;18152:6;18136:14;18108:51;:::i;:::-;18094:65;;18208:2;18200:6;18196:15;18190:22;18168:44;;;18231:3;18298:2;18286:9;18278:6;18274:22;18270:31;18265:2;18254:9;18250:18;18243:59;18325:51;18369:6;18353:14;18325:51;:::i;:::-;18311:65;;18425:2;18417:6;18413:15;18407:22;18385:44;;;;18449:3;18461:55;18511:3;18500:9;18496:19;18480:14;-1:-1:-1;;;;;563:54:169;551:67;;497:127;18461:55;18553:16;;18547:23;;-1:-1:-1;18590:3:169;18602:55;18637:19;;;18547:23;-1:-1:-1;;;;;563:54:169;551:67;;497:127;18602:55;18699:16;;;;18693:23;18673:18;;18666:51;;;;-1:-1:-1;18734:6:169;16801:1945;-1:-1:-1;16801:1945:169:o;18751:709::-;18816:5;18869:3;18862:4;18854:6;18850:17;18846:27;18836:55;;18887:1;18884;18877:12;18836:55;18916:6;18910:13;18942:4;18965:18;18961:2;18958:26;18955:52;;;18987:18;;:::i;:::-;19033:2;19030:1;19026:10;19056:28;19080:2;19076;19072:11;19056:28;:::i;:::-;19118:15;;;19188;;;19184:24;;;19149:12;;;;19220:15;;;19217:35;;;19248:1;19245;19238:12;19217:35;19284:2;19276:6;19272:15;19261:26;;19296:135;19312:6;19307:3;19304:15;19296:135;;;19378:10;;19366:23;;19329:12;;;;19409;;;;19296:135;;;19449:5;18751:709;-1:-1:-1;;;;;;;18751:709:169:o;19465:861::-;19630:6;19638;19646;19654;19662;19670;19723:3;19711:9;19702:7;19698:23;19694:33;19691:53;;;19740:1;19737;19730:12;19691:53;19769:9;19763:16;19753:26;;19819:2;19808:9;19804:18;19798:25;19788:35;;19863:2;19852:9;19848:18;19842:25;19832:35;;19907:2;19896:9;19892:18;19886:25;19876:35;;19955:3;19944:9;19940:19;19934:26;19979:18;20020:2;20012:6;20009:14;20006:34;;;20036:1;20033;20026:12;20006:34;20059:72;20123:7;20114:6;20103:9;20099:22;20059:72;:::i;:::-;20049:82;;20177:3;20166:9;20162:19;20156:26;20140:42;;20207:2;20197:8;20194:16;20191:36;;;20223:1;20220;20213:12;20191:36;;20246:74;20312:7;20301:8;20290:9;20286:24;20246:74;:::i;:::-;20236:84;;;19465:861;;;;;;;;:::o;20331:380::-;20410:1;20406:12;;;;20453;;;20474:61;;20528:4;20520:6;20516:17;20506:27;;20474:61;20581:2;20573:6;20570:14;20550:18;20547:38;20544:161;;20627:10;20622:3;20618:20;20615:1;20608:31;20662:4;20659:1;20652:15;20690:4;20687:1;20680:15;20544:161;;20331:380;;;:::o;21621:192::-;21700:13;;-1:-1:-1;;;;;21742:46:169;;21732:57;;21722:85;;21803:1;21800;21793:12;21818:378;21906:6;21914;21922;21975:2;21963:9;21954:7;21950:23;21946:32;21943:52;;;21991:1;21988;21981:12;21943:52;22014:40;22044:9;22014:40;:::i;:::-;22004:50;;22073:49;22118:2;22107:9;22103:18;22073:49;:::i;:::-;22063:59;;22141:49;22186:2;22175:9;22171:18;22141:49;:::i;22201:127::-;22262:10;22257:3;22253:20;22250:1;22243:31;22293:4;22290:1;22283:15;22317:4;22314:1;22307:15;22333:216;22373:1;-1:-1:-1;;;;;22460:2:169;22457:1;22453:10;22482:3;22472:37;;22489:18;;:::i;:::-;22527:10;;22523:20;;;;;22333:216;-1:-1:-1;;22333:216:169:o;22554:197::-;-1:-1:-1;;;;;22676:10:169;;;22688;;;22672:27;;22711:11;;;22708:37;;;22725:18;;:::i;23080:218::-;23227:2;23216:9;23209:21;23190:4;23247:45;23288:2;23277:9;23273:18;23265:6;23247:45;:::i;23303:125::-;23368:9;;;23389:10;;;23386:36;;;23402:18;;:::i;23433:127::-;23494:10;23489:3;23485:20;23482:1;23475:31;23525:4;23522:1;23515:15;23549:4;23546:1;23539:15;23565:492;23626:3;23664:5;23658:12;23691:6;23686:3;23679:19;23717:4;23746:2;23741:3;23737:12;23730:19;;23783:2;23776:5;23772:14;23804:1;23814:218;23828:6;23825:1;23822:13;23814:218;;;23893:13;;-1:-1:-1;;;;;23889:62:169;23877:75;;23972:12;;;;24007:15;;;;23850:1;23843:9;23814:218;;24062:1108;24109:3;24153:5;24147:12;24180:4;24175:3;24168:17;24206:57;24257:4;24252:3;24248:14;24234:12;24206:57;:::i;:::-;24282:4;24323:14;;;24317:21;24368:14;;;24354:12;;;24347:36;24432:21;;24462:20;;;24536:23;;;;-1:-1:-1;24282:4:169;;-1:-1:-1;;24500:13:169;;;;-1:-1:-1;24608:379:169;24624:6;24619:3;24616:15;24608:379;;;24693:6;24687:13;24730:1;24726:2;24723:9;24713:160;;-1:-1:-1;;;24764:31:169;;24822:4;24819:1;24812:15;24854:4;24771:1;24844:15;24713:160;24886:17;;24962:15;;;;24925:14;;;;24650:1;24641:11;24608:379;;;24612:3;;25035:4;25028:5;25024:16;25018:23;24996:45;;25084:3;25077:5;25073:15;25066:4;25061:3;25057:14;25050:39;25105:59;25158:5;25142:14;25105:59;:::i;25175:556::-;-1:-1:-1;;;;;25438:6:169;25434:47;25423:9;25416:66;25518:3;25513:2;25502:9;25498:18;25491:31;25397:4;25539:51;25585:3;25574:9;25570:19;25562:6;25539:51;:::i;:::-;-1:-1:-1;;;;;25626:55:169;;;;25621:2;25606:18;;25599:83;-1:-1:-1;25713:2:169;25698:18;25691:34;25531:59;25175:556;-1:-1:-1;;25175:556:169:o;25967:127::-;26028:10;26023:3;26019:20;26016:1;26009:31;26059:4;26056:1;26049:15;26083:4;26080:1;26073:15;26099:128;26166:9;;;26187:11;;;26184:37;;;26201:18;;:::i;26938:674::-;27204:4;-1:-1:-1;;;;;27306:2:169;27298:6;27294:15;27283:9;27276:34;27358:2;27350:6;27346:15;27341:2;27330:9;27326:18;27319:43;;27398:3;27393:2;27382:9;27378:18;27371:31;27419:51;27465:3;27454:9;27450:19;27442:6;27419:51;:::i;:::-;-1:-1:-1;;;;;27506:55:169;;;;27501:2;27486:18;;27479:83;-1:-1:-1;27593:3:169;27578:19;27571:35;27411:59;26938:674;-1:-1:-1;;;26938:674:169:o;27617:148::-;27705:4;27684:12;;;27698;;;27680:31;;27723:13;;27720:39;;;27739:18;;:::i;27770:151::-;27860:4;27853:12;;;27839;;;27835:31;;27878:14;;27875:40;;;27895:18;;:::i;27926:363::-;28021:6;28074:2;28062:9;28053:7;28049:23;28045:32;28042:52;;;28090:1;28087;28080:12;28042:52;28123:9;28117:16;28156:18;28148:6;28145:30;28142:50;;;28188:1;28185;28178:12;28142:50;28211:72;28275:7;28266:6;28255:9;28251:22;28211:72;:::i;28294:200::-;-1:-1:-1;;;;;28430:10:169;;;28418;;;28414:27;;28453:12;;;28450:38;;;28468:18;;:::i;29899:120::-;29939:1;29965;29955:35;;29970:18;;:::i;:::-;-1:-1:-1;30004:9:169;;29899:120::o;30024:135::-;30063:3;30084:17;;;30081:43;;30104:18;;:::i;:::-;-1:-1:-1;30151:1:169;30140:13;;30024:135::o;30466:202::-;30533:6;30586:2;30574:9;30565:7;30561:23;30557:32;30554:52;;;30602:1;30599;30592:12;30554:52;30625:37;30652:9;30625:37;:::i;30673:854::-;30871:4;30919:2;30908:9;30904:18;-1:-1:-1;;;;;31022:2:169;31014:6;31010:15;30999:9;30992:34;31045:2;31083;31078;31067:9;31063:18;31056:30;31106:6;31141;31135:13;31172:6;31164;31157:22;31210:3;31199:9;31195:19;31188:26;;31249:2;31241:6;31237:15;31223:29;;31270:1;31280:169;31294:6;31291:1;31288:13;31280:169;;;31355:13;;31343:26;;31424:15;;;;31389:12;;;;31316:1;31309:9;31280:169;;;31284:3;;31466;31458:11;;;;31517:2;31509:6;31505:15;31500:2;31489:9;31485:18;31478:43;;;30673:854;;;;;;:::o;31532:485::-;31645:6;31653;31661;31714:2;31702:9;31693:7;31689:23;31685:32;31682:52;;;31730:1;31727;31720:12;31682:52;31759:9;31753:16;31743:26;;31809:2;31798:9;31794:18;31788:25;31778:35;;31857:2;31846:9;31842:18;31836:25;31884:18;31876:6;31873:30;31870:50;;;31916:1;31913;31906:12;31870:50;31939:72;32003:7;31994:6;31983:9;31979:22;31939:72;:::i;:::-;31929:82;;;31532:485;;;;;:::o;32216:634::-;32346:6;32354;32362;32370;32378;32386;32394;32402;32455:3;32443:9;32434:7;32430:23;32426:33;32423:53;;;32472:1;32469;32462:12;32423:53;32501:9;32495:16;32485:26;;32551:2;32540:9;32536:18;32530:25;32520:35;;32595:2;32584:9;32580:18;32574:25;32564:35;;32639:2;32628:9;32624:18;32618:25;32608:35;;32683:3;32672:9;32668:19;32662:26;32652:36;;32728:3;32717:9;32713:19;32707:26;32697:36;;32773:3;32762:9;32758:19;32752:26;32742:36;;32797:47;32839:3;32828:9;32824:19;32797:47;:::i;34015:686::-;34291:4;-1:-1:-1;;;;;34401:2:169;34393:6;34389:15;34378:9;34371:34;34453:2;34445:6;34441:15;34436:2;34425:9;34421:18;34414:43;;34493:3;34488:2;34477:9;34473:18;34466:31;34520:56;34571:3;34560:9;34556:19;34548:6;34520:56;:::i;:::-;34624:9;34616:6;34612:22;34607:2;34596:9;34592:18;34585:50;34652:43;34688:6;34680;34652:43;:::i;35074:338::-;-1:-1:-1;;;;;35253:6:169;35249:55;35238:9;35231:74;35341:2;35336;35325:9;35321:18;35314:30;35212:4;35361:45;35402:2;35391:9;35387:18;35379:6;35361:45;:::i;42061:447::-;42235:4;-1:-1:-1;;;;;42345:2:169;42337:6;42333:15;42322:9;42315:34;42397:2;42389:6;42385:15;42380:2;42369:9;42365:18;42358:43;;42437:2;42432;42421:9;42417:18;42410:30;42457:45;42498:2;42487:9;42483:18;42475:6;42457:45;:::i;45674:362::-;45879:6;45868:9;45861:25;45922:6;45917:2;45906:9;45902:18;45895:34;45965:2;45960;45949:9;45945:18;45938:30;45842:4;45985:45;46026:2;46015:9;46011:18;46003:6;45985:45;:::i;47677:287::-;47806:3;47844:6;47838:13;47860:66;47919:6;47914:3;47907:4;47899:6;47895:17;47860:66;:::i;:::-;47942:16;;;;;47677:287;-1:-1:-1;;47677:287:169:o;47969:181::-;48000:1;48026:8;48061:2;48058:1;48054:10;48083:3;48073:37;;48090:18;;:::i;:::-;48128:10;;48124:20;;;;;47969:181;-1:-1:-1;;47969:181:169:o;48516:189::-;48555:1;48581:8;48616:2;48613:1;48609:10;48638:3;48628:37;;48645:18;;:::i;48710:168::-;48783:9;;;48814;;48831:15;;;48825:22;;48811:37;48801:71;;48852:18;;:::i;48883:247::-;48954:8;48994:10;;;49006;;;48990:27;49037:20;;;;48954:8;49076:24;;;49066:58;;49104:18;;:::i;:::-;49066:58;;48883:247;;;;:::o;49135:173::-;49203:8;49244:10;;;49232;;;49228:27;;49267:12;;;49264:38;;;49282:18;;:::i;49313:200::-;49379:9;;;49352:4;49407:9;;49435:10;;49447:12;;;49431:29;49470:12;;;49462:21;;49428:56;49425:82;;;49487:18;;:::i;49518:383::-;49675:3;49713:6;49707:13;49729:66;49788:6;49783:3;49776:4;49768:6;49764:17;49729:66;:::i;:::-;49817:16;;;;49842:21;;;-1:-1:-1;49890:4:169;49879:16;;49518:383;-1:-1:-1;49518:383:169:o;49906:422::-;49995:1;50038:5;49995:1;50052:270;50073:7;50063:8;50060:21;50052:270;;;50132:4;50128:1;50124:6;50120:17;50114:4;50111:27;50108:53;;;50141:18;;:::i;:::-;50191:7;50181:8;50177:22;50174:55;;;50211:16;;;;50174:55;50290:22;;;;50250:15;;;;50052:270;;;50056:3;49906:422;;;;;:::o;50333:806::-;50382:5;50412:8;50402:80;;-1:-1:-1;50453:1:169;50467:5;;50402:80;50501:4;50491:76;;-1:-1:-1;50538:1:169;50552:5;;50491:76;50583:4;50601:1;50596:59;;;;50669:1;50664:130;;;;50576:218;;50596:59;50626:1;50617:10;;50640:5;;;50664:130;50701:3;50691:8;50688:17;50685:43;;;50708:18;;:::i;:::-;-1:-1:-1;;50764:1:169;50750:16;;50779:5;;50576:218;;50878:2;50868:8;50865:16;50859:3;50853:4;50850:13;50846:36;50840:2;50830:8;50827:16;50822:2;50816:4;50813:12;50809:35;50806:77;50803:159;;;-1:-1:-1;50915:19:169;;;50947:5;;50803:159;50994:34;51019:8;51013:4;50994:34;:::i;:::-;51064:6;51060:1;51056:6;51052:19;51043:7;51040:32;51037:58;;;51075:18;;:::i;:::-;51113:20;;50333:806;-1:-1:-1;;;50333:806:169:o;51144:131::-;51204:5;51233:36;51260:8;51254:4;51233:36;:::i;51280:719::-;51360:6;51413:2;51401:9;51392:7;51388:23;51384:32;51381:52;;;51429:1;51426;51419:12;51381:52;51462:9;51456:16;51491:18;51532:2;51524:6;51521:14;51518:34;;;51548:1;51545;51538:12;51518:34;51586:6;51575:9;51571:22;51561:32;;51631:7;51624:4;51620:2;51616:13;51612:27;51602:55;;51653:1;51650;51643:12;51602:55;51682:2;51676:9;51704:2;51700;51697:10;51694:36;;;51710:18;;:::i;:::-;51752:53;51795:2;51776:13;;-1:-1:-1;;51772:27:169;51801:2;51768:36;51752:53;:::i;:::-;51739:66;;51828:2;51821:5;51814:17;51868:7;51863:2;51858;51854;51850:11;51846:20;51843:33;51840:53;;;51889:1;51886;51879:12;51840:53;51902:67;51966:2;51961;51954:5;51950:14;51945:2;51941;51937:11;51902:67;:::i;:::-;-1:-1:-1;51988:5:169;51280:719;-1:-1:-1;;;;51280:719:169:o;52004:570::-;52266:34;52261:3;52254:47;52331:34;52326:2;52321:3;52317:12;52310:56;52396:12;52391:2;52386:3;52382:12;52375:34;52236:3;52438:6;52432:13;52454:73;52520:6;52515:2;52510:3;52506:12;52501:2;52493:6;52489:15;52454:73;:::i;:::-;52547:16;;;;52565:2;52543:25;;52004:570;-1:-1:-1;;52004:570:169:o;53597:384::-;-1:-1:-1;;;;;;53782:33:169;;53770:46;;53839:13;;53752:3;;53861:74;53839:13;53924:1;53915:11;;53908:4;53896:17;;53861:74;:::i;:::-;53955:16;;;;53973:1;53951:24;;53597:384;-1:-1:-1;;;53597:384:169:o;54237:614::-;54366:6;54374;54427:2;54415:9;54406:7;54402:23;54398:32;54395:52;;;54443:1;54440;54433:12;54395:52;54476:9;54470:16;54505:18;54546:2;54538:6;54535:14;54532:34;;;54562:1;54559;54552:12;54532:34;54585:72;54649:7;54640:6;54629:9;54625:22;54585:72;:::i;:::-;54575:82;;54703:2;54692:9;54688:18;54682:25;54666:41;;54732:2;54722:8;54719:16;54716:36;;;54748:1;54745;54738:12;54716:36;;54771:74;54837:7;54826:8;54815:9;54811:24;54771:74;:::i;:::-;54761:84;;;54237:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "105060": [
        {
          "start": 26558,
          "length": 32
        },
        {
          "start": 26773,
          "length": 32
        },
        {
          "start": 26928,
          "length": 32
        },
        {
          "start": 27437,
          "length": 32
        },
        {
          "start": 31021,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_GetIdFromPrice()": "061794b3",
    "test_SwapExactNATIVEForTokens()": "38a637ed",
    "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens()": "2debd6fd",
    "test_SwapExactTokensForNATIVE()": "4415cf9d",
    "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens()": "3f6fb2f7",
    "test_SwapExactTokensForTokens()": "72b01c7a",
    "test_SwapNATIVEForExactTokens()": "8f8d57ea",
    "test_SwapTokensForExactNATIVE()": "6d090840",
    "test_SwapTokensForExactTokens()": "7594f3a1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Uint128x128Math__PowUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_GetIdFromPrice\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapNATIVEForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This file only test single hop swaps using V2.1 pairs Test scenarios: 1. swapExactTokensForTokens 2. swapExactTokensForNATIVE 3. swapExactNATIVEForTokens 4. swapTokensForExactTokens 5. swapTokensForExactNATIVE 6. swapNATIVEForExactTokens 7. swapExactTokensForTokensSupportingFeeOnTransferTokens 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBRouter.Swap.t.sol\":\"LiquidityBinRouterSwapTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126\",\"dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96\",\"dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156\",\"dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe\",\"dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980\",\"dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d\",\"dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11\",\"dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc\",\"dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf\",\"dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c\",\"dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15\",\"dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561\",\"dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f\",\"dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009\",\"dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee\",\"dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156\",\"dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5\",\"dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1\",\"dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e\",\"dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3\",\"dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8\",\"dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de\",\"dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8\",\"dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5\",\"dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4\",\"dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e\",\"dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20\",\"dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1\",\"dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f\",\"dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242\",\"dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY\"]},\"test/LBRouter.Swap.t.sol\":{\"keccak256\":\"0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85\",\"dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937\",\"dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f\",\"dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170\",\"dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "Uint128x128Math__PowUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_GetIdFromPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapNATIVEForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBRouter.Swap.t.sol": "LiquidityBinRouterSwapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d",
        "urls": [
          "bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db",
          "dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44",
        "urls": [
          "bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126",
          "dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01",
        "urls": [
          "bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96",
          "dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4",
        "urls": [
          "bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156",
          "dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495",
        "urls": [
          "bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe",
          "dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2",
        "urls": [
          "bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980",
          "dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b",
        "urls": [
          "bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d",
          "dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3",
        "urls": [
          "bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11",
          "dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9",
        "urls": [
          "bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246",
          "dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62",
        "urls": [
          "bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56",
          "dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca",
        "urls": [
          "bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc",
          "dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a",
        "urls": [
          "bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf",
          "dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2",
        "urls": [
          "bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c",
          "dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727",
        "urls": [
          "bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15",
          "dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47",
        "urls": [
          "bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561",
          "dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9",
        "urls": [
          "bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f",
          "dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49",
        "urls": [
          "bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f",
          "dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2",
        "urls": [
          "bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009",
          "dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084",
        "urls": [
          "bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee",
          "dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151",
        "urls": [
          "bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156",
          "dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9",
        "urls": [
          "bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5",
          "dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3",
        "urls": [
          "bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1",
          "dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a",
        "urls": [
          "bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e",
          "dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658",
        "urls": [
          "bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3",
          "dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154",
        "urls": [
          "bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8",
          "dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994",
        "urls": [
          "bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de",
          "dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba",
        "urls": [
          "bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8",
          "dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1",
        "urls": [
          "bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5",
          "dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901",
        "urls": [
          "bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4",
          "dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed",
        "urls": [
          "bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e",
          "dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63",
        "urls": [
          "bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20",
          "dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b",
        "urls": [
          "bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1",
          "dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba",
        "urls": [
          "bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f",
          "dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2",
        "urls": [
          "bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242",
          "dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY"
        ],
        "license": "MIT"
      },
      "test/LBRouter.Swap.t.sol": {
        "keccak256": "0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673",
        "urls": [
          "bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85",
          "dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ"
        ],
        "license": "UNLICENSED"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00",
        "urls": [
          "bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937",
          "dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6",
        "urls": [
          "bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f",
          "dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb",
        "urls": [
          "bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170",
          "dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBRouter.Swap.t.sol",
    "id": 103008,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39192
      ],
      "AvalancheAddresses": [
        106823
      ],
      "BinHelper": [
        72278
      ],
      "BitMath": [
        75786
      ],
      "Constants": [
        72438
      ],
      "ERC20": [
        42210
      ],
      "ERC20Mock": [
        122897
      ],
      "ERC20TransferTaxMock": [
        122951
      ],
      "Encoded": [
        75993
      ],
      "EnumerableMap": [
        48826
      ],
      "EnumerableSet": [
        49439
      ],
      "FeeHelper": [
        72631
      ],
      "FlashBorrower": [
        123680
      ],
      "Hooks": [
        73505
      ],
      "IERC20": [
        42288
      ],
      "IERC20Metadata": [
        42314
      ],
      "ILBFactory": [
        67981
      ],
      "ILBFlashLoanCallback": [
        68006
      ],
      "ILBHooks": [
        68179
      ],
      "ILBLegacyFactory": [
        68545
      ],
      "ILBLegacyPair": [
        68961
      ],
      "ILBLegacyRouter": [
        69370
      ],
      "ILBPair": [
        69932
      ],
      "ILBRouter": [
        70464
      ],
      "ILBToken": [
        70587
      ],
      "ISovrynLBFactoryV1": [
        70661
      ],
      "ISovrynLBPairV1": [
        70904
      ],
      "ISovrynLBRouter01": [
        71213
      ],
      "ISovrynLBRouter02": [
        71303
      ],
      "IWNATIVE": [
        71319
      ],
      "ImmutableClone": [
        73583
      ],
      "Initializable": [
        41695
      ],
      "LBFactory": [
        59243
      ],
      "LBPair": [
        62123
      ],
      "LBPairBeaconProxy": [
        62222
      ],
      "LBPairUpgradeableBeacon": [
        62426
      ],
      "LBQuoter": [
        63714
      ],
      "LBRouter": [
        66964
      ],
      "LBToken": [
        67483
      ],
      "LiquidityBinRouterSwapTest": [
        103007
      ],
      "LiquidityConfigurations": [
        76163
      ],
      "OracleHelper": [
        74240
      ],
      "Ownable": [
        40391
      ],
      "Ownable2StepUpgradeable": [
        39329
      ],
      "OwnableUpgradeable": [
        39524
      ],
      "PackedUint128Math": [
        76517
      ],
      "PairParameterHelper": [
        75097
      ],
      "PriceHelper": [
        75271
      ],
      "ReentrancyGuardUpgradeable": [
        75400
      ],
      "SafeCast": [
        77265
      ],
      "SafeERC20": [
        42737
      ],
      "SampleMath": [
        77690
      ],
      "SovrynLBLibrary": [
        75606
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3561
      ],
      "StdCheats": [
        6414
      ],
      "StdInvariant": [
        6774
      ],
      "StdStorage": [
        7546
      ],
      "StdStyle": [
        10716
      ],
      "StdUtils": [
        12094
      ],
      "Test": [
        12146
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        106622
      ],
      "TokenHelper": [
        75692
      ],
      "TransparentUpgradeableProxy": [
        41441
      ],
      "TreeMath": [
        78622
      ],
      "Uint256x256Math": [
        79258
      ],
      "UpgradeableBeacon": [
        41258
      ],
      "Utils": [
        106790
      ],
      "Vm": [
        15989
      ],
      "WNATIVE": [
        123990
      ],
      "console": [
        24113
      ],
      "console2": [
        24113
      ],
      "safeconsole": [
        38829
      ],
      "stdError": [
        6480
      ],
      "stdJson": [
        7366
      ],
      "stdMath": [
        7508
      ],
      "stdStorage": [
        9505
      ],
      "stdToml": [
        11308
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:20067:138",
    "nodes": [
      {
        "id": 100803,
        "nodeType": "PragmaDirective",
        "src": "40:24:138",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 100804,
        "nodeType": "ImportDirective",
        "src": "66:37:138",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "test/helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103008,
        "sourceUnit": 106623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103007,
        "nodeType": "ContractDefinition",
        "src": "555:19551:138",
        "nodes": [
          {
            "id": 100955,
            "nodeType": "FunctionDefinition",
            "src": "611:1174:138",
            "nodes": [],
            "body": {
              "id": 100954,
              "nodeType": "Block",
              "src": "644:1141:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100811,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "654:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LiquidityBinRouterSwapTest_$103007_$",
                          "typeString": "type(contract super LiquidityBinRouterSwapTest)"
                        }
                      },
                      "id": 100813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "660:5:138",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105749,
                      "src": "654:11:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 100814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:13:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100815,
                  "nodeType": "ExpressionStatement",
                  "src": "654:13:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100819,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105024,
                        "src": "705:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 100820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 100816,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "678:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 100818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "686:18:138",
                      "memberName": "setPresetOpenState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58716,
                      "src": "678:26:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                        "typeString": "function (uint16,bool) external"
                      }
                    },
                    "id": 100821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:50:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100822,
                  "nodeType": "ExpressionStatement",
                  "src": "678:50:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100826,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105085,
                        "src": "793:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100827,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "799:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100828,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "805:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100829,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105024,
                        "src": "813:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100823,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "773:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "780:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64062,
                      "src": "773:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69932_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100831,
                  "nodeType": "ExpressionStatement",
                  "src": "773:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100835,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "860:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 100836,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "869:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100837,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "875:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100838,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105024,
                        "src": "883:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100832,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "840:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "847:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64062,
                      "src": "840:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69932_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "840:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100840,
                  "nodeType": "ExpressionStatement",
                  "src": "840:60:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100844,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105100,
                        "src": "930:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 100845,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "940:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 100846,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "949:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100847,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105024,
                        "src": "957:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100841,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "910:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "917:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64062,
                      "src": "910:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69932_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:64:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100849,
                  "nodeType": "ExpressionStatement",
                  "src": "910:64:138"
                },
                {
                  "assignments": [
                    100851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100851,
                      "mutability": "mutable",
                      "name": "startingBalance",
                      "nameLocation": "993:15:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 100954,
                      "src": "985:23:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100857,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 100854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1016:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          },
                          "typeName": {
                            "id": 100853,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "1016:7:138",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          }
                        ],
                        "id": 100852,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "1011:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 100855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1011:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint112",
                        "typeString": "type(uint112)"
                      }
                    },
                    "id": 100856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1025:3:138",
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "1011:17:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:43:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100861,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "1051:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1043:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1043:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1043:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100865,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1066:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 100864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1058:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100863,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1058:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1058:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100867,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100851,
                        "src": "1073:15:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100858,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "1038:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:51:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100869,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:51:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100873,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105085,
                            "src": "1112:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1104:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100871,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1104:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1104:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100877,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1127:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 100876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1119:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100875,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1119:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1119:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100879,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100851,
                        "src": "1134:15:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100870,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "1099:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:51:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100881,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:51:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100885,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105100,
                            "src": "1173:8:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          ],
                          "id": 100884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1165:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1165:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:17:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100889,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1192:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 100888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100887,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100891,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100851,
                        "src": "1199:15:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100882,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "1160:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:55:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100893,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:55:138"
                },
                {
                  "assignments": [
                    100898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100898,
                      "mutability": "mutable",
                      "name": "liquidityParameters",
                      "nameLocation": "1263:19:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 100954,
                      "src": "1226:56:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters"
                      },
                      "typeName": {
                        "id": 100897,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100896,
                          "name": "ILBRouter.LiquidityParameters",
                          "nameLocations": [
                            "1226:9:138",
                            "1236:19:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70104,
                          "src": "1226:29:138"
                        },
                        "referencedDeclaration": 70104,
                        "src": "1226:29:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_storage_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100900,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105085,
                        "src": "1320:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100901,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "1326:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 100902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1332:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      },
                      {
                        "id": 100903,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "1340:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 100904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      {
                        "hexValue": "30",
                        "id": 100905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 100899,
                      "name": "getLiquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106093,
                      "src": "1297:22:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$70104_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                      }
                    },
                    "id": 100906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:128:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100911,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100898,
                        "src": "1384:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100908,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "1364:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1371:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64150,
                      "src": "1364:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$70104_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100913,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:40:138"
                },
                {
                  "expression": {
                    "id": 100923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100914,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100898,
                      "src": "1415:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100916,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "1460:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 100917,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "1469:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "hexValue": "313030653138",
                          "id": 100918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        },
                        {
                          "id": 100919,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105018,
                          "src": "1483:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 100920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1491:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 100921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100915,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106093,
                        "src": "1437:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$70104_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1437:60:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1415:82:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100924,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:82:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100931,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100898,
                        "src": "1569:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 100925,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "1507:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 100927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1514:18:138",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64300,
                        "src": "1507:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$70104_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 100930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 100928,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100898,
                            "src": "1540:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 100929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1560:7:138",
                          "memberName": "amountX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70078,
                          "src": "1540:27:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1507:61:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$70104_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:82:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100933,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:82:138"
                },
                {
                  "expression": {
                    "id": 100943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100934,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100898,
                      "src": "1600:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100936,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105100,
                          "src": "1645:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 100937,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "1655:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "hexValue": "323030653138",
                          "id": 100938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1664:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          "value": "200e18"
                        },
                        {
                          "id": 100939,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105018,
                          "src": "1672:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 100940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1680:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 100941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1684:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100935,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106093,
                        "src": "1622:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$70104_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1622:64:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1600:86:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100944,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:86:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100951,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100898,
                        "src": "1758:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 100945,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "1696:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 100947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1703:18:138",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64300,
                        "src": "1696:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$70104_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 100950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 100948,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100898,
                            "src": "1729:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$70104_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 100949,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1749:7:138",
                          "memberName": "amountY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70080,
                          "src": "1729:27:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1696:61:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$70104_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:82:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100953,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:82:138"
                }
              ]
            },
            "baseFunctions": [
              105749
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "620:5:138",
            "overrides": {
              "id": 100809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "635:8:138"
            },
            "parameters": {
              "id": 100808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:138"
            },
            "returnParameters": {
              "id": 100810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100986,
            "nodeType": "FunctionDefinition",
            "src": "1791:273:138",
            "nodes": [],
            "body": {
              "id": 100985,
              "nodeType": "Block",
              "src": "1834:230:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100960,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "1852:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 100985,
                      "src": "1844:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 100959,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100958,
                          "name": "ILBPair",
                          "nameLocations": [
                            "1844:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "1844:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "1844:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100968,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 100963,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105085,
                          "src": "1888:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100964,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "1894:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100965,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "1900:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 100961,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "1859:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 100962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1867:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "1859:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 100966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1859:58:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 100967,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1918:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "1859:65:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1844:80:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100972,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100960,
                        "src": "1957:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "hexValue": "393234353231333036343035333732393037303230303633393038313830323734393536363636",
                        "id": 100973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:39:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        },
                        "value": "924521306405372907020063908180274956666"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        }
                      ],
                      "expression": {
                        "id": 100969,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "1935:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1942:14:138",
                      "memberName": "getIdFromPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63955,
                      "src": "1935:21:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint256_$returns$_t_uint24_$",
                        "typeString": "function (contract ILBPair,uint256) view external returns (uint24)"
                      }
                    },
                    "id": 100974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:68:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 100975,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:68:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100979,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100960,
                        "src": "2036:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 100982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "315f303030",
                          "id": 100980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 100981,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105018,
                          "src": "2050:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "src": "2042:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 100976,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "2014:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2021:14:138",
                      "memberName": "getPriceFromId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63973,
                      "src": "2014:21:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint24_$returns$_t_uint256_$",
                        "typeString": "function (contract ILBPair,uint24) view external returns (uint256)"
                      }
                    },
                    "id": 100983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:43:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100984,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:43:138"
                }
              ]
            },
            "functionSelector": "061794b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_GetIdFromPrice",
            "nameLocation": "1800:19:138",
            "parameters": {
              "id": 100956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:138"
            },
            "returnParameters": {
              "id": 100957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:138"
            },
            "scope": 103007,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101242,
            "nodeType": "FunctionDefinition",
            "src": "2070:2203:138",
            "nodes": [],
            "body": {
              "id": 101241,
              "nodeType": "Block",
              "src": "2118:2155:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100990,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "2136:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2128:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 100989,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2128:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100992,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 100991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2147:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2128:24:138"
                },
                {
                  "assignments": [
                    100995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100995,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "2171:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2163:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 100994,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100993,
                          "name": "ILBPair",
                          "nameLocations": [
                            "2163:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "2163:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "2163:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101003,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 100998,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105085,
                          "src": "2207:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100999,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "2213:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101000,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "2219:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 100996,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "2178:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 100997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2186:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "2178:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 101001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2178:58:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 101002,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2237:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "2178:65:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:80:138"
                },
                {
                  "assignments": [
                    null,
                    101005,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 101005,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "2264:17:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2256:25:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101004,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2256:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 101012,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101008,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100995,
                        "src": "2304:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 101009,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "2310:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 101010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101006,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "2286:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2293:10:138",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64033,
                      "src": "2286:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 101011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:39:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2253:72:138"
                },
                {
                  "assignments": [
                    101017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101017,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2358:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2336:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 101016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101015,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "2336:9:138",
                            "2346:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "2336:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "2336:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101022,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101019,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105085,
                        "src": "2376:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101020,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "2382:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 101018,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "2365:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 101021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:22:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2336:51:138"
                },
                {
                  "assignments": [
                    101024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101024,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "2406:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2398:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101023,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2398:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101032,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101029,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2445:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2437:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2437:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 101025,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "2422:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 101026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2427:9:138",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "2422:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 101031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2398:53:138"
                },
                {
                  "assignments": [
                    101034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101034,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2471:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101241,
                      "src": "2463:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101033,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2463:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101049,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101037,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "2528:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101038,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101005,
                        "src": "2538:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101039,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "2557:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101042,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2571:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2563:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2563:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101044,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2578:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2584:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2578:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2596:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2578:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101035,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "2496:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2503:24:138",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64572,
                      "src": "2496:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2462:136:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101051,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101034,
                        "src": "2618:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101052,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101005,
                        "src": "2629:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a31",
                        "id": 101053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2648:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        },
                        "value": "test_SwapExactTokensForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        }
                      ],
                      "id": 101050,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2609:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101055,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101061,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2725:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2717:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101059,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2717:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 101057,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "2702:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 101058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2707:9:138",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "2702:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 101063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:29:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101064,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101024,
                          "src": "2733:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 101065,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101034,
                          "src": "2749:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2733:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a32",
                        "id": 101067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2760:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        },
                        "value": "test_SwapExactTokensForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        }
                      ],
                      "id": 101056,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2693:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2693:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101069,
                  "nodeType": "ExpressionStatement",
                  "src": "2693:102:138"
                },
                {
                  "expression": {
                    "id": 101078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 101070,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101005,
                          "src": "2867:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 101071,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2864:22:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101074,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100995,
                          "src": "2907:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 101075,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100990,
                          "src": "2913:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 101076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2923:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 101072,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "2889:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2896:10:138",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64033,
                        "src": "2889:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 101077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2889:39:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "2864:64:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101079,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:64:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101085,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "3007:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3017:31:138",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70037,
                              "src": "3007:41:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3049:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3007:50:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 101090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 101088,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101005,
                              "src": "3059:17:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3079:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3059:21:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 101091,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101005,
                            "src": "3082:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 101083,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2967:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2971:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2967:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2967:146:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101080,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2938:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2941:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "2938:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:185:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101094,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:185:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101098,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "3165:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101099,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101005,
                          "src": "3175:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3175:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101102,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "3198:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101105,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3212:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3204:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101103,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3204:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3204:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101107,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3219:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3219:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3237:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3219:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101095,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "3133:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3140:24:138",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64572,
                      "src": "3133:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3133:106:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101112,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:106:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101118,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "3338:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3348:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "3338:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3375:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3338:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101121,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3385:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 101122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3391:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3385:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3403:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3385:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 101125,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3406:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 101126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3412:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3406:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 101116,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3315:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3319:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3315:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3315:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101113,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3286:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3289:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "3286:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101129,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101133,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "3474:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101134,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101005,
                        "src": "3484:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101135,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "3503:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101138,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3517:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3509:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3509:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3509:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101140,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3524:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3530:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3524:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3542:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3524:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101130,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "3442:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3449:24:138",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64572,
                      "src": "3442:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3442:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101145,
                  "nodeType": "ExpressionStatement",
                  "src": "3442:102:138"
                },
                {
                  "expression": {
                    "id": 101155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 101146,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "3606:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 101148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3611:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "3606:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3636:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3623:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101150,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 101149,
                              "name": "IERC20",
                              "nameLocations": [
                                "3627:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "3627:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "3627:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 101151,
                          "nodeType": "ArrayTypeName",
                          "src": "3627:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 101154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3623:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3606:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 101156,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101162,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "3687:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3697:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "3687:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 101164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3723:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3687:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 101160,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3664:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3668:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3664:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3664:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101157,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3648:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "3648:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101167,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101171,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "3775:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101172,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101005,
                        "src": "3785:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101173,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "3804:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101176,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3818:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3810:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3810:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3810:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101178,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3825:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3831:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3825:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3825:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101168,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "3743:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3750:24:138",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64572,
                      "src": "3743:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101183,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:102:138"
                },
                {
                  "expression": {
                    "id": 101193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 101184,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "3900:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 101186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3905:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "3900:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 101191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3930:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 101190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3917:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101188,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 101187,
                              "name": "IERC20",
                              "nameLocations": [
                                "3921:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "3921:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "3921:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 101189,
                          "nodeType": "ArrayTypeName",
                          "src": "3921:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 101192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3917:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3900:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 101194,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:32:138"
                },
                {
                  "expression": {
                    "id": 101201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 101195,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101017,
                          "src": "3942:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 101198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3947:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "3942:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 101199,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3957:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3942:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101200,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "3962:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "3942:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 101202,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:24:138"
                },
                {
                  "expression": {
                    "id": 101209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 101203,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101017,
                          "src": "3976:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 101206,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3981:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "3976:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 101207,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3991:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3976:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101208,
                      "name": "taxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105100,
                      "src": "3996:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                        "typeString": "contract ERC20TransferTaxMock"
                      }
                    },
                    "src": "3976:28:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 101210,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:28:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101216,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "4066:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4076:24:138",
                              "memberName": "LBRouter__PairNotCreated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69961,
                              "src": "4066:34:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256) pure"
                              }
                            },
                            "id": 101218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4101:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4066:43:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 101219,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105085,
                            "src": "4111:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          {
                            "id": 101220,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105100,
                            "src": "4117:8:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          {
                            "id": 101221,
                            "name": "DEFAULT_BIN_STEP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105024,
                            "src": "4127:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                              "typeString": "contract ERC20TransferTaxMock"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 101214,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4043:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4047:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4043:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4043:101:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101211,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4014:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4017:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "4014:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:140:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101224,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:140:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101228,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100990,
                        "src": "4196:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101229,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101005,
                        "src": "4206:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101230,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101017,
                        "src": "4225:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101233,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4239:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4231:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101231,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4231:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101235,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4246:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4252:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4246:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4264:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4246:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101225,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "4164:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4171:24:138",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64572,
                      "src": "4164:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101240,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:102:138"
                }
              ]
            },
            "functionSelector": "72b01c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForTokens",
            "nameLocation": "2079:29:138",
            "parameters": {
              "id": 100987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:2:138"
            },
            "returnParameters": {
              "id": 100988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101493,
            "nodeType": "FunctionDefinition",
            "src": "4279:2180:138",
            "nodes": [],
            "body": {
              "id": 101492,
              "nodeType": "Block",
              "src": "4327:2132:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101246,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4345:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4337:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101245,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4337:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101248,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 101247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4356:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4337:24:138"
                },
                {
                  "assignments": [
                    101251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101251,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "4380:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4372:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 101250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101249,
                          "name": "ILBPair",
                          "nameLocations": [
                            "4372:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "4372:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "4372:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101259,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 101254,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "4416:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 101255,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "4425:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101256,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "4431:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 101252,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "4387:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 101253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4395:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "4387:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 101257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4387:61:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 101258,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4449:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "4387:68:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4372:83:138"
                },
                {
                  "assignments": [
                    null,
                    101261,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 101261,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "4476:17:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4468:25:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101260,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4468:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 101268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101264,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101251,
                        "src": "4516:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 101265,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "4522:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 101266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4532:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101262,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "4498:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4505:10:138",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64033,
                      "src": "4498:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 101267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:73:138"
                },
                {
                  "assignments": [
                    101273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101273,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "4571:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4549:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 101272,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101271,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "4549:9:138",
                            "4559:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "4549:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "4549:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101278,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101275,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "4589:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101276,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "4595:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 101274,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "4578:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 101277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:25:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4549:54:138"
                },
                {
                  "assignments": [
                    101280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101280,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4622:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4614:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101279,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4614:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101286,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 101283,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4646:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 101282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4638:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4638:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4638:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 101285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4652:7:138",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4638:21:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4614:45:138"
                },
                {
                  "assignments": [
                    101288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101288,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4679:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101492,
                      "src": "4671:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4671:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101291,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "4737:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101292,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101261,
                        "src": "4747:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101293,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "4766:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101298,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4788:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4780:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101296,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4780:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4780:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4772:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4772:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4772:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101301,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4796:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4802:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4796:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4814:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4796:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101289,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "4692:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4699:24:138",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64677,
                      "src": "4692:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:133:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:155:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101308,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101288,
                        "src": "4845:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101309,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101261,
                        "src": "4856:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a31",
                        "id": 101310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4875:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        }
                      ],
                      "id": 101307,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4836:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101312,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 101316,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4937:4:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 101315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4929:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 101314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4929:7:138",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 101317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4929:13:138",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4943:7:138",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4929:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101319,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101280,
                          "src": "4952:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 101320,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101288,
                          "src": "4968:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4952:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a32",
                        "id": 101322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4979:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        }
                      ],
                      "id": 101313,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4920:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:94:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101324,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:94:138"
                },
                {
                  "expression": {
                    "id": 101333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 101325,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101261,
                          "src": "5086:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 101326,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5083:22:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101329,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101251,
                          "src": "5126:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 101330,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101246,
                          "src": "5132:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 101331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5142:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 101327,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "5108:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5115:10:138",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64033,
                        "src": "5108:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 101332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5108:40:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "5083:65:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101334,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:65:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101340,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "5227:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5237:31:138",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70037,
                              "src": "5227:41:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5269:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5227:50:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 101345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 101343,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101261,
                              "src": "5279:17:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5299:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5279:21:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 101346,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101261,
                            "src": "5302:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 101338,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5187:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5191:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5187:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5187:146:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101335,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5158:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5161:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "5158:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:185:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101349,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:185:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101353,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "5398:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101354,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101261,
                          "src": "5408:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5428:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5408:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101357,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "5431:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101362,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5453:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5445:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5445:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5445:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5437:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5437:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5437:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101365,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5461:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5467:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5461:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5461:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101350,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "5353:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5360:24:138",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64677,
                      "src": "5353:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:137:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101370,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:137:138"
                },
                {
                  "expression": {
                    "id": 101377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 101371,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101273,
                          "src": "5546:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 101374,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5551:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "5546:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 101375,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5561:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5546:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101376,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "5566:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "5546:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 101378,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101384,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "5619:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5629:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "5619:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 101386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5656:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5619:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 101389,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "5674:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 101388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5666:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101387,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5666:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5666:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 101382,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5596:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5600:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5596:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5596:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101379,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5580:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5583:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "5580:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101393,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101397,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "5736:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101398,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101261,
                          "src": "5746:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5766:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5746:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101401,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "5769:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101406,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5791:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5783:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101404,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5783:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5783:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5775:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5775:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101409,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5799:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5805:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5799:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5817:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5799:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101394,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "5691:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5698:24:138",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64677,
                      "src": "5691:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5691:137:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101414,
                  "nodeType": "ExpressionStatement",
                  "src": "5691:137:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101420,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "5927:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5937:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "5927:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5964:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5927:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101423,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5974:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 101424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5980:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5974:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5992:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5974:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 101427,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5995:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 101428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6001:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5995:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 101418,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5904:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5908:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5904:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5904:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5875:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5878:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "5875:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101431,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101435,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "6063:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101436,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101261,
                        "src": "6073:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101437,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "6092:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101442,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6114:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6106:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101440,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6106:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6106:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6098:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101438,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6098:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6098:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101445,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6122:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6128:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6122:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6140:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6122:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101432,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "6031:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6038:24:138",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64677,
                      "src": "6031:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:111:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101450,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:111:138"
                },
                {
                  "expression": {
                    "id": 101460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 101451,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "6204:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 101453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6209:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "6204:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6234:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6221:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101455,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 101454,
                              "name": "IERC20",
                              "nameLocations": [
                                "6225:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "6225:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "6225:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 101456,
                          "nodeType": "ArrayTypeName",
                          "src": "6225:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 101459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6221:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "6204:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 101461,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101467,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "6285:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6295:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "6285:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 101469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6321:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6285:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 101465,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6262:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6266:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6262:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6262:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101462,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6246:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6249:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "6246:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6246:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101472,
                  "nodeType": "ExpressionStatement",
                  "src": "6246:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101476,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101246,
                        "src": "6373:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101477,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101261,
                        "src": "6383:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101478,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101273,
                        "src": "6402:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101483,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6424:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6416:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101481,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6416:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6416:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6408:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101479,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6408:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6408:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101486,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6432:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6438:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6432:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6450:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6432:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101473,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "6341:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6348:24:138",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64677,
                      "src": "6341:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:111:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101491,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:111:138"
                }
              ]
            },
            "functionSelector": "4415cf9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVE",
            "nameLocation": "4288:29:138",
            "parameters": {
              "id": 101243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:2:138"
            },
            "returnParameters": {
              "id": 101244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4327:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101736,
            "nodeType": "FunctionDefinition",
            "src": "6465:2158:138",
            "nodes": [],
            "body": {
              "id": 101735,
              "nodeType": "Block",
              "src": "6513:2110:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101497,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6531:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6523:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101496,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6523:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101499,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 101498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6542:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6523:24:138"
                },
                {
                  "assignments": [
                    101502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101502,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "6566:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6558:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 101501,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101500,
                          "name": "ILBPair",
                          "nameLocations": [
                            "6558:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "6558:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "6558:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101510,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 101505,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "6602:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 101506,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "6611:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101507,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "6617:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 101503,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "6573:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 101504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6581:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "6573:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 101508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6573:61:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 101509,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6635:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "6573:68:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6558:83:138"
                },
                {
                  "assignments": [
                    null,
                    101512,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 101512,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "6662:17:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6654:25:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101511,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6654:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 101519,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101515,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101502,
                        "src": "6702:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 101516,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101497,
                        "src": "6708:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 101517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6718:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101513,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "6684:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6691:10:138",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64033,
                      "src": "6684:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 101518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6684:39:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6651:72:138"
                },
                {
                  "assignments": [
                    101524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101524,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "6756:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6734:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 101523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101522,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "6734:9:138",
                            "6744:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "6734:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "6734:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101529,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101526,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "6774:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 101527,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "6783:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 101525,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "6763:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 101528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:25:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6734:54:138"
                },
                {
                  "assignments": [
                    101531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101531,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "6807:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6799:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6799:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101539,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101536,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6846:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6838:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101534,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6838:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6838:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 101532,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "6823:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 101533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6828:9:138",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "6823:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 101538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6823:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6799:53:138"
                },
                {
                  "assignments": [
                    101541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101541,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "6872:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101735,
                      "src": "6864:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101540,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6864:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101557,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101546,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "6947:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101547,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "6966:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6980:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6972:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6972:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6972:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101552,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6987:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6993:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6987:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7005:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6987:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101542,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "6885:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6892:24:138",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64763,
                        "src": "6885:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 101545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 101544,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "6924:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "6885:48:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 101556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6885:131:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6863:153:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101559,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101541,
                        "src": "7036:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101560,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "7047:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a31",
                        "id": 101561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7066:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        }
                      ],
                      "id": 101558,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7027:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101563,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101569,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7143:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7135:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101567,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7135:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7135:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 101565,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "7120:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 101566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7125:9:138",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "7120:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 101571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7120:29:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101572,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101531,
                          "src": "7151:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 101573,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101541,
                          "src": "7167:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7151:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a32",
                        "id": 101575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7178:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        }
                      ],
                      "id": 101564,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7111:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7111:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101577,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:102:138"
                },
                {
                  "expression": {
                    "id": 101586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 101578,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101512,
                          "src": "7227:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 101579,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7224:22:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101582,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101502,
                          "src": "7267:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 101583,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "7273:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 101584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7283:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 101580,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "7249:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7256:10:138",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64033,
                        "src": "7249:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 101585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:39:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "7224:64:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101587,
                  "nodeType": "ExpressionStatement",
                  "src": "7224:64:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101593,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "7426:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7436:31:138",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70037,
                              "src": "7426:41:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7468:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7426:50:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 101598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 101596,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101512,
                              "src": "7478:17:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7498:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7478:21:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 101599,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101512,
                            "src": "7501:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 101591,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7386:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7390:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7386:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7386:146:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101588,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7357:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7360:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "7357:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:185:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101602,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:185:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101608,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101512,
                          "src": "7614:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7634:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7614:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101611,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "7637:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7651:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7643:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7643:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7643:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101616,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7658:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7664:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7658:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7676:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7658:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101603,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "7552:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7559:24:138",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64763,
                        "src": "7552:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 101607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 101606,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "7591:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7552:48:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 101620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:135:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101621,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:135:138"
                },
                {
                  "expression": {
                    "id": 101628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 101622,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101524,
                          "src": "7742:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 101625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7747:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "7742:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 101626,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7742:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101627,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "7762:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "7742:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 101629,
                  "nodeType": "ExpressionStatement",
                  "src": "7742:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101635,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "7815:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7825:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "7815:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 101637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7852:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7815:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 101640,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "7870:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 101639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7862:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101638,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7862:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7862:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 101633,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7792:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7796:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7792:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7792:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101630,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7776:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7779:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "7776:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101644,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101650,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "7936:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101651,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "7955:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101654,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7969:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7961:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101652,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7961:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7961:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101656,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7976:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7982:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7976:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7994:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7976:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101645,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "7887:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7894:24:138",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64763,
                        "src": "7887:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 101649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 101648,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "7926:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7887:48:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 101660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7887:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101661,
                  "nodeType": "ExpressionStatement",
                  "src": "7887:109:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101667,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "8095:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8105:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "8095:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8132:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8095:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101670,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8142:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 101671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8148:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8142:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8160:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8142:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 101674,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8163:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 101675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8169:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8163:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 101665,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8072:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8076:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8072:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8072:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101662,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8043:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8046:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "8043:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8043:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101678,
                  "nodeType": "ExpressionStatement",
                  "src": "8043:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101684,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "8248:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101685,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "8267:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101688,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8281:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8273:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8273:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8273:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101690,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8288:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8294:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8288:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8306:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8288:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101679,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "8199:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8206:24:138",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64763,
                        "src": "8199:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 101683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 101682,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "8238:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8199:48:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 101694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8199:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101695,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:109:138"
                },
                {
                  "expression": {
                    "id": 101705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 101696,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "8370:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 101698,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8375:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "8370:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8400:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8387:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101700,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 101699,
                              "name": "IERC20",
                              "nameLocations": [
                                "8391:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "8391:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "8391:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 101701,
                          "nodeType": "ArrayTypeName",
                          "src": "8391:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 101704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8387:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "8370:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 101706,
                  "nodeType": "ExpressionStatement",
                  "src": "8370:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101712,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "8451:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8461:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "8451:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 101714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8487:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8451:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 101710,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8428:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8432:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8428:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8428:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101707,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8412:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8415:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "8412:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101717,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101723,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101512,
                        "src": "8556:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101724,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101524,
                        "src": "8575:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101727,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8589:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8581:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101725,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8581:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8581:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101729,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8596:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8602:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8596:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8614:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8596:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 101718,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "8507:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8514:24:138",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64763,
                        "src": "8507:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 101722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 101721,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101497,
                          "src": "8546:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8507:48:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 101733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8507:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101734,
                  "nodeType": "ExpressionStatement",
                  "src": "8507:109:138"
                }
              ]
            },
            "functionSelector": "38a637ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokens",
            "nameLocation": "6474:29:138",
            "parameters": {
              "id": 101494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6503:2:138"
            },
            "returnParameters": {
              "id": 101495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6513:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101942,
            "nodeType": "FunctionDefinition",
            "src": "8629:1774:138",
            "nodes": [],
            "body": {
              "id": 101941,
              "nodeType": "Block",
              "src": "8677:1726:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101740,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "8695:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "8687:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101739,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8687:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101742,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 101741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8707:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8687:25:138"
                },
                {
                  "assignments": [
                    101745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101745,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "8731:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "8723:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 101744,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101743,
                          "name": "ILBPair",
                          "nameLocations": [
                            "8723:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "8723:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "8723:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101753,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 101748,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105085,
                          "src": "8767:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101749,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "8773:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101750,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "8779:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 101746,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "8738:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 101747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8746:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "8738:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 101751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8738:58:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 101752,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8797:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "8738:65:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8723:80:138"
                },
                {
                  "assignments": [
                    101755,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101755,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "8822:16:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "8814:24:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101754,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8814:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 101762,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101758,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101745,
                        "src": "8861:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 101759,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101740,
                        "src": "8867:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 101760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8878:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101756,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "8844:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8851:9:138",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64003,
                      "src": "8844:16:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 101761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:39:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8813:70:138"
                },
                {
                  "assignments": [
                    101767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101767,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "8916:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "8894:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 101766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101765,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "8894:9:138",
                            "8904:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "8894:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "8894:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101769,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105085,
                        "src": "8934:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101770,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "8940:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 101768,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "8923:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 101771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8923:22:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8894:51:138"
                },
                {
                  "assignments": [
                    101774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101774,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "8964:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "8956:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101773,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8956:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101782,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101779,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9003:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8995:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101777,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8995:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8995:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 101775,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105085,
                        "src": "8980:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 101776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8985:9:138",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "8980:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 101781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8980:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8956:53:138"
                },
                {
                  "assignments": [
                    101787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101787,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "9038:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101941,
                      "src": "9021:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101785,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9021:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 101786,
                        "nodeType": "ArrayTypeName",
                        "src": "9021:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101790,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101740,
                        "src": "9095:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101791,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101755,
                        "src": "9106:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101792,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101767,
                        "src": "9124:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101795,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9138:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9130:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101793,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9130:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9130:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101797,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9145:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9151:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9145:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9163:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9145:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101788,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "9063:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9070:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "9063:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 101801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9020:145:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 101804,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101787,
                          "src": "9185:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101806,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9195:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9185:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101807,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101755,
                        "src": "9199:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a31",
                        "id": 101808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9217:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        },
                        "value": "test_SwapTokensForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        }
                      ],
                      "id": 101803,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9176:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9176:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101810,
                  "nodeType": "ExpressionStatement",
                  "src": "9176:76:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 101816,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9294:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 101815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9286:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 101814,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9286:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9286:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 101812,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105085,
                            "src": "9271:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 101813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9276:9:138",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "9271:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 101818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9271:29:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101819,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101774,
                          "src": "9302:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 101820,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101787,
                            "src": "9318:9:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 101822,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 101821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9328:1:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9318:12:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9302:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a32",
                        "id": 101824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9332:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        },
                        "value": "test_SwapTokensForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        }
                      ],
                      "id": 101811,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9262:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9262:105:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101826,
                  "nodeType": "ExpressionStatement",
                  "src": "9262:105:138"
                },
                {
                  "expression": {
                    "id": 101835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 101827,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101755,
                          "src": "9379:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 101828,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9378:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101831,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101745,
                          "src": "9418:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 101832,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101740,
                          "src": "9424:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 101833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9435:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 101829,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "9401:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 101830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9408:9:138",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64003,
                        "src": "9401:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 101834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9401:39:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "9378:62:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101836,
                  "nodeType": "ExpressionStatement",
                  "src": "9378:62:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101842,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "9562:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9572:29:138",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70043,
                              "src": "9562:39:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9602:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9562:48:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 101847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 101845,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101755,
                              "src": "9612:16:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9631:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9612:20:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 101848,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101755,
                            "src": "9634:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 101840,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9522:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9526:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9522:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9522:142:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101837,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9493:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9496:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "9493:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9493:181:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101851,
                  "nodeType": "ExpressionStatement",
                  "src": "9493:181:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101855,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101740,
                        "src": "9716:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101856,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101755,
                          "src": "9727:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9746:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9727:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101859,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101767,
                        "src": "9749:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101862,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9763:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9755:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101860,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9755:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9755:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101864,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9770:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9776:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9770:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9788:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9770:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101852,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "9684:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9691:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "9684:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 101868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9684:106:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 101869,
                  "nodeType": "ExpressionStatement",
                  "src": "9684:106:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101875,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "9889:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9899:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "9889:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 101877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9926:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9889:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 101881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 101878,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9936:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 101879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9942:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9936:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 101880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9954:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9936:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 101882,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9957:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 101883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9963:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9957:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 101873,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9866:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9870:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9866:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9866:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101870,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9837:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9840:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "9837:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101886,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101890,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101740,
                        "src": "10025:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101891,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101755,
                        "src": "10036:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101892,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101767,
                        "src": "10054:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101895,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10068:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10060:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10060:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10060:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101897,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10075:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10081:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10075:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10093:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10075:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101887,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "9993:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10000:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "9993:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 101901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 101902,
                  "nodeType": "ExpressionStatement",
                  "src": "9993:102:138"
                },
                {
                  "expression": {
                    "id": 101912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 101903,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101767,
                        "src": "10157:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 101905,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10162:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "10157:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10187:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10174:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101907,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 101906,
                              "name": "IERC20",
                              "nameLocations": [
                                "10178:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "10178:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "10178:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 101908,
                          "nodeType": "ArrayTypeName",
                          "src": "10178:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 101911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10174:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "10157:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 101913,
                  "nodeType": "ExpressionStatement",
                  "src": "10157:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 101919,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "10238:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 101920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10248:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "10238:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 101921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10274:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10238:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 101917,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10215:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 101918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10219:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10215:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 101922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10215:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 101914,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10199:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10202:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "10199:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 101923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101924,
                  "nodeType": "ExpressionStatement",
                  "src": "10199:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101928,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101740,
                        "src": "10326:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101929,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101755,
                        "src": "10337:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101930,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101767,
                        "src": "10355:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101933,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10369:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10361:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101931,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10361:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10361:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101935,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10376:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10382:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10376:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10394:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10376:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101925,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "10294:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10301:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "10294:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 101939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10294:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 101940,
                  "nodeType": "ExpressionStatement",
                  "src": "10294:102:138"
                }
              ]
            },
            "functionSelector": "7594f3a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactTokens",
            "nameLocation": "8638:29:138",
            "parameters": {
              "id": 101737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8667:2:138"
            },
            "returnParameters": {
              "id": 101738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8677:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102193,
            "nodeType": "FunctionDefinition",
            "src": "10409:2113:138",
            "nodes": [],
            "body": {
              "id": 102192,
              "nodeType": "Block",
              "src": "10457:2065:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101946,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "10475:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10467:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101945,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10467:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101948,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 101947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10487:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10467:25:138"
                },
                {
                  "assignments": [
                    101951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101951,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "10511:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10503:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 101950,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101949,
                          "name": "ILBPair",
                          "nameLocations": [
                            "10503:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "10503:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "10503:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101959,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 101954,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "10547:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 101955,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "10556:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101956,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "10562:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 101952,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "10518:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 101953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10526:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "10518:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 101957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10518:61:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 101958,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10580:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "10518:68:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10503:83:138"
                },
                {
                  "assignments": [
                    101961,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101961,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "10605:16:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10597:24:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101960,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10597:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 101968,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101964,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101951,
                        "src": "10644:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 101965,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "10650:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 101966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10661:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 101962,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "10627:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10634:9:138",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64003,
                      "src": "10627:16:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 101967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10596:71:138"
                },
                {
                  "assignments": [
                    101973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101973,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "10700:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10678:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 101972,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101971,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "10678:9:138",
                            "10688:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "10678:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "10678:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101978,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101975,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "10718:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101976,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "10724:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 101974,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "10707:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 101977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10707:25:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10678:54:138"
                },
                {
                  "assignments": [
                    101980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101980,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "10751:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10743:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10743:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101988,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101985,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10790:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 101984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10782:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101983,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10782:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 101981,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "10767:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 101982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10772:9:138",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "10767:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 101987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:53:138"
                },
                {
                  "assignments": [
                    101993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101993,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "10825:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102192,
                      "src": "10808:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10808:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 101992,
                        "nodeType": "ArrayTypeName",
                        "src": "10808:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102011,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101996,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "10883:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101997,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101961,
                        "src": "10894:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101998,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "10912:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102003,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10934:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10926:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102001,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10926:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10926:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10918:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 101999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10918:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10918:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102006,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10942:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10948:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10942:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10960:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10942:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101994,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "10838:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10845:24:138",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64996,
                      "src": "10838:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 102010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10838:133:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10807:164:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 102013,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101993,
                          "src": "10991:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102015,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11001:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10991:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102016,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101961,
                        "src": "11005:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a31",
                        "id": 102017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11023:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        }
                      ],
                      "id": 102012,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10982:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102019,
                  "nodeType": "ExpressionStatement",
                  "src": "10982:76:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102025,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11100:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11092:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102023,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11092:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11092:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102021,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "11077:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 102022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11082:9:138",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "11077:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 102027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11077:29:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102028,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101980,
                          "src": "11108:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 102029,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101993,
                            "src": "11124:9:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 102031,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 102030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11134:1:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11124:12:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11108:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a32",
                        "id": 102033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11138:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        }
                      ],
                      "id": 102020,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11068:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11068:105:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102035,
                  "nodeType": "ExpressionStatement",
                  "src": "11068:105:138"
                },
                {
                  "expression": {
                    "id": 102044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 102036,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101961,
                          "src": "11185:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 102037,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11184:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102040,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101951,
                          "src": "11224:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 102041,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101946,
                          "src": "11230:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 102042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11241:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 102038,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "11207:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11214:9:138",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64003,
                        "src": "11207:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 102043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11207:40:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "11184:63:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102045,
                  "nodeType": "ExpressionStatement",
                  "src": "11184:63:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102051,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "11369:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11379:29:138",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70043,
                              "src": "11369:39:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11409:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11369:48:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 102056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 102054,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101961,
                              "src": "11419:16:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11419:20:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 102057,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101961,
                            "src": "11441:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 102049,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11329:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11333:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11329:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11329:142:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102046,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11300:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11303:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "11300:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11300:181:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102060,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:181:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102064,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "11523:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102065,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101961,
                          "src": "11534:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11553:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11534:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102068,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "11556:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102071,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11570:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11562:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11562:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11562:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102073,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11577:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11583:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11577:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11595:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11577:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102061,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "11491:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11498:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "11491:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 102077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:106:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102078,
                  "nodeType": "ExpressionStatement",
                  "src": "11491:106:138"
                },
                {
                  "expression": {
                    "id": 102085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102079,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101973,
                          "src": "11653:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102082,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11658:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "11653:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102083,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11668:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11653:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102084,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "11673:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "11653:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 102086,
                  "nodeType": "ExpressionStatement",
                  "src": "11653:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102092,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "11726:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11736:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "11726:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 102094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11763:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11726:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 102097,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "11781:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 102096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11773:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102095,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11773:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11773:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102090,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11703:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11707:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11703:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11703:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102087,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11687:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11690:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "11687:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11687:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102101,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102105,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "11830:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102106,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101961,
                        "src": "11841:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102107,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "11859:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102112,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11881:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11873:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102110,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11873:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11873:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11865:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102108,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11865:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11865:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102115,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11889:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11895:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11889:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11907:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11889:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102102,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "11798:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11805:24:138",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64996,
                      "src": "11798:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 102119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11798:111:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102120,
                  "nodeType": "ExpressionStatement",
                  "src": "11798:111:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102126,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "12008:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12018:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "12008:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12045:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12008:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102129,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12055:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 102130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12061:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12055:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12055:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 102133,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12076:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 102134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12082:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12076:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 102124,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11985:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11989:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11985:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11985:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102121,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11956:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11959:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "11956:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11956:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102137,
                  "nodeType": "ExpressionStatement",
                  "src": "11956:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102141,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "12144:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102142,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101961,
                        "src": "12155:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102143,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "12173:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102146,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12187:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12179:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12179:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12179:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102148,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12194:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12200:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12194:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12212:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12194:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102138,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "12112:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12119:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "12112:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 102152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12112:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102153,
                  "nodeType": "ExpressionStatement",
                  "src": "12112:102:138"
                },
                {
                  "expression": {
                    "id": 102163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102154,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "12276:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12281:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "12276:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 102161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12306:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12293:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102158,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102157,
                              "name": "IERC20",
                              "nameLocations": [
                                "12297:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "12297:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "12297:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 102159,
                          "nodeType": "ArrayTypeName",
                          "src": "12297:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 102162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12293:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "12276:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 102164,
                  "nodeType": "ExpressionStatement",
                  "src": "12276:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102170,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "12357:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12367:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "12357:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 102172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12393:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12357:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 102168,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12334:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12338:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12334:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12334:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102165,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "12318:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12321:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "12318:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12318:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102175,
                  "nodeType": "ExpressionStatement",
                  "src": "12318:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102179,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "12445:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102180,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101961,
                        "src": "12456:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102181,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101973,
                        "src": "12474:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12488:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12480:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12480:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12480:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102186,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12495:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12501:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12495:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12513:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12495:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102176,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "12413:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12420:24:138",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64864,
                      "src": "12413:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 102190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:102:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102191,
                  "nodeType": "ExpressionStatement",
                  "src": "12413:102:138"
                }
              ]
            },
            "functionSelector": "6d090840",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactNATIVE",
            "nameLocation": "10418:29:138",
            "parameters": {
              "id": 101943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10447:2:138"
            },
            "returnParameters": {
              "id": 101944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10457:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102441,
            "nodeType": "FunctionDefinition",
            "src": "12528:2204:138",
            "nodes": [],
            "body": {
              "id": 102440,
              "nodeType": "Block",
              "src": "12576:2156:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102197,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "12594:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12586:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102196,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12586:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102199,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 102198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12606:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12586:25:138"
                },
                {
                  "assignments": [
                    102202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102202,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "12630:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12622:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 102201,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102200,
                          "name": "ILBPair",
                          "nameLocations": [
                            "12622:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "12622:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "12622:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102210,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 102205,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "12666:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 102206,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "12675:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 102207,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "12681:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 102203,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "12637:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 102204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12645:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "12637:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 102208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12637:61:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 102209,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12699:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "12637:68:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12622:83:138"
                },
                {
                  "assignments": [
                    102212,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102212,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "12724:16:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12716:24:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102211,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12716:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 102219,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102215,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102202,
                        "src": "12763:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 102216,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "12769:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 102217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12780:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 102213,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "12746:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12753:9:138",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64003,
                      "src": "12746:16:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 102218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12746:39:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12715:70:138"
                },
                {
                  "assignments": [
                    102224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102224,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12818:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12796:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 102223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102222,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "12796:9:138",
                            "12806:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "12796:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "12796:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102226,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "12836:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 102227,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "12845:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 102225,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "12825:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 102228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12825:25:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12796:54:138"
                },
                {
                  "assignments": [
                    102231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102231,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "12869:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12861:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12861:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102237,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 102234,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12893:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 102233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12885:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12885:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12885:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 102236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12899:7:138",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12885:21:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12861:45:138"
                },
                {
                  "assignments": [
                    102242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102242,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "12989:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102440,
                      "src": "12972:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12972:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 102241,
                        "nodeType": "ArrayTypeName",
                        "src": "12972:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102249,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "13078:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102250,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "13089:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102253,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13103:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13095:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102251,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13095:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13095:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102255,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13110:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13116:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13110:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13128:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13110:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102243,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "13002:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13009:24:138",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65127,
                        "src": "13002:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 102248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 102247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102245,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102212,
                            "src": "13041:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 102246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13060:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "13041:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13002:62:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 102259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13002:137:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12971:168:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 102262,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102242,
                          "src": "13159:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102264,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13169:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13159:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102265,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102212,
                        "src": "13173:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a31",
                        "id": 102266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13191:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        }
                      ],
                      "id": 102261,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13150:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13150:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102268,
                  "nodeType": "ExpressionStatement",
                  "src": "13150:76:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102272,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13253:4:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 102271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13245:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102270,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13245:7:138",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13245:13:138",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13259:7:138",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13245:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102275,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102231,
                          "src": "13268:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 102276,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102242,
                            "src": "13284:9:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 102278,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 102277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13294:1:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13284:12:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13268:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a32",
                        "id": 102280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13298:34:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        }
                      ],
                      "id": 102269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13236:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13236:97:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102282,
                  "nodeType": "ExpressionStatement",
                  "src": "13236:97:138"
                },
                {
                  "expression": {
                    "id": 102291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 102283,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102212,
                          "src": "13345:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 102284,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13344:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102287,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102202,
                          "src": "13384:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 102288,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102197,
                          "src": "13390:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 102289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13401:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69932",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 102285,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "13367:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13374:9:138",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64003,
                        "src": "13367:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 102290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13367:39:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "13344:62:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102292,
                  "nodeType": "ExpressionStatement",
                  "src": "13344:62:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102298,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "13539:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13549:29:138",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70043,
                              "src": "13539:39:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13579:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13539:48:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 102303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 102301,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102212,
                              "src": "13589:16:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 102302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13608:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "13589:20:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 102304,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102212,
                            "src": "13611:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 102296,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13499:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13503:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13499:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13499:142:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102293,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13470:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13473:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "13470:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13470:181:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102307,
                  "nodeType": "ExpressionStatement",
                  "src": "13470:181:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102315,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "13735:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102316,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "13746:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102319,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13760:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13752:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13752:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13752:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102321,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13767:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13773:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13767:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13785:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13767:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102308,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "13661:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13668:24:138",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65127,
                        "src": "13661:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 102314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 102313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102311,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102212,
                            "src": "13700:16:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 102312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13719:1:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13700:20:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13661:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 102325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13661:135:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102326,
                  "nodeType": "ExpressionStatement",
                  "src": "13661:135:138"
                },
                {
                  "expression": {
                    "id": 102333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102327,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102224,
                          "src": "13851:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13856:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "13851:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102331,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13866:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13851:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102332,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "13871:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "13851:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 102334,
                  "nodeType": "ExpressionStatement",
                  "src": "13851:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102340,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "13924:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13934:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "13924:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 102342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13961:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13924:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 102345,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "13979:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 102344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13971:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102343,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13971:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13971:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102338,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13901:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13905:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13901:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13901:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102335,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13885:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13888:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "13885:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13885:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102349,
                  "nodeType": "ExpressionStatement",
                  "src": "13885:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102355,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "14053:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102356,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "14064:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102359,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14078:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14070:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14070:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14070:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102361,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14085:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14091:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14085:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14103:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14085:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102350,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "13996:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14003:24:138",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65127,
                        "src": "13996:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 102354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102353,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102212,
                          "src": "14035:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13996:56:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 102365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13996:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102366,
                  "nodeType": "ExpressionStatement",
                  "src": "13996:109:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102372,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "14204:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14214:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "14204:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14241:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14204:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102375,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14251:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 102376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14257:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14251:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14269:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14251:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 102379,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14272:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 102380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14278:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14272:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 102370,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14181:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14185:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14181:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14181:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102367,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14152:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14155:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "14152:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14152:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102383,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102389,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "14365:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102390,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "14376:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102393,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14390:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14382:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14382:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14382:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102395,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14397:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14403:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14397:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14415:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14397:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102384,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "14308:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14315:24:138",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65127,
                        "src": "14308:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 102388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102387,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102212,
                          "src": "14347:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14308:56:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 102399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14308:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102400,
                  "nodeType": "ExpressionStatement",
                  "src": "14308:109:138"
                },
                {
                  "expression": {
                    "id": 102410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102401,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "14479:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102403,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14484:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "14479:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 102408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14509:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "14496:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102405,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102404,
                              "name": "IERC20",
                              "nameLocations": [
                                "14500:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "14500:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "14500:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 102406,
                          "nodeType": "ArrayTypeName",
                          "src": "14500:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 102409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14496:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "14479:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 102411,
                  "nodeType": "ExpressionStatement",
                  "src": "14479:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102417,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "14560:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14570:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "14560:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 102419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14596:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14560:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 102415,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14537:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14541:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14537:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14537:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102412,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14521:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14524:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "14521:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14521:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102422,
                  "nodeType": "ExpressionStatement",
                  "src": "14521:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102428,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102197,
                        "src": "14673:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102429,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102224,
                        "src": "14684:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102432,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14698:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14690:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14690:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14690:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102434,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14705:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14711:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14705:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14723:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14705:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102423,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "14616:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14623:24:138",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65127,
                        "src": "14616:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 102427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102426,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102212,
                          "src": "14655:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14616:56:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 102438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14616:109:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102439,
                  "nodeType": "ExpressionStatement",
                  "src": "14616:109:138"
                }
              ]
            },
            "functionSelector": "8f8d57ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapNATIVEForExactTokens",
            "nameLocation": "12537:29:138",
            "parameters": {
              "id": 102194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12566:2:138"
            },
            "returnParameters": {
              "id": 102195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12576:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102684,
            "nodeType": "FunctionDefinition",
            "src": "14738:2438:138",
            "nodes": [],
            "body": {
              "id": 102683,
              "nodeType": "Block",
              "src": "14815:2361:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102445,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "14833:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "14825:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102444,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14825:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102447,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 102446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14844:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14825:24:138"
                },
                {
                  "assignments": [
                    102450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102450,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "14868:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "14860:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 102449,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102448,
                          "name": "ILBPair",
                          "nameLocations": [
                            "14860:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "14860:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "14860:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102458,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 102453,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105100,
                          "src": "14904:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 102454,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "14914:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 102455,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "14923:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 102451,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "14875:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 102452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14883:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "14875:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 102456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14875:65:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 102457,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14941:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "14875:72:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14860:87:138"
                },
                {
                  "assignments": [
                    null,
                    102460,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 102460,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "14968:17:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "14960:25:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102459,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14960:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 102467,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102463,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102450,
                        "src": "15008:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 102464,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "15014:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 102465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15024:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 102461,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "14990:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14997:10:138",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64033,
                      "src": "14990:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 102466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14990:39:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14957:72:138"
                },
                {
                  "assignments": [
                    102472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102472,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "15062:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "15040:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 102471,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102470,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "15040:9:138",
                            "15050:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "15040:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "15040:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102477,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102474,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105100,
                        "src": "15080:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 102475,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "15090:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 102473,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "15069:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 102476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15040:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102483,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "15236:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15246:31:138",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70037,
                              "src": "15236:41:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15278:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15236:50:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 102486,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102460,
                            "src": "15288:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 102489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 102487,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102460,
                              "src": "15307:17:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 102488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15327:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "15307:21:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 102481,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15196:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15200:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15196:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15196:146:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102478,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15167:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15170:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "15167:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15167:185:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102492,
                  "nodeType": "ExpressionStatement",
                  "src": "15167:185:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102496,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "15436:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102497,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102460,
                        "src": "15446:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102498,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "15465:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102503,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15487:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15479:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102501,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15479:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15479:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15471:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15471:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15471:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102506,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15495:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15501:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15495:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15513:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15495:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102493,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "15362:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15369:53:138",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65346,
                      "src": "15362:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15362:162:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102511,
                  "nodeType": "ExpressionStatement",
                  "src": "15362:162:138"
                },
                {
                  "assignments": [
                    102513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102513,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "15543:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "15535:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15535:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102519,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 102516,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15567:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 102515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15559:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15559:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15559:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 102518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15573:7:138",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15559:21:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15535:45:138"
                },
                {
                  "assignments": [
                    102521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102521,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "15600:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102683,
                      "src": "15592:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15592:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102541,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102524,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "15687:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102525,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102460,
                          "src": "15697:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 102526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15717:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15697:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102528,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "15720:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102533,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15742:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15734:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102531,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15734:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15734:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15726:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15726:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15726:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102536,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15750:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15756:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15750:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15768:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15750:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102522,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "15613:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15620:53:138",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65346,
                      "src": "15613:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15613:166:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15591:188:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102543,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102521,
                        "src": "15799:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102544,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102460,
                          "src": "15810:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 102545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15830:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15810:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 102547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15833:63:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 102542,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15790:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:107:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102549,
                  "nodeType": "ExpressionStatement",
                  "src": "15790:107:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 102553,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15937:4:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 102552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15929:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15929:7:138",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15929:13:138",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15943:7:138",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "15929:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102556,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102513,
                          "src": "15964:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 102557,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102521,
                          "src": "15980:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15964:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 102559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16003:63:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 102550,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15907:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15907:169:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102561,
                  "nodeType": "ExpressionStatement",
                  "src": "15907:169:138"
                },
                {
                  "expression": {
                    "id": 102568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102562,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102472,
                          "src": "16132:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16137:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "16132:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102566,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16147:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16132:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102567,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "16152:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "16132:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 102569,
                  "nodeType": "ExpressionStatement",
                  "src": "16132:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102575,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "16205:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16215:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "16205:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 102577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16242:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16205:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 102580,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "16260:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 102579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16252:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102578,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16252:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16252:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102573,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16182:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16186:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16182:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16182:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102570,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16166:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16169:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "16166:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16166:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102584,
                  "nodeType": "ExpressionStatement",
                  "src": "16166:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102588,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "16351:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102589,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102460,
                          "src": "16361:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16381:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16361:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102592,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "16384:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102597,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16406:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16398:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16398:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16398:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16390:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16390:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16390:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102600,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16414:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16420:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16414:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16432:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16414:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102585,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "16277:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16284:53:138",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65346,
                      "src": "16277:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16277:166:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102605,
                  "nodeType": "ExpressionStatement",
                  "src": "16277:166:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102611,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "16542:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16552:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "16542:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16579:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16542:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102614,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "16589:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 102615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16595:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "16589:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16607:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16589:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 102618,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16610:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 102619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16616:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16610:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 102609,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16519:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16523:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16519:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16519:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102606,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16490:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16493:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "16490:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16490:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102622,
                  "nodeType": "ExpressionStatement",
                  "src": "16490:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102626,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "16720:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102627,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102460,
                        "src": "16730:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102628,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "16749:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102633,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16771:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16763:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102631,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16763:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16763:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16755:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16755:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16755:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102636,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16779:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16785:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16779:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16797:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16779:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102623,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "16646:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16653:53:138",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65346,
                      "src": "16646:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16646:162:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102641,
                  "nodeType": "ExpressionStatement",
                  "src": "16646:162:138"
                },
                {
                  "expression": {
                    "id": 102651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102642,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "16870:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102644,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16875:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "16870:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 102649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16900:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "16887:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102646,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102645,
                              "name": "IERC20",
                              "nameLocations": [
                                "16891:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "16891:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "16891:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 102647,
                          "nodeType": "ArrayTypeName",
                          "src": "16891:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 102650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16887:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "16870:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 102652,
                  "nodeType": "ExpressionStatement",
                  "src": "16870:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102658,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "16951:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16961:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "16951:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 102660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16987:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16951:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 102656,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16928:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16932:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16928:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16928:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102653,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16912:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16915:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "16912:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16912:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102663,
                  "nodeType": "ExpressionStatement",
                  "src": "16912:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102667,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102445,
                        "src": "17081:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102668,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102460,
                        "src": "17091:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102669,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102472,
                        "src": "17110:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102674,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17132:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17124:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102672,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17124:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17124:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 102671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17116:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17116:8:138",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17116:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102677,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17140:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17146:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17140:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17158:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17140:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 102664,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "17007:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17014:53:138",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65346,
                      "src": "17007:60:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17007:162:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102682,
                  "nodeType": "ExpressionStatement",
                  "src": "17007:162:138"
                }
              ]
            },
            "functionSelector": "3f6fb2f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
            "nameLocation": "14747:58:138",
            "parameters": {
              "id": 102442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14805:2:138"
            },
            "returnParameters": {
              "id": 102443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14815:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102923,
            "nodeType": "FunctionDefinition",
            "src": "17182:2456:138",
            "nodes": [],
            "body": {
              "id": 102922,
              "nodeType": "Block",
              "src": "17259:2379:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102688,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "17277:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "17269:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102687,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17269:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102690,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 102689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17288:5:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17269:24:138"
                },
                {
                  "assignments": [
                    102693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102693,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "17312:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "17304:12:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69932",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 102692,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102691,
                          "name": "ILBPair",
                          "nameLocations": [
                            "17304:7:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69932,
                          "src": "17304:7:138"
                        },
                        "referencedDeclaration": 69932,
                        "src": "17304:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102701,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 102696,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105100,
                          "src": "17348:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 102697,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "17358:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 102698,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105024,
                          "src": "17367:16:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 102694,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105103,
                          "src": "17319:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$59243",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 102695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17327:20:138",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57894,
                        "src": "17319:28:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67621_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 102699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17319:65:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67621_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 102700,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "17385:6:138",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67616,
                    "src": "17319:72:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69932",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17304:87:138"
                },
                {
                  "assignments": [
                    null,
                    102703,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 102703,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "17412:17:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "17404:25:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102702,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17404:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 102710,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102706,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102693,
                        "src": "17452:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 102707,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102688,
                        "src": "17458:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 102708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17468:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69932",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 102704,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105106,
                        "src": "17434:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66964",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 102705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17441:10:138",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64033,
                      "src": "17434:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69932_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 102709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17434:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17401:73:138"
                },
                {
                  "assignments": [
                    102715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102715,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "17507:4:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "17485:26:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 102714,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102713,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "17485:9:138",
                            "17495:4:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 70117,
                          "src": "17485:14:138"
                        },
                        "referencedDeclaration": 70117,
                        "src": "17485:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102720,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102717,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "17525:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 102718,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105100,
                        "src": "17534:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      ],
                      "id": 102716,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103002,
                      "src": "17514:10:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_struct$_Path_$70117_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 102719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17514:29:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17485:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102726,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "17681:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17691:31:138",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70037,
                              "src": "17681:41:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17723:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17681:50:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 102729,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102703,
                            "src": "17733:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 102734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 102732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 102730,
                                "name": "amountOutExpected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102703,
                                "src": "17752:17:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 102731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17772:1:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "17752:21:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17776:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17752:25:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 102724,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17641:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17645:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17641:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17641:150:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102721,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17612:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17615:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "17612:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17612:189:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102737,
                  "nodeType": "ExpressionStatement",
                  "src": "17612:189:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102743,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102703,
                        "src": "17902:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102744,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "17921:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17935:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17927:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17927:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17927:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102749,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17942:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17948:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17942:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17960:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17942:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102738,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "17811:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17818:53:138",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65453,
                        "src": "17811:60:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 102742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102741,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102688,
                          "src": "17879:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "17811:77:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 102753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17811:160:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102754,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:160:138"
                },
                {
                  "assignments": [
                    102756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102756,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "17990:13:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "17982:21:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17982:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102764,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 102761,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18033:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18025:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18025:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18025:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 102757,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105100,
                        "src": "18006:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      "id": 102758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18015:9:138",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "18006:18:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 102763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18006:33:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17982:57:138"
                },
                {
                  "assignments": [
                    102766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102766,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "18059:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102922,
                      "src": "18051:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 102765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18051:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102784,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102771,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102703,
                          "src": "18163:17:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 102772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18183:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "18163:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102774,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "18186:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102777,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18200:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18192:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102775,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18192:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18192:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102779,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18207:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18213:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18207:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18225:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18207:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102767,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "18072:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18079:53:138",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65453,
                        "src": "18072:60:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 102770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102769,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102688,
                          "src": "18140:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18072:77:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 102783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18072:164:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18050:186:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102786,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102766,
                        "src": "18256:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 102789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 102787,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102703,
                            "src": "18267:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 102788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18287:1:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18267:21:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18291:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18267:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 102792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18294:63:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 102785,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18247:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18247:111:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102794,
                  "nodeType": "ExpressionStatement",
                  "src": "18247:111:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 102800,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18417:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 102799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18409:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102798,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18409:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18409:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102796,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105100,
                            "src": "18390:8:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$122951",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          "id": 102797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18399:9:138",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18390:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 102802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18390:33:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102803,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102756,
                          "src": "18437:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 102804,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102766,
                          "src": "18453:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18437:25:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 102806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18476:63:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 102795,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18368:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18368:181:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102808,
                  "nodeType": "ExpressionStatement",
                  "src": "18368:181:138"
                },
                {
                  "expression": {
                    "id": 102815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102809,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102715,
                          "src": "18604:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18609:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "18604:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102813,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18619:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18604:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102814,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105085,
                      "src": "18624:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "18604:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 102816,
                  "nodeType": "ExpressionStatement",
                  "src": "18604:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102822,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "18677:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18687:26:138",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70047,
                              "src": "18677:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 102824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18714:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18677:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 102827,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105085,
                                "src": "18732:4:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 102826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18724:7:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 102825,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18724:7:138",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18724:13:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 102820,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18654:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18658:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18654:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18654:84:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102817,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18638:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18641:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "18638:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18638:101:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102831,
                  "nodeType": "ExpressionStatement",
                  "src": "18638:101:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102837,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102703,
                        "src": "18840:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102838,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "18859:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102841,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18873:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18865:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102839,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18865:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18865:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102843,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18880:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18886:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18880:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18898:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18880:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102832,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "18749:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18756:53:138",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65453,
                        "src": "18749:60:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 102836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102835,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102688,
                          "src": "18817:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18749:77:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 102847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18749:160:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102848,
                  "nodeType": "ExpressionStatement",
                  "src": "18749:160:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102854,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "19008:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19018:26:138",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70027,
                              "src": "19008:36:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 102856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19045:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19008:45:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 102860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 102857,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19055:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 102858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19061:9:138",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "19055:15:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 102859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19073:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "19055:19:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 102861,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19076:5:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 102862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19082:9:138",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19076:15:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 102852,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18985:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18989:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18985:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18985:107:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102849,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18956:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18959:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "18956:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18956:146:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102865,
                  "nodeType": "ExpressionStatement",
                  "src": "18956:146:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102871,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102703,
                        "src": "19203:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102872,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "19222:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102875,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19236:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19228:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102873,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19228:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19228:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102877,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19243:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19249:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19243:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19261:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19243:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102866,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "19112:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19119:53:138",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65453,
                        "src": "19112:60:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 102870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102869,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102688,
                          "src": "19180:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19112:77:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 102881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19112:160:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102882,
                  "nodeType": "ExpressionStatement",
                  "src": "19112:160:138"
                },
                {
                  "expression": {
                    "id": 102892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102883,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "19334:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19339:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "19334:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 102890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19364:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 102889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19351:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102887,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102886,
                              "name": "IERC20",
                              "nameLocations": [
                                "19355:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "19355:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "19355:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 102888,
                          "nodeType": "ArrayTypeName",
                          "src": "19355:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 102891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19351:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19334:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 102893,
                  "nodeType": "ExpressionStatement",
                  "src": "19334:32:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102899,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70464,
                                "src": "19415:9:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19425:25:138",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69989,
                              "src": "19415:35:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 102901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19451:8:138",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19415:44:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 102897,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19392:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 102898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19396:18:138",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19392:22:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 102902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19392:68:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 102894,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19376:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19379:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15962,
                      "src": "19376:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 102903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19376:85:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102904,
                  "nodeType": "ExpressionStatement",
                  "src": "19376:85:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102910,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102703,
                        "src": "19562:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102911,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102715,
                        "src": "19581:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 102914,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19595:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$103007",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 102913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19587:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 102912,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19587:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19587:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102916,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19602:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 102917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19608:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19602:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 102918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19620:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19602:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 102905,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105106,
                          "src": "19471:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66964",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 102907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19478:53:138",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65453,
                        "src": "19471:60:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 102909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 102908,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102688,
                          "src": "19539:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19471:77:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$70117_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 102920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19471:160:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102921,
                  "nodeType": "ExpressionStatement",
                  "src": "19471:160:138"
                }
              ]
            },
            "functionSelector": "2debd6fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "17191:58:138",
            "parameters": {
              "id": 102685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17249:2:138"
            },
            "returnParameters": {
              "id": 102686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17259:0:138"
            },
            "scope": 103007,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103002,
            "nodeType": "FunctionDefinition",
            "src": "19644:425:138",
            "nodes": [],
            "body": {
              "id": 103001,
              "nodeType": "Block",
              "src": "19747:322:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 102943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102935,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102933,
                        "src": "19757:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19762:12:138",
                      "memberName": "pairBinSteps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70108,
                      "src": "19757:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 102941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19791:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 102940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19777:13:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102938,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "19781:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 102939,
                          "nodeType": "ArrayTypeName",
                          "src": "19781:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 102942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19777:16:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "19757:36:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 102944,
                  "nodeType": "ExpressionStatement",
                  "src": "19757:36:138"
                },
                {
                  "expression": {
                    "id": 102951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102945,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102933,
                          "src": "19803:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19808:12:138",
                        "memberName": "pairBinSteps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70108,
                        "src": "19803:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 102949,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19821:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19803:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102950,
                      "name": "DEFAULT_BIN_STEP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105024,
                      "src": "19826:16:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "19803:39:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102952,
                  "nodeType": "ExpressionStatement",
                  "src": "19803:39:138"
                },
                {
                  "expression": {
                    "id": 102962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102953,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102933,
                        "src": "19853:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102955,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19858:8:138",
                      "memberName": "versions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70112,
                      "src": "19853:13:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$70067_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 102960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19893:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 102959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19869:23:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Version_$70067_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum ILBRouter.Version[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102957,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102956,
                              "name": "ILBRouter.Version",
                              "nameLocations": [
                                "19873:9:138",
                                "19883:7:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 70067,
                              "src": "19873:17:138"
                            },
                            "referencedDeclaration": 70067,
                            "src": "19873:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$70067",
                              "typeString": "enum ILBRouter.Version"
                            }
                          },
                          "id": 102958,
                          "nodeType": "ArrayTypeName",
                          "src": "19873:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_Version_$70067_$dyn_storage_ptr",
                            "typeString": "enum ILBRouter.Version[]"
                          }
                        }
                      },
                      "id": 102961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19869:26:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$70067_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "src": "19853:42:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Version_$70067_$dyn_memory_ptr",
                      "typeString": "enum ILBRouter.Version[] memory"
                    }
                  },
                  "id": 102963,
                  "nodeType": "ExpressionStatement",
                  "src": "19853:42:138"
                },
                {
                  "expression": {
                    "id": 102972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102964,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102933,
                          "src": "19905:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102967,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19910:8:138",
                        "memberName": "versions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70112,
                        "src": "19905:13:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_Version_$70067_$dyn_memory_ptr",
                          "typeString": "enum ILBRouter.Version[] memory"
                        }
                      },
                      "id": 102968,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19919:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19905:16:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$70067",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 102969,
                          "name": "ILBRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70464,
                          "src": "19924:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70464_$",
                            "typeString": "type(contract ILBRouter)"
                          }
                        },
                        "id": 102970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19934:7:138",
                        "memberName": "Version",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70067,
                        "src": "19924:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Version_$70067_$",
                          "typeString": "type(enum ILBRouter.Version)"
                        }
                      },
                      "id": 102971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "19942:2:138",
                      "memberName": "V2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70066,
                      "src": "19924:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$70067",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "src": "19905:39:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Version_$70067",
                      "typeString": "enum ILBRouter.Version"
                    }
                  },
                  "id": 102973,
                  "nodeType": "ExpressionStatement",
                  "src": "19905:39:138"
                },
                {
                  "expression": {
                    "id": 102983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102974,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102933,
                        "src": "19955:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 102976,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19960:9:138",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70116,
                      "src": "19955:14:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 102981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19985:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 102980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19972:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 102978,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 102977,
                              "name": "IERC20",
                              "nameLocations": [
                                "19976:6:138"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42288,
                              "src": "19976:6:138"
                            },
                            "referencedDeclaration": 42288,
                            "src": "19976:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42288",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 102979,
                          "nodeType": "ArrayTypeName",
                          "src": "19976:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 102982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19972:15:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19955:32:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 102984,
                  "nodeType": "ExpressionStatement",
                  "src": "19955:32:138"
                },
                {
                  "expression": {
                    "id": 102991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102985,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102933,
                          "src": "19997:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20002:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "19997:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102989,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20012:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19997:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102990,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102926,
                      "src": "20017:7:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "19997:27:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 102992,
                  "nodeType": "ExpressionStatement",
                  "src": "19997:27:138"
                },
                {
                  "expression": {
                    "id": 102999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 102993,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102933,
                          "src": "20034:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 102996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20039:9:138",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70116,
                        "src": "20034:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42288_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 102997,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20049:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20034:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102998,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102929,
                      "src": "20054:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42288",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "20034:28:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 103000,
                  "nodeType": "ExpressionStatement",
                  "src": "20034:28:138"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildPath",
            "nameLocation": "19653:10:138",
            "parameters": {
              "id": 102930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102926,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "19671:7:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 103002,
                  "src": "19664:14:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42288",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 102925,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102924,
                      "name": "IERC20",
                      "nameLocations": [
                        "19664:6:138"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42288,
                      "src": "19664:6:138"
                    },
                    "referencedDeclaration": 42288,
                    "src": "19664:6:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102929,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "19687:8:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 103002,
                  "src": "19680:15:138",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42288",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 102928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102927,
                      "name": "IERC20",
                      "nameLocations": [
                        "19680:6:138"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42288,
                      "src": "19680:6:138"
                    },
                    "referencedDeclaration": 42288,
                    "src": "19680:6:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42288",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19663:33:138"
            },
            "returnParameters": {
              "id": 102934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102933,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "19741:4:138",
                  "nodeType": "VariableDeclaration",
                  "scope": 103002,
                  "src": "19719:26:138",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Path_$70117_memory_ptr",
                    "typeString": "struct ILBRouter.Path"
                  },
                  "typeName": {
                    "id": 102932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 102931,
                      "name": "ILBRouter.Path",
                      "nameLocations": [
                        "19719:9:138",
                        "19729:4:138"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70117,
                      "src": "19719:14:138"
                    },
                    "referencedDeclaration": 70117,
                    "src": "19719:14:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$70117_storage_ptr",
                      "typeString": "struct ILBRouter.Path"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19718:28:138"
            },
            "scope": 103007,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 103006,
            "nodeType": "FunctionDefinition",
            "src": "20075:29:138",
            "nodes": [],
            "body": {
              "id": 103005,
              "nodeType": "Block",
              "src": "20102:2:138",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 103003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20082:2:138"
            },
            "returnParameters": {
              "id": 103004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20102:0:138"
            },
            "scope": 103007,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100806,
              "name": "TestHelper",
              "nameLocations": [
                "594:10:138"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106622,
              "src": "594:10:138"
            },
            "id": 100807,
            "nodeType": "InheritanceSpecifier",
            "src": "594:10:138"
          }
        ],
        "canonicalName": "LiquidityBinRouterSwapTest",
        "contractDependencies": [
          41441,
          59243,
          62123,
          62426,
          63714,
          66964,
          122897,
          122951,
          123990
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 100805,
          "nodeType": "StructuredDocumentation",
          "src": "105:449:138",
          "text": " This file only test single hop swaps using V2.1 pairs\n Test scenarios:\n 1. swapExactTokensForTokens\n 2. swapExactTokensForNATIVE\n 3. swapExactNATIVEForTokens\n 4. swapTokensForExactTokens\n 5. swapTokensForExactNATIVE\n 6. swapNATIVEForExactTokens\n 7. swapExactTokensForTokensSupportingFeeOnTransferTokens\n 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens\n 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          103007,
          106622,
          12146,
          12094,
          6774,
          6414,
          5621,
          3561,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinRouterSwapTest",
        "nameLocation": "564:26:138",
        "scope": 103008,
        "usedErrors": [
          76568,
          76578,
          78640,
          78857
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7556,
          7562
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 138
}